{
  "version": 3,
  "sources": ["../../clean-css/lib/optimizer/level-0/optimize.js", "../../clean-css/lib/utils/natural-compare.js", "../../clean-css/lib/optimizer/level-1/sort-selectors.js", "../../clean-css/lib/utils/override.js", "browser-external:os", "../../clean-css/lib/options/format.js", "../../clean-css/lib/tokenizer/marker.js", "../../clean-css/lib/utils/format-position.js", "../../clean-css/lib/optimizer/level-1/tidy-rules.js", "../../clean-css/lib/optimizer/level-1/tidy-block.js", "../../clean-css/lib/optimizer/level-1/tidy-at-rule.js", "../../clean-css/lib/optimizer/hack.js", "../../clean-css/lib/optimizer/remove-unused.js", "../../clean-css/lib/optimizer/restore-from-optimizing.js", "../../clean-css/lib/tokenizer/token.js", "../../clean-css/lib/optimizer/wrap-for-optimizing.js", "../../clean-css/lib/optimizer/invalid-property-error.js", "../../clean-css/lib/optimizer/configuration/break-up.js", "../../clean-css/lib/optimizer/vendor-prefixes.js", "../../clean-css/lib/optimizer/configuration/properties/understandable.js", "../../clean-css/lib/optimizer/configuration/can-override.js", "../../clean-css/lib/optimizer/clone.js", "../../clean-css/lib/optimizer/configuration/restore.js", "../../clean-css/lib/options/rounding-precision.js", "../../clean-css/lib/options/optimization-level.js", "../../clean-css/lib/optimizer/level-1/property-optimizers/background.js", "../../clean-css/lib/optimizer/level-1/property-optimizers/box-shadow.js", "../../clean-css/lib/optimizer/level-1/property-optimizers/border-radius.js", "../../clean-css/lib/optimizer/level-1/property-optimizers/filter.js", "../../clean-css/lib/optimizer/level-1/property-optimizers/font-weight.js", "../../clean-css/lib/optimizer/level-1/property-optimizers/margin.js", "../../clean-css/lib/optimizer/level-1/property-optimizers/outline.js", "../../clean-css/lib/optimizer/level-1/property-optimizers/padding.js", "../../clean-css/lib/optimizer/level-1/property-optimizers.js", "../../clean-css/lib/optimizer/level-1/value-optimizers/color/shorten-hex.js", "../../clean-css/lib/optimizer/level-1/value-optimizers/color/shorten-hsl.js", "../../clean-css/lib/optimizer/level-1/value-optimizers/color/shorten-rgb.js", "../../clean-css/lib/utils/split.js", "../../clean-css/lib/optimizer/level-1/value-optimizers/color.js", "../../clean-css/lib/optimizer/level-1/value-optimizers/degrees.js", "../../clean-css/lib/optimizer/level-1/value-optimizers/starts-as-url.js", "../../clean-css/lib/optimizer/level-1/value-optimizers/fraction.js", "../../clean-css/lib/optimizer/level-1/value-optimizers/precision.js", "../../clean-css/lib/optimizer/level-1/value-optimizers/text-quotes.js", "../../clean-css/lib/optimizer/level-1/value-optimizers/time.js", "../../clean-css/lib/optimizer/level-1/value-optimizers/unit.js", "../../clean-css/lib/optimizer/level-1/value-optimizers/url-prefix.js", "../../clean-css/lib/optimizer/level-1/value-optimizers/url-quotes.js", "../../clean-css/lib/optimizer/level-1/value-optimizers/url-whitespace.js", "../../clean-css/lib/optimizer/level-1/value-optimizers/whitespace.js", "../../clean-css/lib/optimizer/level-1/value-optimizers/zero.js", "../../clean-css/lib/optimizer/level-1/value-optimizers.js", "../../clean-css/lib/optimizer/configuration.js", "../../clean-css/lib/writer/helpers.js", "../../clean-css/lib/writer/one-time.js", "../../clean-css/lib/optimizer/level-1/optimize.js", "../../clean-css/lib/optimizer/level-2/is-mergeable.js", "../../clean-css/lib/optimizer/level-2/properties/every-values-pair.js", "../../clean-css/lib/optimizer/level-2/properties/has-inherit.js", "../../clean-css/lib/optimizer/level-2/properties/has-same-values.js", "../../clean-css/lib/optimizer/level-2/properties/populate-components.js", "../../clean-css/lib/optimizer/level-2/restore-with-components.js", "../../clean-css/lib/optimizer/level-2/properties/merge-into-shorthands.js", "../../clean-css/lib/optimizer/level-2/properties/has-unset.js", "../../clean-css/lib/optimizer/level-2/properties/find-component-in.js", "../../clean-css/lib/optimizer/level-2/properties/is-component-of.js", "../../clean-css/lib/optimizer/level-2/properties/is-mergeable-shorthand.js", "../../clean-css/lib/optimizer/level-2/properties/overrides-non-component-shorthand.js", "../../clean-css/lib/optimizer/level-2/properties/override-properties.js", "../../clean-css/lib/optimizer/level-2/properties/optimize.js", "../../clean-css/lib/optimizer/level-2/merge-adjacent.js", "../../clean-css/lib/optimizer/level-2/rules-overlap.js", "../../clean-css/lib/optimizer/level-2/specificity.js", "../../clean-css/lib/optimizer/level-2/specificities-overlap.js", "../../clean-css/lib/optimizer/level-2/reorderable.js", "../../clean-css/lib/optimizer/level-2/extract-properties.js", "../../clean-css/lib/optimizer/level-2/merge-media-queries.js", "../../clean-css/lib/optimizer/level-2/merge-non-adjacent-by-body.js", "../../clean-css/lib/optimizer/level-2/merge-non-adjacent-by-selector.js", "../../clean-css/lib/utils/clone-array.js", "../../clean-css/lib/optimizer/level-2/reduce-non-adjacent.js", "../../clean-css/lib/optimizer/level-2/remove-duplicate-font-at-rules.js", "../../clean-css/lib/optimizer/level-2/remove-duplicate-media-queries.js", "../../clean-css/lib/optimizer/level-2/remove-duplicates.js", "../../clean-css/lib/optimizer/level-2/remove-unused-at-rules.js", "../../clean-css/lib/optimizer/level-2/tidy-rule-duplicates.js", "../../clean-css/lib/optimizer/level-2/restructure.js", "../../clean-css/lib/optimizer/level-2/optimize.js", "../../clean-css/lib/optimizer/validator.js", "../../clean-css/lib/options/compatibility.js", "browser-external:http", "browser-external:https", "browser-external:url", "../../clean-css/lib/utils/is-http-resource.js", "../../clean-css/lib/utils/is-https-resource.js", "../../clean-css/lib/reader/load-remote-resource.js", "../../clean-css/lib/options/fetch.js", "../../clean-css/lib/options/inline.js", "../../clean-css/lib/options/inline-request.js", "../../clean-css/lib/options/inline-timeout.js", "../../clean-css/lib/options/plugins.js", "../../clean-css/lib/options/rebase.js", "browser-external:path", "../../clean-css/lib/options/rebase-to.js", "../../source-map/lib/base64.js", "../../source-map/lib/base64-vlq.js", "../../source-map/lib/util.js", "../../source-map/lib/array-set.js", "../../source-map/lib/mapping-list.js", "../../source-map/lib/source-map-generator.js", "../../source-map/lib/binary-search.js", "../../source-map/lib/quick-sort.js", "../../source-map/lib/source-map-consumer.js", "../../source-map/lib/source-node.js", "../../source-map/source-map.js", "../../clean-css/lib/reader/input-source-map-tracker.js", "browser-external:fs", "../../clean-css/lib/utils/is-remote-resource.js", "../../clean-css/lib/utils/has-protocol.js", "../../clean-css/lib/reader/is-allowed-resource.js", "../../clean-css/lib/reader/match-data-uri.js", "../../clean-css/lib/reader/rebase-local-map.js", "../../clean-css/lib/reader/rebase-remote-map.js", "../../clean-css/lib/utils/is-data-uri-resource.js", "../../clean-css/lib/reader/apply-source-maps.js", "../../clean-css/lib/reader/extract-import-url-and-media.js", "../../clean-css/lib/reader/load-original-sources.js", "../../clean-css/lib/reader/normalize-path.js", "../../clean-css/lib/reader/restore-import.js", "../../clean-css/lib/reader/rewrite-url.js", "../../clean-css/lib/utils/is-import.js", "../../clean-css/lib/reader/rebase.js", "../../clean-css/lib/tokenizer/tokenize.js", "../../clean-css/lib/reader/read-sources.js", "../../clean-css/lib/writer/simple.js", "../../clean-css/lib/writer/source-maps.js", "../../clean-css/lib/clean.js", "../../clean-css/index.js", "../../he/he.js", "../../html-minifier-terser/src/utils.js", "../../html-minifier-terser/src/htmlparser.js", "../../relateurl/lib/constants.js", "../../relateurl/lib/format.js", "../../relateurl/lib/util/object.js", "../../relateurl/lib/options.js", "../../relateurl/lib/parse/hrefInfo.js", "../../relateurl/lib/parse/host.js", "../../relateurl/lib/parse/path.js", "../../relateurl/lib/parse/port.js", "../../relateurl/lib/parse/query.js", "../../relateurl/lib/parse/urlstring.js", "../../relateurl/lib/util/path.js", "../../relateurl/lib/parse/index.js", "../../relateurl/lib/relate/findRelation.js", "../../relateurl/lib/relate/absolutize.js", "../../relateurl/lib/relate/relativize.js", "../../relateurl/lib/relate/index.js", "../../relateurl/lib/index.js", "../../html-minifier-terser/src/tokenchain.js", "../../@jridgewell/source-map/node_modules/@jridgewell/sourcemap-codec/dist/sourcemap-codec.mjs", "../../@jridgewell/source-map/node_modules/@jridgewell/resolve-uri/dist/resolve-uri.mjs", "../../@jridgewell/source-map/node_modules/@jridgewell/trace-mapping/dist/trace-mapping.mjs", "../../@jridgewell/source-map/node_modules/@jridgewell/set-array/dist/set-array.mjs", "../../@jridgewell/source-map/node_modules/@jridgewell/gen-mapping/dist/gen-mapping.mjs", "../../@jridgewell/src/source-map.ts", "../../acorn/dist/acorn.js", "../../terser/dist/bundle.min.js", "../../html-minifier-terser/src/htmlminifier.js", "../../vite-plugin-minify/src/index.ts"],
  "sourcesContent": ["function level0Optimize(tokens) {\n  // noop as level 0 means no optimizations!\n  return tokens;\n}\n\nmodule.exports = level0Optimize;\n", "// adapted from http://nedbatchelder.com/blog/200712.html#e20071211T054956\n\nvar NUMBER_PATTERN = /([0-9]+)/;\n\nfunction naturalCompare(value1, value2) {\n  var keys1 = ('' + value1).split(NUMBER_PATTERN).map(tryParseInt);\n  var keys2 = ('' + value2).split(NUMBER_PATTERN).map(tryParseInt);\n  var key1;\n  var key2;\n  var compareFirst = Math.min(keys1.length, keys2.length);\n  var i, l;\n\n  for (i = 0, l = compareFirst; i < l; i++) {\n    key1 = keys1[i];\n    key2 = keys2[i];\n\n    if (key1 != key2) {\n      return key1 > key2 ? 1 : -1;\n    }\n  }\n\n  return keys1.length > keys2.length ? 1 : (keys1.length == keys2.length ? 0 : -1);\n}\n\nfunction tryParseInt(value) {\n  return ('' + parseInt(value)) == value\n    ? parseInt(value)\n    : value;\n}\n\nmodule.exports = naturalCompare;\n", "var naturalCompare = require('../../utils/natural-compare');\n\nfunction naturalSorter(scope1, scope2) {\n  return naturalCompare(scope1[1], scope2[1]);\n}\n\nfunction standardSorter(scope1, scope2) {\n  return scope1[1] > scope2[1] ? 1 : -1;\n}\n\nfunction sortSelectors(selectors, method) {\n  switch (method) {\n  case 'natural':\n    return selectors.sort(naturalSorter);\n  case 'standard':\n    return selectors.sort(standardSorter);\n  case 'none':\n  case false:\n    return selectors;\n  }\n}\n\nmodule.exports = sortSelectors;\n", "function override(source1, source2) {\n  var target = {};\n  var key1;\n  var key2;\n  var item;\n\n  for (key1 in source1) {\n    item = source1[key1];\n\n    if (Array.isArray(item)) {\n      target[key1] = item.slice(0);\n    } else if (typeof item == 'object' && item !== null) {\n      target[key1] = override(item, {});\n    } else {\n      target[key1] = item;\n    }\n  }\n\n  for (key2 in source2) {\n    item = source2[key2];\n\n    if (key2 in target && Array.isArray(item)) {\n      target[key2] = item.slice(0);\n    } else if (key2 in target && typeof item == 'object' && item !== null) {\n      target[key2] = override(target[key2], item);\n    } else {\n      target[key2] = item;\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = override;\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"os\" has been externalized for browser compatibility. Cannot access \"os.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "var override = require('../utils/override');\n\nfunction getSystemLineBreak() {\n  var systemLineBreak = '\\n';\n  try {\n    var os = require('os');\n    systemLineBreak = os.EOL;\n  } catch (_) {\n    // no op\n  }\n  return systemLineBreak;\n}\n\nvar Breaks = {\n  AfterAtRule: 'afterAtRule',\n  AfterBlockBegins: 'afterBlockBegins',\n  AfterBlockEnds: 'afterBlockEnds',\n  AfterComment: 'afterComment',\n  AfterProperty: 'afterProperty',\n  AfterRuleBegins: 'afterRuleBegins',\n  AfterRuleEnds: 'afterRuleEnds',\n  BeforeBlockEnds: 'beforeBlockEnds',\n  BetweenSelectors: 'betweenSelectors'\n};\n\nvar BreakWith = {\n  CarriageReturnLineFeed: '\\r\\n',\n  LineFeed: '\\n',\n  System: getSystemLineBreak()\n};\n\nvar IndentWith = {\n  Space: ' ',\n  Tab: '\\t'\n};\n\nvar Spaces = {\n  AroundSelectorRelation: 'aroundSelectorRelation',\n  BeforeBlockBegins: 'beforeBlockBegins',\n  BeforeValue: 'beforeValue'\n};\n\nvar DEFAULTS = {\n  breaks: breaks(false),\n  breakWith: BreakWith.System,\n  indentBy: 0,\n  indentWith: IndentWith.Space,\n  spaces: spaces(false),\n  wrapAt: false,\n  semicolonAfterLastProperty: false\n};\n\nvar BEAUTIFY_ALIAS = 'beautify';\nvar KEEP_BREAKS_ALIAS = 'keep-breaks';\n\nvar OPTION_SEPARATOR = ';';\nvar OPTION_NAME_VALUE_SEPARATOR = ':';\nvar HASH_VALUES_OPTION_SEPARATOR = ',';\nvar HASH_VALUES_NAME_VALUE_SEPARATOR = '=';\n\nvar FALSE_KEYWORD_1 = 'false';\nvar FALSE_KEYWORD_2 = 'off';\nvar TRUE_KEYWORD_1 = 'true';\nvar TRUE_KEYWORD_2 = 'on';\n\nfunction breaks(value) {\n  var breakOptions = {};\n\n  breakOptions[Breaks.AfterAtRule] = value;\n  breakOptions[Breaks.AfterBlockBegins] = value;\n  breakOptions[Breaks.AfterBlockEnds] = value;\n  breakOptions[Breaks.AfterComment] = value;\n  breakOptions[Breaks.AfterProperty] = value;\n  breakOptions[Breaks.AfterRuleBegins] = value;\n  breakOptions[Breaks.AfterRuleEnds] = value;\n  breakOptions[Breaks.BeforeBlockEnds] = value;\n  breakOptions[Breaks.BetweenSelectors] = value;\n\n  return breakOptions;\n}\n\nfunction spaces(value) {\n  var spaceOptions = {};\n\n  spaceOptions[Spaces.AroundSelectorRelation] = value;\n  spaceOptions[Spaces.BeforeBlockBegins] = value;\n  spaceOptions[Spaces.BeforeValue] = value;\n\n  return spaceOptions;\n}\n\nfunction formatFrom(source) {\n  if (source === undefined || source === false) {\n    return false;\n  }\n\n  if (typeof source == 'object' && 'breakWith' in source) {\n    source = override(source, { breakWith: mapBreakWith(source.breakWith) });\n  }\n\n  if (typeof source == 'object' && 'indentBy' in source) {\n    source = override(source, { indentBy: parseInt(source.indentBy) });\n  }\n\n  if (typeof source == 'object' && 'indentWith' in source) {\n    source = override(source, { indentWith: mapIndentWith(source.indentWith) });\n  }\n\n  if (typeof source == 'object') {\n    return remapBreaks(override(DEFAULTS, source));\n  }\n\n  if (typeof source == 'string' && source == BEAUTIFY_ALIAS) {\n    return remapBreaks(\n      override(DEFAULTS, {\n        breaks: breaks(true),\n        indentBy: 2,\n        spaces: spaces(true)\n      })\n    );\n  }\n\n  if (typeof source == 'string' && source == KEEP_BREAKS_ALIAS) {\n    return remapBreaks(\n      override(DEFAULTS, {\n        breaks: {\n          afterAtRule: true,\n          afterBlockBegins: true,\n          afterBlockEnds: true,\n          afterComment: true,\n          afterRuleEnds: true,\n          beforeBlockEnds: true\n        }\n      })\n    );\n  }\n\n  if (typeof source == 'string') {\n    return remapBreaks(override(DEFAULTS, toHash(source)));\n  }\n\n  return DEFAULTS;\n}\n\nfunction toHash(string) {\n  return string\n    .split(OPTION_SEPARATOR)\n    .reduce(function(accumulator, directive) {\n      var parts = directive.split(OPTION_NAME_VALUE_SEPARATOR);\n      var name = parts[0];\n      var value = parts[1];\n\n      if (name == 'breaks' || name == 'spaces') {\n        accumulator[name] = hashValuesToHash(value);\n      } else if (name == 'indentBy' || name == 'wrapAt') {\n        accumulator[name] = parseInt(value);\n      } else if (name == 'indentWith') {\n        accumulator[name] = mapIndentWith(value);\n      } else if (name == 'breakWith') {\n        accumulator[name] = mapBreakWith(value);\n      }\n\n      return accumulator;\n    }, {});\n}\n\nfunction hashValuesToHash(string) {\n  return string\n    .split(HASH_VALUES_OPTION_SEPARATOR)\n    .reduce(function(accumulator, directive) {\n      var parts = directive.split(HASH_VALUES_NAME_VALUE_SEPARATOR);\n      var name = parts[0];\n      var value = parts[1];\n\n      accumulator[name] = normalizeValue(value);\n\n      return accumulator;\n    }, {});\n}\n\nfunction normalizeValue(value) {\n  switch (value) {\n  case FALSE_KEYWORD_1:\n  case FALSE_KEYWORD_2:\n    return false;\n  case TRUE_KEYWORD_1:\n  case TRUE_KEYWORD_2:\n    return true;\n  default:\n    return value;\n  }\n}\n\nfunction mapBreakWith(value) {\n  switch (value) {\n  case 'windows':\n  case 'crlf':\n  case BreakWith.CarriageReturnLineFeed:\n    return BreakWith.CarriageReturnLineFeed;\n  case 'unix':\n  case 'lf':\n  case BreakWith.LineFeed:\n    return BreakWith.LineFeed;\n  default:\n    return BreakWith.System;\n  }\n}\n\nfunction mapIndentWith(value) {\n  switch (value) {\n  case 'space':\n    return IndentWith.Space;\n  case 'tab':\n    return IndentWith.Tab;\n  default:\n    return value;\n  }\n}\n\nfunction remapBreaks(source) {\n  for (var key in Breaks) {\n    var breakName = Breaks[key];\n    var breakValue = source.breaks[breakName];\n\n    if (breakValue === true) {\n      source.breaks[breakName] = source.breakWith;\n    } else if (breakValue === false) {\n      source.breaks[breakName] = '';\n    } else {\n      source.breaks[breakName] = source.breakWith.repeat(parseInt(breakValue));\n    }\n  }\n\n  return source;\n}\n\nmodule.exports = {\n  Breaks: Breaks,\n  Spaces: Spaces,\n  formatFrom: formatFrom\n};\n", "var Marker = {\n  ASTERISK: '*',\n  AT: '@',\n  BACK_SLASH: '\\\\',\n  CARRIAGE_RETURN: '\\r',\n  CLOSE_CURLY_BRACKET: '}',\n  CLOSE_ROUND_BRACKET: ')',\n  CLOSE_SQUARE_BRACKET: ']',\n  COLON: ':',\n  COMMA: ',',\n  DOUBLE_QUOTE: '\"',\n  EXCLAMATION: '!',\n  FORWARD_SLASH: '/',\n  INTERNAL: '-clean-css-',\n  NEW_LINE_NIX: '\\n',\n  OPEN_CURLY_BRACKET: '{',\n  OPEN_ROUND_BRACKET: '(',\n  OPEN_SQUARE_BRACKET: '[',\n  SEMICOLON: ';',\n  SINGLE_QUOTE: '\\'',\n  SPACE: ' ',\n  TAB: '\\t',\n  UNDERSCORE: '_'\n};\n\nmodule.exports = Marker;\n", "function formatPosition(metadata) {\n  var line = metadata[0];\n  var column = metadata[1];\n  var source = metadata[2];\n\n  return source\n    ? source + ':' + line + ':' + column\n    : line + ':' + column;\n}\n\nmodule.exports = formatPosition;\n", "var Spaces = require('../../options/format').Spaces;\nvar Marker = require('../../tokenizer/marker');\nvar formatPosition = require('../../utils/format-position');\n\nvar CASE_ATTRIBUTE_PATTERN = /[\\s\"'][iI]\\s*\\]/;\nvar CASE_RESTORE_PATTERN = /([\\d\\w])([iI])\\]/g;\nvar DOUBLE_QUOTE_CASE_PATTERN = /=\"([a-zA-Z][a-zA-Z\\d\\-_]+)\"([iI])/g;\nvar DOUBLE_QUOTE_PATTERN = /=\"([a-zA-Z][a-zA-Z\\d\\-_]+)\"(\\s|\\])/g;\nvar HTML_COMMENT_PATTERN = /^(?:(?:<!--|-->)\\s*)+/;\nvar SINGLE_QUOTE_CASE_PATTERN = /='([a-zA-Z][a-zA-Z\\d\\-_]+)'([iI])/g;\nvar SINGLE_QUOTE_PATTERN = /='([a-zA-Z][a-zA-Z\\d\\-_]+)'(\\s|\\])/g;\nvar RELATION_PATTERN = /[>+~]/;\nvar WHITESPACE_PATTERN = /\\s/;\n\nvar ASTERISK_PLUS_HTML_HACK = '*+html ';\nvar ASTERISK_FIRST_CHILD_PLUS_HTML_HACK = '*:first-child+html ';\nvar LESS_THAN = '<';\n\nvar PSEUDO_CLASSES_WITH_SELECTORS = [\n  ':current',\n  ':future',\n  ':has',\n  ':host',\n  ':host-context',\n  ':is',\n  ':not',\n  ':past',\n  ':where'\n];\n\nfunction hasInvalidCharacters(value) {\n  var isEscaped;\n  var isInvalid = false;\n  var character;\n  var isQuote = false;\n  var i, l;\n\n  for (i = 0, l = value.length; i < l; i++) {\n    character = value[i];\n\n    if (isEscaped) {\n      // continue as always\n    } else if (character == Marker.SINGLE_QUOTE || character == Marker.DOUBLE_QUOTE) {\n      isQuote = !isQuote;\n    } else if (!isQuote\n      && (character == Marker.CLOSE_CURLY_BRACKET\n        || character == Marker.EXCLAMATION\n        || character == LESS_THAN\n        || character == Marker.SEMICOLON)\n    ) {\n      isInvalid = true;\n      break;\n    } else if (!isQuote && i === 0 && RELATION_PATTERN.test(character)) {\n      isInvalid = true;\n      break;\n    }\n\n    isEscaped = character == Marker.BACK_SLASH;\n  }\n\n  return isInvalid;\n}\n\nfunction removeWhitespace(value, format) {\n  var stripped = [];\n  var character;\n  var isNewLineNix;\n  var isNewLineWin;\n  var isEscaped;\n  var wasEscaped;\n  var isQuoted;\n  var isSingleQuoted;\n  var isDoubleQuoted;\n  var isAttribute;\n  var isRelation;\n  var isWhitespace;\n  var isSpaceAwarePseudoClass;\n  var roundBracketLevel = 0;\n  var wasComma = false;\n  var wasRelation = false;\n  var wasWhitespace = false;\n  var withCaseAttribute = CASE_ATTRIBUTE_PATTERN.test(value);\n  var spaceAroundRelation = format && format.spaces[Spaces.AroundSelectorRelation];\n  var i, l;\n\n  for (i = 0, l = value.length; i < l; i++) {\n    character = value[i];\n\n    isNewLineNix = character == Marker.NEW_LINE_NIX;\n    isNewLineWin = character == Marker.NEW_LINE_NIX && value[i - 1] == Marker.CARRIAGE_RETURN;\n    isQuoted = isSingleQuoted || isDoubleQuoted;\n    isRelation = !isAttribute && !isEscaped && roundBracketLevel === 0 && RELATION_PATTERN.test(character);\n    isWhitespace = WHITESPACE_PATTERN.test(character);\n    isSpaceAwarePseudoClass = roundBracketLevel == 1 && character == Marker.CLOSE_ROUND_BRACKET\n      ? false\n      : isSpaceAwarePseudoClass\n        || (roundBracketLevel === 0 && character == Marker.COLON && isPseudoClassWithSelectors(value, i));\n\n    if (wasEscaped && isQuoted && isNewLineWin) {\n      // swallow escaped new windows lines in comments\n      stripped.pop();\n      stripped.pop();\n    } else if (isEscaped && isQuoted && isNewLineNix) {\n      // swallow escaped new *nix lines in comments\n      stripped.pop();\n    } else if (isEscaped) {\n      stripped.push(character);\n    } else if (character == Marker.OPEN_SQUARE_BRACKET && !isQuoted) {\n      stripped.push(character);\n      isAttribute = true;\n    } else if (character == Marker.CLOSE_SQUARE_BRACKET && !isQuoted) {\n      stripped.push(character);\n      isAttribute = false;\n    } else if (character == Marker.OPEN_ROUND_BRACKET && !isQuoted) {\n      stripped.push(character);\n      roundBracketLevel++;\n    } else if (character == Marker.CLOSE_ROUND_BRACKET && !isQuoted) {\n      stripped.push(character);\n      roundBracketLevel--;\n    } else if (character == Marker.SINGLE_QUOTE && !isQuoted) {\n      stripped.push(character);\n      isSingleQuoted = true;\n    } else if (character == Marker.DOUBLE_QUOTE && !isQuoted) {\n      stripped.push(character);\n      isDoubleQuoted = true;\n    } else if (character == Marker.SINGLE_QUOTE && isQuoted) {\n      stripped.push(character);\n      isSingleQuoted = false;\n    } else if (character == Marker.DOUBLE_QUOTE && isQuoted) {\n      stripped.push(character);\n      isDoubleQuoted = false;\n    } else if (isWhitespace && wasRelation && !spaceAroundRelation) {\n      continue;\n    } else if (!isWhitespace && wasRelation && spaceAroundRelation) {\n      stripped.push(Marker.SPACE);\n      stripped.push(character);\n    } else if (isWhitespace && !wasWhitespace && wasComma && roundBracketLevel > 0 && isSpaceAwarePseudoClass) {\n      // skip space\n    } else if (isWhitespace && !wasWhitespace && roundBracketLevel > 0 && isSpaceAwarePseudoClass) {\n      stripped.push(character);\n    } else if (isWhitespace && (isAttribute || roundBracketLevel > 0) && !isQuoted) {\n      // skip space\n    } else if (isWhitespace && wasWhitespace && !isQuoted) {\n      // skip extra space\n    } else if ((isNewLineWin || isNewLineNix) && (isAttribute || roundBracketLevel > 0) && isQuoted) {\n      // skip newline\n    } else if (isRelation && wasWhitespace && !spaceAroundRelation) {\n      stripped.pop();\n      stripped.push(character);\n    } else if (isRelation && !wasWhitespace && spaceAroundRelation) {\n      stripped.push(Marker.SPACE);\n      stripped.push(character);\n    } else if (isWhitespace) {\n      stripped.push(Marker.SPACE);\n    } else {\n      stripped.push(character);\n    }\n\n    wasEscaped = isEscaped;\n    isEscaped = character == Marker.BACK_SLASH;\n    wasRelation = isRelation;\n    wasWhitespace = isWhitespace;\n    wasComma = character == Marker.COMMA;\n  }\n\n  return withCaseAttribute\n    ? stripped.join('').replace(CASE_RESTORE_PATTERN, '$1 $2]')\n    : stripped.join('');\n}\n\nfunction isPseudoClassWithSelectors(value, colonPosition) {\n  var pseudoClass = value.substring(colonPosition, value.indexOf(Marker.OPEN_ROUND_BRACKET, colonPosition));\n\n  return PSEUDO_CLASSES_WITH_SELECTORS.indexOf(pseudoClass) > -1;\n}\n\nfunction removeQuotes(value) {\n  if (value.indexOf('\\'') == -1 && value.indexOf('\"') == -1) {\n    return value;\n  }\n\n  return value\n    .replace(SINGLE_QUOTE_CASE_PATTERN, '=$1 $2')\n    .replace(SINGLE_QUOTE_PATTERN, '=$1$2')\n    .replace(DOUBLE_QUOTE_CASE_PATTERN, '=$1 $2')\n    .replace(DOUBLE_QUOTE_PATTERN, '=$1$2');\n}\n\nfunction replacePseudoClasses(value) {\n  return value\n    .replace('nth-child(1)', 'first-child')\n    .replace('nth-of-type(1)', 'first-of-type')\n    .replace('nth-of-type(even)', 'nth-of-type(2n)')\n    .replace('nth-child(even)', 'nth-child(2n)')\n    .replace('nth-of-type(2n+1)', 'nth-of-type(odd)')\n    .replace('nth-child(2n+1)', 'nth-child(odd)')\n    .replace('nth-last-child(1)', 'last-child')\n    .replace('nth-last-of-type(1)', 'last-of-type')\n    .replace('nth-last-of-type(even)', 'nth-last-of-type(2n)')\n    .replace('nth-last-child(even)', 'nth-last-child(2n)')\n    .replace('nth-last-of-type(2n+1)', 'nth-last-of-type(odd)')\n    .replace('nth-last-child(2n+1)', 'nth-last-child(odd)');\n}\n\nfunction tidyRules(rules, removeUnsupported, adjacentSpace, format, warnings) {\n  var list = [];\n  var repeated = [];\n\n  function removeHTMLComment(rule, match) {\n    warnings.push('HTML comment \\'' + match + '\\' at ' + formatPosition(rule[2][0]) + '. Removing.');\n    return '';\n  }\n\n  for (var i = 0, l = rules.length; i < l; i++) {\n    var rule = rules[i];\n    var reduced = rule[1];\n\n    reduced = reduced.replace(HTML_COMMENT_PATTERN, removeHTMLComment.bind(null, rule));\n\n    if (hasInvalidCharacters(reduced)) {\n      warnings.push('Invalid selector \\'' + rule[1] + '\\' at ' + formatPosition(rule[2][0]) + '. Ignoring.');\n      continue;\n    }\n\n    reduced = removeWhitespace(reduced, format);\n    reduced = removeQuotes(reduced);\n\n    if (adjacentSpace && reduced.indexOf('nav') > 0) {\n      reduced = reduced.replace(/\\+nav(\\S|$)/, '+ nav$1');\n    }\n\n    if (removeUnsupported && reduced.indexOf(ASTERISK_PLUS_HTML_HACK) > -1) {\n      continue;\n    }\n\n    if (removeUnsupported && reduced.indexOf(ASTERISK_FIRST_CHILD_PLUS_HTML_HACK) > -1) {\n      continue;\n    }\n\n    if (reduced.indexOf('*') > -1) {\n      reduced = reduced\n        .replace(/\\*([:#.[])/g, '$1')\n        .replace(/^(:first-child)?\\+html/, '*$1+html');\n    }\n\n    if (repeated.indexOf(reduced) > -1) {\n      continue;\n    }\n\n    reduced = replacePseudoClasses(reduced);\n\n    rule[1] = reduced;\n    repeated.push(reduced);\n    list.push(rule);\n  }\n\n  if (list.length == 1 && list[0][1].length === 0) {\n    warnings.push('Empty selector \\'' + list[0][1] + '\\' at ' + formatPosition(list[0][2][0]) + '. Ignoring.');\n    list = [];\n  }\n\n  return list;\n}\n\nmodule.exports = tidyRules;\n", "var SUPPORTED_COMPACT_BLOCK_MATCHER = /^@media\\W/;\nvar SUPPORTED_QUOTE_REMOVAL_MATCHER = /^@(?:keyframes|-moz-keyframes|-o-keyframes|-webkit-keyframes)\\W/;\n\nfunction tidyBlock(values, spaceAfterClosingBrace) {\n  var withoutSpaceAfterClosingBrace;\n  var withoutQuotes;\n  var i;\n\n  for (i = values.length - 1; i >= 0; i--) {\n    withoutSpaceAfterClosingBrace = !spaceAfterClosingBrace && SUPPORTED_COMPACT_BLOCK_MATCHER.test(values[i][1]);\n    withoutQuotes = SUPPORTED_QUOTE_REMOVAL_MATCHER.test(values[i][1]);\n\n    values[i][1] = values[i][1]\n      .replace(/\\n|\\r\\n/g, ' ')\n      .replace(/\\s+/g, ' ')\n      .replace(/(,|:|\\() /g, '$1')\n      .replace(/ \\)/g, ')');\n\n    if (withoutQuotes) {\n      values[i][1] = values[i][1]\n        .replace(/'([a-zA-Z][a-zA-Z\\d\\-_]+)'/, '$1')\n        .replace(/\"([a-zA-Z][a-zA-Z\\d\\-_]+)\"/, '$1');\n    }\n\n    if (withoutSpaceAfterClosingBrace) {\n      values[i][1] = values[i][1]\n        .replace(/\\) /g, ')');\n    }\n  }\n\n  return values;\n}\n\nmodule.exports = tidyBlock;\n", "function tidyAtRule(value) {\n  return value\n    .replace(/\\s+/g, ' ')\n    .replace(/url\\(\\s+/g, 'url(')\n    .replace(/\\s+\\)/g, ')')\n    .trim();\n}\n\nmodule.exports = tidyAtRule;\n", "var Hack = {\n  ASTERISK: 'asterisk',\n  BANG: 'bang',\n  BACKSLASH: 'backslash',\n  UNDERSCORE: 'underscore'\n};\n\nmodule.exports = Hack;\n", "function removeUnused(properties) {\n  for (var i = properties.length - 1; i >= 0; i--) {\n    var property = properties[i];\n\n    if (property.unused) {\n      property.all.splice(property.position, 1);\n    }\n  }\n}\n\nmodule.exports = removeUnused;\n", "var Hack = require('./hack');\n\nvar Marker = require('../tokenizer/marker');\n\nvar ASTERISK_HACK = '*';\nvar BACKSLASH_HACK = '\\\\';\nvar IMPORTANT_TOKEN = '!important';\nvar UNDERSCORE_HACK = '_';\nvar BANG_HACK = '!ie';\n\nfunction restoreFromOptimizing(properties, restoreCallback) {\n  var property;\n  var restored;\n  var current;\n  var i;\n\n  for (i = properties.length - 1; i >= 0; i--) {\n    property = properties[i];\n\n    if (property.dynamic && property.important) {\n      restoreImportant(property);\n      continue;\n    }\n\n    if (property.dynamic) {\n      continue;\n    }\n\n    if (property.unused) {\n      continue;\n    }\n\n    if (!property.dirty && !property.important && !property.hack) {\n      continue;\n    }\n\n    if (property.optimizable && restoreCallback) {\n      restored = restoreCallback(property);\n      property.value = restored;\n    } else {\n      restored = property.value;\n    }\n\n    if (property.important) {\n      restoreImportant(property);\n    }\n\n    if (property.hack) {\n      restoreHack(property);\n    }\n\n    if ('all' in property) {\n      current = property.all[property.position];\n      current[1][1] = property.name;\n\n      current.splice(2, current.length - 1);\n      Array.prototype.push.apply(current, restored);\n    }\n  }\n}\n\nfunction restoreImportant(property) {\n  property.value[property.value.length - 1][1] += IMPORTANT_TOKEN;\n}\n\nfunction restoreHack(property) {\n  if (property.hack[0] == Hack.UNDERSCORE) {\n    property.name = UNDERSCORE_HACK + property.name;\n  } else if (property.hack[0] == Hack.ASTERISK) {\n    property.name = ASTERISK_HACK + property.name;\n  } else if (property.hack[0] == Hack.BACKSLASH) {\n    property.value[property.value.length - 1][1] += BACKSLASH_HACK + property.hack[1];\n  } else if (property.hack[0] == Hack.BANG) {\n    property.value[property.value.length - 1][1] += Marker.SPACE + BANG_HACK;\n  }\n}\n\nmodule.exports = restoreFromOptimizing;\n", "var Token = {\n  AT_RULE: 'at-rule', // e.g. `@import`, `@charset`\n  AT_RULE_BLOCK: 'at-rule-block', // e.g. `@font-face{...}`\n  AT_RULE_BLOCK_SCOPE: 'at-rule-block-scope', // e.g. `@font-face`\n  COMMENT: 'comment', // e.g. `/* comment */`\n  NESTED_BLOCK: 'nested-block', // e.g. `@media screen{...}`, `@keyframes animation {...}`\n  NESTED_BLOCK_SCOPE: 'nested-block-scope', // e.g. `@media`, `@keyframes`\n  PROPERTY: 'property', // e.g. `color:red`\n  PROPERTY_BLOCK: 'property-block', // e.g. `--var:{color:red}`\n  PROPERTY_NAME: 'property-name', // e.g. `color`\n  PROPERTY_VALUE: 'property-value', // e.g. `red`\n  RAW: 'raw', // e.g. anything between /* clean-css ignore:start */ and /* clean-css ignore:end */ comments\n  RULE: 'rule', // e.g `div > a{...}`\n  RULE_SCOPE: 'rule-scope' // e.g `div > a`\n};\n\nmodule.exports = Token;\n", "var Hack = require('./hack');\n\nvar Marker = require('../tokenizer/marker');\nvar Token = require('../tokenizer/token');\n\nvar Match = {\n  ASTERISK: '*',\n  BACKSLASH: '\\\\',\n  BANG: '!',\n  BANG_SUFFIX_PATTERN: /!\\w+$/,\n  IMPORTANT_TOKEN: '!important',\n  IMPORTANT_TOKEN_PATTERN: new RegExp('!important$', 'i'),\n  IMPORTANT_WORD: 'important',\n  IMPORTANT_WORD_PATTERN: new RegExp('important$', 'i'),\n  SUFFIX_BANG_PATTERN: /!$/,\n  UNDERSCORE: '_',\n  VARIABLE_REFERENCE_PATTERN: /var\\(--.+\\)$/\n};\n\nfunction wrapAll(properties, skipProperties) {\n  var wrapped = [];\n  var single;\n  var property;\n  var i;\n\n  for (i = properties.length - 1; i >= 0; i--) {\n    property = properties[i];\n\n    if (property[0] != Token.PROPERTY) {\n      continue;\n    }\n\n    if (skipProperties && skipProperties.indexOf(property[1][1]) > -1) {\n      continue;\n    }\n\n    single = wrapSingle(property);\n    single.all = properties;\n    single.position = i;\n    wrapped.unshift(single);\n  }\n\n  return wrapped;\n}\n\nfunction someVariableReferences(property) {\n  var i, l;\n  var value;\n\n  // skipping `property` and property name tokens\n  for (i = 2, l = property.length; i < l; i++) {\n    value = property[i];\n\n    if (value[0] != Token.PROPERTY_VALUE) {\n      continue;\n    }\n\n    if (isVariableReference(value[1])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction isVariableReference(value) {\n  return Match.VARIABLE_REFERENCE_PATTERN.test(value);\n}\n\nfunction isMultiplex(property) {\n  var value;\n  var i, l;\n\n  for (i = 3, l = property.length; i < l; i++) {\n    value = property[i];\n\n    if (value[0] == Token.PROPERTY_VALUE && (value[1] == Marker.COMMA || value[1] == Marker.FORWARD_SLASH)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction hackFrom(property) {\n  var match = false;\n  var name = property[1][1];\n  var lastValue = property[property.length - 1];\n\n  if (name[0] == Match.UNDERSCORE) {\n    match = [Hack.UNDERSCORE];\n  } else if (name[0] == Match.ASTERISK) {\n    match = [Hack.ASTERISK];\n  } else if (lastValue[1][0] == Match.BANG && !lastValue[1].match(Match.IMPORTANT_WORD_PATTERN)) {\n    match = [Hack.BANG];\n  } else if (lastValue[1].indexOf(Match.BANG) > 0\n    && !lastValue[1].match(Match.IMPORTANT_WORD_PATTERN)\n    && Match.BANG_SUFFIX_PATTERN.test(lastValue[1])) {\n    match = [Hack.BANG];\n  } else if (lastValue[1].indexOf(Match.BACKSLASH) > 0\n    && lastValue[1].indexOf(Match.BACKSLASH) == lastValue[1].length - Match.BACKSLASH.length - 1) {\n    match = [Hack.BACKSLASH, lastValue[1].substring(lastValue[1].indexOf(Match.BACKSLASH) + 1)];\n  } else if (lastValue[1].indexOf(Match.BACKSLASH) === 0 && lastValue[1].length == 2) {\n    match = [Hack.BACKSLASH, lastValue[1].substring(1)];\n  }\n\n  return match;\n}\n\nfunction isImportant(property) {\n  if (property.length < 3) { return false; }\n\n  var lastValue = property[property.length - 1];\n  if (Match.IMPORTANT_TOKEN_PATTERN.test(lastValue[1])) {\n    return true;\n  } if (Match.IMPORTANT_WORD_PATTERN.test(lastValue[1])\n    && Match.SUFFIX_BANG_PATTERN.test(property[property.length - 2][1])) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction stripImportant(property) {\n  var lastValue = property[property.length - 1];\n  var oneButLastValue = property[property.length - 2];\n\n  if (Match.IMPORTANT_TOKEN_PATTERN.test(lastValue[1])) {\n    lastValue[1] = lastValue[1].replace(Match.IMPORTANT_TOKEN_PATTERN, '');\n  } else {\n    lastValue[1] = lastValue[1].replace(Match.IMPORTANT_WORD_PATTERN, '');\n    oneButLastValue[1] = oneButLastValue[1].replace(Match.SUFFIX_BANG_PATTERN, '');\n  }\n\n  if (lastValue[1].length === 0) {\n    property.pop();\n  }\n\n  if (oneButLastValue[1].length === 0) {\n    property.pop();\n  }\n}\n\nfunction stripPrefixHack(property) {\n  property[1][1] = property[1][1].substring(1);\n}\n\nfunction stripSuffixHack(property, hackFrom) {\n  var lastValue = property[property.length - 1];\n  lastValue[1] = lastValue[1]\n    .substring(0, lastValue[1].indexOf(hackFrom[0] == Hack.BACKSLASH ? Match.BACKSLASH : Match.BANG))\n    .trim();\n\n  if (lastValue[1].length === 0) {\n    property.pop();\n  }\n}\n\nfunction wrapSingle(property) {\n  var importantProperty = isImportant(property);\n  if (importantProperty) {\n    stripImportant(property);\n  }\n\n  var whichHack = hackFrom(property);\n  if (whichHack[0] == Hack.ASTERISK || whichHack[0] == Hack.UNDERSCORE) {\n    stripPrefixHack(property);\n  } else if (whichHack[0] == Hack.BACKSLASH || whichHack[0] == Hack.BANG) {\n    stripSuffixHack(property, whichHack);\n  }\n\n  return {\n    block: property[2] && property[2][0] == Token.PROPERTY_BLOCK,\n    components: [],\n    dirty: false,\n    dynamic: someVariableReferences(property),\n    hack: whichHack,\n    important: importantProperty,\n    name: property[1][1],\n    multiplex: property.length > 3 ? isMultiplex(property) : false,\n    optimizable: true,\n    position: 0,\n    shorthand: false,\n    unused: false,\n    value: property.slice(2)\n  };\n}\n\nmodule.exports = {\n  all: wrapAll,\n  single: wrapSingle\n};\n", "function InvalidPropertyError(message) {\n  this.name = 'InvalidPropertyError';\n  this.message = message;\n  this.stack = (new Error()).stack;\n}\n\nInvalidPropertyError.prototype = Object.create(Error.prototype);\nInvalidPropertyError.prototype.constructor = InvalidPropertyError;\n\nmodule.exports = InvalidPropertyError;\n", "var InvalidPropertyError = require('../invalid-property-error');\n\nvar wrapSingle = require('../wrap-for-optimizing').single;\n\nvar Token = require('../../tokenizer/token');\nvar Marker = require('../../tokenizer/marker');\n\nvar formatPosition = require('../../utils/format-position');\n\nfunction _anyIsInherit(values) {\n  var i, l;\n\n  for (i = 0, l = values.length; i < l; i++) {\n    if (values[i][1] == 'inherit') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction _colorFilter(validator) {\n  return function(value) {\n    return value[1] == 'invert' || validator.isColor(value[1]) || validator.isPrefixed(value[1]);\n  };\n}\n\nfunction _styleFilter(validator) {\n  return function(value) {\n    return value[1] != 'inherit' && validator.isStyleKeyword(value[1]) && !validator.isColorFunction(value[1]);\n  };\n}\n\nfunction _wrapDefault(name, property, configuration) {\n  var descriptor = configuration[name];\n  if (descriptor.doubleValues && descriptor.defaultValue.length == 2) {\n    return wrapSingle([\n      Token.PROPERTY,\n      [Token.PROPERTY_NAME, name],\n      [Token.PROPERTY_VALUE, descriptor.defaultValue[0]],\n      [Token.PROPERTY_VALUE, descriptor.defaultValue[1]]\n    ]);\n  } if (descriptor.doubleValues && descriptor.defaultValue.length == 1) {\n    return wrapSingle([\n      Token.PROPERTY,\n      [Token.PROPERTY_NAME, name],\n      [Token.PROPERTY_VALUE, descriptor.defaultValue[0]]\n    ]);\n  }\n  return wrapSingle([\n    Token.PROPERTY,\n    [Token.PROPERTY_NAME, name],\n    [Token.PROPERTY_VALUE, descriptor.defaultValue]\n  ]);\n}\n\nfunction _widthFilter(validator) {\n  return function(value) {\n    return value[1] != 'inherit'\n      && (validator.isWidth(value[1]) || validator.isUnit(value[1]) || validator.isDynamicUnit(value[1]))\n      && !validator.isStyleKeyword(value[1])\n      && !validator.isColorFunction(value[1]);\n  };\n}\n\nfunction animation(property, configuration, validator) {\n  var duration = _wrapDefault(property.name + '-duration', property, configuration);\n  var timing = _wrapDefault(property.name + '-timing-function', property, configuration);\n  var delay = _wrapDefault(property.name + '-delay', property, configuration);\n  var iteration = _wrapDefault(property.name + '-iteration-count', property, configuration);\n  var direction = _wrapDefault(property.name + '-direction', property, configuration);\n  var fill = _wrapDefault(property.name + '-fill-mode', property, configuration);\n  var play = _wrapDefault(property.name + '-play-state', property, configuration);\n  var name = _wrapDefault(property.name + '-name', property, configuration);\n  var components = [duration, timing, delay, iteration, direction, fill, play, name];\n  var values = property.value;\n  var value;\n  var durationSet = false;\n  var timingSet = false;\n  var delaySet = false;\n  var iterationSet = false;\n  var directionSet = false;\n  var fillSet = false;\n  var playSet = false;\n  var nameSet = false;\n  var i;\n  var l;\n\n  if (property.value.length == 1 && property.value[0][1] == 'inherit') {\n    // eslint-disable-next-line max-len\n    duration.value = timing.value = delay.value = iteration.value = direction.value = fill.value = play.value = name.value = property.value;\n    return components;\n  }\n\n  if (values.length > 1 && _anyIsInherit(values)) {\n    throw new InvalidPropertyError('Invalid animation values at ' + formatPosition(values[0][2][0]) + '. Ignoring.');\n  }\n\n  for (i = 0, l = values.length; i < l; i++) {\n    value = values[i];\n\n    if (validator.isTime(value[1]) && !durationSet) {\n      duration.value = [value];\n      durationSet = true;\n    } else if (validator.isTime(value[1]) && !delaySet) {\n      delay.value = [value];\n      delaySet = true;\n    } else if ((validator.isGlobal(value[1]) || validator.isTimingFunction(value[1])) && !timingSet) {\n      timing.value = [value];\n      timingSet = true;\n    } else if ((validator.isAnimationIterationCountKeyword(value[1])\n      || validator.isPositiveNumber(value[1]))\n      && !iterationSet) {\n      iteration.value = [value];\n      iterationSet = true;\n    } else if (validator.isAnimationDirectionKeyword(value[1]) && !directionSet) {\n      direction.value = [value];\n      directionSet = true;\n    } else if (validator.isAnimationFillModeKeyword(value[1]) && !fillSet) {\n      fill.value = [value];\n      fillSet = true;\n    } else if (validator.isAnimationPlayStateKeyword(value[1]) && !playSet) {\n      play.value = [value];\n      playSet = true;\n    } else if ((validator.isAnimationNameKeyword(value[1]) || validator.isIdentifier(value[1])) && !nameSet) {\n      name.value = [value];\n      nameSet = true;\n    } else {\n      throw new InvalidPropertyError('Invalid animation value at ' + formatPosition(value[2][0]) + '. Ignoring.');\n    }\n  }\n\n  return components;\n}\n\nfunction background(property, configuration, validator) {\n  var image = _wrapDefault('background-image', property, configuration);\n  var position = _wrapDefault('background-position', property, configuration);\n  var size = _wrapDefault('background-size', property, configuration);\n  var repeat = _wrapDefault('background-repeat', property, configuration);\n  var attachment = _wrapDefault('background-attachment', property, configuration);\n  var origin = _wrapDefault('background-origin', property, configuration);\n  var clip = _wrapDefault('background-clip', property, configuration);\n  var color = _wrapDefault('background-color', property, configuration);\n  var components = [image, position, size, repeat, attachment, origin, clip, color];\n  var values = property.value;\n\n  var positionSet = false;\n  var clipSet = false;\n  var originSet = false;\n  var repeatSet = false;\n\n  var anyValueSet = false;\n\n  if (property.value.length == 1 && property.value[0][1] == 'inherit') {\n    // NOTE: 'inherit' is not a valid value for background-attachment\n    color.value = image.value = repeat.value = position.value = size.value = origin.value = clip.value = property.value;\n    return components;\n  }\n\n  if (property.value.length == 1 && property.value[0][1] == '0 0') {\n    return components;\n  }\n\n  for (var i = values.length - 1; i >= 0; i--) {\n    var value = values[i];\n\n    if (validator.isBackgroundAttachmentKeyword(value[1])) {\n      attachment.value = [value];\n      anyValueSet = true;\n    } else if (validator.isBackgroundClipKeyword(value[1]) || validator.isBackgroundOriginKeyword(value[1])) {\n      if (clipSet) {\n        origin.value = [value];\n        originSet = true;\n      } else {\n        clip.value = [value];\n        clipSet = true;\n      }\n      anyValueSet = true;\n    } else if (validator.isBackgroundRepeatKeyword(value[1])) {\n      if (repeatSet) {\n        repeat.value.unshift(value);\n      } else {\n        repeat.value = [value];\n        repeatSet = true;\n      }\n      anyValueSet = true;\n    } else if (validator.isBackgroundPositionKeyword(value[1])\n    || validator.isBackgroundSizeKeyword(value[1])\n    || validator.isUnit(value[1])\n    || validator.isDynamicUnit(value[1])) {\n      if (i > 0) {\n        var previousValue = values[i - 1];\n\n        if (previousValue[1] == Marker.FORWARD_SLASH) {\n          size.value = [value];\n        } else if (i > 1 && values[i - 2][1] == Marker.FORWARD_SLASH) {\n          size.value = [previousValue, value];\n          i -= 2;\n        } else {\n          if (!positionSet) { position.value = []; }\n\n          position.value.unshift(value);\n          positionSet = true;\n        }\n      } else {\n        if (!positionSet) { position.value = []; }\n\n        position.value.unshift(value);\n        positionSet = true;\n      }\n      anyValueSet = true;\n    } else if ((color.value[0][1] == configuration[color.name].defaultValue || color.value[0][1] == 'none') && (validator.isColor(value[1]) || validator.isPrefixed(value[1]))) {\n      color.value = [value];\n      anyValueSet = true;\n    } else if (validator.isUrl(value[1]) || validator.isFunction(value[1])) {\n      image.value = [value];\n      anyValueSet = true;\n    }\n  }\n\n  if (clipSet && !originSet) { origin.value = clip.value.slice(0); }\n\n  if (!anyValueSet) {\n    throw new InvalidPropertyError('Invalid background value at ' + formatPosition(values[0][2][0]) + '. Ignoring.');\n  }\n\n  return components;\n}\n\nfunction borderRadius(property, configuration) {\n  var values = property.value;\n  var splitAt = -1;\n\n  for (var i = 0, l = values.length; i < l; i++) {\n    if (values[i][1] == Marker.FORWARD_SLASH) {\n      splitAt = i;\n      break;\n    }\n  }\n\n  if (splitAt === 0 || splitAt === values.length - 1) {\n    throw new InvalidPropertyError('Invalid border-radius value at ' + formatPosition(values[0][2][0]) + '. Ignoring.');\n  }\n\n  var target = _wrapDefault(property.name, property, configuration);\n  target.value = splitAt > -1\n    ? values.slice(0, splitAt)\n    : values.slice(0);\n  target.components = fourValues(target, configuration);\n\n  var remainder = _wrapDefault(property.name, property, configuration);\n  remainder.value = splitAt > -1\n    ? values.slice(splitAt + 1)\n    : values.slice(0);\n  remainder.components = fourValues(remainder, configuration);\n\n  for (var j = 0; j < 4; j++) {\n    target.components[j].multiplex = true;\n    target.components[j].value = target.components[j].value.concat(remainder.components[j].value);\n  }\n\n  return target.components;\n}\n\nfunction font(property, configuration, validator) {\n  var style = _wrapDefault('font-style', property, configuration);\n  var variant = _wrapDefault('font-variant', property, configuration);\n  var weight = _wrapDefault('font-weight', property, configuration);\n  var stretch = _wrapDefault('font-stretch', property, configuration);\n  var size = _wrapDefault('font-size', property, configuration);\n  var height = _wrapDefault('line-height', property, configuration);\n  var family = _wrapDefault('font-family', property, configuration);\n  var components = [style, variant, weight, stretch, size, height, family];\n  var values = property.value;\n  var fuzzyMatched = 4; // style, variant, weight, and stretch\n  var index = 0;\n  var isStretchSet = false;\n  var isStretchValid;\n  var isStyleSet = false;\n  var isStyleValid;\n  var isVariantSet = false;\n  var isVariantValid;\n  var isWeightSet = false;\n  var isWeightValid;\n  var appendableFamilyName = false;\n\n  if (!values[index]) {\n    throw new InvalidPropertyError('Missing font values at ' + formatPosition(property.all[property.position][1][2][0]) + '. Ignoring.');\n  }\n\n  if (values.length == 1 && values[0][1] == 'inherit') {\n    style.value = variant.value = weight.value = stretch.value = size.value = height.value = family.value = values;\n    return components;\n  }\n\n  if (values.length == 1\n    && (validator.isFontKeyword(values[0][1])\n    || validator.isGlobal(values[0][1])\n    || validator.isPrefixed(values[0][1]))\n  ) {\n    values[0][1] = Marker.INTERNAL + values[0][1];\n    style.value = variant.value = weight.value = stretch.value = size.value = height.value = family.value = values;\n    return components;\n  }\n\n  if (values.length < 2 || !_anyIsFontSize(values, validator) || !_anyIsFontFamily(values, validator)) {\n    throw new InvalidPropertyError('Invalid font values at ' + formatPosition(property.all[property.position][1][2][0]) + '. Ignoring.');\n  }\n\n  if (values.length > 1 && _anyIsInherit(values)) {\n    throw new InvalidPropertyError('Invalid font values at ' + formatPosition(values[0][2][0]) + '. Ignoring.');\n  }\n\n  // fuzzy match style, variant, weight, and stretch on first elements\n  while (index < fuzzyMatched) {\n    isStretchValid = validator.isFontStretchKeyword(values[index][1]) || validator.isGlobal(values[index][1]);\n    isStyleValid = validator.isFontStyleKeyword(values[index][1]) || validator.isGlobal(values[index][1]);\n    isVariantValid = validator.isFontVariantKeyword(values[index][1]) || validator.isGlobal(values[index][1]);\n    isWeightValid = validator.isFontWeightKeyword(values[index][1]) || validator.isGlobal(values[index][1]);\n\n    if (isStyleValid && !isStyleSet) {\n      style.value = [values[index]];\n      isStyleSet = true;\n    } else if (isVariantValid && !isVariantSet) {\n      variant.value = [values[index]];\n      isVariantSet = true;\n    } else if (isWeightValid && !isWeightSet) {\n      weight.value = [values[index]];\n      isWeightSet = true;\n    } else if (isStretchValid && !isStretchSet) {\n      stretch.value = [values[index]];\n      isStretchSet = true;\n    } else if (isStyleValid\n      && isStyleSet\n      || isVariantValid\n      && isVariantSet\n      || isWeightValid\n      && isWeightSet\n      || isStretchValid\n      && isStretchSet) {\n      throw new InvalidPropertyError('Invalid font style / variant / weight / stretch value at ' + formatPosition(values[0][2][0]) + '. Ignoring.');\n    } else {\n      break;\n    }\n\n    index++;\n  }\n\n  // now comes font-size ...\n  if (validator.isFontSizeKeyword(values[index][1])\n    || validator.isUnit(values[index][1])\n    && !validator.isDynamicUnit(values[index][1])) {\n    size.value = [values[index]];\n    index++;\n  } else {\n    throw new InvalidPropertyError('Missing font size at ' + formatPosition(values[0][2][0]) + '. Ignoring.');\n  }\n\n  if (!values[index]) {\n    throw new InvalidPropertyError('Missing font family at ' + formatPosition(values[0][2][0]) + '. Ignoring.');\n  }\n\n  // ... and perhaps line-height\n  if (values[index]\n    && values[index][1] == Marker.FORWARD_SLASH\n    && values[index + 1]\n    && (validator.isLineHeightKeyword(values[index + 1][1])\n    || validator.isUnit(values[index + 1][1])\n    || validator.isNumber(values[index + 1][1]))) {\n    height.value = [values[index + 1]];\n    index++;\n    index++;\n  }\n\n  // ... and whatever comes next is font-family\n  family.value = [];\n\n  while (values[index]) {\n    if (values[index][1] == Marker.COMMA) {\n      appendableFamilyName = false;\n    } else {\n      if (appendableFamilyName) {\n        family.value[family.value.length - 1][1] += Marker.SPACE + values[index][1];\n      } else {\n        family.value.push(values[index]);\n      }\n\n      appendableFamilyName = true;\n    }\n\n    index++;\n  }\n\n  if (family.value.length === 0) {\n    throw new InvalidPropertyError('Missing font family at ' + formatPosition(values[0][2][0]) + '. Ignoring.');\n  }\n\n  return components;\n}\n\nfunction _anyIsFontSize(values, validator) {\n  var value;\n  var i, l;\n\n  for (i = 0, l = values.length; i < l; i++) {\n    value = values[i];\n\n    if (validator.isFontSizeKeyword(value[1])\n      || validator.isUnit(value[1])\n      && !validator.isDynamicUnit(value[1])\n      || validator.isFunction(value[1])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction _anyIsFontFamily(values, validator) {\n  var value;\n  var i, l;\n\n  for (i = 0, l = values.length; i < l; i++) {\n    value = values[i];\n\n    if (validator.isIdentifier(value[1]) || validator.isQuotedText(value[1])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction fourValues(property, configuration) {\n  var componentNames = configuration[property.name].components;\n  var components = [];\n  var value = property.value;\n\n  if (value.length < 1) { return []; }\n\n  if (value.length < 2) { value[1] = value[0].slice(0); }\n  if (value.length < 3) { value[2] = value[0].slice(0); }\n  if (value.length < 4) { value[3] = value[1].slice(0); }\n\n  for (var i = componentNames.length - 1; i >= 0; i--) {\n    var component = wrapSingle([\n      Token.PROPERTY,\n      [Token.PROPERTY_NAME, componentNames[i]]\n    ]);\n    component.value = [value[i]];\n    components.unshift(component);\n  }\n\n  return components;\n}\n\nfunction multiplex(splitWith) {\n  return function(property, configuration, validator) {\n    var splitsAt = [];\n    var values = property.value;\n    var i, j, l, m;\n\n    // find split commas\n    for (i = 0, l = values.length; i < l; i++) {\n      if (values[i][1] == ',') { splitsAt.push(i); }\n    }\n\n    if (splitsAt.length === 0) { return splitWith(property, configuration, validator); }\n\n    var splitComponents = [];\n\n    // split over commas, and into components\n    for (i = 0, l = splitsAt.length; i <= l; i++) {\n      var from = i === 0 ? 0 : splitsAt[i - 1] + 1;\n      var to = i < l ? splitsAt[i] : values.length;\n\n      var _property = _wrapDefault(property.name, property, configuration);\n      _property.value = values.slice(from, to);\n\n      if (_property.value.length > 0) {\n        splitComponents.push(splitWith(_property, configuration, validator));\n      }\n    }\n\n    var components = splitComponents[0];\n\n    // group component values from each split\n    for (i = 0, l = components.length; i < l; i++) {\n      components[i].multiplex = true;\n\n      for (j = 1, m = splitComponents.length; j < m; j++) {\n        components[i].value.push([Token.PROPERTY_VALUE, Marker.COMMA]);\n        Array.prototype.push.apply(components[i].value, splitComponents[j][i].value);\n      }\n    }\n\n    return components;\n  };\n}\n\nfunction listStyle(property, configuration, validator) {\n  var type = _wrapDefault('list-style-type', property, configuration);\n  var position = _wrapDefault('list-style-position', property, configuration);\n  var image = _wrapDefault('list-style-image', property, configuration);\n  var components = [type, position, image];\n\n  if (property.value.length == 1 && property.value[0][1] == 'inherit') {\n    type.value = position.value = image.value = [property.value[0]];\n    return components;\n  }\n\n  var values = property.value.slice(0);\n  var total = values.length;\n  var index = 0;\n\n  // `image` first...\n  for (index = 0, total = values.length; index < total; index++) {\n    if (validator.isUrl(values[index][1]) || values[index][1] == '0') {\n      image.value = [values[index]];\n      values.splice(index, 1);\n      break;\n    }\n  }\n\n  // ... then `position`\n  for (index = 0, total = values.length; index < total; index++) {\n    if (validator.isListStylePositionKeyword(values[index][1])) {\n      position.value = [values[index]];\n      values.splice(index, 1);\n      break;\n    }\n  }\n\n  // ... and what's left is a `type`\n  if (values.length > 0 && (validator.isListStyleTypeKeyword(values[0][1]) || validator.isIdentifier(values[0][1]))) {\n    type.value = [values[0]];\n  }\n\n  return components;\n}\n\nfunction transition(property, configuration, validator) {\n  var prop = _wrapDefault(property.name + '-property', property, configuration);\n  var duration = _wrapDefault(property.name + '-duration', property, configuration);\n  var timing = _wrapDefault(property.name + '-timing-function', property, configuration);\n  var delay = _wrapDefault(property.name + '-delay', property, configuration);\n  var components = [prop, duration, timing, delay];\n  var values = property.value;\n  var value;\n  var durationSet = false;\n  var delaySet = false;\n  var propSet = false;\n  var timingSet = false;\n  var i;\n  var l;\n\n  if (property.value.length == 1 && property.value[0][1] == 'inherit') {\n    prop.value = duration.value = timing.value = delay.value = property.value;\n    return components;\n  }\n\n  if (values.length > 1 && _anyIsInherit(values)) {\n    throw new InvalidPropertyError('Invalid animation values at ' + formatPosition(values[0][2][0]) + '. Ignoring.');\n  }\n\n  for (i = 0, l = values.length; i < l; i++) {\n    value = values[i];\n\n    if (validator.isTime(value[1]) && !durationSet) {\n      duration.value = [value];\n      durationSet = true;\n    } else if (validator.isTime(value[1]) && !delaySet) {\n      delay.value = [value];\n      delaySet = true;\n    } else if ((validator.isGlobal(value[1]) || validator.isTimingFunction(value[1])) && !timingSet) {\n      timing.value = [value];\n      timingSet = true;\n    } else if (validator.isIdentifier(value[1]) && !propSet) {\n      prop.value = [value];\n      propSet = true;\n    } else {\n      throw new InvalidPropertyError('Invalid animation value at ' + formatPosition(value[2][0]) + '. Ignoring.');\n    }\n  }\n\n  return components;\n}\n\nfunction widthStyleColor(property, configuration, validator) {\n  var descriptor = configuration[property.name];\n  var components = [\n    _wrapDefault(descriptor.components[0], property, configuration),\n    _wrapDefault(descriptor.components[1], property, configuration),\n    _wrapDefault(descriptor.components[2], property, configuration)\n  ];\n  var color, style, width;\n\n  for (var i = 0; i < 3; i++) {\n    var component = components[i];\n\n    if (component.name.indexOf('color') > 0) { color = component; } else if (component.name.indexOf('style') > 0) { style = component; } else { width = component; }\n  }\n\n  if ((property.value.length == 1 && property.value[0][1] == 'inherit')\n      || (property.value.length == 3 && property.value[0][1] == 'inherit' && property.value[1][1] == 'inherit' && property.value[2][1] == 'inherit')) {\n    color.value = style.value = width.value = [property.value[0]];\n    return components;\n  }\n\n  var values = property.value.slice(0);\n  var match, matches;\n\n  // NOTE: usually users don't follow the required order of parts in this shorthand,\n  // so we'll try to parse it caring as little about order as possible\n\n  if (values.length > 0) {\n    matches = values.filter(_widthFilter(validator));\n    match = matches.length > 1 && (matches[0][1] == 'none' || matches[0][1] == 'auto') ? matches[1] : matches[0];\n    if (match) {\n      width.value = [match];\n      values.splice(values.indexOf(match), 1);\n    }\n  }\n\n  if (values.length > 0) {\n    match = values.filter(_styleFilter(validator))[0];\n    if (match) {\n      style.value = [match];\n      values.splice(values.indexOf(match), 1);\n    }\n  }\n\n  if (values.length > 0) {\n    match = values.filter(_colorFilter(validator))[0];\n    if (match) {\n      color.value = [match];\n      values.splice(values.indexOf(match), 1);\n    }\n  }\n\n  return components;\n}\n\nmodule.exports = {\n  animation: animation,\n  background: background,\n  border: widthStyleColor,\n  borderRadius: borderRadius,\n  font: font,\n  fourValues: fourValues,\n  listStyle: listStyle,\n  multiplex: multiplex,\n  outline: widthStyleColor,\n  transition: transition\n};\n", "var VENDOR_PREFIX_PATTERN = /(?:^|\\W)(-\\w+-)/g;\n\nfunction unique(value) {\n  var prefixes = [];\n  var match;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((match = VENDOR_PREFIX_PATTERN.exec(value)) !== null) {\n    if (prefixes.indexOf(match[0]) == -1) {\n      prefixes.push(match[0]);\n    }\n  }\n\n  return prefixes;\n}\n\nfunction same(value1, value2) {\n  return unique(value1).sort().join(',') == unique(value2).sort().join(',');\n}\n\nmodule.exports = {\n  unique: unique,\n  same: same\n};\n", "var sameVendorPrefixes = require('../../vendor-prefixes').same;\n\nfunction understandable(validator, value1, value2, _position, isPaired) {\n  if (!sameVendorPrefixes(value1, value2)) {\n    return false;\n  }\n\n  if (isPaired && validator.isVariable(value1) !== validator.isVariable(value2)) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = understandable;\n", "var understandable = require('./properties/understandable');\n\nfunction animationIterationCount(validator, value1, value2) {\n  if (!understandable(validator, value1, value2, 0, true)\n    && !(validator.isAnimationIterationCountKeyword(value2) || validator.isPositiveNumber(value2))) {\n    return false;\n  } if (validator.isVariable(value1) && validator.isVariable(value2)) {\n    return true;\n  }\n\n  return validator.isAnimationIterationCountKeyword(value2) || validator.isPositiveNumber(value2);\n}\n\nfunction animationName(validator, value1, value2) {\n  if (!understandable(validator, value1, value2, 0, true)\n    && !(validator.isAnimationNameKeyword(value2) || validator.isIdentifier(value2))) {\n    return false;\n  } if (validator.isVariable(value1) && validator.isVariable(value2)) {\n    return true;\n  }\n\n  return validator.isAnimationNameKeyword(value2) || validator.isIdentifier(value2);\n}\n\nfunction areSameFunction(validator, value1, value2) {\n  if (!validator.isFunction(value1) || !validator.isFunction(value2)) {\n    return false;\n  }\n\n  var function1Name = value1.substring(0, value1.indexOf('('));\n  var function2Name = value2.substring(0, value2.indexOf('('));\n\n  var function1Value = value1.substring(function1Name.length + 1, value1.length - 1);\n  var function2Value = value2.substring(function2Name.length + 1, value2.length - 1);\n\n  if (validator.isFunction(function1Value) || validator.isFunction(function2Value)) {\n    return function1Name === function2Name && areSameFunction(validator, function1Value, function2Value);\n  }\n  return function1Name === function2Name;\n}\n\nfunction backgroundPosition(validator, value1, value2) {\n  if (!understandable(validator, value1, value2, 0, true)\n    && !(validator.isBackgroundPositionKeyword(value2) || validator.isGlobal(value2))) {\n    return false;\n  } if (validator.isVariable(value1) && validator.isVariable(value2)) {\n    return true;\n  } if (validator.isBackgroundPositionKeyword(value2) || validator.isGlobal(value2)) {\n    return true;\n  }\n\n  return unit(validator, value1, value2);\n}\n\nfunction backgroundSize(validator, value1, value2) {\n  if (!understandable(validator, value1, value2, 0, true)\n    && !(validator.isBackgroundSizeKeyword(value2) || validator.isGlobal(value2))) {\n    return false;\n  } if (validator.isVariable(value1) && validator.isVariable(value2)) {\n    return true;\n  } if (validator.isBackgroundSizeKeyword(value2) || validator.isGlobal(value2)) {\n    return true;\n  }\n\n  return unit(validator, value1, value2);\n}\n\nfunction color(validator, value1, value2) {\n  if (!understandable(validator, value1, value2, 0, true) && !validator.isColor(value2)) {\n    return false;\n  } if (validator.isVariable(value1) && validator.isVariable(value2)) {\n    return true;\n  } if (!validator.colorOpacity && (validator.isRgbColor(value1) || validator.isHslColor(value1))) {\n    return false;\n  } if (!validator.colorOpacity && (validator.isRgbColor(value2) || validator.isHslColor(value2))) {\n    return false;\n  } if (!validator.colorHexAlpha && (validator.isHexAlphaColor(value1) || validator.isHexAlphaColor(value2))) {\n    return false;\n  } if (validator.isColor(value1) && validator.isColor(value2)) {\n    return true;\n  }\n\n  return sameFunctionOrValue(validator, value1, value2);\n}\n\nfunction components(overrideCheckers) {\n  return function(validator, value1, value2, position) {\n    return overrideCheckers[position](validator, value1, value2);\n  };\n}\n\nfunction fontFamily(validator, value1, value2) {\n  return understandable(validator, value1, value2, 0, true);\n}\n\nfunction image(validator, value1, value2) {\n  if (!understandable(validator, value1, value2, 0, true) && !validator.isImage(value2)) {\n    return false;\n  } if (validator.isVariable(value1) && validator.isVariable(value2)) {\n    return true;\n  } if (validator.isImage(value2)) {\n    return true;\n  } if (validator.isImage(value1)) {\n    return false;\n  }\n\n  return sameFunctionOrValue(validator, value1, value2);\n}\n\nfunction keyword(propertyName) {\n  return function(validator, value1, value2) {\n    if (!understandable(validator, value1, value2, 0, true) && !validator.isKeyword(propertyName)(value2)) {\n      return false;\n    } if (validator.isVariable(value1) && validator.isVariable(value2)) {\n      return true;\n    }\n\n    return validator.isKeyword(propertyName)(value2);\n  };\n}\n\nfunction keywordWithGlobal(propertyName) {\n  return function(validator, value1, value2) {\n    if (!understandable(validator, value1, value2, 0, true)\n      && !(validator.isKeyword(propertyName)(value2) || validator.isGlobal(value2))) {\n      return false;\n    } if (validator.isVariable(value1) && validator.isVariable(value2)) {\n      return true;\n    }\n\n    return validator.isKeyword(propertyName)(value2) || validator.isGlobal(value2);\n  };\n}\n\nfunction propertyName(validator, value1, value2) {\n  if (!understandable(validator, value1, value2, 0, true) && !validator.isIdentifier(value2)) {\n    return false;\n  } if (validator.isVariable(value1) && validator.isVariable(value2)) {\n    return true;\n  }\n\n  return validator.isIdentifier(value2);\n}\n\nfunction sameFunctionOrValue(validator, value1, value2) {\n  return areSameFunction(validator, value1, value2)\n    ? true\n    : value1 === value2;\n}\n\nfunction textShadow(validator, value1, value2) {\n  if (!understandable(validator, value1, value2, 0, true)\n    && !(validator.isUnit(value2)\n    || validator.isColor(value2)\n    || validator.isGlobal(value2))) {\n    return false;\n  } if (validator.isVariable(value1) && validator.isVariable(value2)) {\n    return true;\n  }\n\n  return validator.isUnit(value2) || validator.isColor(value2) || validator.isGlobal(value2);\n}\n\nfunction time(validator, value1, value2) {\n  if (!understandable(validator, value1, value2, 0, true) && !validator.isTime(value2)) {\n    return false;\n  } if (validator.isVariable(value1) && validator.isVariable(value2)) {\n    return true;\n  } if (validator.isTime(value1) && !validator.isTime(value2)) {\n    return false;\n  } if (validator.isTime(value2)) {\n    return true;\n  } if (validator.isTime(value1)) {\n    return false;\n  } if (validator.isFunction(value1)\n    && !validator.isPrefixed(value1)\n    && validator.isFunction(value2)\n    && !validator.isPrefixed(value2)) {\n    return true;\n  }\n\n  return sameFunctionOrValue(validator, value1, value2);\n}\n\nfunction timingFunction(validator, value1, value2) {\n  if (!understandable(validator, value1, value2, 0, true)\n    && !(validator.isTimingFunction(value2) || validator.isGlobal(value2))) {\n    return false;\n  } if (validator.isVariable(value1) && validator.isVariable(value2)) {\n    return true;\n  }\n\n  return validator.isTimingFunction(value2) || validator.isGlobal(value2);\n}\n\nfunction unit(validator, value1, value2) {\n  if (!understandable(validator, value1, value2, 0, true) && !validator.isUnit(value2)) {\n    return false;\n  } if (validator.isVariable(value1) && validator.isVariable(value2)) {\n    return true;\n  } if (validator.isUnit(value1) && !validator.isUnit(value2)) {\n    return false;\n  } if (validator.isUnit(value2)) {\n    return true;\n  } if (validator.isUnit(value1)) {\n    return false;\n  } if (validator.isFunction(value1)\n    && !validator.isPrefixed(value1)\n    && validator.isFunction(value2)\n    && !validator.isPrefixed(value2)) {\n    return true;\n  }\n\n  return sameFunctionOrValue(validator, value1, value2);\n}\n\nfunction unitOrKeywordWithGlobal(propertyName) {\n  var byKeyword = keywordWithGlobal(propertyName);\n\n  return function(validator, value1, value2) {\n    return unit(validator, value1, value2) || byKeyword(validator, value1, value2);\n  };\n}\n\nfunction unitOrNumber(validator, value1, value2) {\n  if (!understandable(validator, value1, value2, 0, true)\n    && !(validator.isUnit(value2)\n    || validator.isNumber(value2))) {\n    return false;\n  } if (validator.isVariable(value1) && validator.isVariable(value2)) {\n    return true;\n  } if ((validator.isUnit(value1)\n    || validator.isNumber(value1))\n    && !(validator.isUnit(value2)\n    || validator.isNumber(value2))) {\n    return false;\n  } if (validator.isUnit(value2) || validator.isNumber(value2)) {\n    return true;\n  } if (validator.isUnit(value1) || validator.isNumber(value1)) {\n    return false;\n  } if (validator.isFunction(value1)\n    && !validator.isPrefixed(value1)\n    && validator.isFunction(value2)\n    && !validator.isPrefixed(value2)) {\n    return true;\n  }\n\n  return sameFunctionOrValue(validator, value1, value2);\n}\n\nfunction zIndex(validator, value1, value2) {\n  if (!understandable(validator, value1, value2, 0, true) && !validator.isZIndex(value2)) {\n    return false;\n  } if (validator.isVariable(value1) && validator.isVariable(value2)) {\n    return true;\n  }\n\n  return validator.isZIndex(value2);\n}\n\nmodule.exports = {\n  generic: {\n    color: color,\n    components: components,\n    image: image,\n    propertyName: propertyName,\n    time: time,\n    timingFunction: timingFunction,\n    unit: unit,\n    unitOrNumber: unitOrNumber\n  },\n  property: {\n    animationDirection: keywordWithGlobal('animation-direction'),\n    animationFillMode: keyword('animation-fill-mode'),\n    animationIterationCount: animationIterationCount,\n    animationName: animationName,\n    animationPlayState: keywordWithGlobal('animation-play-state'),\n    backgroundAttachment: keyword('background-attachment'),\n    backgroundClip: keywordWithGlobal('background-clip'),\n    backgroundOrigin: keyword('background-origin'),\n    backgroundPosition: backgroundPosition,\n    backgroundRepeat: keyword('background-repeat'),\n    backgroundSize: backgroundSize,\n    bottom: unitOrKeywordWithGlobal('bottom'),\n    borderCollapse: keyword('border-collapse'),\n    borderStyle: keywordWithGlobal('*-style'),\n    clear: keywordWithGlobal('clear'),\n    cursor: keywordWithGlobal('cursor'),\n    display: keywordWithGlobal('display'),\n    float: keywordWithGlobal('float'),\n    left: unitOrKeywordWithGlobal('left'),\n    fontFamily: fontFamily,\n    fontStretch: keywordWithGlobal('font-stretch'),\n    fontStyle: keywordWithGlobal('font-style'),\n    fontVariant: keywordWithGlobal('font-variant'),\n    fontWeight: keywordWithGlobal('font-weight'),\n    listStyleType: keywordWithGlobal('list-style-type'),\n    listStylePosition: keywordWithGlobal('list-style-position'),\n    outlineStyle: keywordWithGlobal('*-style'),\n    overflow: keywordWithGlobal('overflow'),\n    position: keywordWithGlobal('position'),\n    right: unitOrKeywordWithGlobal('right'),\n    textAlign: keywordWithGlobal('text-align'),\n    textDecoration: keywordWithGlobal('text-decoration'),\n    textOverflow: keywordWithGlobal('text-overflow'),\n    textShadow: textShadow,\n    top: unitOrKeywordWithGlobal('top'),\n    transform: sameFunctionOrValue,\n    verticalAlign: unitOrKeywordWithGlobal('vertical-align'),\n    visibility: keywordWithGlobal('visibility'),\n    whiteSpace: keywordWithGlobal('white-space'),\n    zIndex: zIndex\n  }\n};\n", "var wrapSingle = require('./wrap-for-optimizing').single;\n\nvar Token = require('../tokenizer/token');\n\nfunction deep(property) {\n  var cloned = shallow(property);\n  for (var i = property.components.length - 1; i >= 0; i--) {\n    var component = shallow(property.components[i]);\n    component.value = property.components[i].value.slice(0);\n    cloned.components.unshift(component);\n  }\n\n  cloned.dirty = true;\n  cloned.value = property.value.slice(0);\n\n  return cloned;\n}\n\nfunction shallow(property) {\n  var cloned = wrapSingle([\n    Token.PROPERTY,\n    [Token.PROPERTY_NAME, property.name]\n  ]);\n  cloned.important = property.important;\n  cloned.hack = property.hack;\n  cloned.unused = false;\n  return cloned;\n}\n\nmodule.exports = {\n  deep: deep,\n  shallow: shallow\n};\n", "var shallowClone = require('../clone').shallow;\n\nvar Token = require('../../tokenizer/token');\nvar Marker = require('../../tokenizer/marker');\n\nfunction isInheritOnly(values) {\n  for (var i = 0, l = values.length; i < l; i++) {\n    var value = values[i][1];\n\n    if (value != 'inherit' && value != Marker.COMMA && value != Marker.FORWARD_SLASH) { return false; }\n  }\n\n  return true;\n}\n\nfunction background(property, configuration, lastInMultiplex) {\n  var components = property.components;\n  var restored = [];\n  var needsOne, needsBoth;\n\n  function restoreValue(component) {\n    Array.prototype.unshift.apply(restored, component.value);\n  }\n\n  function isDefaultValue(component) {\n    var descriptor = configuration[component.name];\n\n    if (descriptor.doubleValues && descriptor.defaultValue.length == 1) {\n      return component.value[0][1] == descriptor.defaultValue[0]\n        && (component.value[1]\n          ? component.value[1][1] == descriptor.defaultValue[0]\n          : true);\n    } if (descriptor.doubleValues && descriptor.defaultValue.length != 1) {\n      return component.value[0][1] == descriptor.defaultValue[0]\n      && ((component.value[1] ? component.value[1][1] : component.value[0][1])\n        == descriptor.defaultValue[1]);\n    }\n    return component.value[0][1] == descriptor.defaultValue;\n  }\n\n  for (var i = components.length - 1; i >= 0; i--) {\n    var component = components[i];\n    var isDefault = isDefaultValue(component);\n\n    if (component.name == 'background-clip') {\n      var originComponent = components[i - 1];\n      var isOriginDefault = isDefaultValue(originComponent);\n\n      needsOne = component.value[0][1] == originComponent.value[0][1];\n\n      needsBoth = !needsOne && (\n        (isOriginDefault && !isDefault)\n        || (!isOriginDefault && !isDefault)\n        || (!isOriginDefault && isDefault && component.value[0][1] != originComponent.value[0][1]));\n\n      if (needsOne) {\n        restoreValue(originComponent);\n      } else if (needsBoth) {\n        restoreValue(component);\n        restoreValue(originComponent);\n      }\n\n      i--;\n    } else if (component.name == 'background-size') {\n      var positionComponent = components[i - 1];\n      var isPositionDefault = isDefaultValue(positionComponent);\n\n      needsOne = !isPositionDefault && isDefault;\n\n      needsBoth = !needsOne\n        && (isPositionDefault && !isDefault || !isPositionDefault && !isDefault);\n\n      if (needsOne) {\n        restoreValue(positionComponent);\n      } else if (needsBoth) {\n        restoreValue(component);\n        restored.unshift([Token.PROPERTY_VALUE, Marker.FORWARD_SLASH]);\n        restoreValue(positionComponent);\n      } else if (positionComponent.value.length == 1) {\n        restoreValue(positionComponent);\n      }\n\n      i--;\n    } else {\n      if (isDefault || configuration[component.name].multiplexLastOnly && !lastInMultiplex) { continue; }\n\n      restoreValue(component);\n    }\n  }\n\n  if (restored.length === 0 && property.value.length == 1 && property.value[0][1] == '0') { restored.push(property.value[0]); }\n\n  if (restored.length === 0) { restored.push([Token.PROPERTY_VALUE, configuration[property.name].defaultValue]); }\n\n  if (isInheritOnly(restored)) { return [restored[0]]; }\n\n  return restored;\n}\n\nfunction borderRadius(property) {\n  if (property.multiplex) {\n    var horizontal = shallowClone(property);\n    var vertical = shallowClone(property);\n\n    for (var i = 0; i < 4; i++) {\n      var component = property.components[i];\n\n      var horizontalComponent = shallowClone(property);\n      horizontalComponent.value = [component.value[0]];\n      horizontal.components.push(horizontalComponent);\n\n      var verticalComponent = shallowClone(property);\n      // FIXME: only shorthand compactor (see breakup#borderRadius) knows that border radius\n      // longhands have two values, whereas tokenizer does not care about populating 2nd value\n      // if it's missing, hence this fallback\n      verticalComponent.value = [component.value[1] || component.value[0]];\n      vertical.components.push(verticalComponent);\n    }\n\n    var horizontalValues = fourValues(horizontal);\n    var verticalValues = fourValues(vertical);\n\n    if (horizontalValues.length == verticalValues.length\n        && horizontalValues[0][1] == verticalValues[0][1]\n        && (horizontalValues.length > 1 ? horizontalValues[1][1] == verticalValues[1][1] : true)\n        && (horizontalValues.length > 2 ? horizontalValues[2][1] == verticalValues[2][1] : true)\n        && (horizontalValues.length > 3 ? horizontalValues[3][1] == verticalValues[3][1] : true)) {\n      return horizontalValues;\n    }\n    return horizontalValues.concat([[Token.PROPERTY_VALUE, Marker.FORWARD_SLASH]]).concat(verticalValues);\n  }\n  return fourValues(property);\n}\n\nfunction font(property, configuration) {\n  var components = property.components;\n  var restored = [];\n  var component;\n  var componentIndex = 0;\n  var fontFamilyIndex = 0;\n\n  if (property.value[0][1].indexOf(Marker.INTERNAL) === 0) {\n    property.value[0][1] = property.value[0][1].substring(Marker.INTERNAL.length);\n    return property.value;\n  }\n\n  // first four components are optional\n  while (componentIndex < 4) {\n    component = components[componentIndex];\n\n    if (component.value[0][1] != configuration[component.name].defaultValue) {\n      Array.prototype.push.apply(restored, component.value);\n    }\n\n    componentIndex++;\n  }\n\n  // then comes font-size\n  Array.prototype.push.apply(restored, components[componentIndex].value);\n  componentIndex++;\n\n  // then may come line-height\n  if (components[componentIndex].value[0][1] != configuration[components[componentIndex].name].defaultValue) {\n    Array.prototype.push.apply(restored, [[Token.PROPERTY_VALUE, Marker.FORWARD_SLASH]]);\n    Array.prototype.push.apply(restored, components[componentIndex].value);\n  }\n\n  componentIndex++;\n\n  // then comes font-family\n  while (components[componentIndex].value[fontFamilyIndex]) {\n    restored.push(components[componentIndex].value[fontFamilyIndex]);\n\n    if (components[componentIndex].value[fontFamilyIndex + 1]) {\n      restored.push([Token.PROPERTY_VALUE, Marker.COMMA]);\n    }\n\n    fontFamilyIndex++;\n  }\n\n  if (isInheritOnly(restored)) {\n    return [restored[0]];\n  }\n\n  return restored;\n}\n\nfunction fourValues(property) {\n  var components = property.components;\n  var value1 = components[0].value[0];\n  var value2 = components[1].value[0];\n  var value3 = components[2].value[0];\n  var value4 = components[3].value[0];\n\n  if (value1[1] == value2[1] && value1[1] == value3[1] && value1[1] == value4[1]) {\n    return [value1];\n  } if (value1[1] == value3[1] && value2[1] == value4[1]) {\n    return [value1, value2];\n  } if (value2[1] == value4[1]) {\n    return [value1, value2, value3];\n  }\n  return [value1, value2, value3, value4];\n}\n\nfunction multiplex(restoreWith) {\n  return function(property, configuration) {\n    if (!property.multiplex) { return restoreWith(property, configuration, true); }\n\n    var multiplexSize = 0;\n    var restored = [];\n    var componentMultiplexSoFar = {};\n    var i, l;\n\n    // At this point we don't know what's the multiplex size, e.g. how many background layers are there\n    for (i = 0, l = property.components[0].value.length; i < l; i++) {\n      if (property.components[0].value[i][1] == Marker.COMMA) { multiplexSize++; }\n    }\n\n    for (i = 0; i <= multiplexSize; i++) {\n      var _property = shallowClone(property);\n\n      // We split multiplex into parts and restore them one by one\n      for (var j = 0, m = property.components.length; j < m; j++) {\n        var componentToClone = property.components[j];\n        var _component = shallowClone(componentToClone);\n        _property.components.push(_component);\n\n        // The trick is some properties has more than one value, so we iterate over values looking for\n        // a multiplex separator - a comma\n        for (var k = componentMultiplexSoFar[_component.name] || 0, n = componentToClone.value.length; k < n; k++) {\n          if (componentToClone.value[k][1] == Marker.COMMA) {\n            componentMultiplexSoFar[_component.name] = k + 1;\n            break;\n          }\n\n          _component.value.push(componentToClone.value[k]);\n        }\n      }\n\n      // No we can restore shorthand value\n      var lastInMultiplex = i == multiplexSize;\n      var _restored = restoreWith(_property, configuration, lastInMultiplex);\n      Array.prototype.push.apply(restored, _restored);\n\n      if (i < multiplexSize) { restored.push([Token.PROPERTY_VALUE, Marker.COMMA]); }\n    }\n\n    return restored;\n  };\n}\n\nfunction withoutDefaults(property, configuration) {\n  var components = property.components;\n  var restored = [];\n\n  for (var i = components.length - 1; i >= 0; i--) {\n    var component = components[i];\n    var descriptor = configuration[component.name];\n\n    if (component.value[0][1] != descriptor.defaultValue || ('keepUnlessDefault' in descriptor) && !isDefault(components, configuration, descriptor.keepUnlessDefault)) {\n      restored.unshift(component.value[0]);\n    }\n  }\n\n  if (restored.length === 0) { restored.push([Token.PROPERTY_VALUE, configuration[property.name].defaultValue]); }\n\n  if (isInheritOnly(restored)) { return [restored[0]]; }\n\n  return restored;\n}\n\nfunction isDefault(components, configuration, propertyName) {\n  var component;\n  var i, l;\n\n  for (i = 0, l = components.length; i < l; i++) {\n    component = components[i];\n\n    if (component.name == propertyName && component.value[0][1] == configuration[propertyName].defaultValue) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = {\n  background: background,\n  borderRadius: borderRadius,\n  font: font,\n  fourValues: fourValues,\n  multiplex: multiplex,\n  withoutDefaults: withoutDefaults\n};\n", "var override = require('../utils/override');\n\nvar INTEGER_PATTERN = /^\\d+$/;\n\nvar ALL_UNITS = ['*', 'all'];\nvar DEFAULT_PRECISION = 'off'; // all precision changes are disabled\nvar DIRECTIVES_SEPARATOR = ','; // e.g. *=5,px=3\nvar DIRECTIVE_VALUE_SEPARATOR = '='; // e.g. *=5\n\nfunction roundingPrecisionFrom(source) {\n  return override(defaults(DEFAULT_PRECISION), buildPrecisionFrom(source));\n}\n\nfunction defaults(value) {\n  return {\n    ch: value,\n    cm: value,\n    em: value,\n    ex: value,\n    in: value,\n    mm: value,\n    pc: value,\n    pt: value,\n    px: value,\n    q: value,\n    rem: value,\n    vh: value,\n    vmax: value,\n    vmin: value,\n    vw: value,\n    '%': value\n  };\n}\n\nfunction buildPrecisionFrom(source) {\n  if (source === null || source === undefined) {\n    return {};\n  }\n\n  if (typeof source == 'boolean') {\n    return {};\n  }\n\n  if (typeof source == 'number' && source == -1) {\n    return defaults(DEFAULT_PRECISION);\n  }\n\n  if (typeof source == 'number') {\n    return defaults(source);\n  }\n\n  if (typeof source == 'string' && INTEGER_PATTERN.test(source)) {\n    return defaults(parseInt(source));\n  }\n\n  if (typeof source == 'string' && source == DEFAULT_PRECISION) {\n    return defaults(DEFAULT_PRECISION);\n  }\n\n  if (typeof source == 'object') {\n    return source;\n  }\n\n  return source\n    .split(DIRECTIVES_SEPARATOR)\n    .reduce(function(accumulator, directive) {\n      var directiveParts = directive.split(DIRECTIVE_VALUE_SEPARATOR);\n      var name = directiveParts[0];\n      var value = parseInt(directiveParts[1]);\n\n      if (Number.isNaN(value) || value == -1) {\n        value = DEFAULT_PRECISION;\n      }\n\n      if (ALL_UNITS.indexOf(name) > -1) {\n        accumulator = override(accumulator, defaults(value));\n      } else {\n        accumulator[name] = value;\n      }\n\n      return accumulator;\n    }, {});\n}\n\nmodule.exports = {\n  DEFAULT: DEFAULT_PRECISION,\n  roundingPrecisionFrom: roundingPrecisionFrom\n};\n", "var roundingPrecisionFrom = require('./rounding-precision').roundingPrecisionFrom;\n\nvar override = require('../utils/override');\n\nvar OptimizationLevel = {\n  Zero: '0',\n  One: '1',\n  Two: '2'\n};\n\nvar DEFAULTS = {};\n\nDEFAULTS[OptimizationLevel.Zero] = {};\nDEFAULTS[OptimizationLevel.One] = {\n  cleanupCharsets: true,\n  normalizeUrls: true,\n  optimizeBackground: true,\n  optimizeBorderRadius: true,\n  optimizeFilter: true,\n  optimizeFontWeight: true,\n  optimizeOutline: true,\n  removeEmpty: true,\n  removeNegativePaddings: true,\n  removeQuotes: true,\n  removeWhitespace: true,\n  replaceMultipleZeros: true,\n  replaceTimeUnits: true,\n  replaceZeroUnits: true,\n  roundingPrecision: roundingPrecisionFrom(undefined),\n  selectorsSortingMethod: 'standard',\n  specialComments: 'all',\n  tidyAtRules: true,\n  tidyBlockScopes: true,\n  tidySelectors: true,\n  variableValueOptimizers: []\n};\nDEFAULTS[OptimizationLevel.Two] = {\n  mergeAdjacentRules: true,\n  mergeIntoShorthands: true,\n  mergeMedia: true,\n  mergeNonAdjacentRules: true,\n  mergeSemantically: false,\n  overrideProperties: true,\n  removeEmpty: true,\n  reduceNonAdjacentRules: true,\n  removeDuplicateFontRules: true,\n  removeDuplicateMediaBlocks: true,\n  removeDuplicateRules: true,\n  removeUnusedAtRules: false,\n  restructureRules: false,\n  skipProperties: []\n};\n\nvar ALL_KEYWORD_1 = '*';\nvar ALL_KEYWORD_2 = 'all';\nvar FALSE_KEYWORD_1 = 'false';\nvar FALSE_KEYWORD_2 = 'off';\nvar TRUE_KEYWORD_1 = 'true';\nvar TRUE_KEYWORD_2 = 'on';\n\nvar LIST_VALUE_SEPARATOR = ',';\nvar OPTION_SEPARATOR = ';';\nvar OPTION_VALUE_SEPARATOR = ':';\n\nfunction optimizationLevelFrom(source) {\n  var level = override(DEFAULTS, {});\n  var Zero = OptimizationLevel.Zero;\n  var One = OptimizationLevel.One;\n  var Two = OptimizationLevel.Two;\n\n  if (undefined === source) {\n    delete level[Two];\n    return level;\n  }\n\n  if (typeof source == 'string') {\n    source = parseInt(source);\n  }\n\n  if (typeof source == 'number' && source === parseInt(Two)) {\n    return level;\n  }\n\n  if (typeof source == 'number' && source === parseInt(One)) {\n    delete level[Two];\n    return level;\n  }\n\n  if (typeof source == 'number' && source === parseInt(Zero)) {\n    delete level[Two];\n    delete level[One];\n    return level;\n  }\n\n  if (typeof source == 'object') {\n    source = covertValuesToHashes(source);\n  }\n\n  if (One in source && 'roundingPrecision' in source[One]) {\n    source[One].roundingPrecision = roundingPrecisionFrom(source[One].roundingPrecision);\n  }\n\n  if (Two in source && 'skipProperties' in source[Two] && typeof (source[Two].skipProperties) == 'string') {\n    source[Two].skipProperties = source[Two].skipProperties.split(LIST_VALUE_SEPARATOR);\n  }\n\n  if (Zero in source || One in source || Two in source) {\n    level[Zero] = override(level[Zero], source[Zero]);\n  }\n\n  if (One in source && ALL_KEYWORD_1 in source[One]) {\n    level[One] = override(level[One], defaults(One, normalizeValue(source[One][ALL_KEYWORD_1])));\n    delete source[One][ALL_KEYWORD_1];\n  }\n\n  if (One in source && ALL_KEYWORD_2 in source[One]) {\n    level[One] = override(level[One], defaults(One, normalizeValue(source[One][ALL_KEYWORD_2])));\n    delete source[One][ALL_KEYWORD_2];\n  }\n\n  if (One in source || Two in source) {\n    level[One] = override(level[One], source[One]);\n  } else {\n    delete level[One];\n  }\n\n  if (Two in source && ALL_KEYWORD_1 in source[Two]) {\n    level[Two] = override(level[Two], defaults(Two, normalizeValue(source[Two][ALL_KEYWORD_1])));\n    delete source[Two][ALL_KEYWORD_1];\n  }\n\n  if (Two in source && ALL_KEYWORD_2 in source[Two]) {\n    level[Two] = override(level[Two], defaults(Two, normalizeValue(source[Two][ALL_KEYWORD_2])));\n    delete source[Two][ALL_KEYWORD_2];\n  }\n\n  if (Two in source) {\n    level[Two] = override(level[Two], source[Two]);\n  } else {\n    delete level[Two];\n  }\n\n  return level;\n}\n\nfunction defaults(level, value) {\n  var options = override(DEFAULTS[level], {});\n  var key;\n\n  for (key in options) {\n    if (typeof options[key] == 'boolean') {\n      options[key] = value;\n    }\n  }\n\n  return options;\n}\n\nfunction normalizeValue(value) {\n  switch (value) {\n  case FALSE_KEYWORD_1:\n  case FALSE_KEYWORD_2:\n    return false;\n  case TRUE_KEYWORD_1:\n  case TRUE_KEYWORD_2:\n    return true;\n  default:\n    return value;\n  }\n}\n\nfunction covertValuesToHashes(source) {\n  var clonedSource = override(source, {});\n  var level;\n  var i;\n\n  for (i = 0; i <= 2; i++) {\n    level = '' + i;\n\n    if (level in clonedSource && (clonedSource[level] === undefined || clonedSource[level] === false)) {\n      delete clonedSource[level];\n    }\n\n    if (level in clonedSource && clonedSource[level] === true) {\n      clonedSource[level] = {};\n    }\n\n    if (level in clonedSource && typeof clonedSource[level] == 'string') {\n      clonedSource[level] = covertToHash(clonedSource[level], level);\n    }\n  }\n\n  return clonedSource;\n}\n\nfunction covertToHash(asString, level) {\n  return asString\n    .split(OPTION_SEPARATOR)\n    .reduce(function(accumulator, directive) {\n      var parts = directive.split(OPTION_VALUE_SEPARATOR);\n      var name = parts[0];\n      var value = parts[1];\n      var normalizedValue = normalizeValue(value);\n\n      if (ALL_KEYWORD_1 == name || ALL_KEYWORD_2 == name) {\n        accumulator = override(accumulator, defaults(level, normalizedValue));\n      } else {\n        accumulator[name] = normalizedValue;\n      }\n\n      return accumulator;\n    }, {});\n}\n\nmodule.exports = {\n  OptimizationLevel: OptimizationLevel,\n  optimizationLevelFrom: optimizationLevelFrom\n};\n", "var OptimizationLevel = require('../../../options/optimization-level').OptimizationLevel;\n\nvar plugin = {\n  level1: {\n    property: function background(_rule, property, options) {\n      var values = property.value;\n\n      if (!options.level[OptimizationLevel.One].optimizeBackground) {\n        return;\n      }\n\n      if (values.length == 1 && values[0][1] == 'none') {\n        values[0][1] = '0 0';\n      }\n\n      if (values.length == 1 && values[0][1] == 'transparent') {\n        values[0][1] = '0 0';\n      }\n    }\n  }\n};\n\nmodule.exports = plugin;\n", "var plugin = {\n  level1: {\n    property: function boxShadow(_rule, property) {\n      var values = property.value;\n\n      // remove multiple zeros\n      if (values.length == 4 && values[0][1] === '0' && values[1][1] === '0' && values[2][1] === '0' && values[3][1] === '0') {\n        property.value.splice(2);\n        property.dirty = true;\n      }\n    }\n  }\n};\n\nmodule.exports = plugin;\n", "var OptimizationLevel = require('../../../options/optimization-level').OptimizationLevel;\n\nvar plugin = {\n  level1: {\n    property: function borderRadius(_rule, property, options) {\n      var values = property.value;\n\n      if (!options.level[OptimizationLevel.One].optimizeBorderRadius) {\n        return;\n      }\n\n      if (values.length == 3 && values[1][1] == '/' && values[0][1] == values[2][1]) {\n        property.value.splice(1);\n        property.dirty = true;\n      } else if (values.length == 5 && values[2][1] == '/' && values[0][1] == values[3][1] && values[1][1] == values[4][1]) {\n        property.value.splice(2);\n        property.dirty = true;\n      } else if (values.length == 7 && values[3][1] == '/' && values[0][1] == values[4][1] && values[1][1] == values[5][1] && values[2][1] == values[6][1]) {\n        property.value.splice(3);\n        property.dirty = true;\n      } else if (values.length == 9 && values[4][1] == '/' && values[0][1] == values[5][1] && values[1][1] == values[6][1] && values[2][1] == values[7][1] && values[3][1] == values[8][1]) {\n        property.value.splice(4);\n        property.dirty = true;\n      }\n    }\n  }\n};\n\nmodule.exports = plugin;\n", "var OptimizationLevel = require('../../../options/optimization-level').OptimizationLevel;\n\nvar ALPHA_OR_CHROMA_FILTER_PATTERN = /progid:DXImageTransform\\.Microsoft\\.(Alpha|Chroma)(\\W)/;\nvar NO_SPACE_AFTER_COMMA_PATTERN = /,(\\S)/g;\nvar WHITESPACE_AROUND_EQUALS_PATTERN = / ?= ?/g;\n\nvar plugin = {\n  level1: {\n    property: function filter(_rule, property, options) {\n      if (!options.compatibility.properties.ieFilters) {\n        return;\n      }\n\n      if (!options.level[OptimizationLevel.One].optimizeFilter) {\n        return;\n      }\n\n      if (property.value.length == 1) {\n        property.value[0][1] = property.value[0][1].replace(\n          ALPHA_OR_CHROMA_FILTER_PATTERN,\n          function(match, filter, suffix) {\n            return filter.toLowerCase() + suffix;\n          }\n        );\n      }\n\n      property.value[0][1] = property.value[0][1]\n        .replace(NO_SPACE_AFTER_COMMA_PATTERN, ', $1')\n        .replace(WHITESPACE_AROUND_EQUALS_PATTERN, '=');\n    }\n  }\n};\n\nmodule.exports = plugin;\n", "var OptimizationLevel = require('../../../options/optimization-level').OptimizationLevel;\n\nvar plugin = {\n  level1: {\n    property: function fontWeight(_rule, property, options) {\n      var value = property.value[0][1];\n\n      if (!options.level[OptimizationLevel.One].optimizeFontWeight) {\n        return;\n      }\n\n      if (value == 'normal') {\n        value = '400';\n      } else if (value == 'bold') {\n        value = '700';\n      }\n\n      property.value[0][1] = value;\n    }\n  }\n};\n\nmodule.exports = plugin;\n", "var OptimizationLevel = require('../../../options/optimization-level').OptimizationLevel;\n\nvar plugin = {\n  level1: {\n    property: function margin(_rule, property, options) {\n      var values = property.value;\n\n      if (!options.level[OptimizationLevel.One].replaceMultipleZeros) {\n        return;\n      }\n\n      // remove multiple zeros\n      if (values.length == 4 && values[0][1] === '0' && values[1][1] === '0' && values[2][1] === '0' && values[3][1] === '0') {\n        property.value.splice(1);\n        property.dirty = true;\n      }\n    }\n  }\n};\n\nmodule.exports = plugin;\n", "var OptimizationLevel = require('../../../options/optimization-level').OptimizationLevel;\n\nvar plugin = {\n  level1: {\n    property: function outline(_rule, property, options) {\n      var values = property.value;\n\n      if (!options.level[OptimizationLevel.One].optimizeOutline) {\n        return;\n      }\n\n      if (values.length == 1 && values[0][1] == 'none') {\n        values[0][1] = '0';\n      }\n    }\n  }\n};\n\nmodule.exports = plugin;\n", "var OptimizationLevel = require('../../../options/optimization-level').OptimizationLevel;\n\nfunction isNegative(value) {\n  return value && value[1][0] == '-' && parseFloat(value[1]) < 0;\n}\n\nvar plugin = {\n  level1: {\n    property: function padding(_rule, property, options) {\n      var values = property.value;\n\n      // remove multiple zeros\n      if (values.length == 4 && values[0][1] === '0' && values[1][1] === '0' && values[2][1] === '0' && values[3][1] === '0') {\n        property.value.splice(1);\n        property.dirty = true;\n      }\n\n      // remove negative paddings\n      if (options.level[OptimizationLevel.One].removeNegativePaddings\n        && (\n          isNegative(property.value[0])\n          || isNegative(property.value[1])\n          || isNegative(property.value[2])\n          || isNegative(property.value[3])\n        )) {\n        property.unused = true;\n      }\n    }\n  }\n};\n\nmodule.exports = plugin;\n", "module.exports = {\n  background: require('./property-optimizers/background').level1.property,\n  boxShadow: require('./property-optimizers/box-shadow').level1.property,\n  borderRadius: require('./property-optimizers/border-radius').level1.property,\n  filter: require('./property-optimizers/filter').level1.property,\n  fontWeight: require('./property-optimizers/font-weight').level1.property,\n  margin: require('./property-optimizers/margin').level1.property,\n  outline: require('./property-optimizers/outline').level1.property,\n  padding: require('./property-optimizers/padding').level1.property\n};\n", "var COLORS = {\n  aliceblue: '#f0f8ff',\n  antiquewhite: '#faebd7',\n  aqua: '#0ff',\n  aquamarine: '#7fffd4',\n  azure: '#f0ffff',\n  beige: '#f5f5dc',\n  bisque: '#ffe4c4',\n  black: '#000',\n  blanchedalmond: '#ffebcd',\n  blue: '#00f',\n  blueviolet: '#8a2be2',\n  brown: '#a52a2a',\n  burlywood: '#deb887',\n  cadetblue: '#5f9ea0',\n  chartreuse: '#7fff00',\n  chocolate: '#d2691e',\n  coral: '#ff7f50',\n  cornflowerblue: '#6495ed',\n  cornsilk: '#fff8dc',\n  crimson: '#dc143c',\n  cyan: '#0ff',\n  darkblue: '#00008b',\n  darkcyan: '#008b8b',\n  darkgoldenrod: '#b8860b',\n  darkgray: '#a9a9a9',\n  darkgreen: '#006400',\n  darkgrey: '#a9a9a9',\n  darkkhaki: '#bdb76b',\n  darkmagenta: '#8b008b',\n  darkolivegreen: '#556b2f',\n  darkorange: '#ff8c00',\n  darkorchid: '#9932cc',\n  darkred: '#8b0000',\n  darksalmon: '#e9967a',\n  darkseagreen: '#8fbc8f',\n  darkslateblue: '#483d8b',\n  darkslategray: '#2f4f4f',\n  darkslategrey: '#2f4f4f',\n  darkturquoise: '#00ced1',\n  darkviolet: '#9400d3',\n  deeppink: '#ff1493',\n  deepskyblue: '#00bfff',\n  dimgray: '#696969',\n  dimgrey: '#696969',\n  dodgerblue: '#1e90ff',\n  firebrick: '#b22222',\n  floralwhite: '#fffaf0',\n  forestgreen: '#228b22',\n  fuchsia: '#f0f',\n  gainsboro: '#dcdcdc',\n  ghostwhite: '#f8f8ff',\n  gold: '#ffd700',\n  goldenrod: '#daa520',\n  gray: '#808080',\n  green: '#008000',\n  greenyellow: '#adff2f',\n  grey: '#808080',\n  honeydew: '#f0fff0',\n  hotpink: '#ff69b4',\n  indianred: '#cd5c5c',\n  indigo: '#4b0082',\n  ivory: '#fffff0',\n  khaki: '#f0e68c',\n  lavender: '#e6e6fa',\n  lavenderblush: '#fff0f5',\n  lawngreen: '#7cfc00',\n  lemonchiffon: '#fffacd',\n  lightblue: '#add8e6',\n  lightcoral: '#f08080',\n  lightcyan: '#e0ffff',\n  lightgoldenrodyellow: '#fafad2',\n  lightgray: '#d3d3d3',\n  lightgreen: '#90ee90',\n  lightgrey: '#d3d3d3',\n  lightpink: '#ffb6c1',\n  lightsalmon: '#ffa07a',\n  lightseagreen: '#20b2aa',\n  lightskyblue: '#87cefa',\n  lightslategray: '#778899',\n  lightslategrey: '#778899',\n  lightsteelblue: '#b0c4de',\n  lightyellow: '#ffffe0',\n  lime: '#0f0',\n  limegreen: '#32cd32',\n  linen: '#faf0e6',\n  magenta: '#ff00ff',\n  maroon: '#800000',\n  mediumaquamarine: '#66cdaa',\n  mediumblue: '#0000cd',\n  mediumorchid: '#ba55d3',\n  mediumpurple: '#9370db',\n  mediumseagreen: '#3cb371',\n  mediumslateblue: '#7b68ee',\n  mediumspringgreen: '#00fa9a',\n  mediumturquoise: '#48d1cc',\n  mediumvioletred: '#c71585',\n  midnightblue: '#191970',\n  mintcream: '#f5fffa',\n  mistyrose: '#ffe4e1',\n  moccasin: '#ffe4b5',\n  navajowhite: '#ffdead',\n  navy: '#000080',\n  oldlace: '#fdf5e6',\n  olive: '#808000',\n  olivedrab: '#6b8e23',\n  orange: '#ffa500',\n  orangered: '#ff4500',\n  orchid: '#da70d6',\n  palegoldenrod: '#eee8aa',\n  palegreen: '#98fb98',\n  paleturquoise: '#afeeee',\n  palevioletred: '#db7093',\n  papayawhip: '#ffefd5',\n  peachpuff: '#ffdab9',\n  peru: '#cd853f',\n  pink: '#ffc0cb',\n  plum: '#dda0dd',\n  powderblue: '#b0e0e6',\n  purple: '#800080',\n  rebeccapurple: '#663399',\n  red: '#f00',\n  rosybrown: '#bc8f8f',\n  royalblue: '#4169e1',\n  saddlebrown: '#8b4513',\n  salmon: '#fa8072',\n  sandybrown: '#f4a460',\n  seagreen: '#2e8b57',\n  seashell: '#fff5ee',\n  sienna: '#a0522d',\n  silver: '#c0c0c0',\n  skyblue: '#87ceeb',\n  slateblue: '#6a5acd',\n  slategray: '#708090',\n  slategrey: '#708090',\n  snow: '#fffafa',\n  springgreen: '#00ff7f',\n  steelblue: '#4682b4',\n  tan: '#d2b48c',\n  teal: '#008080',\n  thistle: '#d8bfd8',\n  tomato: '#ff6347',\n  turquoise: '#40e0d0',\n  violet: '#ee82ee',\n  wheat: '#f5deb3',\n  white: '#fff',\n  whitesmoke: '#f5f5f5',\n  yellow: '#ff0',\n  yellowgreen: '#9acd32'\n};\n\nvar toHex = {};\nvar toName = {};\n\nfor (var name in COLORS) {\n  var hex = COLORS[name];\n\n  if (name.length < hex.length) {\n    toName[hex] = name;\n  } else {\n    toHex[name] = hex;\n  }\n}\n\nvar toHexPattern = new RegExp('(^| |,|\\\\))(' + Object.keys(toHex).join('|') + ')( |,|\\\\)|$)', 'ig');\nvar toNamePattern = new RegExp('(' + Object.keys(toName).join('|') + ')([^a-f0-9]|$)', 'ig');\n\nfunction hexConverter(match, prefix, colorValue, suffix) {\n  return prefix + toHex[colorValue.toLowerCase()] + suffix;\n}\n\nfunction nameConverter(match, colorValue, suffix) {\n  return toName[colorValue.toLowerCase()] + suffix;\n}\n\nfunction shortenHex(value) {\n  var hasHex = value.indexOf('#') > -1;\n  var shortened = value.replace(toHexPattern, hexConverter);\n\n  if (shortened != value) {\n    shortened = shortened.replace(toHexPattern, hexConverter);\n  }\n\n  return hasHex\n    ? shortened.replace(toNamePattern, nameConverter)\n    : shortened;\n}\n\nmodule.exports = shortenHex;\n", "// HSL to RGB converter. Both methods adapted from:\n// http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\n\nfunction hslToRgb(h, s, l) {\n  var r, g, b;\n\n  // normalize hue orientation b/w 0 and 360 degrees\n  h %= 360;\n  if (h < 0) { h += 360; }\n  h = ~~h / 360;\n\n  if (s < 0) { s = 0; } else if (s > 100) { s = 100; }\n  s = ~~s / 100;\n\n  if (l < 0) { l = 0; } else if (l > 100) { l = 100; }\n  l = ~~l / 100;\n\n  if (s === 0) {\n    r = g = b = l; // achromatic\n  } else {\n    var q = l < 0.5\n      ? l * (1 + s)\n      : l + s - l * s;\n    var p = 2 * l - q;\n    r = hueToRgb(p, q, h + 1 / 3);\n    g = hueToRgb(p, q, h);\n    b = hueToRgb(p, q, h - 1 / 3);\n  }\n\n  return [~~(r * 255), ~~(g * 255), ~~(b * 255)];\n}\n\nfunction hueToRgb(p, q, t) {\n  if (t < 0) { t += 1; }\n  if (t > 1) { t -= 1; }\n  if (t < 1 / 6) { return p + (q - p) * 6 * t; }\n  if (t < 1 / 2) { return q; }\n  if (t < 2 / 3) { return p + (q - p) * (2 / 3 - t) * 6; }\n  return p;\n}\n\nfunction shortenHsl(hue, saturation, lightness) {\n  var asRgb = hslToRgb(hue, saturation, lightness);\n  var redAsHex = asRgb[0].toString(16);\n  var greenAsHex = asRgb[1].toString(16);\n  var blueAsHex = asRgb[2].toString(16);\n\n  return '#'\n    + ((redAsHex.length == 1 ? '0' : '') + redAsHex)\n    + ((greenAsHex.length == 1 ? '0' : '') + greenAsHex)\n    + ((blueAsHex.length == 1 ? '0' : '') + blueAsHex);\n}\n\nmodule.exports = shortenHsl;\n", "function shortenRgb(red, green, blue) {\n  var normalizedRed = Math.max(0, Math.min(parseInt(red), 255));\n  var normalizedGreen = Math.max(0, Math.min(parseInt(green), 255));\n  var normalizedBlue = Math.max(0, Math.min(parseInt(blue), 255));\n\n  // Credit: Asen  http://jsbin.com/UPUmaGOc/2/edit?js,console\n  return '#' + ('00000' + (normalizedRed << 16 | normalizedGreen << 8 | normalizedBlue).toString(16)).slice(-6);\n}\n\nmodule.exports = shortenRgb;\n", "var Marker = require('../tokenizer/marker');\n\nfunction is(value, separator, isSeparatorRegex) {\n  return isSeparatorRegex\n    ? separator.test(value)\n    : value === separator;\n}\n\nfunction split(value, separator) {\n  var openLevel = Marker.OPEN_ROUND_BRACKET;\n  var closeLevel = Marker.CLOSE_ROUND_BRACKET;\n  var level = 0;\n  var cursor = 0;\n  var lastStart = 0;\n  var lastValue;\n  var lastCharacter;\n  var len = value.length;\n  var parts = [];\n  var isSeparatorRegex = typeof (separator) == 'object' && 'exec' in separator;\n\n  if (!isSeparatorRegex && value.indexOf(separator) == -1) {\n    return [value];\n  }\n\n  if (value.indexOf(openLevel) == -1) {\n    return value.split(separator);\n  }\n\n  while (cursor < len) {\n    if (value[cursor] == openLevel) {\n      level++;\n    } else if (value[cursor] == closeLevel) {\n      level--;\n    }\n\n    if (level === 0 && cursor > 0 && cursor + 1 < len && is(value[cursor], separator, isSeparatorRegex)) {\n      parts.push(value.substring(lastStart, cursor));\n\n      if (isSeparatorRegex && separator.exec(value[cursor]).length > 1) {\n        parts.push(value[cursor]);\n      }\n\n      lastStart = cursor + 1;\n    }\n\n    cursor++;\n  }\n\n  if (lastStart < cursor + 1) {\n    lastValue = value.substring(lastStart);\n    lastCharacter = lastValue[lastValue.length - 1];\n    if (is(lastCharacter, separator, isSeparatorRegex)) {\n      lastValue = lastValue.substring(0, lastValue.length - 1);\n    }\n\n    parts.push(lastValue);\n  }\n\n  return parts;\n}\n\nmodule.exports = split;\n", "var shortenHex = require('./color/shorten-hex');\nvar shortenHsl = require('./color/shorten-hsl');\nvar shortenRgb = require('./color/shorten-rgb');\n\nvar split = require('../../../utils/split');\n\nvar ANY_COLOR_FUNCTION_PATTERN = /(rgb|rgba|hsl|hsla)\\(([^()]+)\\)/gi;\nvar COLOR_PREFIX_PATTERN = /#|rgb|hsl/gi;\nvar HEX_LONG_PATTERN = /(^|[^='\"])#([0-9a-f]{6})/gi;\nvar HEX_SHORT_PATTERN = /(^|[^='\"])#([0-9a-f]{3})/gi;\nvar HEX_VALUE_PATTERN = /[0-9a-f]/i;\nvar HSL_PATTERN = /hsl\\((-?\\d+),(-?\\d+)%?,(-?\\d+)%?\\)/gi;\nvar RGBA_HSLA_PATTERN = /(rgb|hsl)a?\\((-?\\d+),(-?\\d+%?),(-?\\d+%?),(0*[1-9]+[0-9]*(\\.?\\d*)?)\\)/gi;\nvar RGB_PATTERN = /rgb\\((-?\\d+),(-?\\d+),(-?\\d+)\\)/gi;\nvar TRANSPARENT_FUNCTION_PATTERN = /(?:rgba|hsla)\\(0,0%?,0%?,0\\)/g;\n\nvar plugin = {\n  level1: {\n    value: function color(name, value, options) {\n      if (!options.compatibility.properties.colors) {\n        return value;\n      }\n\n      if (!value.match(COLOR_PREFIX_PATTERN)) {\n        return shortenHex(value);\n      }\n\n      value = value\n        .replace(RGBA_HSLA_PATTERN, function(match, colorFn, p1, p2, p3, alpha) {\n          return (parseInt(alpha) >= 1 ? colorFn + '(' + [p1, p2, p3].join(',') + ')' : match);\n        })\n        .replace(RGB_PATTERN, function(match, red, green, blue) {\n          return shortenRgb(red, green, blue);\n        })\n        .replace(HSL_PATTERN, function(match, hue, saturation, lightness) {\n          return shortenHsl(hue, saturation, lightness);\n        })\n        .replace(HEX_LONG_PATTERN, function(match, prefix, color, at, inputValue) {\n          var suffix = inputValue[at + match.length];\n\n          if (suffix && HEX_VALUE_PATTERN.test(suffix)) {\n            return match;\n          } if (color[0] == color[1] && color[2] == color[3] && color[4] == color[5]) {\n            return (prefix + '#' + color[0] + color[2] + color[4]).toLowerCase();\n          }\n          return (prefix + '#' + color).toLowerCase();\n        })\n        .replace(HEX_SHORT_PATTERN, function(match, prefix, color) {\n          return prefix + '#' + color.toLowerCase();\n        })\n        .replace(ANY_COLOR_FUNCTION_PATTERN, function(match, colorFunction, colorDef) {\n          var tokens = colorDef.split(',');\n          var colorFnLowercase = colorFunction && colorFunction.toLowerCase();\n          var applies = (colorFnLowercase == 'hsl' && tokens.length == 3)\n            || (colorFnLowercase == 'hsla' && tokens.length == 4)\n            || (colorFnLowercase == 'rgb' && tokens.length === 3 && colorDef.indexOf('%') > 0)\n            || (colorFnLowercase == 'rgba' && tokens.length == 4 && tokens[0].indexOf('%') > 0);\n\n          if (!applies) {\n            return match;\n          }\n\n          if (tokens[1].indexOf('%') == -1) {\n            tokens[1] += '%';\n          }\n\n          if (tokens[2].indexOf('%') == -1) {\n            tokens[2] += '%';\n          }\n\n          return colorFunction + '(' + tokens.join(',') + ')';\n        });\n\n      if (options.compatibility.colors.opacity && name.indexOf('background') == -1) {\n        value = value.replace(TRANSPARENT_FUNCTION_PATTERN, function(match) {\n          if (split(value, ',').pop().indexOf('gradient(') > -1) {\n            return match;\n          }\n\n          return 'transparent';\n        });\n      }\n\n      return shortenHex(value);\n    }\n  }\n};\n\nmodule.exports = plugin;\n", "var ZERO_DEG_PATTERN = /\\(0deg\\)/g;\n\nvar plugin = {\n  level1: {\n    value: function degrees(_name, value, options) {\n      if (!options.compatibility.properties.zeroUnits) {\n        return value;\n      }\n\n      if (value.indexOf('0deg') == -1) {\n        return value;\n      }\n\n      return value.replace(ZERO_DEG_PATTERN, '(0)');\n    }\n  }\n};\n\nmodule.exports = plugin;\n", "var URL_PREFIX_PATTERN = /^url\\(/i;\n\nfunction startsAsUrl(value) {\n  return URL_PREFIX_PATTERN.test(value);\n}\n\nmodule.exports = startsAsUrl;\n", "var split = require('../../../utils/split');\nvar startsAsUrl = require('./starts-as-url');\n\nvar OptimizationLevel = require('../../../options/optimization-level').OptimizationLevel;\n\nvar EXPRESSION_PATTERN = /^expression\\(.*\\)$/;\nvar ANY_FUNCTION_PATTERN = /^(-(?:moz|ms|o|webkit)-[a-z-]+|[a-z-]+)\\((.+)\\)$/;\nvar TOKEN_SEPARATOR_PATTERN = /([\\s,/])/;\n\nvar DOT_ZERO_PATTERN = /(^|\\D)\\.0+(\\D|$)/g;\nvar FRACTION_PATTERN = /\\.([1-9]*)0+(\\D|$)/g;\nvar LEADING_ZERO_FRACTION_PATTERN = /(^|\\D)0\\.(\\d)/g;\nvar MINUS_ZERO_FRACTION_PATTERN = /([^\\w\\d-]|^)-0([^.]|$)/g;\nvar ZERO_PREFIXED_UNIT_PATTERN = /(^|\\s)0+([1-9])/g;\n\nfunction optimizeRecursively(value) {\n  var functionTokens;\n  var tokens;\n\n  if (startsAsUrl(value)) {\n    return value;\n  }\n\n  if (EXPRESSION_PATTERN.test(value)) {\n    return value;\n  }\n\n  functionTokens = ANY_FUNCTION_PATTERN.exec(value);\n\n  if (!functionTokens) {\n    return optimizeFractions(value);\n  }\n\n  tokens = split(functionTokens[2], TOKEN_SEPARATOR_PATTERN)\n    .map(function(token) { return optimizeRecursively(token); });\n\n  return functionTokens[1] + '(' + tokens.join('') + ')';\n}\n\nfunction optimizeFractions(value) {\n  if (value.indexOf('0') == -1) {\n    return value;\n  }\n\n  if (value.indexOf('-') > -1) {\n    value = value\n      .replace(MINUS_ZERO_FRACTION_PATTERN, '$10$2')\n      .replace(MINUS_ZERO_FRACTION_PATTERN, '$10$2');\n  }\n\n  return value\n    .replace(ZERO_PREFIXED_UNIT_PATTERN, '$1$2')\n    .replace(DOT_ZERO_PATTERN, '$10$2')\n    .replace(FRACTION_PATTERN, function(match, nonZeroPart, suffix) {\n      return (nonZeroPart.length > 0 ? '.' : '') + nonZeroPart + suffix;\n    })\n    .replace(LEADING_ZERO_FRACTION_PATTERN, '$1.$2');\n}\n\nvar plugin = {\n  level1: {\n    value: function fraction(name, value, options) {\n      if (!options.level[OptimizationLevel.One].replaceZeroUnits) {\n        return value;\n      }\n\n      return optimizeRecursively(value);\n    }\n  }\n};\n\nmodule.exports = plugin;\n", "var plugin = {\n  level1: {\n    value: function precision(_name, value, options) {\n      if (!options.precision.enabled || value.indexOf('.') === -1) {\n        return value;\n      }\n\n      return value\n        .replace(options.precision.decimalPointMatcher, '$1$2$3')\n        .replace(options.precision.zeroMatcher, function(match, integerPart, fractionPart, unit) {\n          var multiplier = options.precision.units[unit].multiplier;\n          var parsedInteger = parseInt(integerPart);\n          var integer = Number.isNaN(parsedInteger) ? 0 : parsedInteger;\n          var fraction = parseFloat(fractionPart);\n\n          return Math.round((integer + fraction) * multiplier) / multiplier + unit;\n        });\n    }\n  }\n};\n\nmodule.exports = plugin;\n", "var OptimizationLevel = require('../../../options/optimization-level').OptimizationLevel;\n\nvar LOCAL_PREFIX_PATTERN = /^local\\(/i;\nvar QUOTED_PATTERN = /^('.*'|\".*\")$/;\nvar QUOTED_BUT_SAFE_PATTERN = /^['\"][a-zA-Z][a-zA-Z\\d\\-_]+['\"]$/;\n// eslint-disable-next-line max-len\nvar GENERIC_FONT_FAMILY_PATTERN = /^['\"](?:cursive|default|emoji|fangsong|fantasy|inherit|initial|math|monospace|revert|revert-layer|sans-serif|serif|system-ui|ui-monospace|ui-rounded|ui-sans-serif|ui-serif|unset)['\"]$/;\n\nvar plugin = {\n  level1: {\n    value: function textQuotes(name, value, options) {\n      if ((name == 'font-family' || name == 'font') && GENERIC_FONT_FAMILY_PATTERN.test(value)) {\n        return value;\n      }\n\n      if (!options.level[OptimizationLevel.One].removeQuotes) {\n        return value;\n      }\n\n      if (!QUOTED_PATTERN.test(value) && !LOCAL_PREFIX_PATTERN.test(value)) {\n        return value;\n      }\n\n      return QUOTED_BUT_SAFE_PATTERN.test(value)\n        ? value.substring(1, value.length - 1)\n        : value;\n    }\n  }\n};\n\nmodule.exports = plugin;\n", "var OptimizationLevel = require('../../../options/optimization-level').OptimizationLevel;\n\nvar TIME_VALUE = /^(-?[\\d.]+)(m?s)$/;\n\nvar plugin = {\n  level1: {\n    value: function time(name, value, options) {\n      if (!options.level[OptimizationLevel.One].replaceTimeUnits) {\n        return value;\n      }\n\n      if (!TIME_VALUE.test(value)) {\n        return value;\n      }\n\n      return value.replace(TIME_VALUE, function(match, val, unit) {\n        var newValue;\n\n        if (unit == 'ms') {\n          newValue = parseInt(val) / 1000 + 's';\n        } else if (unit == 's') {\n          newValue = parseFloat(val) * 1000 + 'ms';\n        }\n\n        return newValue.length < match.length ? newValue : match;\n      });\n    }\n  }\n};\n\nmodule.exports = plugin;\n", "var WHOLE_PIXEL_VALUE = /(?:^|\\s|\\()(-?\\d+)px/;\n\nvar plugin = {\n  level1: {\n    value: function unit(_name, value, options) {\n      if (!WHOLE_PIXEL_VALUE.test(value)) {\n        return value;\n      }\n\n      return value.replace(WHOLE_PIXEL_VALUE, function(match, val) {\n        var newValue;\n        var intVal = parseInt(val);\n\n        if (intVal === 0) {\n          return match;\n        }\n\n        if (options.compatibility.properties.shorterLengthUnits\n          && options.compatibility.units.pt\n          && intVal * 3 % 4 === 0) {\n          newValue = intVal * 3 / 4 + 'pt';\n        }\n\n        if (options.compatibility.properties.shorterLengthUnits\n          && options.compatibility.units.pc\n          && intVal % 16 === 0) {\n          newValue = intVal / 16 + 'pc';\n        }\n\n        if (options.compatibility.properties.shorterLengthUnits\n          && options.compatibility.units.in\n          && intVal % 96 === 0) {\n          newValue = intVal / 96 + 'in';\n        }\n\n        if (newValue) {\n          newValue = match.substring(0, match.indexOf(val)) + newValue;\n        }\n\n        return newValue && newValue.length < match.length ? newValue : match;\n      });\n    }\n  }\n};\n\nmodule.exports = plugin;\n", "var startsAsUrl = require('./starts-as-url');\n\nvar OptimizationLevel = require('../../../options/optimization-level').OptimizationLevel;\n\nvar URL_PREFIX_PATTERN = /^url\\(/i;\n\nvar plugin = {\n  level1: {\n    value: function urlPrefix(_name, value, options) {\n      if (!options.level[OptimizationLevel.One].normalizeUrls) {\n        return value;\n      }\n\n      if (!startsAsUrl(value)) {\n        return value;\n      }\n\n      return value.replace(URL_PREFIX_PATTERN, 'url(');\n    }\n  }\n};\n\nmodule.exports = plugin;\n", "var QUOTED_URL_PATTERN = /^url\\(['\"].+['\"]\\)$/;\nvar QUOTED_URL_WITH_WHITESPACE_PATTERN = /^url\\(['\"].*[*\\s()'\"].*['\"]\\)$/;\nvar QUOTES_PATTERN = /[\"']/g;\nvar URL_DATA_PATTERN = /^url\\(['\"]data:[^;]+;charset/;\n\nvar plugin = {\n  level1: {\n    value: function urlQuotes(_name, value, options) {\n      if (options.compatibility.properties.urlQuotes) {\n        return value;\n      }\n\n      return QUOTED_URL_PATTERN.test(value)\n        && !QUOTED_URL_WITH_WHITESPACE_PATTERN.test(value)\n        && !URL_DATA_PATTERN.test(value)\n        ? value.replace(QUOTES_PATTERN, '')\n        : value;\n    }\n  }\n};\n\nmodule.exports = plugin;\n", "var startsAsUrl = require('./starts-as-url');\n\nvar WHITESPACE_PATTERN = /\\\\?\\n|\\\\?\\r\\n/g;\nvar WHITESPACE_PREFIX_PATTERN = /(\\()\\s+/g;\nvar WHITESPACE_SUFFIX_PATTERN = /\\s+(\\))/g;\n\nvar plugin = {\n  level1: {\n    value: function urlWhitespace(_name, value) {\n      if (!startsAsUrl(value)) {\n        return value;\n      }\n\n      return value\n        .replace(WHITESPACE_PATTERN, '')\n        .replace(WHITESPACE_PREFIX_PATTERN, '$1')\n        .replace(WHITESPACE_SUFFIX_PATTERN, '$1');\n    }\n  }\n};\n\nmodule.exports = plugin;\n", "var OptimizationLevel = require('../../../options/optimization-level').OptimizationLevel;\n\nvar Marker = require('../../../tokenizer/marker');\n\nvar CALC_DIVISION_WHITESPACE_PATTERN = /\\) ?\\/ ?/g;\nvar COMMA_AND_SPACE_PATTERN = /, /g;\nvar LINE_BREAK_PATTERN = /\\r?\\n/g;\nvar MULTI_WHITESPACE_PATTERN = /\\s+/g;\nvar FUNCTION_CLOSING_BRACE_WHITESPACE_PATTERN = /\\s+(;?\\))/g;\nvar FUNCTION_OPENING_BRACE_WHITESPACE_PATTERN = /(\\(;?)\\s+/g;\nvar VARIABLE_NAME_PATTERN = /^--\\S+$/;\nvar VARIABLE_VALUE_PATTERN = /^var\\(\\s*--\\S+\\s*\\)$/;\n\nvar plugin = {\n  level1: {\n    value: function whitespace(name, value, options) {\n      if (!options.level[OptimizationLevel.One].removeWhitespace) {\n        return value;\n      }\n\n      if (VARIABLE_NAME_PATTERN.test(name) && !VARIABLE_VALUE_PATTERN.test(value)) {\n        return value;\n      }\n\n      if ((value.indexOf(' ') == -1 && value.indexOf('\\n') == -1) || value.indexOf('expression') === 0) {\n        return value;\n      }\n\n      if (value.indexOf(Marker.SINGLE_QUOTE) > -1 || value.indexOf(Marker.DOUBLE_QUOTE) > -1) {\n        return value;\n      }\n\n      value = value.replace(LINE_BREAK_PATTERN, '');\n      value = value.replace(MULTI_WHITESPACE_PATTERN, ' ');\n\n      if (value.indexOf('calc') > -1) {\n        value = value.replace(CALC_DIVISION_WHITESPACE_PATTERN, ')/ ');\n      }\n\n      return value\n        .replace(FUNCTION_OPENING_BRACE_WHITESPACE_PATTERN, '$1')\n        .replace(FUNCTION_CLOSING_BRACE_WHITESPACE_PATTERN, '$1')\n        .replace(COMMA_AND_SPACE_PATTERN, ',');\n    }\n  }\n};\n\nmodule.exports = plugin;\n", "var split = require('../../../utils/split');\n\nvar ANY_FUNCTION_PATTERN = /^(-(?:moz|ms|o|webkit)-[a-z-]+|[a-z-]+)\\((.+)\\)$/;\nvar SKIP_FUNCTION_PATTERN = /^(?:-moz-calc|-webkit-calc|calc|rgb|hsl|rgba|hsla|min|max|clamp|expression)\\(/;\nvar TOKEN_SEPARATOR_PATTERN = /([\\s,/])/;\n\nfunction removeRecursively(value, options) {\n  var functionTokens;\n  var tokens;\n\n  if (SKIP_FUNCTION_PATTERN.test(value)) {\n    return value;\n  }\n\n  functionTokens = ANY_FUNCTION_PATTERN.exec(value);\n\n  if (!functionTokens) {\n    return removeZeros(value, options);\n  }\n\n  tokens = split(functionTokens[2], TOKEN_SEPARATOR_PATTERN)\n    .map(function(token) { return removeRecursively(token, options); });\n\n  return functionTokens[1] + '(' + tokens.join('') + ')';\n}\n\nfunction removeZeros(value, options) {\n  return value\n    .replace(options.unitsRegexp, '$10$2')\n    .replace(options.unitsRegexp, '$10$2');\n}\n\nvar plugin = {\n  level1: {\n    value: function zero(name, value, options) {\n      if (!options.compatibility.properties.zeroUnits) {\n        return value;\n      }\n\n      if (value.indexOf('%') > 0 && (name == 'height' || name == 'max-height' || name == 'width' || name == 'max-width')) {\n        return value;\n      }\n\n      return removeRecursively(value, options);\n    }\n  }\n};\n\nmodule.exports = plugin;\n", "module.exports = {\n  color: require('./value-optimizers/color').level1.value,\n  degrees: require('./value-optimizers/degrees').level1.value,\n  fraction: require('./value-optimizers/fraction').level1.value,\n  precision: require('./value-optimizers/precision').level1.value,\n  textQuotes: require('./value-optimizers/text-quotes').level1.value,\n  time: require('./value-optimizers/time').level1.value,\n  unit: require('./value-optimizers/unit').level1.value,\n  urlPrefix: require('./value-optimizers/url-prefix').level1.value,\n  urlQuotes: require('./value-optimizers/url-quotes').level1.value,\n  urlWhiteSpace: require('./value-optimizers/url-whitespace').level1.value,\n  whiteSpace: require('./value-optimizers/whitespace').level1.value,\n  zero: require('./value-optimizers/zero').level1.value\n};\n", "// Contains the interpretation of CSS properties, as used by the property optimizer\n\nvar breakUp = require('./configuration/break-up');\nvar canOverride = require('./configuration/can-override');\nvar restore = require('./configuration/restore');\n\nvar propertyOptimizers = require('./level-1/property-optimizers');\nvar valueOptimizers = require('./level-1/value-optimizers');\n\nvar override = require('../utils/override');\n\n// Properties to process\n// Extend this object in order to add support for more properties in the optimizer.\n//\n// Each key in this object represents a CSS property and should be an object.\n// Such an object contains properties that describe how the represented CSS property should be handled.\n// Possible options:\n//\n// * components: array (Only specify for shorthand properties.)\n//   Contains the names of the granular properties this shorthand compacts.\n//\n// * canOverride: function\n//   Returns whether two tokens of this property can be merged with each other.\n//   This property has no meaning for shorthands.\n//\n// * defaultValue: string\n//   Specifies the default value of the property according to the CSS standard.\n//   For shorthand, this is used when every component is set to its default value, therefore it should be the shortest possible default value of all the components.\n//\n// * shortestValue: string\n//   Specifies the shortest possible value the property can possibly have.\n//   (Falls back to defaultValue if unspecified.)\n//\n// * breakUp: function (Only specify for shorthand properties.)\n//   Breaks the shorthand up to its components.\n//\n// * restore: function (Only specify for shorthand properties.)\n//   Puts the shorthand together from its components.\n//\nvar configuration = {\n  animation: {\n    canOverride: canOverride.generic.components([\n      canOverride.generic.time,\n      canOverride.generic.timingFunction,\n      canOverride.generic.time,\n      canOverride.property.animationIterationCount,\n      canOverride.property.animationDirection,\n      canOverride.property.animationFillMode,\n      canOverride.property.animationPlayState,\n      canOverride.property.animationName\n    ]),\n    components: [\n      'animation-duration',\n      'animation-timing-function',\n      'animation-delay',\n      'animation-iteration-count',\n      'animation-direction',\n      'animation-fill-mode',\n      'animation-play-state',\n      'animation-name'\n    ],\n    breakUp: breakUp.multiplex(breakUp.animation),\n    defaultValue: 'none',\n    restore: restore.multiplex(restore.withoutDefaults),\n    shorthand: true,\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.textQuotes,\n      valueOptimizers.time,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ],\n    vendorPrefixes: [\n      '-moz-',\n      '-o-',\n      '-webkit-'\n    ]\n  },\n  'animation-delay': {\n    canOverride: canOverride.generic.time,\n    componentOf: [\n      'animation'\n    ],\n    defaultValue: '0s',\n    intoMultiplexMode: 'real',\n    valueOptimizers: [\n      valueOptimizers.time,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ],\n    vendorPrefixes: [\n      '-moz-',\n      '-o-',\n      '-webkit-'\n    ]\n  },\n  'animation-direction': {\n    canOverride: canOverride.property.animationDirection,\n    componentOf: [\n      'animation'\n    ],\n    defaultValue: 'normal',\n    intoMultiplexMode: 'real',\n    vendorPrefixes: [\n      '-moz-',\n      '-o-',\n      '-webkit-'\n    ]\n  },\n  'animation-duration': {\n    canOverride: canOverride.generic.time,\n    componentOf: [\n      'animation'\n    ],\n    defaultValue: '0s',\n    intoMultiplexMode: 'real',\n    keepUnlessDefault: 'animation-delay',\n    valueOptimizers: [\n      valueOptimizers.time,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ],\n    vendorPrefixes: [\n      '-moz-',\n      '-o-',\n      '-webkit-'\n    ]\n  },\n  'animation-fill-mode': {\n    canOverride: canOverride.property.animationFillMode,\n    componentOf: [\n      'animation'\n    ],\n    defaultValue: 'none',\n    intoMultiplexMode: 'real',\n    vendorPrefixes: [\n      '-moz-',\n      '-o-',\n      '-webkit-'\n    ]\n  },\n  'animation-iteration-count': {\n    canOverride: canOverride.property.animationIterationCount,\n    componentOf: [\n      'animation'\n    ],\n    defaultValue: '1',\n    intoMultiplexMode: 'real',\n    vendorPrefixes: [\n      '-moz-',\n      '-o-',\n      '-webkit-'\n    ]\n  },\n  'animation-name': {\n    canOverride: canOverride.property.animationName,\n    componentOf: [\n      'animation'\n    ],\n    defaultValue: 'none',\n    intoMultiplexMode: 'real',\n    valueOptimizers: [\n      valueOptimizers.textQuotes\n    ],\n    vendorPrefixes: [\n      '-moz-',\n      '-o-',\n      '-webkit-'\n    ]\n  },\n  'animation-play-state': {\n    canOverride: canOverride.property.animationPlayState,\n    componentOf: [\n      'animation'\n    ],\n    defaultValue: 'running',\n    intoMultiplexMode: 'real',\n    vendorPrefixes: [\n      '-moz-',\n      '-o-',\n      '-webkit-'\n    ]\n  },\n  'animation-timing-function': {\n    canOverride: canOverride.generic.timingFunction,\n    componentOf: [\n      'animation'\n    ],\n    defaultValue: 'ease',\n    intoMultiplexMode: 'real',\n    vendorPrefixes: [\n      '-moz-',\n      '-o-',\n      '-webkit-'\n    ]\n  },\n  background: {\n    canOverride: canOverride.generic.components([\n      canOverride.generic.image,\n      canOverride.property.backgroundPosition,\n      canOverride.property.backgroundSize,\n      canOverride.property.backgroundRepeat,\n      canOverride.property.backgroundAttachment,\n      canOverride.property.backgroundOrigin,\n      canOverride.property.backgroundClip,\n      canOverride.generic.color\n    ]),\n    components: [\n      'background-image',\n      'background-position',\n      'background-size',\n      'background-repeat',\n      'background-attachment',\n      'background-origin',\n      'background-clip',\n      'background-color'\n    ],\n    breakUp: breakUp.multiplex(breakUp.background),\n    defaultValue: '0 0',\n    propertyOptimizer: propertyOptimizers.background,\n    restore: restore.multiplex(restore.background),\n    shortestValue: '0',\n    shorthand: true,\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.urlWhiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.zero,\n      valueOptimizers.color,\n      valueOptimizers.urlPrefix,\n      valueOptimizers.urlQuotes\n    ]\n  },\n  'background-attachment': {\n    canOverride: canOverride.property.backgroundAttachment,\n    componentOf: [\n      'background'\n    ],\n    defaultValue: 'scroll',\n    intoMultiplexMode: 'real'\n  },\n  'background-clip': {\n    canOverride: canOverride.property.backgroundClip,\n    componentOf: [\n      'background'\n    ],\n    defaultValue: 'border-box',\n    intoMultiplexMode: 'real',\n    shortestValue: 'border-box'\n  },\n  'background-color': {\n    canOverride: canOverride.generic.color,\n    componentOf: [\n      'background'\n    ],\n    defaultValue: 'transparent',\n    intoMultiplexMode: 'real', // otherwise real color will turn into default since color appears in last multiplex only\n    multiplexLastOnly: true,\n    nonMergeableValue: 'none',\n    shortestValue: 'red',\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.color\n    ]\n  },\n  'background-image': {\n    canOverride: canOverride.generic.image,\n    componentOf: [\n      'background'\n    ],\n    defaultValue: 'none',\n    intoMultiplexMode: 'default',\n    valueOptimizers: [\n      valueOptimizers.urlWhiteSpace,\n      valueOptimizers.urlPrefix,\n      valueOptimizers.urlQuotes,\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero,\n      valueOptimizers.color\n    ]\n  },\n  'background-origin': {\n    canOverride: canOverride.property.backgroundOrigin,\n    componentOf: [\n      'background'\n    ],\n    defaultValue: 'padding-box',\n    intoMultiplexMode: 'real',\n    shortestValue: 'border-box'\n  },\n  'background-position': {\n    canOverride: canOverride.property.backgroundPosition,\n    componentOf: [\n      'background'\n    ],\n    defaultValue: ['0', '0'],\n    doubleValues: true,\n    intoMultiplexMode: 'real',\n    shortestValue: '0',\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ]\n  },\n  'background-repeat': {\n    canOverride: canOverride.property.backgroundRepeat,\n    componentOf: [\n      'background'\n    ],\n    defaultValue: ['repeat'],\n    doubleValues: true,\n    intoMultiplexMode: 'real'\n  },\n  'background-size': {\n    canOverride: canOverride.property.backgroundSize,\n    componentOf: [\n      'background'\n    ],\n    defaultValue: ['auto'],\n    doubleValues: true,\n    intoMultiplexMode: 'real',\n    shortestValue: '0 0',\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ]\n  },\n  bottom: {\n    canOverride: canOverride.property.bottom,\n    defaultValue: 'auto',\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ]\n  },\n  border: {\n    breakUp: breakUp.border,\n    canOverride: canOverride.generic.components([\n      canOverride.generic.unit,\n      canOverride.property.borderStyle,\n      canOverride.generic.color\n    ]),\n    components: [\n      'border-width',\n      'border-style',\n      'border-color'\n    ],\n    defaultValue: 'none',\n    overridesShorthands: [\n      'border-bottom',\n      'border-left',\n      'border-right',\n      'border-top'\n    ],\n    restore: restore.withoutDefaults,\n    shorthand: true,\n    shorthandComponents: true,\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.zero,\n      valueOptimizers.color\n    ]\n  },\n  'border-bottom': {\n    breakUp: breakUp.border,\n    canOverride: canOverride.generic.components([\n      canOverride.generic.unit,\n      canOverride.property.borderStyle,\n      canOverride.generic.color\n    ]),\n    components: [\n      'border-bottom-width',\n      'border-bottom-style',\n      'border-bottom-color'\n    ],\n    defaultValue: 'none',\n    restore: restore.withoutDefaults,\n    shorthand: true,\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.zero,\n      valueOptimizers.color\n    ]\n  },\n  'border-bottom-color': {\n    canOverride: canOverride.generic.color,\n    componentOf: [\n      'border-bottom',\n      'border-color'\n    ],\n    defaultValue: 'none',\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.color\n    ]\n  },\n  'border-bottom-left-radius': {\n    canOverride: canOverride.generic.unit,\n    componentOf: [\n      'border-radius'\n    ],\n    defaultValue: '0',\n    propertyOptimizer: propertyOptimizers.borderRadius,\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ],\n    vendorPrefixes: [\n      '-moz-',\n      '-o-'\n    ]\n  },\n  'border-bottom-right-radius': {\n    canOverride: canOverride.generic.unit,\n    componentOf: [\n      'border-radius'\n    ],\n    defaultValue: '0',\n    propertyOptimizer: propertyOptimizers.borderRadius,\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ],\n    vendorPrefixes: [\n      '-moz-',\n      '-o-'\n    ]\n  },\n  'border-bottom-style': {\n    canOverride: canOverride.property.borderStyle,\n    componentOf: [\n      'border-bottom',\n      'border-style'\n    ],\n    defaultValue: 'none'\n  },\n  'border-bottom-width': {\n    canOverride: canOverride.generic.unit,\n    componentOf: [\n      'border-bottom',\n      'border-width'\n    ],\n    defaultValue: 'medium',\n    oppositeTo: 'border-top-width',\n    shortestValue: '0',\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ]\n  },\n  'border-collapse': {\n    canOverride: canOverride.property.borderCollapse,\n    defaultValue: 'separate'\n  },\n  'border-color': {\n    breakUp: breakUp.fourValues,\n    canOverride: canOverride.generic.components([\n      canOverride.generic.color,\n      canOverride.generic.color,\n      canOverride.generic.color,\n      canOverride.generic.color\n    ]),\n    componentOf: [\n      'border'\n    ],\n    components: [\n      'border-top-color',\n      'border-right-color',\n      'border-bottom-color',\n      'border-left-color'\n    ],\n    defaultValue: 'none',\n    restore: restore.fourValues,\n    shortestValue: 'red',\n    shorthand: true,\n    singleTypeComponents: true,\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.color\n    ]\n  },\n  'border-left': {\n    breakUp: breakUp.border,\n    canOverride: canOverride.generic.components([\n      canOverride.generic.unit,\n      canOverride.property.borderStyle,\n      canOverride.generic.color\n    ]),\n    components: [\n      'border-left-width',\n      'border-left-style',\n      'border-left-color'\n    ],\n    defaultValue: 'none',\n    restore: restore.withoutDefaults,\n    shorthand: true,\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.zero,\n      valueOptimizers.color\n    ]\n  },\n  'border-left-color': {\n    canOverride: canOverride.generic.color,\n    componentOf: [\n      'border-color',\n      'border-left'\n    ],\n    defaultValue: 'none',\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.color\n    ]\n  },\n  'border-left-style': {\n    canOverride: canOverride.property.borderStyle,\n    componentOf: [\n      'border-left',\n      'border-style'\n    ],\n    defaultValue: 'none'\n  },\n  'border-left-width': {\n    canOverride: canOverride.generic.unit,\n    componentOf: [\n      'border-left',\n      'border-width'\n    ],\n    defaultValue: 'medium',\n    oppositeTo: 'border-right-width',\n    shortestValue: '0',\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ]\n  },\n  'border-radius': {\n    breakUp: breakUp.borderRadius,\n    canOverride: canOverride.generic.components([\n      canOverride.generic.unit,\n      canOverride.generic.unit,\n      canOverride.generic.unit,\n      canOverride.generic.unit\n    ]),\n    components: [\n      'border-top-left-radius',\n      'border-top-right-radius',\n      'border-bottom-right-radius',\n      'border-bottom-left-radius'\n    ],\n    defaultValue: '0',\n    propertyOptimizer: propertyOptimizers.borderRadius,\n    restore: restore.borderRadius,\n    shorthand: true,\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ],\n    vendorPrefixes: [\n      '-moz-',\n      '-o-'\n    ]\n  },\n  'border-right': {\n    breakUp: breakUp.border,\n    canOverride: canOverride.generic.components([\n      canOverride.generic.unit,\n      canOverride.property.borderStyle,\n      canOverride.generic.color\n    ]),\n    components: [\n      'border-right-width',\n      'border-right-style',\n      'border-right-color'\n    ],\n    defaultValue: 'none',\n    restore: restore.withoutDefaults,\n    shorthand: true,\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.color\n    ]\n  },\n  'border-right-color': {\n    canOverride: canOverride.generic.color,\n    componentOf: [\n      'border-color',\n      'border-right'\n    ],\n    defaultValue: 'none',\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.color\n    ]\n  },\n  'border-right-style': {\n    canOverride: canOverride.property.borderStyle,\n    componentOf: [\n      'border-right',\n      'border-style'\n    ],\n    defaultValue: 'none'\n  },\n  'border-right-width': {\n    canOverride: canOverride.generic.unit,\n    componentOf: [\n      'border-right',\n      'border-width'\n    ],\n    defaultValue: 'medium',\n    oppositeTo: 'border-left-width',\n    shortestValue: '0',\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ]\n  },\n  'border-style': {\n    breakUp: breakUp.fourValues,\n    canOverride: canOverride.generic.components([\n      canOverride.property.borderStyle,\n      canOverride.property.borderStyle,\n      canOverride.property.borderStyle,\n      canOverride.property.borderStyle\n    ]),\n    componentOf: [\n      'border'\n    ],\n    components: [\n      'border-top-style',\n      'border-right-style',\n      'border-bottom-style',\n      'border-left-style'\n    ],\n    defaultValue: 'none',\n    restore: restore.fourValues,\n    shorthand: true,\n    singleTypeComponents: true\n  },\n  'border-top': {\n    breakUp: breakUp.border,\n    canOverride: canOverride.generic.components([\n      canOverride.generic.unit,\n      canOverride.property.borderStyle,\n      canOverride.generic.color\n    ]),\n    components: [\n      'border-top-width',\n      'border-top-style',\n      'border-top-color'\n    ],\n    defaultValue: 'none',\n    restore: restore.withoutDefaults,\n    shorthand: true,\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.zero,\n      valueOptimizers.color,\n      valueOptimizers.unit\n    ]\n  },\n  'border-top-color': {\n    canOverride: canOverride.generic.color,\n    componentOf: [\n      'border-color',\n      'border-top'\n    ],\n    defaultValue: 'none',\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.color\n    ]\n  },\n  'border-top-left-radius': {\n    canOverride: canOverride.generic.unit,\n    componentOf: [\n      'border-radius'\n    ],\n    defaultValue: '0',\n    propertyOptimizer: propertyOptimizers.borderRadius,\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ],\n    vendorPrefixes: [\n      '-moz-',\n      '-o-'\n    ]\n  },\n  'border-top-right-radius': {\n    canOverride: canOverride.generic.unit,\n    componentOf: [\n      'border-radius'\n    ],\n    defaultValue: '0',\n    propertyOptimizer: propertyOptimizers.borderRadius,\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ],\n    vendorPrefixes: [\n      '-moz-',\n      '-o-'\n    ]\n  },\n  'border-top-style': {\n    canOverride: canOverride.property.borderStyle,\n    componentOf: [\n      'border-style',\n      'border-top'\n    ],\n    defaultValue: 'none'\n  },\n  'border-top-width': {\n    canOverride: canOverride.generic.unit,\n    componentOf: [\n      'border-top',\n      'border-width'\n    ],\n    defaultValue: 'medium',\n    oppositeTo: 'border-bottom-width',\n    shortestValue: '0',\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ]\n  },\n  'border-width': {\n    breakUp: breakUp.fourValues,\n    canOverride: canOverride.generic.components([\n      canOverride.generic.unit,\n      canOverride.generic.unit,\n      canOverride.generic.unit,\n      canOverride.generic.unit\n    ]),\n    componentOf: [\n      'border'\n    ],\n    components: [\n      'border-top-width',\n      'border-right-width',\n      'border-bottom-width',\n      'border-left-width'\n    ],\n    defaultValue: 'medium',\n    restore: restore.fourValues,\n    shortestValue: '0',\n    shorthand: true,\n    singleTypeComponents: true,\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ]\n  },\n  'box-shadow': {\n    propertyOptimizer: propertyOptimizers.boxShadow,\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero,\n      valueOptimizers.color\n    ],\n    vendorPrefixes: [\n      '-moz-',\n      '-ms-',\n      '-o-',\n      '-webkit-'\n    ]\n  },\n  clear: {\n    canOverride: canOverride.property.clear,\n    defaultValue: 'none'\n  },\n  clip: {\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ]\n  },\n  color: {\n    canOverride: canOverride.generic.color,\n    defaultValue: 'transparent',\n    shortestValue: 'red',\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.color\n    ]\n  },\n  'column-gap': {\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ]\n  },\n  cursor: {\n    canOverride: canOverride.property.cursor,\n    defaultValue: 'auto'\n  },\n  display: { canOverride: canOverride.property.display },\n  filter: {\n    propertyOptimizer: propertyOptimizers.filter,\n    valueOptimizers: [\n      valueOptimizers.fraction\n    ]\n  },\n  float: {\n    canOverride: canOverride.property.float,\n    defaultValue: 'none'\n  },\n  font: {\n    breakUp: breakUp.font,\n    canOverride: canOverride.generic.components([\n      canOverride.property.fontStyle,\n      canOverride.property.fontVariant,\n      canOverride.property.fontWeight,\n      canOverride.property.fontStretch,\n      canOverride.generic.unit,\n      canOverride.generic.unit,\n      canOverride.property.fontFamily\n    ]),\n    components: [\n      'font-style',\n      'font-variant',\n      'font-weight',\n      'font-stretch',\n      'font-size',\n      'line-height',\n      'font-family'\n    ],\n    restore: restore.font,\n    shorthand: true,\n    valueOptimizers: [\n      valueOptimizers.textQuotes\n    ]\n  },\n  'font-family': {\n    canOverride: canOverride.property.fontFamily,\n    defaultValue: 'user|agent|specific',\n    valueOptimizers: [\n      valueOptimizers.textQuotes\n    ]\n  },\n  'font-size': {\n    canOverride: canOverride.generic.unit,\n    defaultValue: 'medium',\n    shortestValue: '0',\n    valueOptimizers: [\n      valueOptimizers.fraction\n    ]\n  },\n  'font-stretch': {\n    canOverride: canOverride.property.fontStretch,\n    defaultValue: 'normal'\n  },\n  'font-style': {\n    canOverride: canOverride.property.fontStyle,\n    defaultValue: 'normal'\n  },\n  'font-variant': {\n    canOverride: canOverride.property.fontVariant,\n    defaultValue: 'normal'\n  },\n  'font-weight': {\n    canOverride: canOverride.property.fontWeight,\n    defaultValue: 'normal',\n    propertyOptimizer: propertyOptimizers.fontWeight,\n    shortestValue: '400'\n  },\n  gap: {\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ]\n  },\n  height: {\n    canOverride: canOverride.generic.unit,\n    defaultValue: 'auto',\n    shortestValue: '0',\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ]\n  },\n  left: {\n    canOverride: canOverride.property.left,\n    defaultValue: 'auto',\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ]\n  },\n  'letter-spacing': {\n    valueOptimizers: [\n      valueOptimizers.fraction,\n      valueOptimizers.zero\n    ]\n  },\n  'line-height': {\n    canOverride: canOverride.generic.unitOrNumber,\n    defaultValue: 'normal',\n    shortestValue: '0',\n    valueOptimizers: [\n      valueOptimizers.fraction,\n      valueOptimizers.zero\n    ]\n  },\n  'list-style': {\n    canOverride: canOverride.generic.components([\n      canOverride.property.listStyleType,\n      canOverride.property.listStylePosition,\n      canOverride.property.listStyleImage\n    ]),\n    components: [\n      'list-style-type',\n      'list-style-position',\n      'list-style-image'\n    ],\n    breakUp: breakUp.listStyle,\n    restore: restore.withoutDefaults,\n    defaultValue: 'outside', // can't use 'disc' because that'd override default 'decimal' for <ol>\n    shortestValue: 'none',\n    shorthand: true\n  },\n  'list-style-image': {\n    canOverride: canOverride.generic.image,\n    componentOf: [\n      'list-style'\n    ],\n    defaultValue: 'none'\n  },\n  'list-style-position': {\n    canOverride: canOverride.property.listStylePosition,\n    componentOf: [\n      'list-style'\n    ],\n    defaultValue: 'outside',\n    shortestValue: 'inside'\n  },\n  'list-style-type': {\n    canOverride: canOverride.property.listStyleType,\n    componentOf: [\n      'list-style'\n    ],\n    // NOTE: we can't tell the real default value here, it's 'disc' for <ul> and 'decimal' for <ol>\n    // this is a hack, but it doesn't matter because this value will be either overridden or\n    // it will disappear at the final step anyway\n    defaultValue: 'decimal|disc',\n    shortestValue: 'none'\n  },\n  margin: {\n    breakUp: breakUp.fourValues,\n    canOverride: canOverride.generic.components([\n      canOverride.generic.unit,\n      canOverride.generic.unit,\n      canOverride.generic.unit,\n      canOverride.generic.unit\n    ]),\n    components: [\n      'margin-top',\n      'margin-right',\n      'margin-bottom',\n      'margin-left'\n    ],\n    defaultValue: '0',\n    propertyOptimizer: propertyOptimizers.margin,\n    restore: restore.fourValues,\n    shorthand: true,\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ]\n  },\n  'margin-bottom': {\n    canOverride: canOverride.generic.unit,\n    componentOf: [\n      'margin'\n    ],\n    defaultValue: '0',\n    oppositeTo: 'margin-top',\n    propertyOptimizer: propertyOptimizers.margin,\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ]\n  },\n  'margin-inline-end': {\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ]\n  },\n  'margin-inline-start': {\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ]\n  },\n  'margin-left': {\n    canOverride: canOverride.generic.unit,\n    componentOf: [\n      'margin'\n    ],\n    defaultValue: '0',\n    oppositeTo: 'margin-right',\n    propertyOptimizer: propertyOptimizers.margin,\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ]\n  },\n  'margin-right': {\n    canOverride: canOverride.generic.unit,\n    componentOf: [\n      'margin'\n    ],\n    defaultValue: '0',\n    oppositeTo: 'margin-left',\n    propertyOptimizer: propertyOptimizers.margin,\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ]\n  },\n  'margin-top': {\n    canOverride: canOverride.generic.unit,\n    componentOf: [\n      'margin'\n    ],\n    defaultValue: '0',\n    oppositeTo: 'margin-bottom',\n    propertyOptimizer: propertyOptimizers.margin,\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ]\n  },\n  'max-height': {\n    canOverride: canOverride.generic.unit,\n    defaultValue: 'none',\n    shortestValue: '0',\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ]\n  },\n  'max-width': {\n    canOverride: canOverride.generic.unit,\n    defaultValue: 'none',\n    shortestValue: '0',\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ]\n  },\n  'min-height': {\n    canOverride: canOverride.generic.unit,\n    defaultValue: '0',\n    shortestValue: '0',\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ]\n  },\n  'min-width': {\n    canOverride: canOverride.generic.unit,\n    defaultValue: '0',\n    shortestValue: '0',\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ]\n  },\n  opacity: {\n    valueOptimizers: [\n      valueOptimizers.fraction,\n      valueOptimizers.precision\n    ]\n  },\n  outline: {\n    canOverride: canOverride.generic.components([\n      canOverride.generic.color,\n      canOverride.property.outlineStyle,\n      canOverride.generic.unit\n    ]),\n    components: [\n      'outline-color',\n      'outline-style',\n      'outline-width'\n    ],\n    breakUp: breakUp.outline,\n    restore: restore.withoutDefaults,\n    defaultValue: '0',\n    propertyOptimizer: propertyOptimizers.outline,\n    shorthand: true,\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ]\n  },\n  'outline-color': {\n    canOverride: canOverride.generic.color,\n    componentOf: [\n      'outline'\n    ],\n    defaultValue: 'invert',\n    shortestValue: 'red',\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.color\n    ]\n  },\n  'outline-style': {\n    canOverride: canOverride.property.outlineStyle,\n    componentOf: [\n      'outline'\n    ],\n    defaultValue: 'none'\n  },\n  'outline-width': {\n    canOverride: canOverride.generic.unit,\n    componentOf: [\n      'outline'\n    ],\n    defaultValue: 'medium',\n    shortestValue: '0',\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ]\n  },\n  overflow: {\n    canOverride: canOverride.property.overflow,\n    defaultValue: 'visible'\n  },\n  'overflow-x': {\n    canOverride: canOverride.property.overflow,\n    defaultValue: 'visible'\n  },\n  'overflow-y': {\n    canOverride: canOverride.property.overflow,\n    defaultValue: 'visible'\n  },\n  padding: {\n    breakUp: breakUp.fourValues,\n    canOverride: canOverride.generic.components([\n      canOverride.generic.unit,\n      canOverride.generic.unit,\n      canOverride.generic.unit,\n      canOverride.generic.unit\n    ]),\n    components: [\n      'padding-top',\n      'padding-right',\n      'padding-bottom',\n      'padding-left'\n    ],\n    defaultValue: '0',\n    propertyOptimizer: propertyOptimizers.padding,\n    restore: restore.fourValues,\n    shorthand: true,\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ]\n  },\n  'padding-bottom': {\n    canOverride: canOverride.generic.unit,\n    componentOf: [\n      'padding'\n    ],\n    defaultValue: '0',\n    oppositeTo: 'padding-top',\n    propertyOptimizer: propertyOptimizers.padding,\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ]\n  },\n  'padding-left': {\n    canOverride: canOverride.generic.unit,\n    componentOf: [\n      'padding'\n    ],\n    defaultValue: '0',\n    oppositeTo: 'padding-right',\n    propertyOptimizer: propertyOptimizers.padding,\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ]\n  },\n  'padding-right': {\n    canOverride: canOverride.generic.unit,\n    componentOf: [\n      'padding'\n    ],\n    defaultValue: '0',\n    oppositeTo: 'padding-left',\n    propertyOptimizer: propertyOptimizers.padding,\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ]\n  },\n  'padding-top': {\n    canOverride: canOverride.generic.unit,\n    componentOf: [\n      'padding'\n    ],\n    defaultValue: '0',\n    oppositeTo: 'padding-bottom',\n    propertyOptimizer: propertyOptimizers.padding,\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ]\n  },\n  position: {\n    canOverride: canOverride.property.position,\n    defaultValue: 'static'\n  },\n  right: {\n    canOverride: canOverride.property.right,\n    defaultValue: 'auto',\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ]\n  },\n  'row-gap': {\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ]\n  },\n  src: {\n    valueOptimizers: [\n      valueOptimizers.urlWhiteSpace,\n      valueOptimizers.urlPrefix,\n      valueOptimizers.urlQuotes\n    ]\n  },\n  'stroke-width': {\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ]\n  },\n  'text-align': {\n    canOverride: canOverride.property.textAlign,\n    // NOTE: we can't tell the real default value here, as it depends on default text direction\n    // this is a hack, but it doesn't matter because this value will be either overridden or\n    // it will disappear anyway\n    defaultValue: 'left|right'\n  },\n  'text-decoration': {\n    canOverride: canOverride.property.textDecoration,\n    defaultValue: 'none'\n  },\n  'text-indent': {\n    canOverride: canOverride.property.textOverflow,\n    defaultValue: 'none',\n    valueOptimizers: [\n      valueOptimizers.fraction,\n      valueOptimizers.zero\n    ]\n  },\n  'text-overflow': {\n    canOverride: canOverride.property.textOverflow,\n    defaultValue: 'none'\n  },\n  'text-shadow': {\n    canOverride: canOverride.property.textShadow,\n    defaultValue: 'none',\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.zero,\n      valueOptimizers.color\n    ]\n  },\n  top: {\n    canOverride: canOverride.property.top,\n    defaultValue: 'auto',\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ]\n  },\n  transform: {\n    canOverride: canOverride.property.transform,\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.degrees,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ],\n    vendorPrefixes: [\n      '-moz-',\n      '-ms-',\n      '-o-',\n      '-webkit-'\n    ]\n  },\n  transition: {\n    breakUp: breakUp.multiplex(breakUp.transition),\n    canOverride: canOverride.generic.components([\n      canOverride.property.transitionProperty,\n      canOverride.generic.time,\n      canOverride.generic.timingFunction,\n      canOverride.generic.time\n    ]),\n    components: [\n      'transition-property',\n      'transition-duration',\n      'transition-timing-function',\n      'transition-delay'\n    ],\n    defaultValue: 'none',\n    restore: restore.multiplex(restore.withoutDefaults),\n    shorthand: true,\n    valueOptimizers: [\n      valueOptimizers.time,\n      valueOptimizers.fraction\n    ],\n    vendorPrefixes: [\n      '-moz-',\n      '-ms-',\n      '-o-',\n      '-webkit-'\n    ]\n  },\n  'transition-delay': {\n    canOverride: canOverride.generic.time,\n    componentOf: [\n      'transition'\n    ],\n    defaultValue: '0s',\n    intoMultiplexMode: 'real',\n    valueOptimizers: [\n      valueOptimizers.time\n    ],\n    vendorPrefixes: [\n      '-moz-',\n      '-ms-',\n      '-o-',\n      '-webkit-'\n    ]\n  },\n  'transition-duration': {\n    canOverride: canOverride.generic.time,\n    componentOf: [\n      'transition'\n    ],\n    defaultValue: '0s',\n    intoMultiplexMode: 'real',\n    keepUnlessDefault: 'transition-delay',\n    valueOptimizers: [\n      valueOptimizers.time,\n      valueOptimizers.fraction\n    ],\n    vendorPrefixes: [\n      '-moz-',\n      '-ms-',\n      '-o-',\n      '-webkit-'\n    ]\n  },\n  'transition-property': {\n    canOverride: canOverride.generic.propertyName,\n    componentOf: [\n      'transition'\n    ],\n    defaultValue: 'all',\n    intoMultiplexMode: 'placeholder',\n    placeholderValue: '_', // it's a short value that won't match any property and still be a valid `transition-property`\n    vendorPrefixes: [\n      '-moz-',\n      '-ms-',\n      '-o-',\n      '-webkit-'\n    ]\n  },\n  'transition-timing-function': {\n    canOverride: canOverride.generic.timingFunction,\n    componentOf: [\n      'transition'\n    ],\n    defaultValue: 'ease',\n    intoMultiplexMode: 'real',\n    vendorPrefixes: [\n      '-moz-',\n      '-ms-',\n      '-o-',\n      '-webkit-'\n    ]\n  },\n  'vertical-align': {\n    canOverride: canOverride.property.verticalAlign,\n    defaultValue: 'baseline',\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ]\n  },\n  visibility: {\n    canOverride: canOverride.property.visibility,\n    defaultValue: 'visible'\n  },\n  '-webkit-tap-highlight-color': {\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.color\n    ]\n  },\n  '-webkit-margin-end': {\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ]\n  },\n  'white-space': {\n    canOverride: canOverride.property.whiteSpace,\n    defaultValue: 'normal'\n  },\n  width: {\n    canOverride: canOverride.generic.unit,\n    defaultValue: 'auto',\n    shortestValue: '0',\n    valueOptimizers: [\n      valueOptimizers.whiteSpace,\n      valueOptimizers.fraction,\n      valueOptimizers.precision,\n      valueOptimizers.unit,\n      valueOptimizers.zero\n    ]\n  },\n  'z-index': {\n    canOverride: canOverride.property.zIndex,\n    defaultValue: 'auto'\n  }\n};\n\n// generate vendor-prefixed configuration\nvar vendorPrefixedConfiguration = {};\n\nfunction cloneDescriptor(propertyName, prefix) {\n  var clonedDescriptor = override(configuration[propertyName], {});\n\n  if ('componentOf' in clonedDescriptor) {\n    clonedDescriptor.componentOf = clonedDescriptor.componentOf.map(function(shorthandName) {\n      return prefix + shorthandName;\n    });\n  }\n\n  if ('components' in clonedDescriptor) {\n    clonedDescriptor.components = clonedDescriptor.components.map(function(longhandName) {\n      return prefix + longhandName;\n    });\n  }\n\n  if ('keepUnlessDefault' in clonedDescriptor) {\n    clonedDescriptor.keepUnlessDefault = prefix + clonedDescriptor.keepUnlessDefault;\n  }\n\n  return clonedDescriptor;\n}\n\nfor (var propertyName in configuration) {\n  var descriptor = configuration[propertyName];\n\n  if (!('vendorPrefixes' in descriptor)) {\n    continue;\n  }\n\n  for (var i = 0; i < descriptor.vendorPrefixes.length; i++) {\n    var prefix = descriptor.vendorPrefixes[i];\n    var clonedDescriptor = cloneDescriptor(propertyName, prefix);\n    delete clonedDescriptor.vendorPrefixes;\n\n    vendorPrefixedConfiguration[prefix + propertyName] = clonedDescriptor;\n  }\n\n  delete descriptor.vendorPrefixes;\n}\n\nmodule.exports = override(configuration, vendorPrefixedConfiguration);\n", "var emptyCharacter = '';\n\nvar Breaks = require('../options/format').Breaks;\nvar Spaces = require('../options/format').Spaces;\n\nvar Marker = require('../tokenizer/marker');\nvar Token = require('../tokenizer/token');\n\nfunction supportsAfterClosingBrace(token) {\n  return token[1][1] == 'background' || token[1][1] == 'transform' || token[1][1] == 'src';\n}\n\nfunction afterClosingBrace(token, valueIndex) {\n  return token[valueIndex][1][token[valueIndex][1].length - 1] == Marker.CLOSE_ROUND_BRACKET;\n}\n\nfunction afterComma(token, valueIndex) {\n  return token[valueIndex][1] == Marker.COMMA;\n}\n\nfunction afterSlash(token, valueIndex) {\n  return token[valueIndex][1] == Marker.FORWARD_SLASH;\n}\n\nfunction beforeComma(token, valueIndex) {\n  return token[valueIndex + 1] && token[valueIndex + 1][1] == Marker.COMMA;\n}\n\nfunction beforeSlash(token, valueIndex) {\n  return token[valueIndex + 1] && token[valueIndex + 1][1] == Marker.FORWARD_SLASH;\n}\n\nfunction inFilter(token) {\n  return token[1][1] == 'filter' || token[1][1] == '-ms-filter';\n}\n\nfunction disallowsSpace(context, token, valueIndex) {\n  return !context.spaceAfterClosingBrace\n    && supportsAfterClosingBrace(token)\n    && afterClosingBrace(token, valueIndex)\n    || beforeSlash(token, valueIndex)\n    || afterSlash(token, valueIndex)\n    || beforeComma(token, valueIndex)\n    || afterComma(token, valueIndex);\n}\n\nfunction rules(context, tokens) {\n  var store = context.store;\n\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    store(context, tokens[i]);\n\n    if (i < l - 1) {\n      store(context, comma(context));\n    }\n  }\n}\n\nfunction body(context, tokens) {\n  var lastPropertyAt = lastPropertyIndex(tokens);\n\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    property(context, tokens, i, lastPropertyAt);\n  }\n}\n\nfunction lastPropertyIndex(tokens) {\n  var index = tokens.length - 1;\n\n  for (; index >= 0; index--) {\n    if (tokens[index][0] != Token.COMMENT) {\n      break;\n    }\n  }\n\n  return index;\n}\n\nfunction property(context, tokens, position, lastPropertyAt) {\n  var store = context.store;\n  var token = tokens[position];\n\n  var propertyValue = token[2];\n  var isPropertyBlock = propertyValue && propertyValue[0] === Token.PROPERTY_BLOCK;\n\n  var needsSemicolon;\n  if (context.format) {\n    if (context.format.semicolonAfterLastProperty || isPropertyBlock) {\n      needsSemicolon = true;\n    } else if (position < lastPropertyAt) {\n      needsSemicolon = true;\n    } else {\n      needsSemicolon = false;\n    }\n  } else {\n    needsSemicolon = position < lastPropertyAt || isPropertyBlock;\n  }\n\n  var isLast = position === lastPropertyAt;\n\n  switch (token[0]) {\n  case Token.AT_RULE:\n    store(context, token);\n    store(context, semicolon(context, Breaks.AfterProperty, false));\n    break;\n  case Token.AT_RULE_BLOCK:\n    rules(context, token[1]);\n    store(context, openBrace(context, Breaks.AfterRuleBegins, true));\n    body(context, token[2]);\n    store(context, closeBrace(context, Breaks.AfterRuleEnds, false, isLast));\n    break;\n  case Token.COMMENT:\n    store(context, token);\n    store(context, breakFor(context, Breaks.AfterComment) + context.indentWith);\n    break;\n  case Token.PROPERTY:\n    store(context, token[1]);\n    store(context, colon(context));\n    if (propertyValue) {\n      value(context, token);\n    }\n    store(\n      context,\n      needsSemicolon ? semicolon(context, Breaks.AfterProperty, isLast) : emptyCharacter\n    );\n    break;\n  case Token.RAW:\n    store(context, token);\n  }\n}\n\nfunction value(context, token) {\n  var store = context.store;\n  var j, m;\n\n  if (token[2][0] == Token.PROPERTY_BLOCK) {\n    store(context, openBrace(context, Breaks.AfterBlockBegins, false));\n    body(context, token[2][1]);\n    store(context, closeBrace(context, Breaks.AfterBlockEnds, false, true));\n  } else {\n    for (j = 2, m = token.length; j < m; j++) {\n      store(context, token[j]);\n\n      if (j < m - 1 && (inFilter(token) || !disallowsSpace(context, token, j))) {\n        store(context, Marker.SPACE);\n      }\n    }\n  }\n}\n\nfunction breakFor(context, where) {\n  return context.format ? context.format.breaks[where] : emptyCharacter;\n}\n\nfunction allowsSpace(context, where) {\n  return context.format && context.format.spaces[where];\n}\n\nfunction openBrace(context, where, needsPrefixSpace) {\n  if (context.format) {\n    context.indentBy += context.format.indentBy;\n    context.indentWith = context.format.indentWith.repeat(context.indentBy);\n    return (\n      needsPrefixSpace\n      && allowsSpace(context, Spaces.BeforeBlockBegins) ? Marker.SPACE : emptyCharacter\n    ) + Marker.OPEN_CURLY_BRACKET\n      + breakFor(context, where)\n      + context.indentWith;\n  }\n  return Marker.OPEN_CURLY_BRACKET;\n}\n\nfunction closeBrace(context, where, beforeBlockEnd, isLast) {\n  if (context.format) {\n    context.indentBy -= context.format.indentBy;\n    context.indentWith = context.format.indentWith.repeat(context.indentBy);\n    return (\n      beforeBlockEnd\n        ? breakFor(context, Breaks.BeforeBlockEnds)\n        : breakFor(context, Breaks.AfterProperty)\n    ) + context.indentWith\n      + Marker.CLOSE_CURLY_BRACKET\n      + (isLast ? emptyCharacter : breakFor(context, where) + context.indentWith);\n  }\n  return Marker.CLOSE_CURLY_BRACKET;\n}\n\nfunction colon(context) {\n  return context.format\n    ? Marker.COLON + (allowsSpace(context, Spaces.BeforeValue) ? Marker.SPACE : emptyCharacter)\n    : Marker.COLON;\n}\n\nfunction semicolon(context, where, isLast) {\n  return context.format\n    ? Marker.SEMICOLON + (isLast ? emptyCharacter : (breakFor(context, where) + context.indentWith))\n    : Marker.SEMICOLON;\n}\n\nfunction comma(context) {\n  return context.format\n    ? Marker.COMMA + breakFor(context, Breaks.BetweenSelectors) + context.indentWith\n    : Marker.COMMA;\n}\n\nfunction all(context, tokens) {\n  var store = context.store;\n  var token;\n  var isLast;\n  var i, l;\n\n  for (i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    isLast = i == l - 1;\n\n    switch (token[0]) {\n    case Token.AT_RULE:\n      store(context, token);\n      store(context, semicolon(context, Breaks.AfterAtRule, isLast));\n      break;\n    case Token.AT_RULE_BLOCK:\n      rules(context, token[1]);\n      store(context, openBrace(context, Breaks.AfterRuleBegins, true));\n      body(context, token[2]);\n      store(context, closeBrace(context, Breaks.AfterRuleEnds, false, isLast));\n      break;\n    case Token.NESTED_BLOCK:\n      rules(context, token[1]);\n      store(context, openBrace(context, Breaks.AfterBlockBegins, true));\n      all(context, token[2]);\n      store(context, closeBrace(context, Breaks.AfterBlockEnds, true, isLast));\n      break;\n    case Token.COMMENT:\n      store(context, token);\n      store(context, breakFor(context, Breaks.AfterComment) + context.indentWith);\n      break;\n    case Token.RAW:\n      store(context, token);\n      break;\n    case Token.RULE:\n      rules(context, token[1]);\n      store(context, openBrace(context, Breaks.AfterRuleBegins, true));\n      body(context, token[2]);\n      store(context, closeBrace(context, Breaks.AfterRuleEnds, false, isLast));\n      break;\n    }\n  }\n}\n\nmodule.exports = {\n  all: all,\n  body: body,\n  property: property,\n  rules: rules,\n  value: value\n};\n", "var helpers = require('./helpers');\n\nfunction store(serializeContext, token) {\n  serializeContext.output.push(typeof token == 'string' ? token : token[1]);\n}\n\nfunction context() {\n  var newContext = {\n    output: [],\n    store: store\n  };\n\n  return newContext;\n}\n\nfunction all(tokens) {\n  var oneTimeContext = context();\n  helpers.all(oneTimeContext, tokens);\n  return oneTimeContext.output.join('');\n}\n\nfunction body(tokens) {\n  var oneTimeContext = context();\n  helpers.body(oneTimeContext, tokens);\n  return oneTimeContext.output.join('');\n}\n\nfunction property(tokens, position) {\n  var oneTimeContext = context();\n  helpers.property(oneTimeContext, tokens, position, true);\n  return oneTimeContext.output.join('');\n}\n\nfunction rules(tokens) {\n  var oneTimeContext = context();\n  helpers.rules(oneTimeContext, tokens);\n  return oneTimeContext.output.join('');\n}\n\nfunction value(tokens) {\n  var oneTimeContext = context();\n  helpers.value(oneTimeContext, tokens);\n  return oneTimeContext.output.join('');\n}\n\nmodule.exports = {\n  all: all,\n  body: body,\n  property: property,\n  rules: rules,\n  value: value\n};\n", "var sortSelectors = require('./sort-selectors');\nvar tidyRules = require('./tidy-rules');\nvar tidyBlock = require('./tidy-block');\nvar tidyAtRule = require('./tidy-at-rule');\n\nvar Hack = require('../hack');\nvar removeUnused = require('../remove-unused');\nvar restoreFromOptimizing = require('../restore-from-optimizing');\nvar wrapForOptimizing = require('../wrap-for-optimizing').all;\n\nvar configuration = require('../configuration');\nvar optimizers = require('./value-optimizers');\n\nvar OptimizationLevel = require('../../options/optimization-level').OptimizationLevel;\n\nvar Token = require('../../tokenizer/token');\nvar Marker = require('../../tokenizer/marker');\n\nvar formatPosition = require('../../utils/format-position');\n\nvar serializeRules = require('../../writer/one-time').rules;\n\nvar CHARSET_TOKEN = '@charset';\nvar CHARSET_REGEXP = new RegExp('^' + CHARSET_TOKEN, 'i');\n\nvar DEFAULT_ROUNDING_PRECISION = require('../../options/rounding-precision').DEFAULT;\n\nvar VARIABLE_PROPERTY_NAME_PATTERN = /^--\\S+$/;\nvar PROPERTY_NAME_PATTERN = /^(?:-chrome-|-[\\w-]+\\w|\\w[\\w-]+\\w|\\w{1,})$/;\nvar IMPORT_PREFIX_PATTERN = /^@import/i;\nvar URL_PREFIX_PATTERN = /^url\\(/i;\n\nfunction startsAsUrl(value) {\n  return URL_PREFIX_PATTERN.test(value);\n}\n\nfunction isImport(token) {\n  return IMPORT_PREFIX_PATTERN.test(token[1]);\n}\n\nfunction isLegacyFilter(property) {\n  var value;\n\n  if (property.name == 'filter' || property.name == '-ms-filter') {\n    value = property.value[0][1];\n\n    return value.indexOf('progid') > -1\n      || value.indexOf('alpha') === 0\n      || value.indexOf('chroma') === 0;\n  }\n  return false;\n}\n\nfunction noop() {}\n\nfunction noopValueOptimizer(_name, value, _options) { return value; }\n\nfunction optimizeBody(rule, properties, context) {\n  var options = context.options;\n  var valueOptimizers;\n  var property, name, type, value;\n  var propertyToken;\n  var propertyOptimizer;\n  var serializedRule = serializeRules(rule);\n  var _properties = wrapForOptimizing(properties);\n  var pluginValueOptimizers = context.options.plugins.level1Value;\n  var pluginPropertyOptimizers = context.options.plugins.level1Property;\n  var isVariable;\n  var i, l;\n\n  for (i = 0, l = _properties.length; i < l; i++) {\n    var j, k, m, n;\n\n    property = _properties[i];\n    name = property.name;\n    propertyOptimizer = configuration[name] && configuration[name].propertyOptimizer || noop;\n    valueOptimizers = configuration[name] && configuration[name].valueOptimizers || [optimizers.whiteSpace];\n    isVariable = VARIABLE_PROPERTY_NAME_PATTERN.test(name);\n\n    if (isVariable) {\n      valueOptimizers = options.variableOptimizers.length > 0\n        ? options.variableOptimizers\n        : [optimizers.whiteSpace];\n    }\n\n    if (!isVariable && !PROPERTY_NAME_PATTERN.test(name)) {\n      propertyToken = property.all[property.position];\n      context.warnings.push('Invalid property name \\'' + name + '\\' at ' + formatPosition(propertyToken[1][2][0]) + '. Ignoring.');\n      property.unused = true;\n      continue;\n    }\n\n    if (property.value.length === 0) {\n      propertyToken = property.all[property.position];\n      context.warnings.push('Empty property \\'' + name + '\\' at ' + formatPosition(propertyToken[1][2][0]) + '. Ignoring.');\n      property.unused = true;\n      continue;\n    }\n\n    if (property.hack && (\n      (property.hack[0] == Hack.ASTERISK || property.hack[0] == Hack.UNDERSCORE)\n        && !options.compatibility.properties.iePrefixHack\n        || property.hack[0] == Hack.BACKSLASH && !options.compatibility.properties.ieSuffixHack\n        || property.hack[0] == Hack.BANG && !options.compatibility.properties.ieBangHack)) {\n      property.unused = true;\n      continue;\n    }\n\n    if (!options.compatibility.properties.ieFilters && isLegacyFilter(property)) {\n      property.unused = true;\n      continue;\n    }\n\n    if (property.block) {\n      optimizeBody(rule, property.value[0][1], context);\n      continue;\n    }\n\n    for (j = 0, m = property.value.length; j < m; j++) {\n      type = property.value[j][0];\n      value = property.value[j][1];\n\n      if (type == Token.PROPERTY_BLOCK) {\n        property.unused = true;\n        context.warnings.push('Invalid value token at ' + formatPosition(value[0][1][2][0]) + '. Ignoring.');\n        break;\n      }\n\n      if (startsAsUrl(value) && !context.validator.isUrl(value)) {\n        property.unused = true;\n        context.warnings.push('Broken URL \\'' + value + '\\' at ' + formatPosition(property.value[j][2][0]) + '. Ignoring.');\n        break;\n      }\n\n      for (k = 0, n = valueOptimizers.length; k < n; k++) {\n        value = valueOptimizers[k](name, value, options);\n      }\n\n      for (k = 0, n = pluginValueOptimizers.length; k < n; k++) {\n        value = pluginValueOptimizers[k](name, value, options);\n      }\n\n      property.value[j][1] = value;\n    }\n\n    propertyOptimizer(serializedRule, property, options);\n\n    for (j = 0, m = pluginPropertyOptimizers.length; j < m; j++) {\n      pluginPropertyOptimizers[j](serializedRule, property, options);\n    }\n  }\n\n  restoreFromOptimizing(_properties);\n  removeUnused(_properties);\n  removeComments(properties, options);\n}\n\nfunction removeComments(tokens, options) {\n  var token;\n  var i;\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    if (token[0] != Token.COMMENT) {\n      continue;\n    }\n\n    optimizeComment(token, options);\n\n    if (token[1].length === 0) {\n      tokens.splice(i, 1);\n      i--;\n    }\n  }\n}\n\nfunction optimizeComment(token, options) {\n  if (token[1][2] == Marker.EXCLAMATION && (options.level[OptimizationLevel.One].specialComments == 'all' || options.commentsKept < options.level[OptimizationLevel.One].specialComments)) {\n    options.commentsKept++;\n    return;\n  }\n\n  token[1] = [];\n}\n\nfunction cleanupCharsets(tokens) {\n  var hasCharset = false;\n\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    var token = tokens[i];\n\n    if (token[0] != Token.AT_RULE) { continue; }\n\n    if (!CHARSET_REGEXP.test(token[1])) { continue; }\n\n    if (hasCharset || token[1].indexOf(CHARSET_TOKEN) == -1) {\n      tokens.splice(i, 1);\n      i--;\n      l--;\n    } else {\n      hasCharset = true;\n      tokens.splice(i, 1);\n      tokens.unshift([Token.AT_RULE, token[1].replace(CHARSET_REGEXP, CHARSET_TOKEN)]);\n    }\n  }\n}\n\nfunction buildUnitRegexp(options) {\n  var units = ['px', 'em', 'ex', 'cm', 'mm', 'in', 'pt', 'pc', '%'];\n  var otherUnits = ['ch', 'rem', 'vh', 'vm', 'vmax', 'vmin', 'vw'];\n\n  otherUnits.forEach(function(unit) {\n    if (options.compatibility.units[unit]) {\n      units.push(unit);\n    }\n  });\n\n  return new RegExp('(^|\\\\s|\\\\(|,)0(?:' + units.join('|') + ')(\\\\W|$)', 'g');\n}\n\nfunction buildPrecisionOptions(roundingPrecision) {\n  var precisionOptions = {\n    matcher: null,\n    units: {}\n  };\n  var optimizable = [];\n  var unit;\n  var value;\n\n  for (unit in roundingPrecision) {\n    value = roundingPrecision[unit];\n\n    if (value != DEFAULT_ROUNDING_PRECISION) {\n      precisionOptions.units[unit] = {};\n      precisionOptions.units[unit].value = value;\n      precisionOptions.units[unit].multiplier = 10 ** value;\n\n      optimizable.push(unit);\n    }\n  }\n\n  if (optimizable.length > 0) {\n    precisionOptions.enabled = true;\n    precisionOptions.decimalPointMatcher = new RegExp('(\\\\d)\\\\.($|' + optimizable.join('|') + ')($|\\\\W)', 'g');\n    precisionOptions.zeroMatcher = new RegExp('(\\\\d*)(\\\\.\\\\d+)(' + optimizable.join('|') + ')', 'g');\n  }\n\n  return precisionOptions;\n}\n\nfunction buildVariableOptimizers(options) {\n  return options.level[OptimizationLevel.One].variableValueOptimizers.map(function(optimizer) {\n    if (typeof (optimizer) == 'string') {\n      return optimizers[optimizer] || noopValueOptimizer;\n    }\n\n    return optimizer;\n  });\n}\n\nfunction level1Optimize(tokens, context) {\n  var options = context.options;\n  var levelOptions = options.level[OptimizationLevel.One];\n  var ie7Hack = options.compatibility.selectors.ie7Hack;\n  var adjacentSpace = options.compatibility.selectors.adjacentSpace;\n  var spaceAfterClosingBrace = options.compatibility.properties.spaceAfterClosingBrace;\n  var format = options.format;\n  var mayHaveCharset = false;\n  var afterRules = false;\n\n  options.unitsRegexp = options.unitsRegexp || buildUnitRegexp(options);\n  options.precision = options.precision || buildPrecisionOptions(levelOptions.roundingPrecision);\n  options.commentsKept = options.commentsKept || 0;\n  options.variableOptimizers = options.variableOptimizers || buildVariableOptimizers(options);\n\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    var token = tokens[i];\n\n    switch (token[0]) {\n    case Token.AT_RULE:\n      token[1] = isImport(token) && afterRules ? '' : token[1];\n      token[1] = levelOptions.tidyAtRules ? tidyAtRule(token[1]) : token[1];\n      mayHaveCharset = true;\n      break;\n    case Token.AT_RULE_BLOCK:\n      optimizeBody(token[1], token[2], context);\n      afterRules = true;\n      break;\n    case Token.NESTED_BLOCK:\n      token[1] = levelOptions.tidyBlockScopes ? tidyBlock(token[1], spaceAfterClosingBrace) : token[1];\n      level1Optimize(token[2], context);\n      afterRules = true;\n      break;\n    case Token.COMMENT:\n      optimizeComment(token, options);\n      break;\n    case Token.RULE:\n      token[1] = levelOptions.tidySelectors\n        ? tidyRules(token[1], !ie7Hack, adjacentSpace, format, context.warnings)\n        : token[1];\n      token[1] = token[1].length > 1 ? sortSelectors(token[1], levelOptions.selectorsSortingMethod) : token[1];\n      optimizeBody(token[1], token[2], context);\n      afterRules = true;\n      break;\n    }\n\n    if (token[0] == Token.COMMENT\n      && token[1].length === 0\n      || levelOptions.removeEmpty\n      && (token[1].length === 0 || (token[2] && token[2].length === 0))) {\n      tokens.splice(i, 1);\n      i--;\n      l--;\n    }\n  }\n\n  if (levelOptions.cleanupCharsets && mayHaveCharset) {\n    cleanupCharsets(tokens);\n  }\n\n  return tokens;\n}\n\nmodule.exports = level1Optimize;\n", "var Marker = require('../../tokenizer/marker');\nvar split = require('../../utils/split');\n\nvar DEEP_SELECTOR_PATTERN = /\\/deep\\//;\nvar DOUBLE_COLON_PATTERN = /^::/;\nvar VENDOR_PREFIXED_PATTERN = /:(-moz-|-ms-|-o-|-webkit-)/;\n\nvar NOT_PSEUDO = ':not';\nvar PSEUDO_CLASSES_WITH_ARGUMENTS = [\n  ':dir',\n  ':lang',\n  ':not',\n  ':nth-child',\n  ':nth-last-child',\n  ':nth-last-of-type',\n  ':nth-of-type'\n];\nvar RELATION_PATTERN = /[>+~]/;\nvar UNMIXABLE_PSEUDO_CLASSES = [\n  ':after',\n  ':before',\n  ':first-letter',\n  ':first-line',\n  ':lang'\n];\nvar UNMIXABLE_PSEUDO_ELEMENTS = [\n  '::after',\n  '::before',\n  '::first-letter',\n  '::first-line'\n];\n\nvar Level = {\n  DOUBLE_QUOTE: 'double-quote',\n  SINGLE_QUOTE: 'single-quote',\n  ROOT: 'root'\n};\n\nfunction isMergeable(selector, mergeablePseudoClasses, mergeablePseudoElements, multiplePseudoMerging) {\n  var singleSelectors = split(selector, Marker.COMMA);\n  var singleSelector;\n  var i, l;\n\n  for (i = 0, l = singleSelectors.length; i < l; i++) {\n    singleSelector = singleSelectors[i];\n\n    if (singleSelector.length === 0\n        || isDeepSelector(singleSelector)\n        || isVendorPrefixed(singleSelector)\n        || (singleSelector.indexOf(Marker.COLON) > -1\n          && !areMergeable(\n            singleSelector,\n            extractPseudoFrom(singleSelector),\n            mergeablePseudoClasses,\n            mergeablePseudoElements,\n            multiplePseudoMerging\n          ))) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isDeepSelector(selector) {\n  return DEEP_SELECTOR_PATTERN.test(selector);\n}\n\nfunction isVendorPrefixed(selector) {\n  return VENDOR_PREFIXED_PATTERN.test(selector);\n}\n\nfunction extractPseudoFrom(selector) {\n  var list = [];\n  var character;\n  var buffer = [];\n  var level = Level.ROOT;\n  var roundBracketLevel = 0;\n  var isQuoted;\n  var isEscaped;\n  var isPseudo = false;\n  var isRelation;\n  var wasColon = false;\n  var index;\n  var len;\n\n  for (index = 0, len = selector.length; index < len; index++) {\n    character = selector[index];\n\n    isRelation = !isEscaped && RELATION_PATTERN.test(character);\n    isQuoted = level == Level.DOUBLE_QUOTE || level == Level.SINGLE_QUOTE;\n\n    if (isEscaped) {\n      buffer.push(character);\n    } else if (character == Marker.DOUBLE_QUOTE && level == Level.ROOT) {\n      buffer.push(character);\n      level = Level.DOUBLE_QUOTE;\n    } else if (character == Marker.DOUBLE_QUOTE && level == Level.DOUBLE_QUOTE) {\n      buffer.push(character);\n      level = Level.ROOT;\n    } else if (character == Marker.SINGLE_QUOTE && level == Level.ROOT) {\n      buffer.push(character);\n      level = Level.SINGLE_QUOTE;\n    } else if (character == Marker.SINGLE_QUOTE && level == Level.SINGLE_QUOTE) {\n      buffer.push(character);\n      level = Level.ROOT;\n    } else if (isQuoted) {\n      buffer.push(character);\n    } else if (character == Marker.OPEN_ROUND_BRACKET) {\n      buffer.push(character);\n      roundBracketLevel++;\n    } else if (character == Marker.CLOSE_ROUND_BRACKET && roundBracketLevel == 1 && isPseudo) {\n      buffer.push(character);\n      list.push(buffer.join(''));\n      roundBracketLevel--;\n      buffer = [];\n      isPseudo = false;\n    } else if (character == Marker.CLOSE_ROUND_BRACKET) {\n      buffer.push(character);\n      roundBracketLevel--;\n    } else if (character == Marker.COLON && roundBracketLevel === 0 && isPseudo && !wasColon) {\n      list.push(buffer.join(''));\n      buffer = [];\n      buffer.push(character);\n    } else if (character == Marker.COLON && roundBracketLevel === 0 && !wasColon) {\n      buffer = [];\n      buffer.push(character);\n      isPseudo = true;\n    } else if (character == Marker.SPACE && roundBracketLevel === 0 && isPseudo) {\n      list.push(buffer.join(''));\n      buffer = [];\n      isPseudo = false;\n    } else if (isRelation && roundBracketLevel === 0 && isPseudo) {\n      list.push(buffer.join(''));\n      buffer = [];\n      isPseudo = false;\n    } else {\n      buffer.push(character);\n    }\n\n    isEscaped = character == Marker.BACK_SLASH;\n    wasColon = character == Marker.COLON;\n  }\n\n  if (buffer.length > 0 && isPseudo) {\n    list.push(buffer.join(''));\n  }\n\n  return list;\n}\n\nfunction areMergeable(selector, matches, mergeablePseudoClasses, mergeablePseudoElements, multiplePseudoMerging) {\n  return areAllowed(matches, mergeablePseudoClasses, mergeablePseudoElements)\n    && needArguments(matches)\n    && (matches.length < 2 || !someIncorrectlyChained(selector, matches))\n    && (matches.length < 2 || multiplePseudoMerging && allMixable(matches));\n}\n\nfunction areAllowed(matches, mergeablePseudoClasses, mergeablePseudoElements) {\n  var match;\n  var name;\n  var i, l;\n\n  for (i = 0, l = matches.length; i < l; i++) {\n    match = matches[i];\n    name = match.indexOf(Marker.OPEN_ROUND_BRACKET) > -1\n      ? match.substring(0, match.indexOf(Marker.OPEN_ROUND_BRACKET))\n      : match;\n\n    if (mergeablePseudoClasses.indexOf(name) === -1 && mergeablePseudoElements.indexOf(name) === -1) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction needArguments(matches) {\n  var match;\n  var name;\n  var bracketOpensAt;\n  var hasArguments;\n  var i, l;\n\n  for (i = 0, l = matches.length; i < l; i++) {\n    match = matches[i];\n\n    bracketOpensAt = match.indexOf(Marker.OPEN_ROUND_BRACKET);\n    hasArguments = bracketOpensAt > -1;\n    name = hasArguments\n      ? match.substring(0, bracketOpensAt)\n      : match;\n\n    if (hasArguments && PSEUDO_CLASSES_WITH_ARGUMENTS.indexOf(name) == -1) {\n      return false;\n    }\n\n    if (!hasArguments && PSEUDO_CLASSES_WITH_ARGUMENTS.indexOf(name) > -1) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction someIncorrectlyChained(selector, matches) {\n  var positionInSelector = 0;\n  var match;\n  var matchAt;\n  var nextMatch;\n  var nextMatchAt;\n  var name;\n  var nextName;\n  var areChained;\n  var i, l;\n\n  for (i = 0, l = matches.length; i < l; i++) {\n    match = matches[i];\n    nextMatch = matches[i + 1];\n\n    if (!nextMatch) {\n      break;\n    }\n\n    matchAt = selector.indexOf(match, positionInSelector);\n    nextMatchAt = selector.indexOf(match, matchAt + 1);\n    positionInSelector = nextMatchAt;\n    areChained = matchAt + match.length == nextMatchAt;\n\n    if (areChained) {\n      name = match.indexOf(Marker.OPEN_ROUND_BRACKET) > -1\n        ? match.substring(0, match.indexOf(Marker.OPEN_ROUND_BRACKET))\n        : match;\n      nextName = nextMatch.indexOf(Marker.OPEN_ROUND_BRACKET) > -1\n        ? nextMatch.substring(0, nextMatch.indexOf(Marker.OPEN_ROUND_BRACKET))\n        : nextMatch;\n\n      if (name != NOT_PSEUDO || nextName != NOT_PSEUDO) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction allMixable(matches) {\n  var unmixableMatches = 0;\n  var match;\n  var i, l;\n\n  for (i = 0, l = matches.length; i < l; i++) {\n    match = matches[i];\n\n    if (isPseudoElement(match)) {\n      unmixableMatches += UNMIXABLE_PSEUDO_ELEMENTS.indexOf(match) > -1 ? 1 : 0;\n    } else {\n      unmixableMatches += UNMIXABLE_PSEUDO_CLASSES.indexOf(match) > -1 ? 1 : 0;\n    }\n\n    if (unmixableMatches > 1) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isPseudoElement(pseudo) {\n  return DOUBLE_COLON_PATTERN.test(pseudo);\n}\n\nmodule.exports = isMergeable;\n", "var Marker = require('../../../tokenizer/marker');\n\nfunction everyValuesPair(fn, left, right) {\n  var leftSize = left.value.length;\n  var rightSize = right.value.length;\n  var total = Math.max(leftSize, rightSize);\n  var lowerBound = Math.min(leftSize, rightSize) - 1;\n  var leftValue;\n  var rightValue;\n  var position;\n\n  for (position = 0; position < total; position++) {\n    leftValue = left.value[position] && left.value[position][1] || leftValue;\n    rightValue = right.value[position] && right.value[position][1] || rightValue;\n\n    if (leftValue == Marker.COMMA || rightValue == Marker.COMMA) {\n      continue;\n    }\n\n    if (!fn(leftValue, rightValue, position, position <= lowerBound)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = everyValuesPair;\n", "function hasInherit(property) {\n  for (var i = property.value.length - 1; i >= 0; i--) {\n    if (property.value[i][1] == 'inherit') { return true; }\n  }\n\n  return false;\n}\n\nmodule.exports = hasInherit;\n", "function hasSameValues(property) {\n  var firstValue = property.value[0][1];\n  var i, l;\n\n  for (i = 1, l = property.value.length; i < l; i++) {\n    if (property.value[i][1] != firstValue) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = hasSameValues;\n", "var configuration = require('../../configuration');\nvar InvalidPropertyError = require('../../invalid-property-error');\n\nfunction populateComponents(properties, validator, warnings) {\n  var component;\n  var j, m;\n\n  for (var i = properties.length - 1; i >= 0; i--) {\n    var property = properties[i];\n    var descriptor = configuration[property.name];\n\n    if (!property.dynamic && descriptor && descriptor.shorthand) {\n      if (onlyValueIsVariable(property, validator) || moreThanOneValueIsVariable(property, validator)) {\n        property.optimizable = false;\n        continue;\n      }\n\n      property.shorthand = true;\n      property.dirty = true;\n\n      try {\n        property.components = descriptor.breakUp(property, configuration, validator);\n\n        if (descriptor.shorthandComponents) {\n          for (j = 0, m = property.components.length; j < m; j++) {\n            component = property.components[j];\n            component.components = configuration[component.name].breakUp(component, configuration, validator);\n          }\n        }\n      } catch (e) {\n        if (e instanceof InvalidPropertyError) {\n          property.components = []; // this will set property.unused to true below\n          warnings.push(e.message);\n        } else {\n          throw e;\n        }\n      }\n\n      if (property.components.length > 0) {\n        property.multiplex = property.components[0].multiplex;\n      } else {\n        property.unused = true;\n      }\n    }\n  }\n}\n\nfunction onlyValueIsVariable(property, validator) {\n  return property.value.length == 1 && validator.isVariable(property.value[0][1]);\n}\n\nfunction moreThanOneValueIsVariable(property, validator) {\n  return property.value.length > 1\n    && property.value.filter(\n      function(value) {\n        return validator.isVariable(value[1]);\n      }\n    ).length > 1;\n}\n\nmodule.exports = populateComponents;\n", "var configuration = require('../configuration');\n\nfunction restoreWithComponents(property) {\n  var descriptor = configuration[property.name];\n\n  if (descriptor && descriptor.shorthand) {\n    return descriptor.restore(property, configuration);\n  }\n  return property.value;\n}\n\nmodule.exports = restoreWithComponents;\n", "var everyValuesPair = require('./every-values-pair');\nvar hasInherit = require('./has-inherit');\nvar hasSameValues = require('./has-same-values');\nvar populateComponents = require('./populate-components');\n\nvar configuration = require('../../configuration');\nvar deepClone = require('../../clone').deep;\nvar restoreWithComponents = require('../restore-with-components');\n\nvar restoreFromOptimizing = require('../../restore-from-optimizing');\nvar wrapSingle = require('../../wrap-for-optimizing').single;\n\nvar serializeBody = require('../../../writer/one-time').body;\nvar Token = require('../../../tokenizer/token');\n\nfunction mergeIntoShorthands(properties, validator) {\n  var candidates = {};\n  var descriptor;\n  var componentOf;\n  var property;\n  var i, l;\n  var j, m;\n\n  // there is no shorthand property made up of less than 3 longhands\n  if (properties.length < 3) {\n    return;\n  }\n\n  for (i = 0, l = properties.length; i < l; i++) {\n    property = properties[i];\n    descriptor = configuration[property.name];\n\n    if (property.dynamic) {\n      continue;\n    }\n\n    if (property.unused) {\n      continue;\n    }\n\n    if (property.hack) {\n      continue;\n    }\n\n    if (property.block) {\n      continue;\n    }\n\n    if (descriptor && descriptor.singleTypeComponents && !hasSameValues(property)) {\n      continue;\n    }\n\n    invalidateOrCompact(properties, i, candidates, validator);\n\n    if (descriptor && descriptor.componentOf) {\n      for (j = 0, m = descriptor.componentOf.length; j < m; j++) {\n        componentOf = descriptor.componentOf[j];\n\n        candidates[componentOf] = candidates[componentOf] || {};\n        candidates[componentOf][property.name] = property;\n      }\n    }\n  }\n\n  invalidateOrCompact(properties, i, candidates, validator);\n}\n\nfunction invalidateOrCompact(properties, position, candidates, validator) {\n  var invalidatedBy = properties[position];\n  var shorthandName;\n  var shorthandDescriptor;\n  var candidateComponents;\n  var replacedCandidates = [];\n  var i;\n\n  for (shorthandName in candidates) {\n    if (undefined !== invalidatedBy && shorthandName == invalidatedBy.name) {\n      continue;\n    }\n\n    shorthandDescriptor = configuration[shorthandName];\n    candidateComponents = candidates[shorthandName];\n    if (invalidatedBy && invalidates(candidates, shorthandName, invalidatedBy)) {\n      delete candidates[shorthandName];\n      continue;\n    }\n\n    if (shorthandDescriptor.components.length > Object.keys(candidateComponents).length) {\n      continue;\n    }\n\n    if (mixedImportance(candidateComponents)) {\n      continue;\n    }\n\n    if (!overridable(candidateComponents, shorthandName, validator)) {\n      continue;\n    }\n\n    if (!mergeable(candidateComponents)) {\n      continue;\n    }\n\n    if (mixedInherit(candidateComponents)) {\n      replaceWithInheritBestFit(properties, candidateComponents, shorthandName, validator);\n    } else {\n      replaceWithShorthand(properties, candidateComponents, shorthandName, validator);\n    }\n\n    replacedCandidates.push(shorthandName);\n  }\n\n  for (i = replacedCandidates.length - 1; i >= 0; i--) {\n    delete candidates[replacedCandidates[i]];\n  }\n}\n\nfunction invalidates(candidates, shorthandName, invalidatedBy) {\n  var shorthandDescriptor = configuration[shorthandName];\n  var invalidatedByDescriptor = configuration[invalidatedBy.name];\n  var componentName;\n\n  if ('overridesShorthands' in shorthandDescriptor && shorthandDescriptor.overridesShorthands.indexOf(invalidatedBy.name) > -1) {\n    return true;\n  }\n\n  if (invalidatedByDescriptor && 'componentOf' in invalidatedByDescriptor) {\n    for (componentName in candidates[shorthandName]) {\n      if (invalidatedByDescriptor.componentOf.indexOf(componentName) > -1) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction mixedImportance(components) {\n  var important;\n  var componentName;\n\n  for (componentName in components) {\n    if (undefined !== important && components[componentName].important != important) {\n      return true;\n    }\n\n    important = components[componentName].important;\n  }\n\n  return false;\n}\n\nfunction overridable(components, shorthandName, validator) {\n  var descriptor = configuration[shorthandName];\n  var newValuePlaceholder = [\n    Token.PROPERTY,\n    [Token.PROPERTY_NAME, shorthandName],\n    [Token.PROPERTY_VALUE, descriptor.defaultValue]\n  ];\n  var newProperty = wrapSingle(newValuePlaceholder);\n  var component;\n  var mayOverride;\n  var i, l;\n\n  populateComponents([newProperty], validator, []);\n\n  for (i = 0, l = descriptor.components.length; i < l; i++) {\n    component = components[descriptor.components[i]];\n    mayOverride = configuration[component.name].canOverride || sameValue;\n\n    if (!everyValuesPair(mayOverride.bind(null, validator), newProperty.components[i], component)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction sameValue(_validator, value1, value2) {\n  return value1 === value2;\n}\n\nfunction mergeable(components) {\n  var lastCount = null;\n  var currentCount;\n  var componentName;\n  var component;\n  var descriptor;\n  var values;\n\n  for (componentName in components) {\n    component = components[componentName];\n    descriptor = configuration[componentName];\n\n    if (!('restore' in descriptor)) {\n      continue;\n    }\n\n    restoreFromOptimizing([component.all[component.position]], restoreWithComponents);\n    values = descriptor.restore(component, configuration);\n\n    currentCount = values.length;\n\n    if (lastCount !== null && currentCount !== lastCount) {\n      return false;\n    }\n\n    lastCount = currentCount;\n  }\n\n  return true;\n}\n\nfunction mixedInherit(components) {\n  var componentName;\n  var lastValue = null;\n  var currentValue;\n\n  for (componentName in components) {\n    currentValue = hasInherit(components[componentName]);\n\n    if (lastValue !== null && lastValue !== currentValue) {\n      return true;\n    }\n\n    lastValue = currentValue;\n  }\n\n  return false;\n}\n\nfunction replaceWithInheritBestFit(properties, candidateComponents, shorthandName, validator) {\n  var viaLonghands = buildSequenceWithInheritLonghands(candidateComponents, shorthandName, validator);\n  var viaShorthand = buildSequenceWithInheritShorthand(candidateComponents, shorthandName, validator);\n  var longhandTokensSequence = viaLonghands[0];\n  var shorthandTokensSequence = viaShorthand[0];\n  var isLonghandsShorter = serializeBody(longhandTokensSequence).length < serializeBody(shorthandTokensSequence).length;\n  var newTokensSequence = isLonghandsShorter ? longhandTokensSequence : shorthandTokensSequence;\n  var newProperty = isLonghandsShorter ? viaLonghands[1] : viaShorthand[1];\n  var newComponents = isLonghandsShorter ? viaLonghands[2] : viaShorthand[2];\n  var lastComponent = candidateComponents[Object.keys(candidateComponents).pop()];\n  var all = lastComponent.all;\n  var insertAt = lastComponent.position;\n  var componentName;\n  var oldComponent;\n  var newComponent;\n  var newToken;\n\n  newProperty.position = insertAt;\n  newProperty.shorthand = true;\n  newProperty.important = lastComponent.important;\n  newProperty.multiplex = false;\n  newProperty.dirty = true;\n  newProperty.all = all;\n  newProperty.all[insertAt] = newTokensSequence[0];\n\n  properties.splice(insertAt, 1, newProperty);\n\n  for (componentName in candidateComponents) {\n    oldComponent = candidateComponents[componentName];\n    oldComponent.unused = true;\n\n    newProperty.multiplex = newProperty.multiplex || oldComponent.multiplex;\n\n    if (oldComponent.name in newComponents) {\n      newComponent = newComponents[oldComponent.name];\n      newToken = findTokenIn(newTokensSequence, componentName);\n\n      newComponent.position = all.length;\n      newComponent.all = all;\n      newComponent.all.push(newToken);\n\n      properties.push(newComponent);\n    }\n  }\n}\n\nfunction buildSequenceWithInheritLonghands(components, shorthandName, validator) {\n  var tokensSequence = [];\n  var inheritComponents = {};\n  var nonInheritComponents = {};\n  var descriptor = configuration[shorthandName];\n  var shorthandToken = [\n    Token.PROPERTY,\n    [Token.PROPERTY_NAME, shorthandName],\n    [Token.PROPERTY_VALUE, descriptor.defaultValue]\n  ];\n  var newProperty = wrapSingle(shorthandToken);\n  var component;\n  var longhandToken;\n  var newComponent;\n  var nameMetadata;\n  var i, l;\n\n  populateComponents([newProperty], validator, []);\n\n  for (i = 0, l = descriptor.components.length; i < l; i++) {\n    component = components[descriptor.components[i]];\n\n    if (hasInherit(component)) {\n      longhandToken = component.all[component.position].slice(0, 2);\n      Array.prototype.push.apply(longhandToken, component.value);\n      tokensSequence.push(longhandToken);\n\n      newComponent = deepClone(component);\n      newComponent.value = inferComponentValue(components, newComponent.name);\n\n      newProperty.components[i] = newComponent;\n      inheritComponents[component.name] = deepClone(component);\n    } else {\n      newComponent = deepClone(component);\n      newComponent.all = component.all;\n      newProperty.components[i] = newComponent;\n\n      nonInheritComponents[component.name] = component;\n    }\n  }\n\n  newProperty.important = components[Object.keys(components).pop()].important;\n\n  nameMetadata = joinMetadata(nonInheritComponents, 1);\n  shorthandToken[1].push(nameMetadata);\n\n  restoreFromOptimizing([newProperty], restoreWithComponents);\n\n  shorthandToken = shorthandToken.slice(0, 2);\n  Array.prototype.push.apply(shorthandToken, newProperty.value);\n\n  tokensSequence.unshift(shorthandToken);\n\n  return [tokensSequence, newProperty, inheritComponents];\n}\n\nfunction inferComponentValue(components, propertyName) {\n  var descriptor = configuration[propertyName];\n\n  if ('oppositeTo' in descriptor) {\n    return components[descriptor.oppositeTo].value;\n  }\n  return [[Token.PROPERTY_VALUE, descriptor.defaultValue]];\n}\n\nfunction joinMetadata(components, at) {\n  var metadata = [];\n  var component;\n  var originalValue;\n  var componentMetadata;\n  var componentName;\n\n  for (componentName in components) {\n    component = components[componentName];\n    originalValue = component.all[component.position];\n    componentMetadata = originalValue[at][originalValue[at].length - 1];\n\n    Array.prototype.push.apply(metadata, componentMetadata);\n  }\n\n  return metadata.sort(metadataSorter);\n}\n\nfunction metadataSorter(metadata1, metadata2) {\n  var line1 = metadata1[0];\n  var line2 = metadata2[0];\n  var column1 = metadata1[1];\n  var column2 = metadata2[1];\n\n  if (line1 < line2) {\n    return -1;\n  } if (line1 === line2) {\n    return column1 < column2 ? -1 : 1;\n  }\n  return 1;\n}\n\nfunction buildSequenceWithInheritShorthand(components, shorthandName, validator) {\n  var tokensSequence = [];\n  var inheritComponents = {};\n  var nonInheritComponents = {};\n  var descriptor = configuration[shorthandName];\n  var shorthandToken = [\n    Token.PROPERTY,\n    [Token.PROPERTY_NAME, shorthandName],\n    [Token.PROPERTY_VALUE, 'inherit']\n  ];\n  var newProperty = wrapSingle(shorthandToken);\n  var component;\n  var longhandToken;\n  var nameMetadata;\n  var valueMetadata;\n  var i, l;\n\n  populateComponents([newProperty], validator, []);\n\n  for (i = 0, l = descriptor.components.length; i < l; i++) {\n    component = components[descriptor.components[i]];\n\n    if (hasInherit(component)) {\n      inheritComponents[component.name] = component;\n    } else {\n      longhandToken = component.all[component.position].slice(0, 2);\n      Array.prototype.push.apply(longhandToken, component.value);\n      tokensSequence.push(longhandToken);\n\n      nonInheritComponents[component.name] = deepClone(component);\n    }\n  }\n\n  nameMetadata = joinMetadata(inheritComponents, 1);\n  shorthandToken[1].push(nameMetadata);\n\n  valueMetadata = joinMetadata(inheritComponents, 2);\n  shorthandToken[2].push(valueMetadata);\n\n  tokensSequence.unshift(shorthandToken);\n\n  return [tokensSequence, newProperty, nonInheritComponents];\n}\n\nfunction findTokenIn(tokens, componentName) {\n  var i, l;\n\n  for (i = 0, l = tokens.length; i < l; i++) {\n    if (tokens[i][1][1] == componentName) {\n      return tokens[i];\n    }\n  }\n}\n\nfunction replaceWithShorthand(properties, candidateComponents, shorthandName, validator) {\n  var descriptor = configuration[shorthandName];\n  var nameMetadata;\n  var valueMetadata;\n  var newValuePlaceholder = [\n    Token.PROPERTY,\n    [Token.PROPERTY_NAME, shorthandName],\n    [Token.PROPERTY_VALUE, descriptor.defaultValue]\n  ];\n  var all;\n  var insertAt = inferInsertAtFrom(properties, candidateComponents, shorthandName);\n\n  var newProperty = wrapSingle(newValuePlaceholder);\n  newProperty.shorthand = true;\n  newProperty.dirty = true;\n  newProperty.multiplex = false;\n\n  populateComponents([newProperty], validator, []);\n\n  for (var i = 0, l = descriptor.components.length; i < l; i++) {\n    var component = candidateComponents[descriptor.components[i]];\n\n    newProperty.components[i] = deepClone(component);\n    newProperty.important = component.important;\n    newProperty.multiplex = newProperty.multiplex || component.multiplex;\n\n    all = component.all;\n  }\n\n  for (var componentName in candidateComponents) {\n    candidateComponents[componentName].unused = true;\n  }\n\n  nameMetadata = joinMetadata(candidateComponents, 1);\n  newValuePlaceholder[1].push(nameMetadata);\n\n  valueMetadata = joinMetadata(candidateComponents, 2);\n  newValuePlaceholder[2].push(valueMetadata);\n\n  newProperty.position = insertAt;\n  newProperty.all = all;\n  newProperty.all[insertAt] = newValuePlaceholder;\n\n  properties.splice(insertAt, 1, newProperty);\n}\n\nfunction inferInsertAtFrom(properties, candidateComponents, shorthandName) {\n  var candidateComponentNames = Object.keys(candidateComponents);\n  var firstCandidatePosition = candidateComponents[candidateComponentNames[0]].position;\n  var lastCandidatePosition = candidateComponents[candidateComponentNames[candidateComponentNames.length - 1]].position;\n\n  if (shorthandName == 'border' && traversesVia(properties.slice(firstCandidatePosition, lastCandidatePosition), 'border-image')) {\n    return firstCandidatePosition;\n  }\n  return lastCandidatePosition;\n}\n\nfunction traversesVia(properties, propertyName) {\n  for (var i = properties.length - 1; i >= 0; i--) {\n    if (properties[i].name == propertyName) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = mergeIntoShorthands;\n", "function hasUnset(property) {\n  for (var i = property.value.length - 1; i >= 0; i--) {\n    if (property.value[i][1] == 'unset') { return true; }\n  }\n\n  return false;\n}\n\nmodule.exports = hasUnset;\n", "var configuration = require('../../configuration');\n\nfunction findComponentIn(shorthand, longhand) {\n  var comparator = nameComparator(longhand);\n\n  return findInDirectComponents(shorthand, comparator) || findInSubComponents(shorthand, comparator);\n}\n\nfunction nameComparator(to) {\n  return function(property) {\n    return to.name === property.name;\n  };\n}\n\nfunction findInDirectComponents(shorthand, comparator) {\n  return shorthand.components.filter(comparator)[0];\n}\n\nfunction findInSubComponents(shorthand, comparator) {\n  var shorthandComponent;\n  var longhandMatch;\n  var i, l;\n\n  if (!configuration[shorthand.name].shorthandComponents) {\n    return;\n  }\n\n  for (i = 0, l = shorthand.components.length; i < l; i++) {\n    shorthandComponent = shorthand.components[i];\n    longhandMatch = findInDirectComponents(shorthandComponent, comparator);\n\n    if (longhandMatch) {\n      return longhandMatch;\n    }\n  }\n}\n\nmodule.exports = findComponentIn;\n", "var configuration = require('../../configuration');\n\nfunction isComponentOf(property1, property2, shallow) {\n  return isDirectComponentOf(property1, property2)\n    || !shallow && !!configuration[property1.name].shorthandComponents && isSubComponentOf(property1, property2);\n}\n\nfunction isDirectComponentOf(property1, property2) {\n  var descriptor = configuration[property1.name];\n\n  return 'components' in descriptor && descriptor.components.indexOf(property2.name) > -1;\n}\n\nfunction isSubComponentOf(property1, property2) {\n  return property1\n    .components\n    .some(function(component) {\n      return isDirectComponentOf(component, property2);\n    });\n}\n\nmodule.exports = isComponentOf;\n", "var Marker = require('../../../tokenizer/marker');\n\nfunction isMergeableShorthand(shorthand) {\n  if (shorthand.name != 'font') {\n    return true;\n  }\n\n  return shorthand.value[0][1].indexOf(Marker.INTERNAL) == -1;\n}\n\nmodule.exports = isMergeableShorthand;\n", "var configuration = require('../../configuration');\n\nfunction overridesNonComponentShorthand(property1, property2) {\n  return property1.name in configuration\n    && 'overridesShorthands' in configuration[property1.name]\n    && configuration[property1.name].overridesShorthands.indexOf(property2.name) > -1;\n}\n\nmodule.exports = overridesNonComponentShorthand;\n", "var hasInherit = require('./has-inherit');\nvar hasUnset = require('./has-unset');\nvar everyValuesPair = require('./every-values-pair');\nvar findComponentIn = require('./find-component-in');\nvar isComponentOf = require('./is-component-of');\nvar isMergeableShorthand = require('./is-mergeable-shorthand');\nvar overridesNonComponentShorthand = require('./overrides-non-component-shorthand');\nvar sameVendorPrefixesIn = require('./../../vendor-prefixes').same;\n\nvar configuration = require('../../configuration');\nvar deepClone = require('../../clone').deep;\nvar restoreWithComponents = require('../restore-with-components');\nvar shallowClone = require('../../clone').shallow;\n\nvar restoreFromOptimizing = require('../../restore-from-optimizing');\n\nvar Token = require('../../../tokenizer/token');\nvar Marker = require('../../../tokenizer/marker');\n\nvar serializeProperty = require('../../../writer/one-time').property;\n\nfunction sameValue(_validator, value1, value2) {\n  return value1 === value2;\n}\n\nfunction wouldBreakCompatibility(property, validator) {\n  for (var i = 0; i < property.components.length; i++) {\n    var component = property.components[i];\n    var descriptor = configuration[component.name];\n    var canOverride = descriptor && descriptor.canOverride || sameValue;\n\n    var _component = shallowClone(component);\n    _component.value = [[Token.PROPERTY_VALUE, descriptor.defaultValue]];\n\n    if (!everyValuesPair(canOverride.bind(null, validator), _component, component)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction overrideIntoMultiplex(property, by) {\n  by.unused = true;\n\n  turnIntoMultiplex(by, multiplexSize(property));\n  property.value = by.value;\n}\n\nfunction overrideByMultiplex(property, by) {\n  by.unused = true;\n  property.multiplex = true;\n  property.value = by.value;\n}\n\nfunction overrideSimple(property, by) {\n  by.unused = true;\n  property.value = by.value;\n}\n\nfunction override(property, by) {\n  if (by.multiplex) {\n    overrideByMultiplex(property, by);\n  } else if (property.multiplex) {\n    overrideIntoMultiplex(property, by);\n  } else {\n    overrideSimple(property, by);\n  }\n}\n\nfunction overrideShorthand(property, by) {\n  by.unused = true;\n\n  for (var i = 0, l = property.components.length; i < l; i++) {\n    override(property.components[i], by.components[i]);\n  }\n}\n\nfunction turnIntoMultiplex(property, size) {\n  property.multiplex = true;\n\n  if (configuration[property.name].shorthand) {\n    turnShorthandValueIntoMultiplex(property, size);\n  } else {\n    turnLonghandValueIntoMultiplex(property, size);\n  }\n}\n\nfunction turnShorthandValueIntoMultiplex(property, size) {\n  var component;\n  var i, l;\n\n  for (i = 0, l = property.components.length; i < l; i++) {\n    component = property.components[i];\n\n    if (!component.multiplex) {\n      turnLonghandValueIntoMultiplex(component, size);\n    }\n  }\n}\n\nfunction turnLonghandValueIntoMultiplex(property, size) {\n  var descriptor = configuration[property.name];\n  var withRealValue = descriptor.intoMultiplexMode == 'real';\n  var withValue = descriptor.intoMultiplexMode == 'real'\n    ? property.value.slice(0)\n    : (descriptor.intoMultiplexMode == 'placeholder' ? descriptor.placeholderValue : descriptor.defaultValue);\n  var i = multiplexSize(property);\n  var j;\n  var m = withValue.length;\n\n  for (; i < size; i++) {\n    property.value.push([Token.PROPERTY_VALUE, Marker.COMMA]);\n\n    if (Array.isArray(withValue)) {\n      for (j = 0; j < m; j++) {\n        property.value.push(withRealValue ? withValue[j] : [Token.PROPERTY_VALUE, withValue[j]]);\n      }\n    } else {\n      property.value.push(withRealValue ? withValue : [Token.PROPERTY_VALUE, withValue]);\n    }\n  }\n}\n\nfunction multiplexSize(component) {\n  var size = 0;\n\n  for (var i = 0, l = component.value.length; i < l; i++) {\n    if (component.value[i][1] == Marker.COMMA) { size++; }\n  }\n\n  return size + 1;\n}\n\nfunction lengthOf(property) {\n  var fakeAsArray = [\n    Token.PROPERTY,\n    [Token.PROPERTY_NAME, property.name]\n  ].concat(property.value);\n  return serializeProperty([fakeAsArray], 0).length;\n}\n\nfunction moreSameShorthands(properties, startAt, name) {\n  // Since we run the main loop in `compactOverrides` backwards, at this point some\n  // properties may not be marked as unused.\n  // We should consider reverting the order if possible\n  var count = 0;\n\n  for (var i = startAt; i >= 0; i--) {\n    if (properties[i].name == name && !properties[i].unused) { count++; }\n    if (count > 1) { break; }\n  }\n\n  return count > 1;\n}\n\nfunction overridingFunction(shorthand, validator) {\n  for (var i = 0, l = shorthand.components.length; i < l; i++) {\n    if (!anyValue(validator.isUrl, shorthand.components[i])\n      && anyValue(validator.isFunction, shorthand.components[i])) { return true; }\n  }\n\n  return false;\n}\n\nfunction anyValue(fn, property) {\n  for (var i = 0, l = property.value.length; i < l; i++) {\n    if (property.value[i][1] == Marker.COMMA) { continue; }\n\n    if (fn(property.value[i][1])) { return true; }\n  }\n\n  return false;\n}\n\nfunction wouldResultInLongerValue(left, right) {\n  if (!left.multiplex && !right.multiplex || left.multiplex && right.multiplex) { return false; }\n\n  var multiplex = left.multiplex ? left : right;\n  var simple = left.multiplex ? right : left;\n  var component;\n\n  var multiplexClone = deepClone(multiplex);\n  restoreFromOptimizing([multiplexClone], restoreWithComponents);\n\n  var simpleClone = deepClone(simple);\n  restoreFromOptimizing([simpleClone], restoreWithComponents);\n\n  var lengthBefore = lengthOf(multiplexClone) + 1 + lengthOf(simpleClone);\n\n  if (left.multiplex) {\n    component = findComponentIn(multiplexClone, simpleClone);\n    overrideIntoMultiplex(component, simpleClone);\n  } else {\n    component = findComponentIn(simpleClone, multiplexClone);\n    turnIntoMultiplex(simpleClone, multiplexSize(multiplexClone));\n    overrideByMultiplex(component, multiplexClone);\n  }\n\n  restoreFromOptimizing([simpleClone], restoreWithComponents);\n\n  var lengthAfter = lengthOf(simpleClone);\n\n  return lengthBefore <= lengthAfter;\n}\n\nfunction isCompactable(property) {\n  return property.name in configuration;\n}\n\nfunction noneOverrideHack(left, right) {\n  return !left.multiplex\n    && (left.name == 'background' || left.name == 'background-image')\n    && right.multiplex\n    && (right.name == 'background' || right.name == 'background-image')\n    && anyLayerIsNone(right.value);\n}\n\nfunction anyLayerIsNone(values) {\n  var layers = intoLayers(values);\n\n  for (var i = 0, l = layers.length; i < l; i++) {\n    if (layers[i].length == 1 && layers[i][0][1] == 'none') { return true; }\n  }\n\n  return false;\n}\n\nfunction intoLayers(values) {\n  var layers = [];\n\n  for (var i = 0, layer = [], l = values.length; i < l; i++) {\n    var value = values[i];\n    if (value[1] == Marker.COMMA) {\n      layers.push(layer);\n      layer = [];\n    } else {\n      layer.push(value);\n    }\n  }\n\n  layers.push(layer);\n  return layers;\n}\n\nfunction overrideProperties(properties, withMerging, compatibility, validator) {\n  var mayOverride, right, left, component;\n  var overriddenComponents;\n  var overriddenComponent;\n  var overridingComponent;\n  var overridable;\n  var i, j, k;\n\n  propertyLoop:\n  for (i = properties.length - 1; i >= 0; i--) {\n    right = properties[i];\n\n    if (!isCompactable(right)) { continue; }\n\n    if (right.block) { continue; }\n\n    mayOverride = configuration[right.name].canOverride || sameValue;\n\n    traverseLoop:\n    for (j = i - 1; j >= 0; j--) {\n      left = properties[j];\n\n      if (!isCompactable(left)) { continue; }\n\n      if (left.block) { continue; }\n\n      if (left.dynamic || right.dynamic) { continue; }\n\n      if (left.unused || right.unused) { continue; }\n\n      if (left.hack && !right.hack && !right.important || !left.hack && !left.important && right.hack) { continue; }\n\n      if (left.important == right.important && left.hack[0] != right.hack[0]) { continue; }\n\n      if (left.important == right.important\n        && (left.hack[0] != right.hack[0] || (left.hack[1] && left.hack[1] != right.hack[1]))) { continue; }\n\n      if (hasInherit(right)) { continue; }\n\n      if (noneOverrideHack(left, right)) { continue; }\n\n      if (right.shorthand && isComponentOf(right, left)) {\n        // maybe `left` can be overridden by `right` which is a shorthand?\n        if (!right.important && left.important) { continue; }\n\n        if (!sameVendorPrefixesIn([left], right.components)) { continue; }\n\n        if (!anyValue(validator.isFunction, left) && overridingFunction(right, validator)) { continue; }\n\n        if (!isMergeableShorthand(right)) {\n          left.unused = true;\n          continue;\n        }\n\n        component = findComponentIn(right, left);\n        mayOverride = configuration[left.name].canOverride || sameValue;\n        if (everyValuesPair(mayOverride.bind(null, validator), left, component)) {\n          left.unused = true;\n        }\n      } else if (right.shorthand && overridesNonComponentShorthand(right, left)) {\n        // `right` is a shorthand while `left` can be overriden by it, think `border` and `border-top`\n        if (!right.important && left.important) {\n          continue;\n        }\n\n        if (!sameVendorPrefixesIn([left], right.components)) {\n          continue;\n        }\n\n        if (!anyValue(validator.isFunction, left) && overridingFunction(right, validator)) {\n          continue;\n        }\n\n        overriddenComponents = left.shorthand\n          ? left.components\n          : [left];\n\n        for (k = overriddenComponents.length - 1; k >= 0; k--) {\n          overriddenComponent = overriddenComponents[k];\n          overridingComponent = findComponentIn(right, overriddenComponent);\n          mayOverride = configuration[overriddenComponent.name].canOverride || sameValue;\n\n          if (!everyValuesPair(mayOverride.bind(null, validator), left, overridingComponent)) {\n            continue traverseLoop;\n          }\n        }\n\n        left.unused = true;\n      } else if (withMerging && left.shorthand && !right.shorthand && isComponentOf(left, right, true)) {\n        // maybe `right` can be pulled into `left` which is a shorthand?\n        if (right.important && !left.important) { continue; }\n\n        if (!right.important && left.important) {\n          right.unused = true;\n          continue;\n        }\n\n        // Pending more clever algorithm in #527\n        if (moreSameShorthands(properties, i - 1, left.name)) { continue; }\n\n        if (overridingFunction(left, validator)) { continue; }\n\n        if (!isMergeableShorthand(left)) { continue; }\n\n        if (hasUnset(left) || hasUnset(right)) { continue; }\n\n        component = findComponentIn(left, right);\n        if (everyValuesPair(mayOverride.bind(null, validator), component, right)) {\n          var disabledBackgroundMerging = !compatibility.properties.backgroundClipMerging && component.name.indexOf('background-clip') > -1\n            || !compatibility.properties.backgroundOriginMerging && component.name.indexOf('background-origin') > -1\n            || !compatibility.properties.backgroundSizeMerging && component.name.indexOf('background-size') > -1;\n          var nonMergeableValue = configuration[right.name].nonMergeableValue === right.value[0][1];\n\n          if (disabledBackgroundMerging || nonMergeableValue) { continue; }\n\n          if (!compatibility.properties.merging && wouldBreakCompatibility(left, validator)) { continue; }\n\n          if (component.value[0][1] != right.value[0][1] && (hasInherit(left) || hasInherit(right))) { continue; }\n\n          if (wouldResultInLongerValue(left, right)) { continue; }\n\n          if (!left.multiplex && right.multiplex) { turnIntoMultiplex(left, multiplexSize(right)); }\n\n          override(component, right);\n          left.dirty = true;\n        }\n      } else if (withMerging && left.shorthand && right.shorthand && left.name == right.name) {\n        // merge if all components can be merged\n\n        if (!left.multiplex && right.multiplex) { continue; }\n\n        if (!right.important && left.important) {\n          right.unused = true;\n          continue propertyLoop;\n        }\n\n        if (right.important && !left.important) {\n          left.unused = true;\n          continue;\n        }\n\n        if (!isMergeableShorthand(right)) {\n          left.unused = true;\n          continue;\n        }\n\n        for (k = left.components.length - 1; k >= 0; k--) {\n          var leftComponent = left.components[k];\n          var rightComponent = right.components[k];\n\n          mayOverride = configuration[leftComponent.name].canOverride || sameValue;\n          if (!everyValuesPair(mayOverride.bind(null, validator), leftComponent, rightComponent)) {\n            continue propertyLoop;\n          }\n        }\n\n        overrideShorthand(left, right);\n        left.dirty = true;\n      } else if (withMerging && left.shorthand && right.shorthand && isComponentOf(left, right)) {\n        // border is a shorthand but any of its components is a shorthand too\n\n        if (!left.important && right.important) { continue; }\n\n        component = findComponentIn(left, right);\n        mayOverride = configuration[right.name].canOverride || sameValue;\n        if (!everyValuesPair(mayOverride.bind(null, validator), component, right)) { continue; }\n\n        if (left.important && !right.important) {\n          right.unused = true;\n          continue;\n        }\n\n        var rightRestored = configuration[right.name].restore(right, configuration);\n        if (rightRestored.length > 1) { continue; }\n\n        component = findComponentIn(left, right);\n        override(component, right);\n        right.dirty = true;\n      } else if (left.name == right.name) {\n        // two non-shorthands should be merged based on understandability\n        overridable = true;\n\n        if (right.shorthand) {\n          for (k = right.components.length - 1; k >= 0 && overridable; k--) {\n            overriddenComponent = left.components[k];\n            overridingComponent = right.components[k];\n            mayOverride = configuration[overridingComponent.name].canOverride || sameValue;\n\n            overridable = everyValuesPair(mayOverride.bind(null, validator), overriddenComponent, overridingComponent);\n          }\n        } else {\n          mayOverride = configuration[right.name].canOverride || sameValue;\n          overridable = everyValuesPair(mayOverride.bind(null, validator), left, right);\n        }\n\n        if (left.important && !right.important && overridable) {\n          right.unused = true;\n          continue;\n        }\n\n        if (!left.important && right.important && overridable) {\n          left.unused = true;\n          continue;\n        }\n\n        if (!overridable) {\n          continue;\n        }\n\n        left.unused = true;\n      }\n    }\n  }\n}\n\nmodule.exports = overrideProperties;\n", "var mergeIntoShorthands = require('./merge-into-shorthands');\nvar overrideProperties = require('./override-properties');\nvar populateComponents = require('./populate-components');\n\nvar restoreWithComponents = require('../restore-with-components');\n\nvar wrapForOptimizing = require('../../wrap-for-optimizing').all;\nvar removeUnused = require('../../remove-unused');\nvar restoreFromOptimizing = require('../../restore-from-optimizing');\n\nvar OptimizationLevel = require('../../../options/optimization-level').OptimizationLevel;\n\nfunction optimizeProperties(properties, withOverriding, withMerging, context) {\n  var levelOptions = context.options.level[OptimizationLevel.Two];\n  var _properties = wrapForOptimizing(properties, levelOptions.skipProperties);\n  var _property;\n  var i, l;\n\n  populateComponents(_properties, context.validator, context.warnings);\n\n  for (i = 0, l = _properties.length; i < l; i++) {\n    _property = _properties[i];\n    if (_property.block) {\n      optimizeProperties(_property.value[0][1], withOverriding, withMerging, context);\n    }\n  }\n\n  if (withMerging && levelOptions.mergeIntoShorthands) {\n    mergeIntoShorthands(_properties, context.validator);\n  }\n\n  if (withOverriding && levelOptions.overrideProperties) {\n    overrideProperties(_properties, withMerging, context.options.compatibility, context.validator);\n  }\n\n  restoreFromOptimizing(_properties, restoreWithComponents);\n  removeUnused(_properties);\n}\n\nmodule.exports = optimizeProperties;\n", "var isMergeable = require('./is-mergeable');\n\nvar optimizeProperties = require('./properties/optimize');\n\nvar sortSelectors = require('../level-1/sort-selectors');\nvar tidyRules = require('../level-1/tidy-rules');\n\nvar OptimizationLevel = require('../../options/optimization-level').OptimizationLevel;\n\nvar serializeBody = require('../../writer/one-time').body;\nvar serializeRules = require('../../writer/one-time').rules;\n\nvar Token = require('../../tokenizer/token');\n\nfunction mergeAdjacent(tokens, context) {\n  var lastToken = [null, [], []];\n  var options = context.options;\n  var adjacentSpace = options.compatibility.selectors.adjacentSpace;\n  var selectorsSortingMethod = options.level[OptimizationLevel.One].selectorsSortingMethod;\n  var mergeablePseudoClasses = options.compatibility.selectors.mergeablePseudoClasses;\n  var mergeablePseudoElements = options.compatibility.selectors.mergeablePseudoElements;\n  var mergeLimit = options.compatibility.selectors.mergeLimit;\n  var multiplePseudoMerging = options.compatibility.selectors.multiplePseudoMerging;\n\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    var token = tokens[i];\n\n    if (token[0] != Token.RULE) {\n      lastToken = [null, [], []];\n      continue;\n    }\n\n    if (lastToken[0] == Token.RULE && serializeRules(token[1]) == serializeRules(lastToken[1])) {\n      Array.prototype.push.apply(lastToken[2], token[2]);\n      optimizeProperties(lastToken[2], true, true, context);\n      token[2] = [];\n    } else if (lastToken[0] == Token.RULE && serializeBody(token[2]) == serializeBody(lastToken[2])\n        && isMergeable(serializeRules(token[1]), mergeablePseudoClasses, mergeablePseudoElements, multiplePseudoMerging)\n        && isMergeable(\n          serializeRules(lastToken[1]),\n          mergeablePseudoClasses,\n          mergeablePseudoElements,\n          multiplePseudoMerging\n        )\n        && lastToken[1].length < mergeLimit) {\n      lastToken[1] = tidyRules(lastToken[1].concat(token[1]), false, adjacentSpace, false, context.warnings);\n      lastToken[1] = lastToken.length > 1 ? sortSelectors(lastToken[1], selectorsSortingMethod) : lastToken[1];\n      token[2] = [];\n    } else {\n      lastToken = token;\n    }\n  }\n}\n\nmodule.exports = mergeAdjacent;\n", "var MODIFIER_PATTERN = /--.+$/;\n\nfunction rulesOverlap(rule1, rule2, bemMode) {\n  var scope1;\n  var scope2;\n  var i, l;\n  var j, m;\n\n  for (i = 0, l = rule1.length; i < l; i++) {\n    scope1 = rule1[i][1];\n\n    for (j = 0, m = rule2.length; j < m; j++) {\n      scope2 = rule2[j][1];\n\n      if (scope1 == scope2) {\n        return true;\n      }\n\n      if (bemMode && withoutModifiers(scope1) == withoutModifiers(scope2)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction withoutModifiers(scope) {\n  return scope.replace(MODIFIER_PATTERN, '');\n}\n\nmodule.exports = rulesOverlap;\n", "var Marker = require('../../tokenizer/marker');\n\nvar Selector = {\n  ADJACENT_SIBLING: '+',\n  DESCENDANT: '>',\n  DOT: '.',\n  HASH: '#',\n  NON_ADJACENT_SIBLING: '~',\n  PSEUDO: ':'\n};\n\nvar LETTER_PATTERN = /[a-zA-Z]/;\nvar NOT_PREFIX = ':not(';\nvar SEPARATOR_PATTERN = /[\\s,(>~+]/;\n\nfunction specificity(selector) {\n  var result = [0, 0, 0];\n  var character;\n  var isEscaped;\n  var isSingleQuoted;\n  var isDoubleQuoted;\n  var roundBracketLevel = 0;\n  var couldIntroduceNewTypeSelector;\n  var withinNotPseudoClass = false;\n  var wasPseudoClass = false;\n  var i, l;\n\n  for (i = 0, l = selector.length; i < l; i++) {\n    character = selector[i];\n\n    if (isEscaped) {\n      // noop\n    } else if (character == Marker.SINGLE_QUOTE && !isDoubleQuoted && !isSingleQuoted) {\n      isSingleQuoted = true;\n    } else if (character == Marker.SINGLE_QUOTE && !isDoubleQuoted && isSingleQuoted) {\n      isSingleQuoted = false;\n    } else if (character == Marker.DOUBLE_QUOTE && !isDoubleQuoted && !isSingleQuoted) {\n      isDoubleQuoted = true;\n    } else if (character == Marker.DOUBLE_QUOTE && isDoubleQuoted && !isSingleQuoted) {\n      isDoubleQuoted = false;\n    } else if (isSingleQuoted || isDoubleQuoted) {\n      continue;\n    } else if (roundBracketLevel > 0 && !withinNotPseudoClass) {\n      // noop\n    } else if (character == Marker.OPEN_ROUND_BRACKET) {\n      roundBracketLevel++;\n    } else if (character == Marker.CLOSE_ROUND_BRACKET && roundBracketLevel == 1) {\n      roundBracketLevel--;\n      withinNotPseudoClass = false;\n    } else if (character == Marker.CLOSE_ROUND_BRACKET) {\n      roundBracketLevel--;\n    } else if (character == Selector.HASH) {\n      result[0]++;\n    } else if (character == Selector.DOT || character == Marker.OPEN_SQUARE_BRACKET) {\n      result[1]++;\n    } else if (character == Selector.PSEUDO && !wasPseudoClass && !isNotPseudoClass(selector, i)) {\n      result[1]++;\n      withinNotPseudoClass = false;\n    } else if (character == Selector.PSEUDO) {\n      withinNotPseudoClass = true;\n    } else if ((i === 0 || couldIntroduceNewTypeSelector) && LETTER_PATTERN.test(character)) {\n      result[2]++;\n    }\n\n    isEscaped = character == Marker.BACK_SLASH;\n    wasPseudoClass = character == Selector.PSEUDO;\n    couldIntroduceNewTypeSelector = !isEscaped && SEPARATOR_PATTERN.test(character);\n  }\n\n  return result;\n}\n\nfunction isNotPseudoClass(selector, index) {\n  return selector.indexOf(NOT_PREFIX, index) === index;\n}\n\nmodule.exports = specificity;\n", "var specificity = require('./specificity');\n\nfunction specificitiesOverlap(selector1, selector2, cache) {\n  var specificity1;\n  var specificity2;\n  var i, l;\n  var j, m;\n\n  for (i = 0, l = selector1.length; i < l; i++) {\n    specificity1 = findSpecificity(selector1[i][1], cache);\n\n    for (j = 0, m = selector2.length; j < m; j++) {\n      specificity2 = findSpecificity(selector2[j][1], cache);\n\n      if (specificity1[0] === specificity2[0]\n        && specificity1[1] === specificity2[1]\n        && specificity1[2] === specificity2[2]) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction findSpecificity(selector, cache) {\n  var value;\n\n  if (!(selector in cache)) {\n    cache[selector] = value = specificity(selector);\n  }\n\n  return value || cache[selector];\n}\n\nmodule.exports = specificitiesOverlap;\n", "// TODO: it'd be great to merge it with the other canReorder functionality\n\nvar rulesOverlap = require('./rules-overlap');\nvar specificitiesOverlap = require('./specificities-overlap');\n\nvar FLEX_PROPERTIES = /align-items|box-align|box-pack|flex|justify/;\nvar BORDER_PROPERTIES = /^border-(top|right|bottom|left|color|style|width|radius)/;\n\nfunction canReorder(left, right, cache) {\n  for (var i = right.length - 1; i >= 0; i--) {\n    for (var j = left.length - 1; j >= 0; j--) {\n      if (!canReorderSingle(left[j], right[i], cache)) { return false; }\n    }\n  }\n\n  return true;\n}\n\nfunction canReorderSingle(left, right, cache) {\n  var leftName = left[0];\n  var leftValue = left[1];\n  var leftNameRoot = left[2];\n  var leftSelector = left[5];\n  var leftInSpecificSelector = left[6];\n  var rightName = right[0];\n  var rightValue = right[1];\n  var rightNameRoot = right[2];\n  var rightSelector = right[5];\n  var rightInSpecificSelector = right[6];\n\n  if (leftName == 'font' && rightName == 'line-height' || rightName == 'font' && leftName == 'line-height') { return false; }\n  if (FLEX_PROPERTIES.test(leftName) && FLEX_PROPERTIES.test(rightName)) { return false; }\n  if (leftNameRoot == rightNameRoot\n    && unprefixed(leftName) == unprefixed(rightName)\n    && (vendorPrefixed(leftName) ^ vendorPrefixed(rightName))) { return false; }\n  if (leftNameRoot == 'border' && BORDER_PROPERTIES.test(rightNameRoot) && (leftName == 'border' || leftName == rightNameRoot || (leftValue != rightValue && sameBorderComponent(leftName, rightName)))) { return false; }\n  if (rightNameRoot == 'border' && BORDER_PROPERTIES.test(leftNameRoot) && (rightName == 'border' || rightName == leftNameRoot || (leftValue != rightValue && sameBorderComponent(leftName, rightName)))) { return false; }\n  if (leftNameRoot == 'border' && rightNameRoot == 'border' && leftName != rightName && (isSideBorder(leftName) && isStyleBorder(rightName) || isStyleBorder(leftName) && isSideBorder(rightName))) { return false; }\n  if (leftNameRoot != rightNameRoot) { return true; }\n  if (leftName == rightName\n    && leftNameRoot == rightNameRoot\n    && (leftValue == rightValue || withDifferentVendorPrefix(leftValue, rightValue))) { return true; }\n  if (leftName != rightName\n    && leftNameRoot == rightNameRoot\n    && leftName != leftNameRoot\n    && rightName != rightNameRoot) { return true; }\n  if (leftName != rightName\n    && leftNameRoot == rightNameRoot\n    && leftValue == rightValue) { return true; }\n  if (rightInSpecificSelector\n    && leftInSpecificSelector\n    && !inheritable(leftNameRoot)\n    && !inheritable(rightNameRoot)\n    && !rulesOverlap(rightSelector, leftSelector, false)) { return true; }\n  if (!specificitiesOverlap(leftSelector, rightSelector, cache)) { return true; }\n\n  return false;\n}\n\nfunction vendorPrefixed(name) {\n  return /^-(?:moz|webkit|ms|o)-/.test(name);\n}\n\nfunction unprefixed(name) {\n  return name.replace(/^-(?:moz|webkit|ms|o)-/, '');\n}\n\nfunction sameBorderComponent(name1, name2) {\n  return name1.split('-').pop() == name2.split('-').pop();\n}\n\nfunction isSideBorder(name) {\n  return name == 'border-top' || name == 'border-right' || name == 'border-bottom' || name == 'border-left';\n}\n\nfunction isStyleBorder(name) {\n  return name == 'border-color' || name == 'border-style' || name == 'border-width';\n}\n\nfunction withDifferentVendorPrefix(value1, value2) {\n  return vendorPrefixed(value1) && vendorPrefixed(value2) && value1.split('-')[1] != value2.split('-')[2];\n}\n\nfunction inheritable(name) {\n  // According to http://www.w3.org/TR/CSS21/propidx.html\n  // Others will be catched by other, preceeding rules\n  return name == 'font' || name == 'line-height' || name == 'list-style';\n}\n\nmodule.exports = {\n  canReorder: canReorder,\n  canReorderSingle: canReorderSingle\n};\n", "// This extractor is used in level 2 optimizations\n// IMPORTANT: Mind Token class and this code is not related!\n// Properties will be tokenized in one step, see #429\n\nvar Token = require('../../tokenizer/token');\nvar serializeRules = require('../../writer/one-time').rules;\nvar serializeValue = require('../../writer/one-time').value;\n\nfunction extractProperties(token) {\n  var properties = [];\n  var inSpecificSelector;\n  var property;\n  var name;\n  var value;\n  var i, l;\n\n  if (token[0] == Token.RULE) {\n    inSpecificSelector = !/[.+>~]/.test(serializeRules(token[1]));\n\n    for (i = 0, l = token[2].length; i < l; i++) {\n      property = token[2][i];\n\n      if (property[0] != Token.PROPERTY) { continue; }\n\n      name = property[1][1];\n      if (name.length === 0) { continue; }\n\n      value = serializeValue(property, i);\n\n      properties.push([\n        name,\n        value,\n        findNameRoot(name),\n        token[2][i],\n        name + ':' + value,\n        token[1],\n        inSpecificSelector\n      ]);\n    }\n  } else if (token[0] == Token.NESTED_BLOCK) {\n    for (i = 0, l = token[2].length; i < l; i++) {\n      properties = properties.concat(extractProperties(token[2][i]));\n    }\n  }\n\n  return properties;\n}\n\nfunction findNameRoot(name) {\n  if (name == 'list-style') { return name; }\n  if (name.indexOf('-radius') > 0) { return 'border-radius'; }\n  if (name == 'border-collapse' || name == 'border-spacing' || name == 'border-image') { return name; }\n  if (name.indexOf('border-') === 0 && /^border-\\w+-\\w+$/.test(name)) { return name.match(/border-\\w+/)[0]; }\n  if (name.indexOf('border-') === 0 && /^border-\\w+$/.test(name)) { return 'border'; }\n  if (name.indexOf('text-') === 0) { return name; }\n  if (name == '-chrome-') { return name; }\n\n  return name.replace(/^-\\w+-/, '').match(/([a-zA-Z]+)/)[0].toLowerCase();\n}\n\nmodule.exports = extractProperties;\n", "var canReorder = require('./reorderable').canReorder;\nvar canReorderSingle = require('./reorderable').canReorderSingle;\nvar extractProperties = require('./extract-properties');\nvar rulesOverlap = require('./rules-overlap');\n\nvar serializeRules = require('../../writer/one-time').rules;\nvar OptimizationLevel = require('../../options/optimization-level').OptimizationLevel;\nvar Token = require('../../tokenizer/token');\n\nfunction mergeMediaQueries(tokens, context) {\n  var mergeSemantically = context.options.level[OptimizationLevel.Two].mergeSemantically;\n  var specificityCache = context.cache.specificity;\n  var candidates = {};\n  var reduced = [];\n\n  for (var i = tokens.length - 1; i >= 0; i--) {\n    var token = tokens[i];\n    if (token[0] != Token.NESTED_BLOCK) {\n      continue;\n    }\n\n    var key = serializeRules(token[1]);\n    var candidate = candidates[key];\n    if (!candidate) {\n      candidate = [];\n      candidates[key] = candidate;\n    }\n\n    candidate.push(i);\n  }\n\n  for (var name in candidates) {\n    var positions = candidates[name];\n\n    positionLoop:\n    for (var j = positions.length - 1; j > 0; j--) {\n      var positionOne = positions[j];\n      var tokenOne = tokens[positionOne];\n      var positionTwo = positions[j - 1];\n      var tokenTwo = tokens[positionTwo];\n\n      directionLoop:\n      for (var direction = 1; direction >= -1; direction -= 2) {\n        var topToBottom = direction == 1;\n        var from = topToBottom ? positionOne + 1 : positionTwo - 1;\n        var to = topToBottom ? positionTwo : positionOne;\n        var delta = topToBottom ? 1 : -1;\n        var source = topToBottom ? tokenOne : tokenTwo;\n        var target = topToBottom ? tokenTwo : tokenOne;\n        var movedProperties = extractProperties(source);\n\n        while (from != to) {\n          var traversedProperties = extractProperties(tokens[from]);\n          from += delta;\n\n          if (mergeSemantically\n            && allSameRulePropertiesCanBeReordered(movedProperties, traversedProperties, specificityCache)\n          ) {\n            continue;\n          }\n\n          if (!canReorder(movedProperties, traversedProperties, specificityCache)) { continue directionLoop; }\n        }\n\n        target[2] = topToBottom\n          ? source[2].concat(target[2])\n          : target[2].concat(source[2]);\n        source[2] = [];\n\n        reduced.push(target);\n        continue positionLoop;\n      }\n    }\n  }\n\n  return reduced;\n}\n\nfunction allSameRulePropertiesCanBeReordered(movedProperties, traversedProperties, specificityCache) {\n  var movedProperty;\n  var movedRule;\n  var traversedProperty;\n  var traversedRule;\n  var i, l;\n  var j, m;\n\n  for (i = 0, l = movedProperties.length; i < l; i++) {\n    movedProperty = movedProperties[i];\n    movedRule = movedProperty[5];\n\n    for (j = 0, m = traversedProperties.length; j < m; j++) {\n      traversedProperty = traversedProperties[j];\n      traversedRule = traversedProperty[5];\n\n      if (rulesOverlap(movedRule, traversedRule, true)\n        && !canReorderSingle(movedProperty, traversedProperty, specificityCache)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = mergeMediaQueries;\n", "var isMergeable = require('./is-mergeable');\n\nvar sortSelectors = require('../level-1/sort-selectors');\nvar tidyRules = require('../level-1/tidy-rules');\n\nvar OptimizationLevel = require('../../options/optimization-level').OptimizationLevel;\n\nvar serializeBody = require('../../writer/one-time').body;\nvar serializeRules = require('../../writer/one-time').rules;\n\nvar Token = require('../../tokenizer/token');\n\nfunction unsafeSelector(value) {\n  return /\\.|\\*| :/.test(value);\n}\n\nfunction isBemElement(token) {\n  var asString = serializeRules(token[1]);\n  return asString.indexOf('__') > -1 || asString.indexOf('--') > -1;\n}\n\nfunction withoutModifier(selector) {\n  return selector.replace(/--[^ ,>+~:]+/g, '');\n}\n\nfunction removeAnyUnsafeElements(left, candidates) {\n  var leftSelector = withoutModifier(serializeRules(left[1]));\n\n  for (var body in candidates) {\n    var right = candidates[body];\n    var rightSelector = withoutModifier(serializeRules(right[1]));\n\n    if (rightSelector.indexOf(leftSelector) > -1 || leftSelector.indexOf(rightSelector) > -1) {\n      delete candidates[body];\n    }\n  }\n}\n\nfunction mergeNonAdjacentByBody(tokens, context) {\n  var options = context.options;\n  var mergeSemantically = options.level[OptimizationLevel.Two].mergeSemantically;\n  var adjacentSpace = options.compatibility.selectors.adjacentSpace;\n  var selectorsSortingMethod = options.level[OptimizationLevel.One].selectorsSortingMethod;\n  var mergeablePseudoClasses = options.compatibility.selectors.mergeablePseudoClasses;\n  var mergeablePseudoElements = options.compatibility.selectors.mergeablePseudoElements;\n  var multiplePseudoMerging = options.compatibility.selectors.multiplePseudoMerging;\n  var candidates = {};\n\n  for (var i = tokens.length - 1; i >= 0; i--) {\n    var token = tokens[i];\n    if (token[0] != Token.RULE) { continue; }\n\n    if (token[2].length > 0 && (!mergeSemantically && unsafeSelector(serializeRules(token[1])))) { candidates = {}; }\n\n    if (token[2].length > 0 && mergeSemantically && isBemElement(token)) { removeAnyUnsafeElements(token, candidates); }\n\n    var candidateBody = serializeBody(token[2]);\n    var oldToken = candidates[candidateBody];\n    if (oldToken\n        && isMergeable(\n          serializeRules(token[1]),\n          mergeablePseudoClasses,\n          mergeablePseudoElements,\n          multiplePseudoMerging\n        )\n        && isMergeable(\n          serializeRules(oldToken[1]),\n          mergeablePseudoClasses,\n          mergeablePseudoElements,\n          multiplePseudoMerging\n        )\n    ) {\n      if (token[2].length > 0) {\n        token[1] = tidyRules(oldToken[1].concat(token[1]), false, adjacentSpace, false, context.warnings);\n        token[1] = token[1].length > 1 ? sortSelectors(token[1], selectorsSortingMethod) : token[1];\n      } else {\n        token[1] = oldToken[1].concat(token[1]);\n      }\n\n      oldToken[2] = [];\n      candidates[candidateBody] = null;\n    }\n\n    candidates[serializeBody(token[2])] = token;\n  }\n}\n\nmodule.exports = mergeNonAdjacentByBody;\n", "var canReorder = require('./reorderable').canReorder;\nvar extractProperties = require('./extract-properties');\n\nvar optimizeProperties = require('./properties/optimize');\n\nvar serializeRules = require('../../writer/one-time').rules;\n\nvar Token = require('../../tokenizer/token');\n\nfunction mergeNonAdjacentBySelector(tokens, context) {\n  var specificityCache = context.cache.specificity;\n  var allSelectors = {};\n  var repeatedSelectors = [];\n  var i;\n\n  for (i = tokens.length - 1; i >= 0; i--) {\n    if (tokens[i][0] != Token.RULE) { continue; }\n    if (tokens[i][2].length === 0) { continue; }\n\n    var selector = serializeRules(tokens[i][1]);\n    allSelectors[selector] = [i].concat(allSelectors[selector] || []);\n\n    if (allSelectors[selector].length == 2) { repeatedSelectors.push(selector); }\n  }\n\n  for (i = repeatedSelectors.length - 1; i >= 0; i--) {\n    var positions = allSelectors[repeatedSelectors[i]];\n\n    selectorIterator:\n    for (var j = positions.length - 1; j > 0; j--) {\n      var positionOne = positions[j - 1];\n      var tokenOne = tokens[positionOne];\n      var positionTwo = positions[j];\n      var tokenTwo = tokens[positionTwo];\n\n      directionIterator:\n      for (var direction = 1; direction >= -1; direction -= 2) {\n        var topToBottom = direction == 1;\n        var from = topToBottom ? positionOne + 1 : positionTwo - 1;\n        var to = topToBottom ? positionTwo : positionOne;\n        var delta = topToBottom ? 1 : -1;\n        var moved = topToBottom ? tokenOne : tokenTwo;\n        var target = topToBottom ? tokenTwo : tokenOne;\n        var movedProperties = extractProperties(moved);\n\n        while (from != to) {\n          var traversedProperties = extractProperties(tokens[from]);\n          from += delta;\n\n          // traversed then moved as we move selectors towards the start\n          var reorderable = topToBottom\n            ? canReorder(movedProperties, traversedProperties, specificityCache)\n            : canReorder(traversedProperties, movedProperties, specificityCache);\n\n          if (!reorderable && !topToBottom) { continue selectorIterator; }\n          if (!reorderable && topToBottom) { continue directionIterator; }\n        }\n\n        if (topToBottom) {\n          Array.prototype.push.apply(moved[2], target[2]);\n          target[2] = moved[2];\n        } else {\n          Array.prototype.push.apply(target[2], moved[2]);\n        }\n\n        optimizeProperties(target[2], true, true, context);\n        moved[2] = [];\n      }\n    }\n  }\n}\n\nmodule.exports = mergeNonAdjacentBySelector;\n", "function cloneArray(array) {\n  var cloned = array.slice(0);\n\n  for (var i = 0, l = cloned.length; i < l; i++) {\n    if (Array.isArray(cloned[i])) { cloned[i] = cloneArray(cloned[i]); }\n  }\n\n  return cloned;\n}\n\nmodule.exports = cloneArray;\n", "var isMergeable = require('./is-mergeable');\n\nvar optimizeProperties = require('./properties/optimize');\n\nvar cloneArray = require('../../utils/clone-array');\n\nvar Token = require('../../tokenizer/token');\n\nvar serializeBody = require('../../writer/one-time').body;\nvar serializeRules = require('../../writer/one-time').rules;\n\nfunction reduceNonAdjacent(tokens, context) {\n  var options = context.options;\n  var mergeablePseudoClasses = options.compatibility.selectors.mergeablePseudoClasses;\n  var mergeablePseudoElements = options.compatibility.selectors.mergeablePseudoElements;\n  var multiplePseudoMerging = options.compatibility.selectors.multiplePseudoMerging;\n  var candidates = {};\n  var repeated = [];\n\n  for (var i = tokens.length - 1; i >= 0; i--) {\n    var token = tokens[i];\n\n    if (token[0] != Token.RULE) {\n      continue;\n    } else if (token[2].length === 0) {\n      continue;\n    }\n\n    var selectorAsString = serializeRules(token[1]);\n    var isComplexAndNotSpecial = token[1].length > 1\n      && isMergeable(selectorAsString, mergeablePseudoClasses, mergeablePseudoElements, multiplePseudoMerging);\n    var wrappedSelectors = wrappedSelectorsFrom(token[1]);\n    var selectors = isComplexAndNotSpecial\n      ? [selectorAsString].concat(wrappedSelectors)\n      : [selectorAsString];\n\n    for (var j = 0, m = selectors.length; j < m; j++) {\n      var selector = selectors[j];\n\n      if (!candidates[selector]) { candidates[selector] = []; } else { repeated.push(selector); }\n\n      candidates[selector].push({\n        where: i,\n        list: wrappedSelectors,\n        isPartial: isComplexAndNotSpecial && j > 0,\n        isComplex: isComplexAndNotSpecial && j === 0\n      });\n    }\n  }\n\n  reduceSimpleNonAdjacentCases(tokens, repeated, candidates, options, context);\n  reduceComplexNonAdjacentCases(tokens, candidates, options, context);\n}\n\nfunction wrappedSelectorsFrom(list) {\n  var wrapped = [];\n\n  for (var i = 0; i < list.length; i++) {\n    wrapped.push([list[i][1]]);\n  }\n\n  return wrapped;\n}\n\nfunction reduceSimpleNonAdjacentCases(tokens, repeated, candidates, options, context) {\n  function filterOut(idx, bodies) {\n    return data[idx].isPartial && bodies.length === 0;\n  }\n\n  function reduceBody(token, newBody, processedCount, tokenIdx) {\n    if (!data[processedCount - tokenIdx - 1].isPartial) { token[2] = newBody; }\n  }\n\n  for (var i = 0, l = repeated.length; i < l; i++) {\n    var selector = repeated[i];\n    var data = candidates[selector];\n\n    reduceSelector(tokens, data, {\n      filterOut: filterOut,\n      callback: reduceBody\n    }, options, context);\n  }\n}\n\nfunction reduceComplexNonAdjacentCases(tokens, candidates, options, context) {\n  var mergeablePseudoClasses = options.compatibility.selectors.mergeablePseudoClasses;\n  var mergeablePseudoElements = options.compatibility.selectors.mergeablePseudoElements;\n  var multiplePseudoMerging = options.compatibility.selectors.multiplePseudoMerging;\n  var localContext = {};\n\n  function filterOut(idx) {\n    return localContext.data[idx].where < localContext.intoPosition;\n  }\n\n  function collectReducedBodies(token, newBody, processedCount, tokenIdx) {\n    if (tokenIdx === 0) { localContext.reducedBodies.push(newBody); }\n  }\n\n  allSelectors:\n  for (var complexSelector in candidates) {\n    var into = candidates[complexSelector];\n    if (!into[0].isComplex) { continue; }\n\n    var intoPosition = into[into.length - 1].where;\n    var intoToken = tokens[intoPosition];\n    var reducedBodies = [];\n\n    var selectors = isMergeable(complexSelector, mergeablePseudoClasses, mergeablePseudoElements, multiplePseudoMerging)\n      ? into[0].list\n      : [complexSelector];\n\n    localContext.intoPosition = intoPosition;\n    localContext.reducedBodies = reducedBodies;\n\n    for (var j = 0, m = selectors.length; j < m; j++) {\n      var selector = selectors[j];\n      var data = candidates[selector];\n\n      if (data.length < 2) { continue allSelectors; }\n\n      localContext.data = data;\n\n      reduceSelector(tokens, data, {\n        filterOut: filterOut,\n        callback: collectReducedBodies\n      }, options, context);\n\n      if (serializeBody(reducedBodies[reducedBodies.length - 1]) != serializeBody(reducedBodies[0])) {\n        continue allSelectors;\n      }\n    }\n\n    intoToken[2] = reducedBodies[0];\n  }\n}\n\nfunction reduceSelector(tokens, data, context, options, outerContext) {\n  var bodies = [];\n  var bodiesAsList = [];\n  var processedTokens = [];\n\n  for (var j = data.length - 1; j >= 0; j--) {\n    if (context.filterOut(j, bodies)) { continue; }\n\n    var where = data[j].where;\n    var token = tokens[where];\n    var clonedBody = cloneArray(token[2]);\n\n    bodies = bodies.concat(clonedBody);\n    bodiesAsList.push(clonedBody);\n    processedTokens.push(where);\n  }\n\n  optimizeProperties(bodies, true, false, outerContext);\n\n  var processedCount = processedTokens.length;\n  var propertyIdx = bodies.length - 1;\n  var tokenIdx = processedCount - 1;\n\n  while (tokenIdx >= 0) {\n    if ((tokenIdx === 0\n      || (bodies[propertyIdx] && bodiesAsList[tokenIdx].indexOf(bodies[propertyIdx]) > -1)) && propertyIdx > -1) {\n      propertyIdx--;\n      continue;\n    }\n\n    var newBody = bodies.splice(propertyIdx + 1);\n    context.callback(tokens[processedTokens[tokenIdx]], newBody, processedCount, tokenIdx);\n\n    tokenIdx--;\n  }\n}\n\nmodule.exports = reduceNonAdjacent;\n", "var Token = require('../../tokenizer/token');\n\nvar serializeAll = require('../../writer/one-time').all;\n\nvar FONT_FACE_SCOPE = '@font-face';\n\nfunction removeDuplicateFontAtRules(tokens) {\n  var fontAtRules = [];\n  var token;\n  var key;\n  var i, l;\n\n  for (i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n\n    if (token[0] != Token.AT_RULE_BLOCK && token[1][0][1] != FONT_FACE_SCOPE) {\n      continue;\n    }\n\n    key = serializeAll([token]);\n\n    if (fontAtRules.indexOf(key) > -1) {\n      token[2] = [];\n    } else {\n      fontAtRules.push(key);\n    }\n  }\n}\n\nmodule.exports = removeDuplicateFontAtRules;\n", "var Token = require('../../tokenizer/token');\n\nvar serializeAll = require('../../writer/one-time').all;\nvar serializeRules = require('../../writer/one-time').rules;\n\nfunction removeDuplicateMediaQueries(tokens) {\n  var candidates = {};\n  var candidate;\n  var token;\n  var key;\n  var i, l;\n\n  for (i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    if (token[0] != Token.NESTED_BLOCK) {\n      continue;\n    }\n\n    key = serializeRules(token[1]) + '%' + serializeAll(token[2]);\n    candidate = candidates[key];\n\n    if (candidate) {\n      candidate[2] = [];\n    }\n\n    candidates[key] = token;\n  }\n}\n\nmodule.exports = removeDuplicateMediaQueries;\n", "var Token = require('../../tokenizer/token');\n\nvar serializeBody = require('../../writer/one-time').body;\nvar serializeRules = require('../../writer/one-time').rules;\n\nfunction removeDuplicates(tokens) {\n  var matched = {};\n  var moreThanOnce = [];\n  var id, token;\n  var body, bodies;\n\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    if (token[0] != Token.RULE) { continue; }\n\n    id = serializeRules(token[1]);\n\n    if (matched[id] && matched[id].length == 1) { moreThanOnce.push(id); } else { matched[id] = matched[id] || []; }\n\n    matched[id].push(i);\n  }\n\n  for (i = 0, l = moreThanOnce.length; i < l; i++) {\n    id = moreThanOnce[i];\n    bodies = [];\n\n    for (var j = matched[id].length - 1; j >= 0; j--) {\n      token = tokens[matched[id][j]];\n      body = serializeBody(token[2]);\n\n      if (bodies.indexOf(body) > -1) { token[2] = []; } else { bodies.push(body); }\n    }\n  }\n}\n\nmodule.exports = removeDuplicates;\n", "var populateComponents = require('./properties/populate-components');\n\nvar wrapForOptimizing = require('../wrap-for-optimizing').single;\nvar restoreFromOptimizing = require('../restore-from-optimizing');\n\nvar Token = require('../../tokenizer/token');\n\nvar animationNameRegex = /^(-moz-|-o-|-webkit-)?animation-name$/;\nvar animationRegex = /^(-moz-|-o-|-webkit-)?animation$/;\nvar keyframeRegex = /^@(-moz-|-o-|-webkit-)?keyframes /;\nvar importantRegex = /\\s{0,31}!important$/;\nvar optionalMatchingQuotesRegex = /^(['\"]?)(.*)\\1$/;\n\nfunction normalize(value) {\n  return value\n    .replace(optionalMatchingQuotesRegex, '$2')\n    .replace(importantRegex, '');\n}\n\nfunction removeUnusedAtRules(tokens, context) {\n  removeUnusedAtRule(tokens, matchCounterStyle, markCounterStylesAsUsed, context);\n  removeUnusedAtRule(tokens, matchFontFace, markFontFacesAsUsed, context);\n  removeUnusedAtRule(tokens, matchKeyframe, markKeyframesAsUsed, context);\n  removeUnusedAtRule(tokens, matchNamespace, markNamespacesAsUsed, context);\n}\n\nfunction removeUnusedAtRule(tokens, matchCallback, markCallback, context) {\n  var atRules = {};\n  var atRule;\n  var atRuleTokens;\n  var atRuleToken;\n  var zeroAt;\n  var i, l;\n\n  for (i = 0, l = tokens.length; i < l; i++) {\n    matchCallback(tokens[i], atRules);\n  }\n\n  if (Object.keys(atRules).length === 0) {\n    return;\n  }\n\n  markUsedAtRules(tokens, markCallback, atRules, context);\n\n  for (atRule in atRules) {\n    atRuleTokens = atRules[atRule];\n\n    for (i = 0, l = atRuleTokens.length; i < l; i++) {\n      atRuleToken = atRuleTokens[i];\n      zeroAt = atRuleToken[0] == Token.AT_RULE ? 1 : 2;\n      atRuleToken[zeroAt] = [];\n    }\n  }\n}\n\nfunction markUsedAtRules(tokens, markCallback, atRules, context) {\n  var boundMarkCallback = markCallback(atRules);\n  var i, l;\n\n  for (i = 0, l = tokens.length; i < l; i++) {\n    switch (tokens[i][0]) {\n    case Token.RULE:\n      boundMarkCallback(tokens[i], context);\n      break;\n    case Token.NESTED_BLOCK:\n      markUsedAtRules(tokens[i][2], markCallback, atRules, context);\n    }\n  }\n}\n\nfunction matchCounterStyle(token, atRules) {\n  var match;\n\n  if (token[0] == Token.AT_RULE_BLOCK && token[1][0][1].indexOf('@counter-style') === 0) {\n    match = token[1][0][1].split(' ')[1];\n    atRules[match] = atRules[match] || [];\n    atRules[match].push(token);\n  }\n}\n\nfunction markCounterStylesAsUsed(atRules) {\n  return function(token, context) {\n    var property;\n    var wrappedProperty;\n    var i, l;\n\n    for (i = 0, l = token[2].length; i < l; i++) {\n      property = token[2][i];\n\n      if (property[1][1] == 'list-style') {\n        wrappedProperty = wrapForOptimizing(property);\n        populateComponents([wrappedProperty], context.validator, context.warnings);\n\n        if (wrappedProperty.components[0].value[0][1] in atRules) {\n          delete atRules[property[2][1]];\n        }\n\n        restoreFromOptimizing([wrappedProperty]);\n      }\n\n      if (property[1][1] == 'list-style-type' && property[2][1] in atRules) {\n        delete atRules[property[2][1]];\n      }\n    }\n  };\n}\n\nfunction matchFontFace(token, atRules) {\n  var property;\n  var match;\n  var i, l;\n\n  if (token[0] == Token.AT_RULE_BLOCK && token[1][0][1] == '@font-face') {\n    for (i = 0, l = token[2].length; i < l; i++) {\n      property = token[2][i];\n\n      if (property[1][1] == 'font-family') {\n        match = normalize(property[2][1].toLowerCase());\n        atRules[match] = atRules[match] || [];\n        atRules[match].push(token);\n        break;\n      }\n    }\n  }\n}\n\nfunction markFontFacesAsUsed(atRules) {\n  return function(token, context) {\n    var property;\n    var wrappedProperty;\n    var component;\n    var normalizedMatch;\n    var i, l;\n    var j, m;\n\n    for (i = 0, l = token[2].length; i < l; i++) {\n      property = token[2][i];\n\n      if (property[1][1] == 'font') {\n        wrappedProperty = wrapForOptimizing(property);\n        populateComponents([wrappedProperty], context.validator, context.warnings);\n        component = wrappedProperty.components[6];\n\n        for (j = 0, m = component.value.length; j < m; j++) {\n          normalizedMatch = normalize(component.value[j][1].toLowerCase());\n\n          if (normalizedMatch in atRules) {\n            delete atRules[normalizedMatch];\n          }\n        }\n\n        restoreFromOptimizing([wrappedProperty]);\n      }\n\n      if (property[1][1] == 'font-family') {\n        for (j = 2, m = property.length; j < m; j++) {\n          normalizedMatch = normalize(property[j][1].toLowerCase());\n\n          if (normalizedMatch in atRules) {\n            delete atRules[normalizedMatch];\n          }\n        }\n      }\n    }\n  };\n}\n\nfunction matchKeyframe(token, atRules) {\n  var match;\n\n  if (token[0] == Token.NESTED_BLOCK && keyframeRegex.test(token[1][0][1])) {\n    match = token[1][0][1].split(' ')[1];\n    atRules[match] = atRules[match] || [];\n    atRules[match].push(token);\n  }\n}\n\nfunction markKeyframesAsUsed(atRules) {\n  return function(token, context) {\n    var property;\n    var wrappedProperty;\n    var component;\n    var i, l;\n    var j, m;\n\n    for (i = 0, l = token[2].length; i < l; i++) {\n      property = token[2][i];\n\n      if (animationRegex.test(property[1][1])) {\n        wrappedProperty = wrapForOptimizing(property);\n        populateComponents([wrappedProperty], context.validator, context.warnings);\n        component = wrappedProperty.components[7];\n\n        for (j = 0, m = component.value.length; j < m; j++) {\n          if (component.value[j][1] in atRules) {\n            delete atRules[component.value[j][1]];\n          }\n        }\n\n        restoreFromOptimizing([wrappedProperty]);\n      }\n\n      if (animationNameRegex.test(property[1][1])) {\n        for (j = 2, m = property.length; j < m; j++) {\n          if (property[j][1] in atRules) {\n            delete atRules[property[j][1]];\n          }\n        }\n      }\n    }\n  };\n}\n\nfunction matchNamespace(token, atRules) {\n  var match;\n\n  if (token[0] == Token.AT_RULE && token[1].indexOf('@namespace') === 0) {\n    match = token[1].split(' ')[1];\n    atRules[match] = atRules[match] || [];\n    atRules[match].push(token);\n  }\n}\n\nfunction markNamespacesAsUsed(atRules) {\n  var namespaceRegex = new RegExp(Object.keys(atRules).join('\\\\||') + '\\\\|', 'g');\n\n  return function(token) {\n    var match;\n    var scope;\n    var normalizedMatch;\n    var i, l;\n    var j, m;\n\n    for (i = 0, l = token[1].length; i < l; i++) {\n      scope = token[1][i];\n      match = scope[1].match(namespaceRegex);\n\n      for (j = 0, m = match.length; j < m; j++) {\n        normalizedMatch = match[j].substring(0, match[j].length - 1);\n\n        if (normalizedMatch in atRules) {\n          delete atRules[normalizedMatch];\n        }\n      }\n    }\n  };\n}\n\nmodule.exports = removeUnusedAtRules;\n", "function ruleSorter(s1, s2) {\n  return s1[1] > s2[1] ? 1 : -1;\n}\n\nfunction tidyRuleDuplicates(rules) {\n  var list = [];\n  var repeated = [];\n\n  for (var i = 0, l = rules.length; i < l; i++) {\n    var rule = rules[i];\n\n    if (repeated.indexOf(rule[1]) == -1) {\n      repeated.push(rule[1]);\n      list.push(rule);\n    }\n  }\n\n  return list.sort(ruleSorter);\n}\n\nmodule.exports = tidyRuleDuplicates;\n", "var canReorderSingle = require('./reorderable').canReorderSingle;\nvar extractProperties = require('./extract-properties');\nvar isMergeable = require('./is-mergeable');\nvar tidyRuleDuplicates = require('./tidy-rule-duplicates');\n\nvar Token = require('../../tokenizer/token');\n\nvar cloneArray = require('../../utils/clone-array');\n\nvar serializeBody = require('../../writer/one-time').body;\nvar serializeRules = require('../../writer/one-time').rules;\n\nfunction naturalSorter(a, b) {\n  return a > b ? 1 : -1;\n}\n\nfunction cloneAndMergeSelectors(propertyA, propertyB) {\n  var cloned = cloneArray(propertyA);\n  cloned[5] = cloned[5].concat(propertyB[5]);\n\n  return cloned;\n}\n\nfunction restructure(tokens, context) {\n  var options = context.options;\n  var mergeablePseudoClasses = options.compatibility.selectors.mergeablePseudoClasses;\n  var mergeablePseudoElements = options.compatibility.selectors.mergeablePseudoElements;\n  var mergeLimit = options.compatibility.selectors.mergeLimit;\n  var multiplePseudoMerging = options.compatibility.selectors.multiplePseudoMerging;\n  var specificityCache = context.cache.specificity;\n  var movableTokens = {};\n  var movedProperties = [];\n  var multiPropertyMoveCache = {};\n  var movedToBeDropped = [];\n  var maxCombinationsLevel = 2;\n  var ID_JOIN_CHARACTER = '%';\n\n  function sendToMultiPropertyMoveCache(position, movedProperty, allFits) {\n    for (var i = allFits.length - 1; i >= 0; i--) {\n      var fit = allFits[i][0];\n      var id = addToCache(movedProperty, fit);\n\n      if (multiPropertyMoveCache[id].length > 1 && processMultiPropertyMove(position, multiPropertyMoveCache[id])) {\n        removeAllMatchingFromCache(id);\n        break;\n      }\n    }\n  }\n\n  function addToCache(movedProperty, fit) {\n    var id = cacheId(fit);\n    multiPropertyMoveCache[id] = multiPropertyMoveCache[id] || [];\n    multiPropertyMoveCache[id].push([movedProperty, fit]);\n    return id;\n  }\n\n  function removeAllMatchingFromCache(matchId) {\n    var matchSelectors = matchId.split(ID_JOIN_CHARACTER);\n    var forRemoval = [];\n    var i;\n\n    for (var id in multiPropertyMoveCache) {\n      var selectors = id.split(ID_JOIN_CHARACTER);\n      for (i = selectors.length - 1; i >= 0; i--) {\n        if (matchSelectors.indexOf(selectors[i]) > -1) {\n          forRemoval.push(id);\n          break;\n        }\n      }\n    }\n\n    for (i = forRemoval.length - 1; i >= 0; i--) {\n      delete multiPropertyMoveCache[forRemoval[i]];\n    }\n  }\n\n  function cacheId(cachedTokens) {\n    var id = [];\n    for (var i = 0, l = cachedTokens.length; i < l; i++) {\n      id.push(serializeRules(cachedTokens[i][1]));\n    }\n    return id.join(ID_JOIN_CHARACTER);\n  }\n\n  function tokensToMerge(sourceTokens) {\n    var uniqueTokensWithBody = [];\n    var mergeableTokens = [];\n\n    for (var i = sourceTokens.length - 1; i >= 0; i--) {\n      if (!isMergeable(\n        serializeRules(sourceTokens[i][1]),\n        mergeablePseudoClasses,\n        mergeablePseudoElements,\n        multiplePseudoMerging\n      )) {\n        continue;\n      }\n\n      mergeableTokens.unshift(sourceTokens[i]);\n      if (sourceTokens[i][2].length > 0\n        && uniqueTokensWithBody.indexOf(sourceTokens[i]) == -1) {\n        uniqueTokensWithBody.push(sourceTokens[i]);\n      }\n    }\n\n    return uniqueTokensWithBody.length > 1\n      ? mergeableTokens\n      : [];\n  }\n\n  function shortenIfPossible(position, movedProperty) {\n    var name = movedProperty[0];\n    var value = movedProperty[1];\n    var key = movedProperty[4];\n    var valueSize = name.length + value.length + 1;\n    var allSelectors = [];\n    var qualifiedTokens = [];\n\n    var mergeableTokens = tokensToMerge(movableTokens[key]);\n    if (mergeableTokens.length < 2) { return; }\n\n    var allFits = findAllFits(mergeableTokens, valueSize, 1);\n    var bestFit = allFits[0];\n    if (bestFit[1] > 0) { return sendToMultiPropertyMoveCache(position, movedProperty, allFits); }\n\n    for (var i = bestFit[0].length - 1; i >= 0; i--) {\n      allSelectors = bestFit[0][i][1].concat(allSelectors);\n      qualifiedTokens.unshift(bestFit[0][i]);\n    }\n\n    allSelectors = tidyRuleDuplicates(allSelectors);\n    dropAsNewTokenAt(position, [movedProperty], allSelectors, qualifiedTokens);\n  }\n\n  function fitSorter(fit1, fit2) {\n    return fit1[1] > fit2[1] ? 1 : (fit1[1] == fit2[1] ? 0 : -1);\n  }\n\n  function findAllFits(mergeableTokens, propertySize, propertiesCount) {\n    var combinations = allCombinations(mergeableTokens, propertySize, propertiesCount, maxCombinationsLevel - 1);\n    return combinations.sort(fitSorter);\n  }\n\n  function allCombinations(tokensVariant, propertySize, propertiesCount, level) {\n    var differenceVariants = [[tokensVariant, sizeDifference(tokensVariant, propertySize, propertiesCount)]];\n    if (tokensVariant.length > 2 && level > 0) {\n      for (var i = tokensVariant.length - 1; i >= 0; i--) {\n        var subVariant = Array.prototype.slice.call(tokensVariant, 0);\n        subVariant.splice(i, 1);\n        differenceVariants = differenceVariants.concat(\n          allCombinations(subVariant, propertySize, propertiesCount, level - 1)\n        );\n      }\n    }\n\n    return differenceVariants;\n  }\n\n  function sizeDifference(tokensVariant, propertySize, propertiesCount) {\n    var allSelectorsSize = 0;\n    for (var i = tokensVariant.length - 1; i >= 0; i--) {\n      allSelectorsSize += tokensVariant[i][2].length > propertiesCount\n        ? serializeRules(tokensVariant[i][1]).length\n        : -1;\n    }\n    return allSelectorsSize - (tokensVariant.length - 1) * propertySize + 1;\n  }\n\n  function dropAsNewTokenAt(position, properties, allSelectors, mergeableTokens) {\n    var i, j, k, m;\n    var allProperties = [];\n\n    for (i = mergeableTokens.length - 1; i >= 0; i--) {\n      var mergeableToken = mergeableTokens[i];\n\n      for (j = mergeableToken[2].length - 1; j >= 0; j--) {\n        var mergeableProperty = mergeableToken[2][j];\n\n        for (k = 0, m = properties.length; k < m; k++) {\n          var property = properties[k];\n\n          var mergeablePropertyName = mergeableProperty[1][1];\n          var propertyName = property[0];\n          var propertyBody = property[4];\n          if (mergeablePropertyName == propertyName && serializeBody([mergeableProperty]) == propertyBody) {\n            mergeableToken[2].splice(j, 1);\n            break;\n          }\n        }\n      }\n    }\n\n    for (i = properties.length - 1; i >= 0; i--) {\n      allProperties.unshift(properties[i][3]);\n    }\n\n    var newToken = [Token.RULE, allSelectors, allProperties];\n    tokens.splice(position, 0, newToken);\n  }\n\n  function dropPropertiesAt(position, movedProperty) {\n    var key = movedProperty[4];\n    var toMove = movableTokens[key];\n\n    if (toMove && toMove.length > 1) {\n      if (!shortenMultiMovesIfPossible(position, movedProperty)) { shortenIfPossible(position, movedProperty); }\n    }\n  }\n\n  function shortenMultiMovesIfPossible(position, movedProperty) {\n    var candidates = [];\n    var propertiesAndMergableTokens = [];\n    var key = movedProperty[4];\n    var j, k;\n\n    var mergeableTokens = tokensToMerge(movableTokens[key]);\n    if (mergeableTokens.length < 2) { return; }\n\n    movableLoop:\n    for (var value in movableTokens) {\n      var tokensList = movableTokens[value];\n\n      for (j = mergeableTokens.length - 1; j >= 0; j--) {\n        if (tokensList.indexOf(mergeableTokens[j]) == -1) { continue movableLoop; }\n      }\n\n      candidates.push(value);\n    }\n\n    if (candidates.length < 2) { return false; }\n\n    for (j = candidates.length - 1; j >= 0; j--) {\n      for (k = movedProperties.length - 1; k >= 0; k--) {\n        if (movedProperties[k][4] == candidates[j]) {\n          propertiesAndMergableTokens.unshift([movedProperties[k], mergeableTokens]);\n          break;\n        }\n      }\n    }\n\n    return processMultiPropertyMove(position, propertiesAndMergableTokens);\n  }\n\n  function processMultiPropertyMove(position, propertiesAndMergableTokens) {\n    var valueSize = 0;\n    var properties = [];\n    var property;\n\n    for (var i = propertiesAndMergableTokens.length - 1; i >= 0; i--) {\n      property = propertiesAndMergableTokens[i][0];\n      var fullValue = property[4];\n      valueSize += fullValue.length + (i > 0 ? 1 : 0);\n\n      properties.push(property);\n    }\n\n    var mergeableTokens = propertiesAndMergableTokens[0][1];\n    var bestFit = findAllFits(mergeableTokens, valueSize, properties.length)[0];\n    if (bestFit[1] > 0) { return false; }\n\n    var allSelectors = [];\n    var qualifiedTokens = [];\n    for (i = bestFit[0].length - 1; i >= 0; i--) {\n      allSelectors = bestFit[0][i][1].concat(allSelectors);\n      qualifiedTokens.unshift(bestFit[0][i]);\n    }\n\n    allSelectors = tidyRuleDuplicates(allSelectors);\n    dropAsNewTokenAt(position, properties, allSelectors, qualifiedTokens);\n\n    for (i = properties.length - 1; i >= 0; i--) {\n      property = properties[i];\n      var index = movedProperties.indexOf(property);\n\n      delete movableTokens[property[4]];\n\n      if (index > -1 && movedToBeDropped.indexOf(index) == -1) { movedToBeDropped.push(index); }\n    }\n\n    return true;\n  }\n\n  function boundToAnotherPropertyInCurrrentToken(property, movedProperty, token) {\n    var propertyName = property[0];\n    var movedPropertyName = movedProperty[0];\n    if (propertyName != movedPropertyName) { return false; }\n\n    var key = movedProperty[4];\n    var toMove = movableTokens[key];\n    return toMove && toMove.indexOf(token) > -1;\n  }\n\n  for (var i = tokens.length - 1; i >= 0; i--) {\n    var token = tokens[i];\n    var isRule;\n    var j, k, m;\n    var samePropertyAt;\n\n    if (token[0] == Token.RULE) {\n      isRule = true;\n    } else if (token[0] == Token.NESTED_BLOCK) {\n      isRule = false;\n    } else {\n      continue;\n    }\n\n    // We cache movedProperties.length as it may change in the loop\n    var movedCount = movedProperties.length;\n\n    var properties = extractProperties(token);\n    movedToBeDropped = [];\n\n    var unmovableInCurrentToken = [];\n    for (j = properties.length - 1; j >= 0; j--) {\n      for (k = j - 1; k >= 0; k--) {\n        if (!canReorderSingle(properties[j], properties[k], specificityCache)) {\n          unmovableInCurrentToken.push(j);\n          break;\n        }\n      }\n    }\n\n    for (j = properties.length - 1; j >= 0; j--) {\n      var property = properties[j];\n      var movedSameProperty = false;\n\n      for (k = 0; k < movedCount; k++) {\n        var movedProperty = movedProperties[k];\n\n        if (movedToBeDropped.indexOf(k) == -1 && (\n          !canReorderSingle(property, movedProperty, specificityCache)\n          && !boundToAnotherPropertyInCurrrentToken(property, movedProperty, token)\n          || movableTokens[movedProperty[4]] && movableTokens[movedProperty[4]].length === mergeLimit)\n        ) {\n          dropPropertiesAt(i + 1, movedProperty);\n\n          if (movedToBeDropped.indexOf(k) == -1) {\n            movedToBeDropped.push(k);\n            delete movableTokens[movedProperty[4]];\n          }\n        }\n\n        if (!movedSameProperty) {\n          movedSameProperty = property[0] == movedProperty[0] && property[1] == movedProperty[1];\n\n          if (movedSameProperty) {\n            samePropertyAt = k;\n          }\n        }\n      }\n\n      if (!isRule || unmovableInCurrentToken.indexOf(j) > -1) { continue; }\n\n      var key = property[4];\n\n      if (movedSameProperty && movedProperties[samePropertyAt][5].length + property[5].length > mergeLimit) {\n        dropPropertiesAt(i + 1, movedProperties[samePropertyAt]);\n        movedProperties.splice(samePropertyAt, 1);\n        movableTokens[key] = [token];\n        movedSameProperty = false;\n      } else {\n        movableTokens[key] = movableTokens[key] || [];\n        movableTokens[key].push(token);\n      }\n\n      if (movedSameProperty) {\n        movedProperties[samePropertyAt] = cloneAndMergeSelectors(movedProperties[samePropertyAt], property);\n      } else {\n        movedProperties.push(property);\n      }\n    }\n\n    movedToBeDropped = movedToBeDropped.sort(naturalSorter);\n    for (j = 0, m = movedToBeDropped.length; j < m; j++) {\n      var dropAt = movedToBeDropped[j] - j;\n      movedProperties.splice(dropAt, 1);\n    }\n  }\n\n  var position = tokens[0] && tokens[0][0] == Token.AT_RULE && tokens[0][1].indexOf('@charset') === 0 ? 1 : 0;\n  for (; position < tokens.length - 1; position++) {\n    var isImportRule = tokens[position][0] === Token.AT_RULE && tokens[position][1].indexOf('@import') === 0;\n    var isComment = tokens[position][0] === Token.COMMENT;\n    if (!(isImportRule || isComment)) { break; }\n  }\n\n  for (i = 0; i < movedProperties.length; i++) {\n    dropPropertiesAt(position, movedProperties[i]);\n  }\n}\n\nmodule.exports = restructure;\n", "var mergeAdjacent = require('./merge-adjacent');\nvar mergeMediaQueries = require('./merge-media-queries');\nvar mergeNonAdjacentByBody = require('./merge-non-adjacent-by-body');\nvar mergeNonAdjacentBySelector = require('./merge-non-adjacent-by-selector');\nvar reduceNonAdjacent = require('./reduce-non-adjacent');\nvar removeDuplicateFontAtRules = require('./remove-duplicate-font-at-rules');\nvar removeDuplicateMediaQueries = require('./remove-duplicate-media-queries');\nvar removeDuplicates = require('./remove-duplicates');\nvar removeUnusedAtRules = require('./remove-unused-at-rules');\nvar restructure = require('./restructure');\n\nvar optimizeProperties = require('./properties/optimize');\n\nvar OptimizationLevel = require('../../options/optimization-level').OptimizationLevel;\n\nvar Token = require('../../tokenizer/token');\n\nfunction removeEmpty(tokens) {\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    var token = tokens[i];\n    var isEmpty = false;\n\n    switch (token[0]) {\n    case Token.RULE:\n      isEmpty = token[1].length === 0 || token[2].length === 0;\n      break;\n    case Token.NESTED_BLOCK:\n      removeEmpty(token[2]);\n      isEmpty = token[2].length === 0;\n      break;\n    case Token.AT_RULE:\n      isEmpty = token[1].length === 0;\n      break;\n    case Token.AT_RULE_BLOCK:\n      isEmpty = token[2].length === 0;\n    }\n\n    if (isEmpty) {\n      tokens.splice(i, 1);\n      i--;\n      l--;\n    }\n  }\n}\n\nfunction recursivelyOptimizeBlocks(tokens, context) {\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    var token = tokens[i];\n\n    if (token[0] == Token.NESTED_BLOCK) {\n      var isKeyframes = /@(-moz-|-o-|-webkit-)?keyframes/.test(token[1][0][1]);\n      level2Optimize(token[2], context, !isKeyframes);\n    }\n  }\n}\n\nfunction recursivelyOptimizeProperties(tokens, context) {\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    var token = tokens[i];\n\n    switch (token[0]) {\n    case Token.RULE:\n      optimizeProperties(token[2], true, true, context);\n      break;\n    case Token.NESTED_BLOCK:\n      recursivelyOptimizeProperties(token[2], context);\n    }\n  }\n}\n\nfunction level2Optimize(tokens, context, withRestructuring) {\n  var levelOptions = context.options.level[OptimizationLevel.Two];\n  var level2Plugins = context.options.plugins.level2Block;\n  var reduced;\n  var i;\n\n  recursivelyOptimizeBlocks(tokens, context);\n  recursivelyOptimizeProperties(tokens, context);\n\n  if (levelOptions.removeDuplicateRules) {\n    removeDuplicates(tokens, context);\n  }\n\n  if (levelOptions.mergeAdjacentRules) {\n    mergeAdjacent(tokens, context);\n  }\n\n  if (levelOptions.reduceNonAdjacentRules) {\n    reduceNonAdjacent(tokens, context);\n  }\n\n  if (levelOptions.mergeNonAdjacentRules && levelOptions.mergeNonAdjacentRules != 'body') {\n    mergeNonAdjacentBySelector(tokens, context);\n  }\n\n  if (levelOptions.mergeNonAdjacentRules && levelOptions.mergeNonAdjacentRules != 'selector') {\n    mergeNonAdjacentByBody(tokens, context);\n  }\n\n  if (levelOptions.restructureRules && levelOptions.mergeAdjacentRules && withRestructuring) {\n    restructure(tokens, context);\n    mergeAdjacent(tokens, context);\n  }\n\n  if (levelOptions.restructureRules && !levelOptions.mergeAdjacentRules && withRestructuring) {\n    restructure(tokens, context);\n  }\n\n  if (levelOptions.removeDuplicateFontRules) {\n    removeDuplicateFontAtRules(tokens, context);\n  }\n\n  if (levelOptions.removeDuplicateMediaBlocks) {\n    removeDuplicateMediaQueries(tokens, context);\n  }\n\n  if (levelOptions.removeUnusedAtRules) {\n    removeUnusedAtRules(tokens, context);\n  }\n\n  if (levelOptions.mergeMedia) {\n    reduced = mergeMediaQueries(tokens, context);\n    for (i = reduced.length - 1; i >= 0; i--) {\n      level2Optimize(reduced[i][2], context, false);\n    }\n  }\n\n  for (i = 0; i < level2Plugins.length; i++) {\n    level2Plugins[i](tokens);\n  }\n\n  if (levelOptions.removeEmpty) {\n    removeEmpty(tokens);\n  }\n\n  return tokens;\n}\n\nmodule.exports = level2Optimize;\n", "var functionNoVendorRegexStr = '[A-Z]+(\\\\-|[A-Z]|[0-9])+\\\\(.*?\\\\)';\nvar functionVendorRegexStr = '\\\\-(\\\\-|[A-Z]|[0-9])+\\\\(.*?\\\\)';\nvar variableRegexStr = 'var\\\\(\\\\-\\\\-[^\\\\)]+\\\\)';\nvar functionAnyRegexStr = '(' + variableRegexStr + '|' + functionNoVendorRegexStr + '|' + functionVendorRegexStr + ')';\n\nvar calcRegex = new RegExp('^(\\\\-moz\\\\-|\\\\-webkit\\\\-)?calc\\\\([^\\\\)]+\\\\)$', 'i');\nvar decimalRegex = /[0-9]/;\nvar functionAnyRegex = new RegExp('^' + functionAnyRegexStr + '$', 'i');\nvar hexAlphaColorRegex = /^#(?:[0-9a-f]{4}|[0-9a-f]{8})$/i;\n// eslint-disable-next-line max-len\nvar hslColorRegex = /^hsl\\(\\s{0,31}[-.]?\\d+\\s{0,31},\\s{0,31}\\d*\\.?\\d+%\\s{0,31},\\s{0,31}\\d*\\.?\\d+%\\s{0,31}\\)|hsla\\(\\s{0,31}[-.]?\\d+\\s{0,31},\\s{0,31}\\d*\\.?\\d+%\\s{0,31},\\s{0,31}\\d*\\.?\\d+%\\s{0,31},\\s{0,31}\\.?\\d+\\s{0,31}\\)$/;\n// eslint-disable-next-line max-len\nvar hslColorWithSpacesRegex = /^hsl\\(\\s{0,31}[-.]?\\d+(deg)?\\s{1,31}\\d*\\.?\\d+%\\s{1,31}\\d*\\.?\\d+%\\s{0,31}\\)|hsla\\(\\s{0,31}[-.]?\\d+(deg)?\\s{1,31}\\d*\\.?\\d+%\\s{1,31}\\d*\\.?\\d+%\\s{1,31}\\/\\s{1,31}\\d*\\.?\\d+%?\\s{0,31}\\)$/;\nvar identifierRegex = /^(-[a-z0-9_][a-z0-9\\-_]*|[a-z_][a-z0-9\\-_]*)$/i;\nvar namedEntityRegex = /^[a-z]+$/i;\nvar prefixRegex = /^-([a-z0-9]|-)*$/i;\nvar quotedTextRegex = /^(\"[^\"]*\"|'[^']*')$/i;\n// eslint-disable-next-line max-len\nvar rgbColorRegex = /^rgb\\(\\s{0,31}[\\d]{1,3}\\s{0,31},\\s{0,31}[\\d]{1,3}\\s{0,31},\\s{0,31}[\\d]{1,3}\\s{0,31}\\)|rgba\\(\\s{0,31}[\\d]{1,3}\\s{0,31},\\s{0,31}[\\d]{1,3}\\s{0,31},\\s{0,31}[\\d]{1,3}\\s{0,31},\\s{0,31}[.\\d]+\\s{0,31}\\)$/i;\n// eslint-disable-next-line max-len\nvar rgbColorWithSpacesRegex = /^rgb\\(\\s{0,31}[\\d]{1,3}\\s{1,31}[\\d]{1,3}\\s{1,31}[\\d]{1,3}\\s{0,31}\\)|rgba\\(\\s{0,31}[\\d]{1,3}\\s{1,31}[\\d]{1,3}\\s{1,31}[\\d]{1,3}\\s{1,31}\\/\\s{1,31}[\\d]*\\.?[.\\d]+%?\\s{0,31}\\)$/i;\nvar timeUnitPattern = /\\d+(s|ms)/;\nvar timingFunctionRegex = /^(cubic-bezier|steps)\\([^)]+\\)$/;\nvar validTimeUnits = ['ms', 's'];\nvar urlRegex = /^url\\([\\s\\S]+\\)$/i;\nvar variableRegex = new RegExp('^' + variableRegexStr + '$', 'i');\n\nvar eightValueColorRegex = /^#[0-9a-f]{8}$/i;\nvar fourValueColorRegex = /^#[0-9a-f]{4}$/i;\nvar sixValueColorRegex = /^#[0-9a-f]{6}$/i;\nvar threeValueColorRegex = /^#[0-9a-f]{3}$/i;\n\nvar DECIMAL_DOT = '.';\nvar MINUS_SIGN = '-';\nvar PLUS_SIGN = '+';\n\nvar Keywords = {\n  '^': [\n    'inherit',\n    'initial',\n    'unset'\n  ],\n  '*-style': [\n    'auto',\n    'dashed',\n    'dotted',\n    'double',\n    'groove',\n    'hidden',\n    'inset',\n    'none',\n    'outset',\n    'ridge',\n    'solid'\n  ],\n  '*-timing-function': [\n    'ease',\n    'ease-in',\n    'ease-in-out',\n    'ease-out',\n    'linear',\n    'step-end',\n    'step-start'\n  ],\n  'animation-direction': [\n    'alternate',\n    'alternate-reverse',\n    'normal',\n    'reverse'\n  ],\n  'animation-fill-mode': [\n    'backwards',\n    'both',\n    'forwards',\n    'none'\n  ],\n  'animation-iteration-count': [\n    'infinite'\n  ],\n  'animation-name': [\n    'none'\n  ],\n  'animation-play-state': [\n    'paused',\n    'running'\n  ],\n  'background-attachment': [\n    'fixed',\n    'inherit',\n    'local',\n    'scroll'\n  ],\n  'background-clip': [\n    'border-box',\n    'content-box',\n    'inherit',\n    'padding-box',\n    'text'\n  ],\n  'background-origin': [\n    'border-box',\n    'content-box',\n    'inherit',\n    'padding-box'\n  ],\n  'background-position': [\n    'bottom',\n    'center',\n    'left',\n    'right',\n    'top'\n  ],\n  'background-repeat': [\n    'no-repeat',\n    'inherit',\n    'repeat',\n    'repeat-x',\n    'repeat-y',\n    'round',\n    'space'\n  ],\n  'background-size': [\n    'auto',\n    'cover',\n    'contain'\n  ],\n  'border-collapse': [\n    'collapse',\n    'inherit',\n    'separate'\n  ],\n  bottom: [\n    'auto'\n  ],\n  clear: [\n    'both',\n    'left',\n    'none',\n    'right'\n  ],\n  color: [\n    'transparent'\n  ],\n  cursor: [\n    'all-scroll',\n    'auto',\n    'col-resize',\n    'crosshair',\n    'default',\n    'e-resize',\n    'help',\n    'move',\n    'n-resize',\n    'ne-resize',\n    'no-drop',\n    'not-allowed',\n    'nw-resize',\n    'pointer',\n    'progress',\n    'row-resize',\n    's-resize',\n    'se-resize',\n    'sw-resize',\n    'text',\n    'vertical-text',\n    'w-resize',\n    'wait'\n  ],\n  display: [\n    'block',\n    'inline',\n    'inline-block',\n    'inline-table',\n    'list-item',\n    'none',\n    'table',\n    'table-caption',\n    'table-cell',\n    'table-column',\n    'table-column-group',\n    'table-footer-group',\n    'table-header-group',\n    'table-row',\n    'table-row-group'\n  ],\n  float: [\n    'left',\n    'none',\n    'right'\n  ],\n  left: [\n    'auto'\n  ],\n  font: [\n    'caption',\n    'icon',\n    'menu',\n    'message-box',\n    'small-caption',\n    'status-bar',\n    'unset'\n  ],\n  'font-size': [\n    'large',\n    'larger',\n    'medium',\n    'small',\n    'smaller',\n    'x-large',\n    'x-small',\n    'xx-large',\n    'xx-small'\n  ],\n  'font-stretch': [\n    'condensed',\n    'expanded',\n    'extra-condensed',\n    'extra-expanded',\n    'normal',\n    'semi-condensed',\n    'semi-expanded',\n    'ultra-condensed',\n    'ultra-expanded'\n  ],\n  'font-style': [\n    'italic',\n    'normal',\n    'oblique'\n  ],\n  'font-variant': [\n    'normal',\n    'small-caps'\n  ],\n  'font-weight': [\n    '100',\n    '200',\n    '300',\n    '400',\n    '500',\n    '600',\n    '700',\n    '800',\n    '900',\n    'bold',\n    'bolder',\n    'lighter',\n    'normal'\n  ],\n  'line-height': [\n    'normal'\n  ],\n  'list-style-position': [\n    'inside',\n    'outside'\n  ],\n  'list-style-type': [\n    'armenian',\n    'circle',\n    'decimal',\n    'decimal-leading-zero',\n    'disc',\n    'decimal|disc', // this is the default value of list-style-type, see comment in configuration.js\n    'georgian',\n    'lower-alpha',\n    'lower-greek',\n    'lower-latin',\n    'lower-roman',\n    'none',\n    'square',\n    'upper-alpha',\n    'upper-latin',\n    'upper-roman'\n  ],\n  overflow: [\n    'auto',\n    'hidden',\n    'scroll',\n    'visible'\n  ],\n  position: [\n    'absolute',\n    'fixed',\n    'relative',\n    'static'\n  ],\n  right: [\n    'auto'\n  ],\n  'text-align': [\n    'center',\n    'justify',\n    'left',\n    'left|right', // this is the default value of list-style-type, see comment in configuration.js\n    'right'\n  ],\n  'text-decoration': [\n    'line-through',\n    'none',\n    'overline',\n    'underline'\n  ],\n  'text-overflow': [\n    'clip',\n    'ellipsis'\n  ],\n  top: [\n    'auto'\n  ],\n  'vertical-align': [\n    'baseline',\n    'bottom',\n    'middle',\n    'sub',\n    'super',\n    'text-bottom',\n    'text-top',\n    'top'\n  ],\n  visibility: [\n    'collapse',\n    'hidden',\n    'visible'\n  ],\n  'white-space': [\n    'normal',\n    'nowrap',\n    'pre'\n  ],\n  width: [\n    'inherit',\n    'initial',\n    'medium',\n    'thick',\n    'thin'\n  ]\n};\n\nvar Units = [\n  '%',\n  'ch',\n  'cm',\n  'em',\n  'ex',\n  'in',\n  'mm',\n  'pc',\n  'pt',\n  'px',\n  'rem',\n  'vh',\n  'vm',\n  'vmax',\n  'vmin',\n  'vw'\n];\n\nfunction isColor(value) {\n  return value != 'auto'\n    && (\n      isKeyword('color')(value)\n      || isHexColor(value)\n      || isColorFunction(value)\n      || isNamedEntity(value)\n    );\n}\n\nfunction isColorFunction(value) {\n  return isRgbColor(value) || isHslColor(value);\n}\n\nfunction isDynamicUnit(value) {\n  return calcRegex.test(value);\n}\n\nfunction isFunction(value) {\n  return functionAnyRegex.test(value);\n}\n\nfunction isHexColor(value) {\n  return threeValueColorRegex.test(value)\n    || fourValueColorRegex.test(value)\n    || sixValueColorRegex.test(value)\n    || eightValueColorRegex.test(value);\n}\n\nfunction isHslColor(value) {\n  return hslColorRegex.test(value) || hslColorWithSpacesRegex.test(value);\n}\n\nfunction isHexAlphaColor(value) {\n  return hexAlphaColorRegex.test(value);\n}\n\nfunction isIdentifier(value) {\n  return identifierRegex.test(value);\n}\n\nfunction isQuotedText(value) {\n  return quotedTextRegex.test(value);\n}\n\nfunction isImage(value) {\n  return value == 'none' || value == 'inherit' || isUrl(value);\n}\n\nfunction isKeyword(propertyName) {\n  return function(value) {\n    return Keywords[propertyName].indexOf(value) > -1;\n  };\n}\n\nfunction isNamedEntity(value) {\n  return namedEntityRegex.test(value);\n}\n\nfunction isNumber(value) {\n  return scanForNumber(value) == value.length;\n}\n\nfunction isRgbColor(value) {\n  return rgbColorRegex.test(value) || rgbColorWithSpacesRegex.test(value);\n}\n\nfunction isPrefixed(value) {\n  return prefixRegex.test(value);\n}\n\nfunction isPositiveNumber(value) {\n  return isNumber(value)\n    && parseFloat(value) >= 0;\n}\n\nfunction isVariable(value) {\n  return variableRegex.test(value);\n}\n\nfunction isTime(value) {\n  var numberUpTo = scanForNumber(value);\n\n  return numberUpTo == value.length && parseInt(value) === 0\n    || numberUpTo > -1 && validTimeUnits.indexOf(value.slice(numberUpTo + 1)) > -1\n    || isCalculatedTime(value);\n}\n\nfunction isCalculatedTime(value) {\n  return isFunction(value) && timeUnitPattern.test(value);\n}\n\nfunction isTimingFunction() {\n  var isTimingFunctionKeyword = isKeyword('*-timing-function');\n\n  return function(value) {\n    return isTimingFunctionKeyword(value) || timingFunctionRegex.test(value);\n  };\n}\n\nfunction isUnit(validUnits, value) {\n  var numberUpTo = scanForNumber(value);\n\n  return numberUpTo == value.length && parseInt(value) === 0\n    || numberUpTo > -1 && validUnits.indexOf(value.slice(numberUpTo + 1).toLowerCase()) > -1\n    || value == 'auto'\n    || value == 'inherit';\n}\n\nfunction isUrl(value) {\n  return urlRegex.test(value);\n}\n\nfunction isZIndex(value) {\n  return value == 'auto'\n    || isNumber(value)\n    || isKeyword('^')(value);\n}\n\nfunction scanForNumber(value) {\n  var hasDot = false;\n  var hasSign = false;\n  var character;\n  var i, l;\n\n  for (i = 0, l = value.length; i < l; i++) {\n    character = value[i];\n\n    if (i === 0 && (character == PLUS_SIGN || character == MINUS_SIGN)) {\n      hasSign = true;\n    } else if (i > 0 && hasSign && (character == PLUS_SIGN || character == MINUS_SIGN)) {\n      return i - 1;\n    } else if (character == DECIMAL_DOT && !hasDot) {\n      hasDot = true;\n    } else if (character == DECIMAL_DOT && hasDot) {\n      return i - 1;\n    } else if (decimalRegex.test(character)) {\n      continue;\n    } else {\n      return i - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction validator(compatibility) {\n  var validUnits = Units.slice(0).filter(function(value) {\n    return !(value in compatibility.units) || compatibility.units[value] === true;\n  });\n\n  if (compatibility.customUnits.rpx) {\n    validUnits.push('rpx');\n  }\n\n  return {\n    colorOpacity: compatibility.colors.opacity,\n    colorHexAlpha: compatibility.colors.hexAlpha,\n    isAnimationDirectionKeyword: isKeyword('animation-direction'),\n    isAnimationFillModeKeyword: isKeyword('animation-fill-mode'),\n    isAnimationIterationCountKeyword: isKeyword('animation-iteration-count'),\n    isAnimationNameKeyword: isKeyword('animation-name'),\n    isAnimationPlayStateKeyword: isKeyword('animation-play-state'),\n    isTimingFunction: isTimingFunction(),\n    isBackgroundAttachmentKeyword: isKeyword('background-attachment'),\n    isBackgroundClipKeyword: isKeyword('background-clip'),\n    isBackgroundOriginKeyword: isKeyword('background-origin'),\n    isBackgroundPositionKeyword: isKeyword('background-position'),\n    isBackgroundRepeatKeyword: isKeyword('background-repeat'),\n    isBackgroundSizeKeyword: isKeyword('background-size'),\n    isColor: isColor,\n    isColorFunction: isColorFunction,\n    isDynamicUnit: isDynamicUnit,\n    isFontKeyword: isKeyword('font'),\n    isFontSizeKeyword: isKeyword('font-size'),\n    isFontStretchKeyword: isKeyword('font-stretch'),\n    isFontStyleKeyword: isKeyword('font-style'),\n    isFontVariantKeyword: isKeyword('font-variant'),\n    isFontWeightKeyword: isKeyword('font-weight'),\n    isFunction: isFunction,\n    isGlobal: isKeyword('^'),\n    isHexAlphaColor: isHexAlphaColor,\n    isHslColor: isHslColor,\n    isIdentifier: isIdentifier,\n    isImage: isImage,\n    isKeyword: isKeyword,\n    isLineHeightKeyword: isKeyword('line-height'),\n    isListStylePositionKeyword: isKeyword('list-style-position'),\n    isListStyleTypeKeyword: isKeyword('list-style-type'),\n    isNumber: isNumber,\n    isPrefixed: isPrefixed,\n    isPositiveNumber: isPositiveNumber,\n    isQuotedText: isQuotedText,\n    isRgbColor: isRgbColor,\n    isStyleKeyword: isKeyword('*-style'),\n    isTime: isTime,\n    isUnit: isUnit.bind(null, validUnits),\n    isUrl: isUrl,\n    isVariable: isVariable,\n    isWidth: isKeyword('width'),\n    isZIndex: isZIndex\n  };\n}\n\nmodule.exports = validator;\n", "var DEFAULTS = {\n  '*': {\n    colors: {\n      hexAlpha: false, // 4- and 8-character hex notation\n      opacity: true // rgba / hsla\n    },\n    customUnits: { rpx: false },\n    properties: {\n      backgroundClipMerging: true, // background-clip to shorthand\n      backgroundOriginMerging: true, // background-origin to shorthand\n      backgroundSizeMerging: true, // background-size to shorthand\n      colors: true, // any kind of color transformations, like `#ff00ff` to `#f0f` or `#fff` into `red`\n      ieBangHack: false, // !ie suffix hacks on IE<8\n      ieFilters: false, // whether to preserve `filter` and `-ms-filter` properties\n      iePrefixHack: false, // underscore / asterisk prefix hacks on IE\n      ieSuffixHack: false, // \\9 suffix hacks on IE6-9, \\0 suffix hack on IE6-11\n      merging: true, // merging properties into one\n      shorterLengthUnits: false, // optimize pixel units into `pt`, `pc` or `in` units\n      spaceAfterClosingBrace: true, // 'url() no-repeat' to 'url()no-repeat'\n      urlQuotes: true, // whether to wrap content of `url()` into quotes or not\n      zeroUnits: true // 0[unit] -> 0\n    },\n    selectors: {\n      adjacentSpace: false, // div+ nav Android stock browser hack\n      ie7Hack: false, // *+html hack\n      mergeablePseudoClasses: [\n        ':active',\n        ':after',\n        ':before',\n        ':empty',\n        ':checked',\n        ':disabled',\n        ':empty',\n        ':enabled',\n        ':first-child',\n        ':first-letter',\n        ':first-line',\n        ':first-of-type',\n        ':focus',\n        ':hover',\n        ':lang',\n        ':last-child',\n        ':last-of-type',\n        ':link',\n        ':not',\n        ':nth-child',\n        ':nth-last-child',\n        ':nth-last-of-type',\n        ':nth-of-type',\n        ':only-child',\n        ':only-of-type',\n        ':root',\n        ':target',\n        ':visited'\n      ], // selectors with these pseudo-classes can be merged as these are universally supported\n      mergeablePseudoElements: [\n        '::after',\n        '::before',\n        '::first-letter',\n        '::first-line'\n      ], // selectors with these pseudo-elements can be merged as these are universally supported\n      mergeLimit: 8191, // number of rules that can be safely merged together\n      multiplePseudoMerging: true\n    },\n    units: {\n      ch: true,\n      in: true,\n      pc: true,\n      pt: true,\n      rem: true,\n      vh: true,\n      vm: true, // vm is vmin on IE9+ see https://developer.mozilla.org/en-US/docs/Web/CSS/length\n      vmax: true,\n      vmin: true,\n      vw: true\n    }\n  }\n};\n\nDEFAULTS.ie11 = merge(DEFAULTS['*'], { properties: { ieSuffixHack: true } });\n\nDEFAULTS.ie10 = merge(DEFAULTS['*'], { properties: { ieSuffixHack: true } });\n\nDEFAULTS.ie9 = merge(DEFAULTS['*'], {\n  properties: {\n    ieFilters: true,\n    ieSuffixHack: true\n  }\n});\n\nDEFAULTS.ie8 = merge(DEFAULTS.ie9, {\n  colors: { opacity: false },\n  properties: {\n    backgroundClipMerging: false,\n    backgroundOriginMerging: false,\n    backgroundSizeMerging: false,\n    iePrefixHack: true,\n    merging: false\n  },\n  selectors: {\n    mergeablePseudoClasses: [\n      ':after',\n      ':before',\n      ':first-child',\n      ':first-letter',\n      ':focus',\n      ':hover',\n      ':visited'\n    ],\n    mergeablePseudoElements: []\n  },\n  units: {\n    ch: false,\n    rem: false,\n    vh: false,\n    vm: false,\n    vmax: false,\n    vmin: false,\n    vw: false\n  }\n});\n\nDEFAULTS.ie7 = merge(DEFAULTS.ie8, {\n  properties: { ieBangHack: true },\n  selectors: {\n    ie7Hack: true,\n    mergeablePseudoClasses: [\n      ':first-child',\n      ':first-letter',\n      ':hover',\n      ':visited'\n    ]\n  }\n});\n\nfunction compatibilityFrom(source) {\n  return merge(DEFAULTS['*'], calculateSource(source));\n}\n\nfunction merge(source, target) {\n  for (var key in source) {\n    if (Object.prototype.hasOwnProperty.call(source, key)) {\n      var value = source[key];\n\n      if (Object.prototype.hasOwnProperty.call(target, key) && typeof value === 'object' && !Array.isArray(value)) {\n        target[key] = merge(value, target[key] || {});\n      } else {\n        target[key] = key in target ? target[key] : value;\n      }\n    }\n  }\n\n  return target;\n}\n\nfunction calculateSource(source) {\n  if (typeof source == 'object') { return source; }\n\n  if (!/[,+-]/.test(source)) { return DEFAULTS[source] || DEFAULTS['*']; }\n\n  var parts = source.split(',');\n  var template = parts[0] in DEFAULTS\n    ? DEFAULTS[parts.shift()]\n    : DEFAULTS['*'];\n\n  source = {};\n\n  parts.forEach(function(part) {\n    var isAdd = part[0] == '+';\n    var key = part.substring(1).split('.');\n    var group = key[0];\n    var option = key[1];\n\n    source[group] = source[group] || {};\n    source[group][option] = isAdd;\n  });\n\n  return merge(template, source);\n}\n\nmodule.exports = compatibilityFrom;\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"http\" has been externalized for browser compatibility. Cannot access \"http.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"https\" has been externalized for browser compatibility. Cannot access \"https.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"url\" has been externalized for browser compatibility. Cannot access \"url.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "var HTTP_RESOURCE_PATTERN = /^http:\\/\\//;\n\nfunction isHttpResource(uri) {\n  return HTTP_RESOURCE_PATTERN.test(uri);\n}\n\nmodule.exports = isHttpResource;\n", "var HTTPS_RESOURCE_PATTERN = /^https:\\/\\//;\n\nfunction isHttpsResource(uri) {\n  return HTTPS_RESOURCE_PATTERN.test(uri);\n}\n\nmodule.exports = isHttpsResource;\n", "var http = require('http');\nvar https = require('https');\nvar url = require('url');\n\nvar isHttpResource = require('../utils/is-http-resource');\nvar isHttpsResource = require('../utils/is-https-resource');\nvar override = require('../utils/override');\n\nvar HTTP_PROTOCOL = 'http:';\n\nfunction loadRemoteResource(uri, inlineRequest, inlineTimeout, callback) {\n  var proxyProtocol = inlineRequest.protocol || inlineRequest.hostname;\n  var errorHandled = false;\n  var requestOptions;\n  var fetch;\n\n  requestOptions = override(\n    url.parse(uri),\n    inlineRequest || {}\n  );\n\n  if (inlineRequest.hostname !== undefined) {\n    // overwrite as we always expect a http proxy currently\n    requestOptions.protocol = inlineRequest.protocol || HTTP_PROTOCOL;\n    requestOptions.path = requestOptions.href;\n  }\n\n  fetch = (proxyProtocol && !isHttpsResource(proxyProtocol)) || isHttpResource(uri)\n    ? http.get\n    : https.get;\n\n  fetch(requestOptions, function(res) {\n    var chunks = [];\n    var movedUri;\n\n    if (errorHandled) {\n      return;\n    }\n\n    if (res.statusCode < 200 || res.statusCode > 399) {\n      return callback(res.statusCode, null);\n    } if (res.statusCode > 299) {\n      movedUri = url.resolve(uri, res.headers.location);\n      return loadRemoteResource(movedUri, inlineRequest, inlineTimeout, callback);\n    }\n\n    res.on('data', function(chunk) {\n      chunks.push(chunk.toString());\n    });\n    res.on('end', function() {\n      var body = chunks.join('');\n      callback(null, body);\n    });\n  })\n    .on('error', function(res) {\n      if (errorHandled) {\n        return;\n      }\n\n      errorHandled = true;\n      callback(res.message, null);\n    })\n    .on('timeout', function() {\n      if (errorHandled) {\n        return;\n      }\n\n      errorHandled = true;\n      callback('timeout', null);\n    })\n    .setTimeout(inlineTimeout);\n}\n\nmodule.exports = loadRemoteResource;\n", "var loadRemoteResource = require('../reader/load-remote-resource');\n\nfunction fetchFrom(callback) {\n  return callback || loadRemoteResource;\n}\n\nmodule.exports = fetchFrom;\n", "function inlineOptionsFrom(rules) {\n  if (Array.isArray(rules)) {\n    return rules;\n  }\n\n  if (rules === false) {\n    return ['none'];\n  }\n\n  return undefined === rules\n    ? ['local']\n    : rules.split(',');\n}\n\nmodule.exports = inlineOptionsFrom;\n", "var url = require('url');\n\nvar override = require('../utils/override');\n\nfunction inlineRequestFrom(option) {\n  return override(\n    /* jshint camelcase: false */\n    proxyOptionsFrom(process.env.HTTP_PROXY || process.env.http_proxy),\n    option || {}\n  );\n}\n\nfunction proxyOptionsFrom(httpProxy) {\n  return httpProxy\n    ? {\n      hostname: url.parse(httpProxy).hostname,\n      port: parseInt(url.parse(httpProxy).port)\n    }\n    : {};\n}\n\nmodule.exports = inlineRequestFrom;\n", "var DEFAULT_TIMEOUT = 5000;\n\nfunction inlineTimeoutFrom(option) {\n  return option || DEFAULT_TIMEOUT;\n}\n\nmodule.exports = inlineTimeoutFrom;\n", "function pluginsFrom(plugins) {\n  var flatPlugins = {\n    level1Value: [],\n    level1Property: [],\n    level2Block: []\n  };\n\n  plugins = plugins || [];\n\n  flatPlugins.level1Value = plugins\n    .map(function(plugin) { return plugin.level1 && plugin.level1.value; })\n    .filter(function(plugin) { return plugin != null; });\n\n  flatPlugins.level1Property = plugins\n    .map(function(plugin) { return plugin.level1 && plugin.level1.property; })\n    .filter(function(plugin) { return plugin != null; });\n\n  flatPlugins.level2Block = plugins\n    .map(function(plugin) { return plugin.level2 && plugin.level2.block; })\n    .filter(function(plugin) { return plugin != null; });\n\n  return flatPlugins;\n}\n\nmodule.exports = pluginsFrom;\n", "function rebaseFrom(rebaseOption, rebaseToOption) {\n  if (undefined !== rebaseToOption) {\n    return true;\n  } if (undefined === rebaseOption) {\n    return false;\n  }\n  return !!rebaseOption;\n}\n\nmodule.exports = rebaseFrom;\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"path\" has been externalized for browser compatibility. Cannot access \"path.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "var path = require('path');\n\nfunction rebaseToFrom(option) {\n  return option ? path.resolve(option) : process.cwd();\n}\n\nmodule.exports = rebaseToFrom;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   “sources” entry.  This value is prepended to the individual\n    //   entries in the “source” field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   “sourceRoot”, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  if (sourceRoot) {\n    sourceRoot = util.normalize(sourceRoot);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this._absoluteSources = this._sources.toArray().map(function (s) {\n    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n  });\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this._sourceMapURL = aSourceMapURL;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Utility function to find the index of a source.  Returns -1 if not\n * found.\n */\nBasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\n  var relativeSource = aSource;\n  if (this.sourceRoot != null) {\n    relativeSource = util.relative(this.sourceRoot, relativeSource);\n  }\n\n  if (this._sources.has(relativeSource)) {\n    return this._sources.indexOf(relativeSource);\n  }\n\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\n  // this case we can't simply undo the transform.\n  var i;\n  for (i = 0; i < this._absoluteSources.length; ++i) {\n    if (this._absoluteSources[i] == aSource) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n    smc._sourceMapURL = aSourceMapURL;\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\n      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n    });\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._absoluteSources.slice();\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    var index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    var relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = null;\n        if (mapping.name) {\n          name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex] || '';\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex] || '';\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n", "/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n", "var SourceMapConsumer = require('source-map').SourceMapConsumer;\n\nfunction inputSourceMapTracker() {\n  var maps = {};\n\n  return {\n    all: all.bind(null, maps),\n    isTracking: isTracking.bind(null, maps),\n    originalPositionFor: originalPositionFor.bind(null, maps),\n    track: track.bind(null, maps)\n  };\n}\n\nfunction all(maps) {\n  return maps;\n}\n\nfunction isTracking(maps, source) {\n  return source in maps;\n}\n\nfunction originalPositionFor(maps, metadata, range, selectorFallbacks) {\n  var line = metadata[0];\n  var column = metadata[1];\n  var source = metadata[2];\n  var position = {\n    line: line,\n    column: column + range\n  };\n  var originalPosition;\n\n  while (!originalPosition && position.column > column) {\n    position.column--;\n    originalPosition = maps[source].originalPositionFor(position);\n  }\n\n  if (!originalPosition || originalPosition.column < 0) {\n    return metadata;\n  }\n\n  if (originalPosition.line === null && line > 1 && selectorFallbacks > 0) {\n    return originalPositionFor(maps, [line - 1, column, source], range, selectorFallbacks - 1);\n  }\n\n  return originalPosition.line !== null\n    ? toMetadata(originalPosition)\n    : metadata;\n}\n\nfunction toMetadata(asHash) {\n  return [asHash.line, asHash.column, asHash.source];\n}\n\nfunction track(maps, source, data) {\n  maps[source] = new SourceMapConsumer(data);\n}\n\nmodule.exports = inputSourceMapTracker;\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"fs\" has been externalized for browser compatibility. Cannot access \"fs.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "var REMOTE_RESOURCE_PATTERN = /^(\\w+:\\/\\/|\\/\\/)/;\nvar FILE_RESOURCE_PATTERN = /^file:\\/\\//;\n\nfunction isRemoteResource(uri) {\n  return REMOTE_RESOURCE_PATTERN.test(uri) && !FILE_RESOURCE_PATTERN.test(uri);\n}\n\nmodule.exports = isRemoteResource;\n", "var NO_PROTOCOL_RESOURCE_PATTERN = /^\\/\\//;\n\nfunction hasProtocol(uri) {\n  return !NO_PROTOCOL_RESOURCE_PATTERN.test(uri);\n}\n\nmodule.exports = hasProtocol;\n", "var path = require('path');\nvar url = require('url');\n\nvar isRemoteResource = require('../utils/is-remote-resource');\nvar hasProtocol = require('../utils/has-protocol');\n\nvar HTTP_PROTOCOL = 'http:';\n\nfunction isAllowedResource(uri, isRemote, rules) {\n  var match;\n  var absoluteUri;\n  var allowed = !isRemote;\n  var rule;\n  var isNegated;\n  var normalizedRule;\n  var i;\n\n  if (rules.length === 0) {\n    return false;\n  }\n\n  if (isRemote && !hasProtocol(uri)) {\n    uri = HTTP_PROTOCOL + uri;\n  }\n\n  match = isRemote\n    ? url.parse(uri).host\n    : uri;\n\n  absoluteUri = isRemote\n    ? uri\n    : path.resolve(uri);\n\n  for (i = 0; i < rules.length; i++) {\n    rule = rules[i];\n    isNegated = rule[0] == '!';\n    normalizedRule = rule.substring(1);\n\n    if (isNegated && isRemote && isRemoteRule(normalizedRule)) {\n      allowed = allowed && !isAllowedResource(uri, true, [normalizedRule]);\n    } else if (isNegated && !isRemote && !isRemoteRule(normalizedRule)) {\n      allowed = allowed && !isAllowedResource(uri, false, [normalizedRule]);\n    } else if (isNegated) {\n      allowed = allowed && true;\n    } else if (rule == 'all') {\n      allowed = true;\n    } else if (isRemote && rule == 'local') {\n      allowed = allowed || false;\n    } else if (isRemote && rule == 'remote') {\n      allowed = true;\n    } else if (!isRemote && rule == 'remote') {\n      allowed = false;\n    } else if (!isRemote && rule == 'local') {\n      allowed = true;\n    } else if (rule === match) {\n      allowed = true;\n    } else if (rule === uri) {\n      allowed = true;\n    } else if (isRemote && absoluteUri.indexOf(rule) === 0) {\n      allowed = true;\n    } else if (!isRemote && absoluteUri.indexOf(path.resolve(rule)) === 0) {\n      allowed = true;\n    } else if (isRemote != isRemoteRule(normalizedRule)) {\n      allowed = allowed && true;\n    } else {\n      allowed = false;\n    }\n  }\n\n  return allowed;\n}\n\nfunction isRemoteRule(rule) {\n  return isRemoteResource(rule) || url.parse(HTTP_PROTOCOL + '//' + rule).host == rule;\n}\n\nmodule.exports = isAllowedResource;\n", "var DATA_URI_PATTERN = /^data:(\\S*?)?(;charset=(?:(?!;charset=)[^;])+)?(;[^,]+?)?,(.+)/;\n\nfunction matchDataUri(uri) {\n  return DATA_URI_PATTERN.exec(uri);\n}\n\nmodule.exports = matchDataUri;\n", "var path = require('path');\n\nfunction rebaseLocalMap(sourceMap, sourceUri, rebaseTo) {\n  var currentPath = path.resolve('');\n  var absoluteUri = path.resolve(currentPath, sourceUri);\n  var absoluteUriDirectory = path.dirname(absoluteUri);\n\n  sourceMap.sources = sourceMap.sources.map(function(source) {\n    return path.relative(rebaseTo, path.resolve(absoluteUriDirectory, source));\n  });\n\n  return sourceMap;\n}\n\nmodule.exports = rebaseLocalMap;\n", "var path = require('path');\nvar url = require('url');\n\nfunction rebaseRemoteMap(sourceMap, sourceUri) {\n  var sourceDirectory = path.dirname(sourceUri);\n\n  sourceMap.sources = sourceMap.sources.map(function(source) {\n    return url.resolve(sourceDirectory, source);\n  });\n\n  return sourceMap;\n}\n\nmodule.exports = rebaseRemoteMap;\n", "var DATA_URI_PATTERN = /^data:(\\S{0,31}?)?(;charset=(?:(?!;charset=)[^;])+)?(;[^,]+?)?,(.+)/;\n\nfunction isDataUriResource(uri) {\n  return DATA_URI_PATTERN.test(uri);\n}\n\nmodule.exports = isDataUriResource;\n", "var fs = require('fs');\nvar path = require('path');\n\nvar isAllowedResource = require('./is-allowed-resource');\nvar matchDataUri = require('./match-data-uri');\nvar rebaseLocalMap = require('./rebase-local-map');\nvar rebaseRemoteMap = require('./rebase-remote-map');\n\nvar Token = require('../tokenizer/token');\nvar hasProtocol = require('../utils/has-protocol');\nvar isDataUriResource = require('../utils/is-data-uri-resource');\nvar isRemoteResource = require('../utils/is-remote-resource');\n\nvar MAP_MARKER_PATTERN = /^\\/\\*# sourceMappingURL=(\\S+) \\*\\/$/;\n\nfunction applySourceMaps(tokens, context, callback) {\n  var applyContext = {\n    callback: callback,\n    fetch: context.options.fetch,\n    index: 0,\n    inline: context.options.inline,\n    inlineRequest: context.options.inlineRequest,\n    inlineTimeout: context.options.inlineTimeout,\n    inputSourceMapTracker: context.inputSourceMapTracker,\n    localOnly: context.localOnly,\n    processedTokens: [],\n    rebaseTo: context.options.rebaseTo,\n    sourceTokens: tokens,\n    warnings: context.warnings\n  };\n\n  return context.options.sourceMap && tokens.length > 0\n    ? doApplySourceMaps(applyContext)\n    : callback(tokens);\n}\n\nfunction doApplySourceMaps(applyContext) {\n  var singleSourceTokens = [];\n  var lastSource = findTokenSource(applyContext.sourceTokens[0]);\n  var source;\n  var token;\n  var l;\n\n  for (l = applyContext.sourceTokens.length; applyContext.index < l; applyContext.index++) {\n    token = applyContext.sourceTokens[applyContext.index];\n    source = findTokenSource(token);\n\n    if (source != lastSource) {\n      singleSourceTokens = [];\n      lastSource = source;\n    }\n\n    singleSourceTokens.push(token);\n    applyContext.processedTokens.push(token);\n\n    if (token[0] == Token.COMMENT && MAP_MARKER_PATTERN.test(token[1])) {\n      return fetchAndApplySourceMap(token[1], source, singleSourceTokens, applyContext);\n    }\n  }\n\n  return applyContext.callback(applyContext.processedTokens);\n}\n\nfunction findTokenSource(token) {\n  var scope;\n  var metadata;\n\n  if (token[0] == Token.AT_RULE || token[0] == Token.COMMENT || token[0] == Token.RAW) {\n    metadata = token[2][0];\n  } else {\n    scope = token[1][0];\n    metadata = scope[2][0];\n  }\n\n  return metadata[2];\n}\n\nfunction fetchAndApplySourceMap(sourceMapComment, source, singleSourceTokens, applyContext) {\n  return extractInputSourceMapFrom(sourceMapComment, applyContext, function(inputSourceMap) {\n    if (inputSourceMap) {\n      applyContext.inputSourceMapTracker.track(source, inputSourceMap);\n      applySourceMapRecursively(singleSourceTokens, applyContext.inputSourceMapTracker);\n    }\n\n    applyContext.index++;\n    return doApplySourceMaps(applyContext);\n  });\n}\n\nfunction extractInputSourceMapFrom(sourceMapComment, applyContext, whenSourceMapReady) {\n  var uri = MAP_MARKER_PATTERN.exec(sourceMapComment)[1];\n  var absoluteUri;\n  var sourceMap;\n  var rebasedMap;\n\n  if (isDataUriResource(uri)) {\n    sourceMap = extractInputSourceMapFromDataUri(uri);\n    return whenSourceMapReady(sourceMap);\n  } if (isRemoteResource(uri)) {\n    return loadInputSourceMapFromRemoteUri(uri, applyContext, function(sourceMap) {\n      var parsedMap;\n\n      if (sourceMap) {\n        parsedMap = JSON.parse(sourceMap);\n        rebasedMap = rebaseRemoteMap(parsedMap, uri);\n        whenSourceMapReady(rebasedMap);\n      } else {\n        whenSourceMapReady(null);\n      }\n    });\n  }\n  // at this point `uri` is already rebased, see lib/reader/rebase.js#rebaseSourceMapComment\n  // it is rebased to be consistent with rebasing other URIs\n  // however here we need to resolve it back to read it from disk\n  absoluteUri = path.resolve(applyContext.rebaseTo, uri);\n  sourceMap = loadInputSourceMapFromLocalUri(absoluteUri, applyContext);\n\n  if (sourceMap) {\n    rebasedMap = rebaseLocalMap(sourceMap, absoluteUri, applyContext.rebaseTo);\n    return whenSourceMapReady(rebasedMap);\n  }\n  return whenSourceMapReady(null);\n}\n\nfunction extractInputSourceMapFromDataUri(uri) {\n  var dataUriMatch = matchDataUri(uri);\n  var charset = dataUriMatch[2] ? dataUriMatch[2].split(/[=;]/)[2] : 'us-ascii';\n  var encoding = dataUriMatch[3] ? dataUriMatch[3].split(';')[1] : 'utf8';\n  var data = encoding == 'utf8' ? global.unescape(dataUriMatch[4]) : dataUriMatch[4];\n\n  var buffer = Buffer.from(data, encoding);\n  buffer.charset = charset;\n\n  return JSON.parse(buffer.toString());\n}\n\nfunction loadInputSourceMapFromRemoteUri(uri, applyContext, whenLoaded) {\n  var isAllowed = isAllowedResource(uri, true, applyContext.inline);\n  var isRuntimeResource = !hasProtocol(uri);\n\n  if (applyContext.localOnly) {\n    applyContext.warnings.push('Cannot fetch remote resource from \"' + uri + '\" as no callback given.');\n    return whenLoaded(null);\n  } if (isRuntimeResource) {\n    applyContext.warnings.push('Cannot fetch \"' + uri + '\" as no protocol given.');\n    return whenLoaded(null);\n  } if (!isAllowed) {\n    applyContext.warnings.push('Cannot fetch \"' + uri + '\" as resource is not allowed.');\n    return whenLoaded(null);\n  }\n\n  applyContext.fetch(uri, applyContext.inlineRequest, applyContext.inlineTimeout, function(error, body) {\n    if (error) {\n      applyContext.warnings.push('Missing source map at \"' + uri + '\" - ' + error);\n      return whenLoaded(null);\n    }\n\n    whenLoaded(body);\n  });\n}\n\nfunction loadInputSourceMapFromLocalUri(uri, applyContext) {\n  var isAllowed = isAllowedResource(uri, false, applyContext.inline);\n  var sourceMap;\n\n  if (!fs.existsSync(uri) || !fs.statSync(uri).isFile()) {\n    applyContext.warnings.push('Ignoring local source map at \"' + uri + '\" as resource is missing.');\n    return null;\n  } if (!isAllowed) {\n    applyContext.warnings.push('Cannot fetch \"' + uri + '\" as resource is not allowed.');\n    return null;\n  } if (!fs.statSync(uri).size) {\n    applyContext.warnings.push('Cannot fetch \"' + uri + '\" as resource is empty.');\n    return null;\n  }\n\n  sourceMap = fs.readFileSync(uri, 'utf-8');\n  return JSON.parse(sourceMap);\n}\n\nfunction applySourceMapRecursively(tokens, inputSourceMapTracker) {\n  var token;\n  var i, l;\n\n  for (i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n\n    switch (token[0]) {\n    case Token.AT_RULE:\n      applySourceMapTo(token, inputSourceMapTracker);\n      break;\n    case Token.AT_RULE_BLOCK:\n      applySourceMapRecursively(token[1], inputSourceMapTracker);\n      applySourceMapRecursively(token[2], inputSourceMapTracker);\n      break;\n    case Token.AT_RULE_BLOCK_SCOPE:\n      applySourceMapTo(token, inputSourceMapTracker);\n      break;\n    case Token.NESTED_BLOCK:\n      applySourceMapRecursively(token[1], inputSourceMapTracker);\n      applySourceMapRecursively(token[2], inputSourceMapTracker);\n      break;\n    case Token.NESTED_BLOCK_SCOPE:\n      applySourceMapTo(token, inputSourceMapTracker);\n      break;\n    case Token.COMMENT:\n      applySourceMapTo(token, inputSourceMapTracker);\n      break;\n    case Token.PROPERTY:\n      applySourceMapRecursively(token, inputSourceMapTracker);\n      break;\n    case Token.PROPERTY_BLOCK:\n      applySourceMapRecursively(token[1], inputSourceMapTracker);\n      break;\n    case Token.PROPERTY_NAME:\n      applySourceMapTo(token, inputSourceMapTracker);\n      break;\n    case Token.PROPERTY_VALUE:\n      applySourceMapTo(token, inputSourceMapTracker);\n      break;\n    case Token.RULE:\n      applySourceMapRecursively(token[1], inputSourceMapTracker);\n      applySourceMapRecursively(token[2], inputSourceMapTracker);\n      break;\n    case Token.RULE_SCOPE:\n      applySourceMapTo(token, inputSourceMapTracker);\n    }\n  }\n\n  return tokens;\n}\n\nfunction applySourceMapTo(token, inputSourceMapTracker) {\n  var value = token[1];\n  var metadata = token[2];\n  var newMetadata = [];\n  var i, l;\n\n  for (i = 0, l = metadata.length; i < l; i++) {\n    newMetadata.push(inputSourceMapTracker.originalPositionFor(metadata[i], value.length));\n  }\n\n  token[2] = newMetadata;\n}\n\nmodule.exports = applySourceMaps;\n", "var split = require('../utils/split');\n\nvar BRACE_PREFIX = /^\\(/;\nvar BRACE_SUFFIX = /\\)$/;\nvar IMPORT_PREFIX_PATTERN = /^@import/i;\nvar QUOTE_PREFIX_PATTERN = /['\"]\\s{0,31}/;\nvar QUOTE_SUFFIX_PATTERN = /\\s{0,31}['\"]/;\nvar URL_PREFIX_PATTERN = /^url\\(\\s{0,31}/i;\nvar URL_SUFFIX_PATTERN = /\\s{0,31}\\)/i;\n\nfunction extractImportUrlAndMedia(atRuleValue) {\n  var uri;\n  var mediaQuery;\n  var normalized;\n  var parts;\n\n  normalized = atRuleValue\n    .replace(IMPORT_PREFIX_PATTERN, '')\n    .trim()\n    .replace(URL_PREFIX_PATTERN, '(')\n    .replace(URL_SUFFIX_PATTERN, ') ')\n    .replace(QUOTE_PREFIX_PATTERN, '')\n    .replace(QUOTE_SUFFIX_PATTERN, '');\n\n  parts = split(normalized, ' ');\n\n  uri = parts[0]\n    .replace(BRACE_PREFIX, '')\n    .replace(BRACE_SUFFIX, '');\n  mediaQuery = parts.slice(1).join(' ');\n\n  return [uri, mediaQuery];\n}\n\nmodule.exports = extractImportUrlAndMedia;\n", "var fs = require('fs');\nvar path = require('path');\n\nvar isAllowedResource = require('./is-allowed-resource');\n\nvar hasProtocol = require('../utils/has-protocol');\nvar isRemoteResource = require('../utils/is-remote-resource');\n\nfunction loadOriginalSources(context, callback) {\n  var loadContext = {\n    callback: callback,\n    fetch: context.options.fetch,\n    index: 0,\n    inline: context.options.inline,\n    inlineRequest: context.options.inlineRequest,\n    inlineTimeout: context.options.inlineTimeout,\n    localOnly: context.localOnly,\n    rebaseTo: context.options.rebaseTo,\n    sourcesContent: context.sourcesContent,\n    uriToSource: uriToSourceMapping(context.inputSourceMapTracker.all()),\n    warnings: context.warnings\n  };\n\n  return context.options.sourceMap && context.options.sourceMapInlineSources\n    ? doLoadOriginalSources(loadContext)\n    : callback();\n}\n\nfunction uriToSourceMapping(allSourceMapConsumers) {\n  var mapping = {};\n  var consumer;\n  var uri;\n  var source;\n  var i, l;\n\n  for (source in allSourceMapConsumers) {\n    consumer = allSourceMapConsumers[source];\n\n    for (i = 0, l = consumer.sources.length; i < l; i++) {\n      uri = consumer.sources[i];\n      source = consumer.sourceContentFor(uri, true);\n\n      mapping[uri] = source;\n    }\n  }\n\n  return mapping;\n}\n\nfunction doLoadOriginalSources(loadContext) {\n  var uris = Object.keys(loadContext.uriToSource);\n  var uri;\n  var source;\n  var total;\n\n  for (total = uris.length; loadContext.index < total; loadContext.index++) {\n    uri = uris[loadContext.index];\n    source = loadContext.uriToSource[uri];\n\n    if (source) {\n      loadContext.sourcesContent[uri] = source;\n    } else {\n      return loadOriginalSource(uri, loadContext);\n    }\n  }\n\n  return loadContext.callback();\n}\n\nfunction loadOriginalSource(uri, loadContext) {\n  var content;\n\n  if (isRemoteResource(uri)) {\n    return loadOriginalSourceFromRemoteUri(uri, loadContext, function(content) {\n      loadContext.index++;\n      loadContext.sourcesContent[uri] = content;\n      return doLoadOriginalSources(loadContext);\n    });\n  }\n  content = loadOriginalSourceFromLocalUri(uri, loadContext);\n  loadContext.index++;\n  loadContext.sourcesContent[uri] = content;\n  return doLoadOriginalSources(loadContext);\n}\n\nfunction loadOriginalSourceFromRemoteUri(uri, loadContext, whenLoaded) {\n  var isAllowed = isAllowedResource(uri, true, loadContext.inline);\n  var isRuntimeResource = !hasProtocol(uri);\n\n  if (loadContext.localOnly) {\n    loadContext.warnings.push('Cannot fetch remote resource from \"' + uri + '\" as no callback given.');\n    return whenLoaded(null);\n  } if (isRuntimeResource) {\n    loadContext.warnings.push('Cannot fetch \"' + uri + '\" as no protocol given.');\n    return whenLoaded(null);\n  } if (!isAllowed) {\n    loadContext.warnings.push('Cannot fetch \"' + uri + '\" as resource is not allowed.');\n    return whenLoaded(null);\n  }\n\n  loadContext.fetch(uri, loadContext.inlineRequest, loadContext.inlineTimeout, function(error, content) {\n    if (error) {\n      loadContext.warnings.push('Missing original source at \"' + uri + '\" - ' + error);\n    }\n\n    whenLoaded(content);\n  });\n}\n\nfunction loadOriginalSourceFromLocalUri(relativeUri, loadContext) {\n  var isAllowed = isAllowedResource(relativeUri, false, loadContext.inline);\n  var absoluteUri = path.resolve(loadContext.rebaseTo, relativeUri);\n\n  if (!fs.existsSync(absoluteUri) || !fs.statSync(absoluteUri).isFile()) {\n    loadContext.warnings.push('Ignoring local source map at \"' + absoluteUri + '\" as resource is missing.');\n    return null;\n  } if (!isAllowed) {\n    loadContext.warnings.push('Cannot fetch \"' + absoluteUri + '\" as resource is not allowed.');\n    return null;\n  }\n\n  var result = fs.readFileSync(absoluteUri, 'utf8');\n  if (result.charCodeAt(0) === 65279) {\n    result = result.substring(1);\n  }\n  return result;\n}\n\nmodule.exports = loadOriginalSources;\n", "var UNIX_SEPARATOR = '/';\nvar WINDOWS_SEPARATOR_PATTERN = /\\\\/g;\n\nfunction normalizePath(path) {\n  return path.replace(WINDOWS_SEPARATOR_PATTERN, UNIX_SEPARATOR);\n}\n\nmodule.exports = normalizePath;\n", "function restoreImport(uri, mediaQuery) {\n  return ('@import ' + uri + ' ' + mediaQuery).trim();\n}\n\nmodule.exports = restoreImport;\n", "var path = require('path');\nvar url = require('url');\n\nvar isDataUriResource = require('../utils/is-data-uri-resource');\n\nvar DOUBLE_QUOTE = '\"';\nvar SINGLE_QUOTE = '\\'';\nvar URL_PREFIX = 'url(';\nvar URL_SUFFIX = ')';\n\nvar PROTOCOL_LESS_PREFIX_PATTERN = /^[^\\w\\d]*\\/\\//;\nvar QUOTE_PREFIX_PATTERN = /^[\"']/;\nvar QUOTE_SUFFIX_PATTERN = /[\"']$/;\nvar ROUND_BRACKETS_PATTERN = /[()]/;\nvar URL_PREFIX_PATTERN = /^url\\(/i;\nvar URL_SUFFIX_PATTERN = /\\)$/;\nvar WHITESPACE_PATTERN = /\\s/;\n\nvar isWindows = process.platform == 'win32';\n\nfunction rebase(uri, rebaseConfig) {\n  if (!rebaseConfig) {\n    return uri;\n  }\n\n  if (isAbsolute(uri) && !isRemote(rebaseConfig.toBase)) {\n    return uri;\n  }\n\n  if (isRemote(uri) || isSVGMarker(uri) || isInternal(uri) || isDataUriResource(uri)) {\n    return uri;\n  }\n\n  if (isRemote(rebaseConfig.toBase)) {\n    return url.resolve(rebaseConfig.toBase, uri);\n  }\n\n  return rebaseConfig.absolute\n    ? normalize(absolute(uri, rebaseConfig))\n    : normalize(relative(uri, rebaseConfig));\n}\n\nfunction isAbsolute(uri) {\n  return path.isAbsolute(uri);\n}\n\nfunction isSVGMarker(uri) {\n  return uri[0] == '#';\n}\n\nfunction isInternal(uri) {\n  return /^\\w+:\\w+/.test(uri);\n}\n\nfunction isRemote(uri) {\n  return /^[^:]+?:\\/\\//.test(uri) || PROTOCOL_LESS_PREFIX_PATTERN.test(uri);\n}\n\nfunction absolute(uri, rebaseConfig) {\n  return path\n    .resolve(path.join(rebaseConfig.fromBase || '', uri))\n    .replace(rebaseConfig.toBase, '');\n}\n\nfunction relative(uri, rebaseConfig) {\n  return path.relative(rebaseConfig.toBase, path.join(rebaseConfig.fromBase || '', uri));\n}\n\nfunction normalize(uri) {\n  return isWindows ? uri.replace(/\\\\/g, '/') : uri;\n}\n\nfunction quoteFor(unquotedUrl) {\n  if (unquotedUrl.indexOf(SINGLE_QUOTE) > -1) {\n    return DOUBLE_QUOTE;\n  } if (unquotedUrl.indexOf(DOUBLE_QUOTE) > -1) {\n    return SINGLE_QUOTE;\n  } if (hasWhitespace(unquotedUrl) || hasRoundBrackets(unquotedUrl)) {\n    return SINGLE_QUOTE;\n  }\n  return '';\n}\n\nfunction hasWhitespace(url) {\n  return WHITESPACE_PATTERN.test(url);\n}\n\nfunction hasRoundBrackets(url) {\n  return ROUND_BRACKETS_PATTERN.test(url);\n}\n\nfunction rewriteUrl(originalUrl, rebaseConfig, pathOnly) {\n  var strippedUrl = originalUrl\n    .replace(URL_PREFIX_PATTERN, '')\n    .replace(URL_SUFFIX_PATTERN, '')\n    .trim();\n\n  var unquotedUrl = strippedUrl\n    .replace(QUOTE_PREFIX_PATTERN, '')\n    .replace(QUOTE_SUFFIX_PATTERN, '')\n    .trim();\n\n  var quote = strippedUrl[0] == SINGLE_QUOTE || strippedUrl[0] == DOUBLE_QUOTE\n    ? strippedUrl[0]\n    : quoteFor(unquotedUrl);\n\n  return pathOnly\n    ? rebase(unquotedUrl, rebaseConfig)\n    : URL_PREFIX + quote + rebase(unquotedUrl, rebaseConfig) + quote + URL_SUFFIX;\n}\n\nmodule.exports = rewriteUrl;\n", "var IMPORT_PREFIX_PATTERN = /^@import/i;\n\nfunction isImport(value) {\n  return IMPORT_PREFIX_PATTERN.test(value);\n}\n\nmodule.exports = isImport;\n", "var extractImportUrlAndMedia = require('./extract-import-url-and-media');\nvar restoreImport = require('./restore-import');\nvar rewriteUrl = require('./rewrite-url');\n\nvar Token = require('../tokenizer/token');\nvar isImport = require('../utils/is-import');\n\nvar SOURCE_MAP_COMMENT_PATTERN = /^\\/\\*# sourceMappingURL=(\\S+) \\*\\/$/;\n\nfunction rebase(tokens, rebaseAll, validator, rebaseConfig) {\n  return rebaseAll\n    ? rebaseEverything(tokens, validator, rebaseConfig)\n    : rebaseAtRules(tokens, validator, rebaseConfig);\n}\n\nfunction rebaseEverything(tokens, validator, rebaseConfig) {\n  var token;\n  var i, l;\n\n  for (i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n\n    switch (token[0]) {\n    case Token.AT_RULE:\n      rebaseAtRule(token, validator, rebaseConfig);\n      break;\n    case Token.AT_RULE_BLOCK:\n      rebaseProperties(token[2], validator, rebaseConfig);\n      break;\n    case Token.COMMENT:\n      rebaseSourceMapComment(token, rebaseConfig);\n      break;\n    case Token.NESTED_BLOCK:\n      rebaseEverything(token[2], validator, rebaseConfig);\n      break;\n    case Token.RULE:\n      rebaseProperties(token[2], validator, rebaseConfig);\n      break;\n    }\n  }\n\n  return tokens;\n}\n\nfunction rebaseAtRules(tokens, validator, rebaseConfig) {\n  var token;\n  var i, l;\n\n  for (i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n\n    switch (token[0]) {\n    case Token.AT_RULE:\n      rebaseAtRule(token, validator, rebaseConfig);\n      break;\n    }\n  }\n\n  return tokens;\n}\n\nfunction rebaseAtRule(token, validator, rebaseConfig) {\n  if (!isImport(token[1])) {\n    return;\n  }\n\n  var uriAndMediaQuery = extractImportUrlAndMedia(token[1]);\n  var newUrl = rewriteUrl(uriAndMediaQuery[0], rebaseConfig);\n  var mediaQuery = uriAndMediaQuery[1];\n\n  token[1] = restoreImport(newUrl, mediaQuery);\n}\n\nfunction rebaseSourceMapComment(token, rebaseConfig) {\n  var matches = SOURCE_MAP_COMMENT_PATTERN.exec(token[1]);\n\n  if (matches && matches[1].indexOf('data:') === -1) {\n    token[1] = token[1].replace(matches[1], rewriteUrl(matches[1], rebaseConfig, true));\n  }\n}\n\nfunction rebaseProperties(properties, validator, rebaseConfig) {\n  var property;\n  var value;\n  var i, l;\n  var j, m;\n\n  for (i = 0, l = properties.length; i < l; i++) {\n    property = properties[i];\n\n    for (j = 2 /* 0 is Token.PROPERTY, 1 is name */, m = property.length; j < m; j++) {\n      value = property[j][1];\n\n      if (validator.isUrl(value)) {\n        property[j][1] = rewriteUrl(value, rebaseConfig);\n      }\n    }\n  }\n}\n\nmodule.exports = rebase;\n", "var Marker = require('./marker');\nvar Token = require('./token');\n\nvar formatPosition = require('../utils/format-position');\n\nvar Level = {\n  BLOCK: 'block',\n  COMMENT: 'comment',\n  DOUBLE_QUOTE: 'double-quote',\n  RULE: 'rule',\n  SINGLE_QUOTE: 'single-quote'\n};\n\nvar AT_RULES = [\n  '@charset',\n  '@import'\n];\n\nvar BLOCK_RULES = [\n  '@-moz-document',\n  '@document',\n  '@-moz-keyframes',\n  '@-ms-keyframes',\n  '@-o-keyframes',\n  '@-webkit-keyframes',\n  '@keyframes',\n  '@media',\n  '@supports',\n  '@container',\n  '@layer'\n];\n\nvar IGNORE_END_COMMENT_PATTERN = /\\/\\* clean-css ignore:end \\*\\/$/;\nvar IGNORE_START_COMMENT_PATTERN = /^\\/\\* clean-css ignore:start \\*\\//;\n\nvar PAGE_MARGIN_BOXES = [\n  '@bottom-center',\n  '@bottom-left',\n  '@bottom-left-corner',\n  '@bottom-right',\n  '@bottom-right-corner',\n  '@left-bottom',\n  '@left-middle',\n  '@left-top',\n  '@right-bottom',\n  '@right-middle',\n  '@right-top',\n  '@top-center',\n  '@top-left',\n  '@top-left-corner',\n  '@top-right',\n  '@top-right-corner'\n];\n\nvar EXTRA_PAGE_BOXES = [\n  '@footnote',\n  '@footnotes',\n  '@left',\n  '@page-float-bottom',\n  '@page-float-top',\n  '@right'\n];\n\nvar REPEAT_PATTERN = /^\\[\\s{0,31}\\d+\\s{0,31}\\]$/;\nvar TAIL_BROKEN_VALUE_PATTERN = /([^}])\\}*$/;\nvar RULE_WORD_SEPARATOR_PATTERN = /[\\s(]/;\n\nfunction tokenize(source, externalContext) {\n  var internalContext = {\n    level: Level.BLOCK,\n    position: {\n      source: externalContext.source || undefined,\n      line: 1,\n      column: 0,\n      index: 0\n    }\n  };\n\n  return intoTokens(source, externalContext, internalContext, false);\n}\n\nfunction intoTokens(source, externalContext, internalContext, isNested) {\n  var allTokens = [];\n  var newTokens = allTokens;\n  var lastToken;\n  var ruleToken;\n  var ruleTokens = [];\n  var propertyToken;\n  var metadata;\n  var metadatas = [];\n  var level = internalContext.level;\n  var levels = [];\n  var buffer = [];\n  var buffers = [];\n  var isBufferEmpty = true;\n  var serializedBuffer;\n  var serializedBufferPart;\n  var roundBracketLevel = 0;\n  var isQuoted;\n  var isSpace;\n  var isNewLineNix;\n  var isNewLineWin;\n  var isCarriageReturn;\n  var isCommentStart;\n  var wasCommentStart = false;\n  var isCommentEnd;\n  var wasCommentEnd = false;\n  var isCommentEndMarker;\n  var isEscaped;\n  var wasEscaped = false;\n  var characterWithNoSpecialMeaning;\n  var isPreviousDash = false;\n  var isVariable = false;\n  var isRaw = false;\n  var seekingValue = false;\n  var seekingPropertyBlockClosing = false;\n  var position = internalContext.position;\n  var lastCommentStartAt;\n\n  for (; position.index < source.length; position.index++) {\n    var character = source[position.index];\n\n    isQuoted = level == Level.SINGLE_QUOTE || level == Level.DOUBLE_QUOTE;\n    isSpace = character == Marker.SPACE || character == Marker.TAB;\n    isNewLineNix = character == Marker.NEW_LINE_NIX;\n    isNewLineWin = character == Marker.NEW_LINE_NIX\n      && source[position.index - 1] == Marker.CARRIAGE_RETURN;\n    isCarriageReturn = character == Marker.CARRIAGE_RETURN\n      && source[position.index + 1] && source[position.index + 1] != Marker.NEW_LINE_NIX;\n    isCommentStart = !wasCommentEnd\n      && level != Level.COMMENT && !isQuoted\n      && character == Marker.ASTERISK && source[position.index - 1] == Marker.FORWARD_SLASH;\n    isCommentEndMarker = !wasCommentStart\n      && !isQuoted && character == Marker.FORWARD_SLASH\n      && source[position.index - 1] == Marker.ASTERISK;\n    isCommentEnd = level == Level.COMMENT && isCommentEndMarker;\n    characterWithNoSpecialMeaning = !isSpace && !isCarriageReturn && (character >= 'A' && character <= 'Z' || character >= 'a' && character <= 'z' || character >= '0' && character <= '9' || character == '-');\n    isVariable = isVariable || (level != Level.COMMENT && !seekingValue && isPreviousDash && character === '-' && buffer.length === 1);\n    isPreviousDash = character === '-';\n    roundBracketLevel = Math.max(roundBracketLevel, 0);\n\n    metadata = isBufferEmpty\n      ? [position.line, position.column, position.source]\n      : metadata;\n\n    if (isEscaped) {\n      // previous character was a backslash\n      buffer.push(character);\n      isBufferEmpty = false;\n    } else if (characterWithNoSpecialMeaning) {\n      // it's just an alphanumeric character or a hyphen (part of any rule or property name) so let's end it quickly\n      buffer.push(character);\n      isBufferEmpty = false;\n    } else if ((isSpace || isNewLineNix && !isNewLineWin) && (isQuoted || level == Level.COMMENT)) {\n      buffer.push(character);\n      isBufferEmpty = false;\n    } else if ((isSpace || isNewLineNix && !isNewLineWin) && isBufferEmpty) {\n      // noop\n    } else if (!isCommentEnd && level == Level.COMMENT) {\n      buffer.push(character);\n      isBufferEmpty = false;\n    } else if (!isCommentStart && !isCommentEnd && isRaw) {\n      buffer.push(character);\n      isBufferEmpty = false;\n    } else if (isCommentStart\n        && isVariable\n        && (level == Level.BLOCK || level == Level.RULE) && buffer.length > 1) {\n      // comment start within a variable, e.g. var(/*<--\n      buffer.push(character);\n      isBufferEmpty = false;\n\n      levels.push(level);\n      level = Level.COMMENT;\n    } else if (isCommentStart && (level == Level.BLOCK || level == Level.RULE) && buffer.length > 1) {\n      // comment start within block preceded by some content, e.g. div/*<--\n      metadatas.push(metadata);\n      buffer.push(character);\n      buffers.push(buffer.slice(0, -2));\n      isBufferEmpty = false;\n\n      buffer = buffer.slice(-2);\n      metadata = [position.line, position.column - 1, position.source];\n\n      levels.push(level);\n      level = Level.COMMENT;\n    } else if (isCommentStart) {\n      // comment start, e.g. /*<--\n      levels.push(level);\n      level = Level.COMMENT;\n      buffer.push(character);\n      isBufferEmpty = false;\n    } else if (isCommentEnd && isVariable) {\n      // comment end within a variable, e.g. var(/*!*/<--\n      buffer.push(character);\n      level = levels.pop();\n    } else if (isCommentEnd && isIgnoreStartComment(buffer)) {\n      // ignore:start comment end, e.g. /* clean-css ignore:start */<--\n      serializedBuffer = buffer.join('').trim() + character;\n      lastToken = [\n        Token.COMMENT,\n        serializedBuffer,\n        [originalMetadata(metadata, serializedBuffer, externalContext)]\n      ];\n      newTokens.push(lastToken);\n\n      isRaw = true;\n      metadata = metadatas.pop() || null;\n      buffer = buffers.pop() || [];\n      isBufferEmpty = buffer.length === 0;\n    } else if (isCommentEnd && isIgnoreEndComment(buffer)) {\n      // ignore:start comment end, e.g. /* clean-css ignore:end */<--\n      serializedBuffer = buffer.join('') + character;\n      lastCommentStartAt = serializedBuffer.lastIndexOf(Marker.FORWARD_SLASH + Marker.ASTERISK);\n\n      serializedBufferPart = serializedBuffer.substring(0, lastCommentStartAt);\n      lastToken = [\n        Token.RAW,\n        serializedBufferPart,\n        [originalMetadata(metadata, serializedBufferPart, externalContext)]\n      ];\n      newTokens.push(lastToken);\n\n      serializedBufferPart = serializedBuffer.substring(lastCommentStartAt);\n      metadata = [position.line, position.column - serializedBufferPart.length + 1, position.source];\n      lastToken = [\n        Token.COMMENT,\n        serializedBufferPart,\n        [originalMetadata(metadata, serializedBufferPart, externalContext)]\n      ];\n      newTokens.push(lastToken);\n\n      isRaw = false;\n      level = levels.pop();\n      metadata = metadatas.pop() || null;\n      buffer = buffers.pop() || [];\n      isBufferEmpty = buffer.length === 0;\n    } else if (isCommentEnd) {\n      // comment end, e.g. /* comment */<--\n      serializedBuffer = buffer.join('').trim() + character;\n      lastToken = [\n        Token.COMMENT,\n        serializedBuffer,\n        [originalMetadata(metadata, serializedBuffer, externalContext)]\n      ];\n      newTokens.push(lastToken);\n\n      level = levels.pop();\n      metadata = metadatas.pop() || null;\n      buffer = buffers.pop() || [];\n      isBufferEmpty = buffer.length === 0;\n    } else if (isCommentEndMarker && source[position.index + 1] != Marker.ASTERISK) {\n      externalContext.warnings.push('Unexpected \\'*/\\' at ' + formatPosition([position.line, position.column, position.source]) + '.');\n      buffer = [];\n      isBufferEmpty = true;\n    } else if (character == Marker.SINGLE_QUOTE && !isQuoted) {\n      // single quotation start, e.g. a[href^='https<--\n      levels.push(level);\n      level = Level.SINGLE_QUOTE;\n      buffer.push(character);\n      isBufferEmpty = false;\n    } else if (character == Marker.SINGLE_QUOTE && level == Level.SINGLE_QUOTE) {\n      // single quotation end, e.g. a[href^='https'<--\n      level = levels.pop();\n      buffer.push(character);\n      isBufferEmpty = false;\n    } else if (character == Marker.DOUBLE_QUOTE && !isQuoted) {\n      // double quotation start, e.g. a[href^=\"<--\n      levels.push(level);\n      level = Level.DOUBLE_QUOTE;\n      buffer.push(character);\n      isBufferEmpty = false;\n    } else if (character == Marker.DOUBLE_QUOTE && level == Level.DOUBLE_QUOTE) {\n      // double quotation end, e.g. a[href^=\"https\"<--\n      level = levels.pop();\n      buffer.push(character);\n      isBufferEmpty = false;\n    } else if (character != Marker.CLOSE_ROUND_BRACKET\n      && character != Marker.OPEN_ROUND_BRACKET\n      && level != Level.COMMENT && !isQuoted && roundBracketLevel > 0) {\n      // character inside any function, e.g. hsla(.<--\n      buffer.push(character);\n      isBufferEmpty = false;\n    } else if (character == Marker.OPEN_ROUND_BRACKET\n      && !isQuoted && level != Level.COMMENT\n      && !seekingValue) {\n      // round open bracket, e.g. @import url(<--\n      buffer.push(character);\n      isBufferEmpty = false;\n\n      roundBracketLevel++;\n    } else if (character == Marker.CLOSE_ROUND_BRACKET\n      && !isQuoted\n      && level != Level.COMMENT\n      && !seekingValue) {\n      // round open bracket, e.g. @import url(test.css)<--\n      buffer.push(character);\n      isBufferEmpty = false;\n\n      roundBracketLevel--;\n    } else if (character == Marker.SEMICOLON && level == Level.BLOCK && buffer[0] == Marker.AT) {\n      // semicolon ending rule at block level, e.g. @import '...';<--\n      serializedBuffer = buffer.join('').trim();\n      allTokens.push([\n        Token.AT_RULE,\n        serializedBuffer,\n        [originalMetadata(metadata, serializedBuffer, externalContext)]\n      ]);\n\n      buffer = [];\n      isBufferEmpty = true;\n    } else if (character == Marker.COMMA && level == Level.BLOCK && ruleToken) {\n      // comma separator at block level, e.g. a,div,<--\n      serializedBuffer = buffer.join('').trim();\n      ruleToken[1].push([\n        tokenScopeFrom(ruleToken[0]),\n        serializedBuffer,\n        [originalMetadata(metadata, serializedBuffer, externalContext, ruleToken[1].length)]\n      ]);\n\n      buffer = [];\n      isBufferEmpty = true;\n    } else if (character == Marker.COMMA && level == Level.BLOCK && tokenTypeFrom(buffer) == Token.AT_RULE) {\n      // comma separator at block level, e.g. @import url(...) screen,<--\n      // keep iterating as end semicolon will create the token\n      buffer.push(character);\n      isBufferEmpty = false;\n    } else if (character == Marker.COMMA && level == Level.BLOCK) {\n      // comma separator at block level, e.g. a,<--\n      ruleToken = [tokenTypeFrom(buffer), [], []];\n      serializedBuffer = buffer.join('').trim();\n      ruleToken[1].push([\n        tokenScopeFrom(ruleToken[0]),\n        serializedBuffer,\n        [originalMetadata(metadata, serializedBuffer, externalContext, 0)]\n      ]);\n\n      buffer = [];\n      isBufferEmpty = true;\n    } else if (character == Marker.OPEN_CURLY_BRACKET\n      && level == Level.BLOCK\n      && ruleToken\n      && ruleToken[0] == Token.NESTED_BLOCK) {\n      // open brace opening at-rule at block level, e.g. @media{<--\n      serializedBuffer = buffer.join('').trim();\n      ruleToken[1].push([\n        Token.NESTED_BLOCK_SCOPE,\n        serializedBuffer,\n        [originalMetadata(metadata, serializedBuffer, externalContext)]\n      ]);\n      allTokens.push(ruleToken);\n\n      levels.push(level);\n      position.column++;\n      position.index++;\n      buffer = [];\n      isBufferEmpty = true;\n\n      ruleToken[2] = intoTokens(source, externalContext, internalContext, true);\n      ruleToken = null;\n    } else if (character == Marker.OPEN_CURLY_BRACKET\n      && level == Level.BLOCK\n      && tokenTypeFrom(buffer) == Token.NESTED_BLOCK) {\n      // open brace opening at-rule at block level, e.g. @media{<--\n      serializedBuffer = buffer.join('').trim();\n      ruleToken = ruleToken || [Token.NESTED_BLOCK, [], []];\n      ruleToken[1].push([\n        Token.NESTED_BLOCK_SCOPE,\n        serializedBuffer,\n        [originalMetadata(metadata, serializedBuffer, externalContext)]\n      ]);\n      allTokens.push(ruleToken);\n\n      levels.push(level);\n      position.column++;\n      position.index++;\n      buffer = [];\n      isBufferEmpty = true;\n      isVariable = false;\n\n      ruleToken[2] = intoTokens(source, externalContext, internalContext, true);\n      ruleToken = null;\n    } else if (character == Marker.OPEN_CURLY_BRACKET && level == Level.BLOCK) {\n      // open brace opening rule at block level, e.g. div{<--\n      serializedBuffer = buffer.join('').trim();\n      ruleToken = ruleToken || [tokenTypeFrom(buffer), [], []];\n      ruleToken[1].push([\n        tokenScopeFrom(ruleToken[0]),\n        serializedBuffer,\n        [originalMetadata(metadata, serializedBuffer, externalContext, ruleToken[1].length)]\n      ]);\n      newTokens = ruleToken[2];\n      allTokens.push(ruleToken);\n\n      levels.push(level);\n      level = Level.RULE;\n      buffer = [];\n      isBufferEmpty = true;\n    } else if (character == Marker.OPEN_CURLY_BRACKET && level == Level.RULE && seekingValue) {\n      // open brace opening rule at rule level, e.g. div{--variable:{<--\n      ruleTokens.push(ruleToken);\n      ruleToken = [Token.PROPERTY_BLOCK, []];\n      propertyToken.push(ruleToken);\n      newTokens = ruleToken[1];\n\n      levels.push(level);\n      level = Level.RULE;\n      seekingValue = false;\n    } else if (character == Marker.OPEN_CURLY_BRACKET && level == Level.RULE && isPageMarginBox(buffer)) {\n      // open brace opening page-margin box at rule level, e.g. @page{@top-center{<--\n      serializedBuffer = buffer.join('').trim();\n      ruleTokens.push(ruleToken);\n      ruleToken = [Token.AT_RULE_BLOCK, [], []];\n      ruleToken[1].push([\n        Token.AT_RULE_BLOCK_SCOPE,\n        serializedBuffer,\n        [originalMetadata(metadata, serializedBuffer, externalContext)]\n      ]);\n      newTokens.push(ruleToken);\n      newTokens = ruleToken[2];\n\n      levels.push(level);\n      level = Level.RULE;\n      buffer = [];\n      isBufferEmpty = true;\n    } else if (character == Marker.COLON && level == Level.RULE && !seekingValue) {\n      // colon at rule level, e.g. a{color:<--\n      serializedBuffer = buffer.join('').trim();\n      propertyToken = [\n        Token.PROPERTY,\n        [\n          Token.PROPERTY_NAME,\n          serializedBuffer,\n          [originalMetadata(metadata, serializedBuffer, externalContext)]\n        ]\n      ];\n      newTokens.push(propertyToken);\n\n      seekingValue = true;\n      buffer = [];\n      isBufferEmpty = true;\n    } else if (character == Marker.SEMICOLON\n      && level == Level.RULE\n      && propertyToken\n      && ruleTokens.length > 0\n      && !isBufferEmpty\n      && buffer[0] == Marker.AT) {\n      // semicolon at rule level for at-rule, e.g. a{--color:{@apply(--other-color);<--\n      serializedBuffer = buffer.join('').trim();\n      ruleToken[1].push([\n        Token.AT_RULE,\n        serializedBuffer,\n        [originalMetadata(metadata, serializedBuffer, externalContext)]\n      ]);\n\n      buffer = [];\n      isBufferEmpty = true;\n    } else if (character == Marker.SEMICOLON && level == Level.RULE && propertyToken && !isBufferEmpty) {\n      // semicolon at rule level, e.g. a{color:red;<--\n      serializedBuffer = buffer.join('').trim();\n      propertyToken.push([\n        Token.PROPERTY_VALUE,\n        serializedBuffer,\n        [originalMetadata(metadata, serializedBuffer, externalContext)]\n      ]);\n\n      propertyToken = null;\n      seekingValue = false;\n      buffer = [];\n      isBufferEmpty = true;\n      isVariable = false;\n    } else if (character == Marker.SEMICOLON\n      && level == Level.RULE\n      && propertyToken\n      && isBufferEmpty\n      && isVariable\n      && !propertyToken[2]) {\n      // semicolon after empty variable value at rule level, e.g. a{--color: ;<--\n      propertyToken.push([Token.PROPERTY_VALUE, ' ', [originalMetadata(metadata, ' ', externalContext)]]);\n      isVariable = false;\n      propertyToken = null;\n      seekingValue = false;\n    } else if (character == Marker.SEMICOLON && level == Level.RULE && propertyToken && isBufferEmpty) {\n      // semicolon after bracketed value at rule level, e.g. a{color:rgb(...);<--\n      propertyToken = null;\n      seekingValue = false;\n    } else if (character == Marker.SEMICOLON\n      && level == Level.RULE\n      && !isBufferEmpty\n      && buffer[0] == Marker.AT) {\n      // semicolon for at-rule at rule level, e.g. a{@apply(--variable);<--\n      serializedBuffer = buffer.join('');\n      newTokens.push([\n        Token.AT_RULE,\n        serializedBuffer,\n        [originalMetadata(metadata, serializedBuffer, externalContext)]\n      ]);\n\n      seekingValue = false;\n      buffer = [];\n      isBufferEmpty = true;\n    } else if (character == Marker.SEMICOLON && level == Level.RULE && seekingPropertyBlockClosing) {\n      // close brace after a property block at rule level, e.g. a{--custom:{color:red;};<--\n      seekingPropertyBlockClosing = false;\n      buffer = [];\n      isBufferEmpty = true;\n    } else if (character == Marker.SEMICOLON && level == Level.RULE && isBufferEmpty) {\n      // stray semicolon at rule level, e.g. a{;<--\n      // noop\n    } else if (character == Marker.CLOSE_CURLY_BRACKET\n      && level == Level.RULE\n      && propertyToken\n      && seekingValue\n      && !isBufferEmpty && ruleTokens.length > 0) {\n      // close brace at rule level, e.g. a{--color:{color:red}<--\n      serializedBuffer = buffer.join('');\n      propertyToken.push([\n        Token.PROPERTY_VALUE,\n        serializedBuffer,\n        [originalMetadata(metadata, serializedBuffer, externalContext)]\n      ]);\n      propertyToken = null;\n      ruleToken = ruleTokens.pop();\n      newTokens = ruleToken[2];\n\n      level = levels.pop();\n      seekingValue = false;\n      buffer = [];\n      isBufferEmpty = true;\n    } else if (character == Marker.CLOSE_CURLY_BRACKET\n      && level == Level.RULE\n      && propertyToken\n      && !isBufferEmpty\n      && buffer[0] == Marker.AT\n      && ruleTokens.length > 0) {\n      // close brace at rule level for at-rule, e.g. a{--color:{@apply(--other-color)}<--\n      serializedBuffer = buffer.join('');\n      ruleToken[1].push([\n        Token.AT_RULE,\n        serializedBuffer,\n        [originalMetadata(metadata, serializedBuffer, externalContext)]\n      ]);\n      propertyToken = null;\n      ruleToken = ruleTokens.pop();\n      newTokens = ruleToken[2];\n\n      level = levels.pop();\n      seekingValue = false;\n      buffer = [];\n      isBufferEmpty = true;\n    } else if (character == Marker.CLOSE_CURLY_BRACKET\n      && level == Level.RULE\n      && propertyToken\n      && ruleTokens.length > 0) {\n      // close brace at rule level after space, e.g. a{--color:{color:red }<--\n      propertyToken = null;\n      ruleToken = ruleTokens.pop();\n      newTokens = ruleToken[2];\n\n      level = levels.pop();\n      seekingValue = false;\n    } else if (character == Marker.CLOSE_CURLY_BRACKET\n      && level == Level.RULE\n      && propertyToken\n      && !isBufferEmpty) {\n      // close brace at rule level, e.g. a{color:red}<--\n      serializedBuffer = buffer.join('');\n      propertyToken.push([\n        Token.PROPERTY_VALUE,\n        serializedBuffer,\n        [originalMetadata(metadata, serializedBuffer, externalContext)]\n      ]);\n      propertyToken = null;\n      ruleToken = ruleTokens.pop();\n      newTokens = allTokens;\n\n      level = levels.pop();\n      seekingValue = false;\n      buffer = [];\n      isBufferEmpty = true;\n    } else if (character == Marker.CLOSE_CURLY_BRACKET\n      && level == Level.RULE\n      && !isBufferEmpty\n      && buffer[0] == Marker.AT) {\n      // close brace after at-rule at rule level, e.g. a{@apply(--variable)}<--\n      propertyToken = null;\n      ruleToken = null;\n      serializedBuffer = buffer.join('').trim();\n      newTokens.push([\n        Token.AT_RULE,\n        serializedBuffer,\n        [originalMetadata(metadata, serializedBuffer, externalContext)]\n      ]);\n      newTokens = allTokens;\n\n      level = levels.pop();\n      seekingValue = false;\n      buffer = [];\n      isBufferEmpty = true;\n    } else if (character == Marker.CLOSE_CURLY_BRACKET\n      && level == Level.RULE\n      && levels[levels.length - 1] == Level.RULE) {\n      // close brace after a property block at rule level, e.g. a{--custom:{color:red;}<--\n      propertyToken = null;\n      ruleToken = ruleTokens.pop();\n      newTokens = ruleToken[2];\n\n      level = levels.pop();\n      seekingValue = false;\n      seekingPropertyBlockClosing = true;\n      buffer = [];\n      isBufferEmpty = true;\n    } else if (character == Marker.CLOSE_CURLY_BRACKET\n      && level == Level.RULE\n      && isVariable\n      && propertyToken\n      && !propertyToken[2]) {\n      // close brace after an empty variable declaration inside a rule, e.g. a{--color: }<--\n      propertyToken.push([Token.PROPERTY_VALUE, ' ', [originalMetadata(metadata, ' ', externalContext)]]);\n      isVariable = false;\n      propertyToken = null;\n      ruleToken = null;\n      newTokens = allTokens;\n\n      level = levels.pop();\n      seekingValue = false;\n      isVariable = false;\n    } else if (character == Marker.CLOSE_CURLY_BRACKET && level == Level.RULE) {\n      // close brace after a rule, e.g. a{color:red;}<--\n      propertyToken = null;\n      ruleToken = null;\n      newTokens = allTokens;\n\n      level = levels.pop();\n      seekingValue = false;\n      isVariable = false;\n    } else if (character == Marker.CLOSE_CURLY_BRACKET\n      && level == Level.BLOCK\n      && !isNested\n      && position.index <= source.length - 1) {\n      // stray close brace at block level, e.g. a{color:red}color:blue}<--\n      externalContext.warnings.push('Unexpected \\'}\\' at ' + formatPosition([position.line, position.column, position.source]) + '.');\n      buffer.push(character);\n      isBufferEmpty = false;\n    } else if (character == Marker.CLOSE_CURLY_BRACKET && level == Level.BLOCK) {\n      // close brace at block level, e.g. @media screen {...}<--\n      break;\n    } else if (character == Marker.OPEN_ROUND_BRACKET && level == Level.RULE && seekingValue) {\n      // round open bracket, e.g. a{color:hsla(<--\n      buffer.push(character);\n      isBufferEmpty = false;\n      roundBracketLevel++;\n    } else if (character == Marker.CLOSE_ROUND_BRACKET\n      && level == Level.RULE\n      && seekingValue\n      && roundBracketLevel == 1) {\n      // round close bracket, e.g. a{color:hsla(0,0%,0%)<--\n      buffer.push(character);\n      isBufferEmpty = false;\n      serializedBuffer = buffer.join('').trim();\n      propertyToken.push([\n        Token.PROPERTY_VALUE,\n        serializedBuffer,\n        [originalMetadata(metadata, serializedBuffer, externalContext)]\n      ]);\n\n      roundBracketLevel--;\n      buffer = [];\n      isBufferEmpty = true;\n      isVariable = false;\n    } else if (character == Marker.CLOSE_ROUND_BRACKET && level == Level.RULE && seekingValue) {\n      // round close bracket within other brackets, e.g. a{width:calc((10rem / 2)<--\n      buffer.push(character);\n      isBufferEmpty = false;\n      isVariable = false;\n      roundBracketLevel--;\n    } else if (character == Marker.FORWARD_SLASH\n      && source[position.index + 1] != Marker.ASTERISK\n      && level == Level.RULE\n      && seekingValue\n      && !isBufferEmpty) {\n      // forward slash within a property, e.g. a{background:url(image.png) 0 0/<--\n      serializedBuffer = buffer.join('').trim();\n      propertyToken.push([\n        Token.PROPERTY_VALUE,\n        serializedBuffer,\n        [originalMetadata(metadata, serializedBuffer, externalContext)]\n      ]);\n      propertyToken.push([\n        Token.PROPERTY_VALUE,\n        character,\n        [[position.line, position.column, position.source]]\n      ]);\n\n      buffer = [];\n      isBufferEmpty = true;\n    } else if (character == Marker.FORWARD_SLASH\n      && source[position.index + 1] != Marker.ASTERISK\n      && level == Level.RULE\n      && seekingValue) {\n      // forward slash within a property after space, e.g. a{background:url(image.png) 0 0 /<--\n      propertyToken.push([\n        Token.PROPERTY_VALUE,\n        character,\n        [[position.line, position.column, position.source]]\n      ]);\n\n      buffer = [];\n      isBufferEmpty = true;\n    } else if (character == Marker.COMMA && level == Level.RULE && seekingValue && !isBufferEmpty) {\n      // comma within a property, e.g. a{background:url(image.png),<--\n      serializedBuffer = buffer.join('').trim();\n      propertyToken.push([\n        Token.PROPERTY_VALUE,\n        serializedBuffer,\n        [originalMetadata(metadata, serializedBuffer, externalContext)]\n      ]);\n      propertyToken.push([\n        Token.PROPERTY_VALUE,\n        character,\n        [[position.line, position.column, position.source]]\n      ]);\n\n      buffer = [];\n      isBufferEmpty = true;\n    } else if (character == Marker.COMMA && level == Level.RULE && seekingValue) {\n      // comma within a property after space, e.g. a{background:url(image.png) ,<--\n      propertyToken.push([\n        Token.PROPERTY_VALUE,\n        character,\n        [[position.line, position.column, position.source]]\n      ]);\n\n      buffer = [];\n      isBufferEmpty = true;\n    } else if (character == Marker.CLOSE_SQUARE_BRACKET\n      && propertyToken\n      && propertyToken.length > 1\n      && !isBufferEmpty\n      && isRepeatToken(buffer)) {\n      buffer.push(character);\n      serializedBuffer = buffer.join('').trim();\n      propertyToken[propertyToken.length - 1][1] += serializedBuffer;\n\n      buffer = [];\n      isBufferEmpty = true;\n    } else if ((isSpace || (isNewLineNix && !isNewLineWin))\n      && level == Level.RULE\n      && seekingValue\n      && propertyToken\n      && !isBufferEmpty) {\n      // space or *nix newline within property, e.g. a{margin:0 <--\n      serializedBuffer = buffer.join('').trim();\n      propertyToken.push([\n        Token.PROPERTY_VALUE,\n        serializedBuffer,\n        [originalMetadata(metadata, serializedBuffer, externalContext)]\n      ]);\n\n      buffer = [];\n      isBufferEmpty = true;\n    } else if (isNewLineWin && level == Level.RULE && seekingValue && propertyToken && buffer.length > 1) {\n      // win newline within property, e.g. a{margin:0\\r\\n<--\n      serializedBuffer = buffer.join('').trim();\n      propertyToken.push([\n        Token.PROPERTY_VALUE,\n        serializedBuffer,\n        [originalMetadata(metadata, serializedBuffer, externalContext)]\n      ]);\n\n      buffer = [];\n      isBufferEmpty = true;\n    } else if (isNewLineWin && level == Level.RULE && seekingValue) {\n      // win newline\n      buffer = [];\n      isBufferEmpty = true;\n    } else if (isNewLineWin && buffer.length == 1) {\n      // ignore windows newline which is composed of two characters\n      buffer.pop();\n      isBufferEmpty = buffer.length === 0;\n    } else if (!isBufferEmpty || !isSpace && !isNewLineNix && !isNewLineWin && !isCarriageReturn) {\n      // any character\n      buffer.push(character);\n      isBufferEmpty = false;\n    }\n\n    wasEscaped = isEscaped;\n    isEscaped = !wasEscaped && character == Marker.BACK_SLASH;\n    wasCommentStart = isCommentStart;\n    wasCommentEnd = isCommentEnd;\n\n    position.line = (isNewLineWin || isNewLineNix || isCarriageReturn) ? position.line + 1 : position.line;\n    position.column = (isNewLineWin || isNewLineNix || isCarriageReturn) ? 0 : position.column + 1;\n  }\n\n  if (seekingValue) {\n    externalContext.warnings.push('Missing \\'}\\' at ' + formatPosition([position.line, position.column, position.source]) + '.');\n  }\n\n  if (seekingValue && buffer.length > 0) {\n    serializedBuffer = buffer.join('').trimRight().replace(TAIL_BROKEN_VALUE_PATTERN, '$1').trimRight();\n    propertyToken.push([\n      Token.PROPERTY_VALUE,\n      serializedBuffer,\n      [originalMetadata(metadata, serializedBuffer, externalContext)]\n    ]);\n\n    buffer = [];\n  }\n\n  if (buffer.length > 0) {\n    externalContext.warnings.push('Invalid character(s) \\'' + buffer.join('') + '\\' at ' + formatPosition(metadata) + '. Ignoring.');\n  }\n\n  return allTokens;\n}\n\nfunction isIgnoreStartComment(buffer) {\n  return IGNORE_START_COMMENT_PATTERN.test(buffer.join('') + Marker.FORWARD_SLASH);\n}\n\nfunction isIgnoreEndComment(buffer) {\n  return IGNORE_END_COMMENT_PATTERN.test(buffer.join('') + Marker.FORWARD_SLASH);\n}\n\nfunction originalMetadata(metadata, value, externalContext, selectorFallbacks) {\n  var source = metadata[2];\n\n  return externalContext.inputSourceMapTracker.isTracking(source)\n    ? externalContext.inputSourceMapTracker.originalPositionFor(metadata, value.length, selectorFallbacks)\n    : metadata;\n}\n\nfunction tokenTypeFrom(buffer) {\n  var isAtRule = buffer[0] == Marker.AT || buffer[0] == Marker.UNDERSCORE;\n  var ruleWord = buffer.join('').split(RULE_WORD_SEPARATOR_PATTERN)[0];\n\n  if (isAtRule && BLOCK_RULES.indexOf(ruleWord) > -1) {\n    return Token.NESTED_BLOCK;\n  } if (isAtRule && AT_RULES.indexOf(ruleWord) > -1) {\n    return Token.AT_RULE;\n  } if (isAtRule) {\n    return Token.AT_RULE_BLOCK;\n  }\n  return Token.RULE;\n}\n\nfunction tokenScopeFrom(tokenType) {\n  if (tokenType == Token.RULE) {\n    return Token.RULE_SCOPE;\n  } if (tokenType == Token.NESTED_BLOCK) {\n    return Token.NESTED_BLOCK_SCOPE;\n  } if (tokenType == Token.AT_RULE_BLOCK) {\n    return Token.AT_RULE_BLOCK_SCOPE;\n  }\n}\n\nfunction isPageMarginBox(buffer) {\n  var serializedBuffer = buffer.join('').trim();\n\n  return PAGE_MARGIN_BOXES.indexOf(serializedBuffer) > -1 || EXTRA_PAGE_BOXES.indexOf(serializedBuffer) > -1;\n}\n\nfunction isRepeatToken(buffer) {\n  return REPEAT_PATTERN.test(buffer.join('') + Marker.CLOSE_SQUARE_BRACKET);\n}\n\nmodule.exports = tokenize;\n", "var fs = require('fs');\nvar path = require('path');\n\nvar applySourceMaps = require('./apply-source-maps');\nvar extractImportUrlAndMedia = require('./extract-import-url-and-media');\nvar isAllowedResource = require('./is-allowed-resource');\nvar loadOriginalSources = require('./load-original-sources');\nvar normalizePath = require('./normalize-path');\nvar rebase = require('./rebase');\nvar rebaseLocalMap = require('./rebase-local-map');\nvar rebaseRemoteMap = require('./rebase-remote-map');\nvar restoreImport = require('./restore-import');\n\nvar tokenize = require('../tokenizer/tokenize');\nvar Token = require('../tokenizer/token');\nvar Marker = require('../tokenizer/marker');\nvar hasProtocol = require('../utils/has-protocol');\nvar isImport = require('../utils/is-import');\nvar isRemoteResource = require('../utils/is-remote-resource');\n\nvar UNKNOWN_URI = 'uri:unknown';\nvar FILE_RESOURCE_PROTOCOL = 'file://';\n\nfunction readSources(input, context, callback) {\n  return doReadSources(input, context, function(tokens) {\n    return applySourceMaps(tokens, context, function() {\n      return loadOriginalSources(context, function() { return callback(tokens); });\n    });\n  });\n}\n\nfunction doReadSources(input, context, callback) {\n  if (typeof input == 'string') {\n    return fromString(input, context, callback);\n  } if (Buffer.isBuffer(input)) {\n    return fromString(input.toString(), context, callback);\n  } if (Array.isArray(input)) {\n    return fromArray(input, context, callback);\n  } if (typeof input == 'object') {\n    return fromHash(input, context, callback);\n  }\n}\n\nfunction fromString(input, context, callback) {\n  context.source = undefined;\n  context.sourcesContent[undefined] = input;\n  context.stats.originalSize += input.length;\n\n  return fromStyles(input, context, { inline: context.options.inline }, callback);\n}\n\nfunction fromArray(input, context, callback) {\n  var inputAsImports = input.reduce(function(accumulator, uriOrHash) {\n    if (typeof uriOrHash === 'string') {\n      return addStringSource(uriOrHash, accumulator);\n    }\n    return addHashSource(uriOrHash, context, accumulator);\n  }, []);\n\n  return fromStyles(inputAsImports.join(''), context, { inline: ['all'] }, callback);\n}\n\nfunction fromHash(input, context, callback) {\n  var inputAsImports = addHashSource(input, context, []);\n  return fromStyles(inputAsImports.join(''), context, { inline: ['all'] }, callback);\n}\n\nfunction addStringSource(input, imports) {\n  imports.push(restoreAsImport(normalizeUri(input)));\n  return imports;\n}\n\nfunction addHashSource(input, context, imports) {\n  var uri;\n  var normalizedUri;\n  var source;\n\n  for (uri in input) {\n    source = input[uri];\n    normalizedUri = normalizeUri(uri);\n\n    imports.push(restoreAsImport(normalizedUri));\n\n    context.sourcesContent[normalizedUri] = source.styles;\n\n    if (source.sourceMap) {\n      trackSourceMap(source.sourceMap, normalizedUri, context);\n    }\n  }\n\n  return imports;\n}\n\nfunction normalizeUri(uri) {\n  var currentPath = path.resolve('');\n  var absoluteUri;\n  var relativeToCurrentPath;\n  var normalizedUri;\n\n  if (isRemoteResource(uri)) {\n    return uri;\n  }\n\n  absoluteUri = path.isAbsolute(uri)\n    ? uri\n    : path.resolve(uri);\n  relativeToCurrentPath = path.relative(currentPath, absoluteUri);\n  normalizedUri = normalizePath(relativeToCurrentPath);\n\n  return normalizedUri;\n}\n\nfunction trackSourceMap(sourceMap, uri, context) {\n  var parsedMap = typeof sourceMap == 'string'\n    ? JSON.parse(sourceMap)\n    : sourceMap;\n  var rebasedMap = isRemoteResource(uri)\n    ? rebaseRemoteMap(parsedMap, uri)\n    : rebaseLocalMap(parsedMap, uri || UNKNOWN_URI, context.options.rebaseTo);\n\n  context.inputSourceMapTracker.track(uri, rebasedMap);\n}\n\nfunction restoreAsImport(uri) {\n  return restoreImport('url(' + uri + ')', '') + Marker.SEMICOLON;\n}\n\nfunction fromStyles(styles, context, parentInlinerContext, callback) {\n  var tokens;\n  var rebaseConfig = {};\n\n  if (!context.source) {\n    rebaseConfig.fromBase = path.resolve('');\n    rebaseConfig.toBase = context.options.rebaseTo;\n  } else if (isRemoteResource(context.source)) {\n    rebaseConfig.fromBase = context.source;\n    rebaseConfig.toBase = context.source;\n  } else if (path.isAbsolute(context.source)) {\n    rebaseConfig.fromBase = path.dirname(context.source);\n    rebaseConfig.toBase = context.options.rebaseTo;\n  } else {\n    rebaseConfig.fromBase = path.dirname(path.resolve(context.source));\n    rebaseConfig.toBase = context.options.rebaseTo;\n  }\n\n  tokens = tokenize(styles, context);\n  tokens = rebase(tokens, context.options.rebase, context.validator, rebaseConfig);\n\n  return allowsAnyImports(parentInlinerContext.inline)\n    ? inline(tokens, context, parentInlinerContext, callback)\n    : callback(tokens);\n}\n\nfunction allowsAnyImports(inline) {\n  return !(inline.length == 1 && inline[0] == 'none');\n}\n\nfunction inline(tokens, externalContext, parentInlinerContext, callback) {\n  var inlinerContext = {\n    afterContent: false,\n    callback: callback,\n    errors: externalContext.errors,\n    externalContext: externalContext,\n    fetch: externalContext.options.fetch,\n    inlinedStylesheets: parentInlinerContext.inlinedStylesheets || externalContext.inlinedStylesheets,\n    inline: parentInlinerContext.inline,\n    inlineRequest: externalContext.options.inlineRequest,\n    inlineTimeout: externalContext.options.inlineTimeout,\n    isRemote: parentInlinerContext.isRemote || false,\n    localOnly: externalContext.localOnly,\n    outputTokens: [],\n    rebaseTo: externalContext.options.rebaseTo,\n    sourceTokens: tokens,\n    warnings: externalContext.warnings\n  };\n\n  return doInlineImports(inlinerContext);\n}\n\nfunction doInlineImports(inlinerContext) {\n  var token;\n  var i, l;\n\n  for (i = 0, l = inlinerContext.sourceTokens.length; i < l; i++) {\n    token = inlinerContext.sourceTokens[i];\n\n    if (token[0] == Token.AT_RULE && isImport(token[1])) {\n      inlinerContext.sourceTokens.splice(0, i);\n      return inlineStylesheet(token, inlinerContext);\n    } if (token[0] == Token.AT_RULE || token[0] == Token.COMMENT) {\n      inlinerContext.outputTokens.push(token);\n    } else {\n      inlinerContext.outputTokens.push(token);\n      inlinerContext.afterContent = true;\n    }\n  }\n\n  inlinerContext.sourceTokens = [];\n  return inlinerContext.callback(inlinerContext.outputTokens);\n}\n\nfunction inlineStylesheet(token, inlinerContext) {\n  var uriAndMediaQuery = extractImportUrlAndMedia(token[1]);\n  var uri = uriAndMediaQuery[0];\n  var mediaQuery = uriAndMediaQuery[1];\n  var metadata = token[2];\n\n  return isRemoteResource(uri)\n    ? inlineRemoteStylesheet(uri, mediaQuery, metadata, inlinerContext)\n    : inlineLocalStylesheet(uri, mediaQuery, metadata, inlinerContext);\n}\n\nfunction inlineRemoteStylesheet(uri, mediaQuery, metadata, inlinerContext) {\n  var isAllowed = isAllowedResource(uri, true, inlinerContext.inline);\n  var originalUri = uri;\n  var isLoaded = uri in inlinerContext.externalContext.sourcesContent;\n  var isRuntimeResource = !hasProtocol(uri);\n\n  if (inlinerContext.inlinedStylesheets.indexOf(uri) > -1) {\n    inlinerContext.warnings.push('Ignoring remote @import of \"' + uri + '\" as it has already been imported.');\n    inlinerContext.sourceTokens = inlinerContext.sourceTokens.slice(1);\n    return doInlineImports(inlinerContext);\n  } if (inlinerContext.localOnly && inlinerContext.afterContent) {\n    inlinerContext.warnings.push('Ignoring remote @import of \"' + uri + '\" as no callback given and after other content.');\n    inlinerContext.sourceTokens = inlinerContext.sourceTokens.slice(1);\n    return doInlineImports(inlinerContext);\n  } if (isRuntimeResource) {\n    inlinerContext.warnings.push('Skipping remote @import of \"' + uri + '\" as no protocol given.');\n    inlinerContext.outputTokens = inlinerContext.outputTokens.concat(inlinerContext.sourceTokens.slice(0, 1));\n    inlinerContext.sourceTokens = inlinerContext.sourceTokens.slice(1);\n    return doInlineImports(inlinerContext);\n  } if (inlinerContext.localOnly && !isLoaded) {\n    inlinerContext.warnings.push('Skipping remote @import of \"' + uri + '\" as no callback given.');\n    inlinerContext.outputTokens = inlinerContext.outputTokens.concat(inlinerContext.sourceTokens.slice(0, 1));\n    inlinerContext.sourceTokens = inlinerContext.sourceTokens.slice(1);\n    return doInlineImports(inlinerContext);\n  } if (!isAllowed && inlinerContext.afterContent) {\n    inlinerContext.warnings.push('Ignoring remote @import of \"' + uri + '\" as resource is not allowed and after other content.');\n    inlinerContext.sourceTokens = inlinerContext.sourceTokens.slice(1);\n    return doInlineImports(inlinerContext);\n  } if (!isAllowed) {\n    inlinerContext.warnings.push('Skipping remote @import of \"' + uri + '\" as resource is not allowed.');\n    inlinerContext.outputTokens = inlinerContext.outputTokens.concat(inlinerContext.sourceTokens.slice(0, 1));\n    inlinerContext.sourceTokens = inlinerContext.sourceTokens.slice(1);\n    return doInlineImports(inlinerContext);\n  }\n\n  inlinerContext.inlinedStylesheets.push(uri);\n\n  function whenLoaded(error, importedStyles) {\n    if (error) {\n      inlinerContext.errors.push('Broken @import declaration of \"' + uri + '\" - ' + error);\n\n      return process.nextTick(function() {\n        inlinerContext.outputTokens = inlinerContext.outputTokens.concat(inlinerContext.sourceTokens.slice(0, 1));\n        inlinerContext.sourceTokens = inlinerContext.sourceTokens.slice(1);\n        doInlineImports(inlinerContext);\n      });\n    }\n\n    inlinerContext.inline = inlinerContext.externalContext.options.inline;\n    inlinerContext.isRemote = true;\n\n    inlinerContext.externalContext.source = originalUri;\n    inlinerContext.externalContext.sourcesContent[uri] = importedStyles;\n    inlinerContext.externalContext.stats.originalSize += importedStyles.length;\n\n    return fromStyles(importedStyles, inlinerContext.externalContext, inlinerContext, function(importedTokens) {\n      importedTokens = wrapInMedia(importedTokens, mediaQuery, metadata);\n\n      inlinerContext.outputTokens = inlinerContext.outputTokens.concat(importedTokens);\n      inlinerContext.sourceTokens = inlinerContext.sourceTokens.slice(1);\n\n      return doInlineImports(inlinerContext);\n    });\n  }\n\n  return isLoaded\n    ? whenLoaded(null, inlinerContext.externalContext.sourcesContent[uri])\n    : inlinerContext.fetch(uri, inlinerContext.inlineRequest, inlinerContext.inlineTimeout, whenLoaded);\n}\n\nfunction inlineLocalStylesheet(uri, mediaQuery, metadata, inlinerContext) {\n  var protocolLessUri = uri.replace(FILE_RESOURCE_PROTOCOL, '');\n  var currentPath = path.resolve('');\n  var absoluteUri = path.isAbsolute(protocolLessUri)\n    ? path.resolve(currentPath, protocolLessUri[0] == '/' ? protocolLessUri.substring(1) : protocolLessUri)\n    : path.resolve(inlinerContext.rebaseTo, protocolLessUri);\n  var relativeToCurrentPath = path.relative(currentPath, absoluteUri);\n  var importedStyles;\n  var isAllowed = isAllowedResource(protocolLessUri, false, inlinerContext.inline);\n  var normalizedPath = normalizePath(relativeToCurrentPath);\n  var isLoaded = normalizedPath in inlinerContext.externalContext.sourcesContent;\n\n  if (inlinerContext.inlinedStylesheets.indexOf(absoluteUri) > -1) {\n    inlinerContext.warnings.push('Ignoring local @import of \"' + protocolLessUri + '\" as it has already been imported.');\n  } else if (isAllowed && !isLoaded && (!fs.existsSync(absoluteUri) || !fs.statSync(absoluteUri).isFile())) {\n    inlinerContext.errors.push('Ignoring local @import of \"' + protocolLessUri + '\" as resource is missing.');\n  } else if (!isAllowed && inlinerContext.afterContent) {\n    inlinerContext.warnings.push('Ignoring local @import of \"' + protocolLessUri + '\" as resource is not allowed and after other content.');\n  } else if (inlinerContext.afterContent) {\n    inlinerContext.warnings.push('Ignoring local @import of \"' + protocolLessUri + '\" as after other content.');\n  } else if (!isAllowed) {\n    inlinerContext.warnings.push('Skipping local @import of \"' + protocolLessUri + '\" as resource is not allowed.');\n    inlinerContext.outputTokens = inlinerContext.outputTokens.concat(inlinerContext.sourceTokens.slice(0, 1));\n  } else {\n    importedStyles = isLoaded\n      ? inlinerContext.externalContext.sourcesContent[normalizedPath]\n      : fs.readFileSync(absoluteUri, 'utf-8');\n\n    if (importedStyles.charCodeAt(0) === 65279) {\n      importedStyles = importedStyles.substring(1);\n    }\n\n    inlinerContext.inlinedStylesheets.push(absoluteUri);\n    inlinerContext.inline = inlinerContext.externalContext.options.inline;\n\n    inlinerContext.externalContext.source = normalizedPath;\n    inlinerContext.externalContext.sourcesContent[normalizedPath] = importedStyles;\n    inlinerContext.externalContext.stats.originalSize += importedStyles.length;\n\n    return fromStyles(importedStyles, inlinerContext.externalContext, inlinerContext, function(importedTokens) {\n      importedTokens = wrapInMedia(importedTokens, mediaQuery, metadata);\n\n      inlinerContext.outputTokens = inlinerContext.outputTokens.concat(importedTokens);\n      inlinerContext.sourceTokens = inlinerContext.sourceTokens.slice(1);\n\n      return doInlineImports(inlinerContext);\n    });\n  }\n\n  inlinerContext.sourceTokens = inlinerContext.sourceTokens.slice(1);\n\n  return doInlineImports(inlinerContext);\n}\n\nfunction wrapInMedia(tokens, mediaQuery, metadata) {\n  if (mediaQuery) {\n    return [[Token.NESTED_BLOCK, [[Token.NESTED_BLOCK_SCOPE, '@media ' + mediaQuery, metadata]], tokens]];\n  }\n  return tokens;\n}\n\nmodule.exports = readSources;\n", "var all = require('./helpers').all;\n\nfunction store(serializeContext, token) {\n  var value = typeof token == 'string'\n    ? token\n    : token[1];\n  var wrap = serializeContext.wrap;\n\n  wrap(serializeContext, value);\n  track(serializeContext, value);\n  serializeContext.output.push(value);\n}\n\nfunction wrap(serializeContext, value) {\n  if (serializeContext.column + value.length > serializeContext.format.wrapAt) {\n    track(serializeContext, serializeContext.format.breakWith);\n    serializeContext.output.push(serializeContext.format.breakWith);\n  }\n}\n\nfunction track(serializeContext, value) {\n  var parts = value.split('\\n');\n\n  serializeContext.line += parts.length - 1;\n  serializeContext.column = parts.length > 1 ? 0 : (serializeContext.column + parts.pop().length);\n}\n\nfunction serializeStyles(tokens, context) {\n  var serializeContext = {\n    column: 0,\n    format: context.options.format,\n    indentBy: 0,\n    indentWith: '',\n    line: 1,\n    output: [],\n    spaceAfterClosingBrace: context.options.compatibility.properties.spaceAfterClosingBrace,\n    store: store,\n    wrap: context.options.format.wrapAt\n      ? wrap\n      : function() { /* noop */ }\n  };\n\n  all(serializeContext, tokens);\n\n  return { styles: serializeContext.output.join('') };\n}\n\nmodule.exports = serializeStyles;\n", "var SourceMapGenerator = require('source-map').SourceMapGenerator;\nvar all = require('./helpers').all;\n\nvar isRemoteResource = require('../utils/is-remote-resource');\n\nvar isWindows = process.platform == 'win32';\n\nvar NIX_SEPARATOR_PATTERN = /\\//g;\nvar UNKNOWN_SOURCE = '$stdin';\nvar WINDOWS_SEPARATOR = '\\\\';\n\nfunction store(serializeContext, element) {\n  var fromString = typeof element == 'string';\n  var value = fromString ? element : element[1];\n  var mappings = fromString ? null : element[2];\n  var wrap = serializeContext.wrap;\n\n  wrap(serializeContext, value);\n  track(serializeContext, value, mappings);\n  serializeContext.output.push(value);\n}\n\nfunction wrap(serializeContext, value) {\n  if (serializeContext.column + value.length > serializeContext.format.wrapAt) {\n    track(serializeContext, serializeContext.format.breakWith, false);\n    serializeContext.output.push(serializeContext.format.breakWith);\n  }\n}\n\nfunction track(serializeContext, value, mappings) {\n  var parts = value.split('\\n');\n\n  if (mappings) {\n    trackAllMappings(serializeContext, mappings);\n  }\n\n  serializeContext.line += parts.length - 1;\n  serializeContext.column = parts.length > 1 ? 0 : (serializeContext.column + parts.pop().length);\n}\n\nfunction trackAllMappings(serializeContext, mappings) {\n  for (var i = 0, l = mappings.length; i < l; i++) {\n    trackMapping(serializeContext, mappings[i]);\n  }\n}\n\nfunction trackMapping(serializeContext, mapping) {\n  var line = mapping[0];\n  var column = mapping[1];\n  var originalSource = mapping[2];\n  var source = originalSource;\n  var storedSource = source || UNKNOWN_SOURCE;\n\n  if (isWindows && source && !isRemoteResource(source)) {\n    storedSource = source.replace(NIX_SEPARATOR_PATTERN, WINDOWS_SEPARATOR);\n  }\n\n  serializeContext.outputMap.addMapping({\n    generated: {\n      line: serializeContext.line,\n      column: serializeContext.column\n    },\n    source: storedSource,\n    original: {\n      line: line,\n      column: column\n    }\n  });\n\n  if (serializeContext.inlineSources && (originalSource in serializeContext.sourcesContent)) {\n    serializeContext.outputMap.setSourceContent(\n      storedSource,\n      serializeContext.sourcesContent[originalSource]\n    );\n  }\n}\n\nfunction serializeStylesAndSourceMap(tokens, context) {\n  var serializeContext = {\n    column: 0,\n    format: context.options.format,\n    indentBy: 0,\n    indentWith: '',\n    inlineSources: context.options.sourceMapInlineSources,\n    line: 1,\n    output: [],\n    outputMap: new SourceMapGenerator(),\n    sourcesContent: context.sourcesContent,\n    spaceAfterClosingBrace: context.options.compatibility.properties.spaceAfterClosingBrace,\n    store: store,\n    wrap: context.options.format.wrapAt\n      ? wrap\n      : function() { /* noop */ }\n  };\n\n  all(serializeContext, tokens);\n\n  return {\n    sourceMap: serializeContext.outputMap,\n    styles: serializeContext.output.join('')\n  };\n}\n\nmodule.exports = serializeStylesAndSourceMap;\n", "/**\n * Clean-css - https://github.com/clean-css/clean-css\n * Released under the terms of MIT license\n */\n\nvar level0Optimize = require('./optimizer/level-0/optimize');\nvar level1Optimize = require('./optimizer/level-1/optimize');\nvar level2Optimize = require('./optimizer/level-2/optimize');\nvar validator = require('./optimizer/validator');\n\nvar compatibilityFrom = require('./options/compatibility');\nvar fetchFrom = require('./options/fetch');\nvar formatFrom = require('./options/format').formatFrom;\nvar inlineFrom = require('./options/inline');\nvar inlineRequestFrom = require('./options/inline-request');\nvar inlineTimeoutFrom = require('./options/inline-timeout');\nvar OptimizationLevel = require('./options/optimization-level').OptimizationLevel;\nvar optimizationLevelFrom = require('./options/optimization-level').optimizationLevelFrom;\nvar pluginsFrom = require('./options/plugins');\nvar rebaseFrom = require('./options/rebase');\nvar rebaseToFrom = require('./options/rebase-to');\n\nvar inputSourceMapTracker = require('./reader/input-source-map-tracker');\nvar readSources = require('./reader/read-sources');\n\nvar serializeStyles = require('./writer/simple');\nvar serializeStylesAndSourceMap = require('./writer/source-maps');\n\nvar CleanCSS = module.exports = function CleanCSS(options) {\n  options = options || {};\n\n  this.options = {\n    batch: !!options.batch,\n    compatibility: compatibilityFrom(options.compatibility),\n    explicitRebaseTo: 'rebaseTo' in options,\n    fetch: fetchFrom(options.fetch),\n    format: formatFrom(options.format),\n    inline: inlineFrom(options.inline),\n    inlineRequest: inlineRequestFrom(options.inlineRequest),\n    inlineTimeout: inlineTimeoutFrom(options.inlineTimeout),\n    level: optimizationLevelFrom(options.level),\n    plugins: pluginsFrom(options.plugins),\n    rebase: rebaseFrom(options.rebase, options.rebaseTo),\n    rebaseTo: rebaseToFrom(options.rebaseTo),\n    returnPromise: !!options.returnPromise,\n    sourceMap: !!options.sourceMap,\n    sourceMapInlineSources: !!options.sourceMapInlineSources\n  };\n};\n\n// for compatibility with optimize-css-assets-webpack-plugin\nCleanCSS.process = function(input, opts) {\n  var cleanCss;\n  var optsTo = opts.to;\n\n  delete opts.to;\n  cleanCss = new CleanCSS(Object.assign({\n    returnPromise: true, rebaseTo: optsTo\n  }, opts));\n\n  return cleanCss.minify(input)\n    .then(function(output) {\n      return { css: output.styles };\n    });\n};\n\nCleanCSS.prototype.minify = function(input, maybeSourceMap, maybeCallback) {\n  var options = this.options;\n\n  if (options.returnPromise) {\n    return new Promise(function(resolve, reject) {\n      minifyAll(input, options, maybeSourceMap, function(errors, output) {\n        return errors\n          ? reject(errors)\n          : resolve(output);\n      });\n    });\n  }\n  return minifyAll(input, options, maybeSourceMap, maybeCallback);\n};\n\nfunction minifyAll(input, options, maybeSourceMap, maybeCallback) {\n  if (options.batch && Array.isArray(input)) {\n    return minifyInBatchesFromArray(input, options, maybeSourceMap, maybeCallback);\n  } if (options.batch && (typeof input == 'object')) {\n    return minifyInBatchesFromHash(input, options, maybeSourceMap, maybeCallback);\n  }\n  return minify(input, options, maybeSourceMap, maybeCallback);\n}\n\nfunction minifyInBatchesFromArray(input, options, maybeSourceMap, maybeCallback) {\n  var callback = typeof maybeCallback == 'function'\n    ? maybeCallback\n    : (typeof maybeSourceMap == 'function' ? maybeSourceMap : null);\n  var errors = [];\n  var outputAsHash = {};\n  var inputValue;\n  var i, l;\n\n  function whenHashBatchDone(innerErrors, output) {\n    outputAsHash = Object.assign(outputAsHash, output);\n\n    if (innerErrors !== null) {\n      errors = errors.concat(innerErrors);\n    }\n  }\n\n  for (i = 0, l = input.length; i < l; i++) {\n    if (typeof input[i] == 'object') {\n      minifyInBatchesFromHash(input[i], options, whenHashBatchDone);\n    } else {\n      inputValue = input[i];\n\n      outputAsHash[inputValue] = minify([inputValue], options);\n      errors = errors.concat(outputAsHash[inputValue].errors);\n    }\n  }\n\n  return callback\n    ? callback(errors.length > 0 ? errors : null, outputAsHash)\n    : outputAsHash;\n}\n\nfunction minifyInBatchesFromHash(input, options, maybeSourceMap, maybeCallback) {\n  var callback = typeof maybeCallback == 'function'\n    ? maybeCallback\n    : (typeof maybeSourceMap == 'function' ? maybeSourceMap : null);\n  var errors = [];\n  var outputAsHash = {};\n  var inputKey;\n  var inputValue;\n\n  for (inputKey in input) {\n    inputValue = input[inputKey];\n\n    outputAsHash[inputKey] = minify(inputValue.styles, options, inputValue.sourceMap);\n    errors = errors.concat(outputAsHash[inputKey].errors);\n  }\n\n  return callback\n    ? callback(errors.length > 0 ? errors : null, outputAsHash)\n    : outputAsHash;\n}\n\nfunction minify(input, options, maybeSourceMap, maybeCallback) {\n  var sourceMap = typeof maybeSourceMap != 'function'\n    ? maybeSourceMap\n    : null;\n  var callback = typeof maybeCallback == 'function'\n    ? maybeCallback\n    : (typeof maybeSourceMap == 'function' ? maybeSourceMap : null);\n  var context = {\n    stats: {\n      efficiency: 0,\n      minifiedSize: 0,\n      originalSize: 0,\n      startedAt: Date.now(),\n      timeSpent: 0\n    },\n    cache: { specificity: {} },\n    errors: [],\n    inlinedStylesheets: [],\n    inputSourceMapTracker: inputSourceMapTracker(),\n    localOnly: !callback,\n    options: options,\n    source: null,\n    sourcesContent: {},\n    validator: validator(options.compatibility),\n    warnings: []\n  };\n  var implicitRebaseToWarning;\n\n  if (sourceMap) {\n    context.inputSourceMapTracker.track(undefined, sourceMap);\n  }\n\n  if (options.rebase && !options.explicitRebaseTo) {\n    implicitRebaseToWarning = 'You have set `rebase: true` without giving `rebaseTo` option, which, in this case, defaults to the current working directory. '\n      + 'You are then warned this can lead to unexpected URL rebasing (aka here be dragons)! '\n      + 'If you are OK with the clean-css output, then you can get rid of this warning by giving clean-css a `rebaseTo: process.cwd()` option.';\n    context.warnings.push(implicitRebaseToWarning);\n  }\n\n  return runner(context.localOnly)(function() {\n    return readSources(input, context, function(tokens) {\n      var serialize = context.options.sourceMap\n        ? serializeStylesAndSourceMap\n        : serializeStyles;\n\n      var optimizedTokens = optimize(tokens, context);\n      var optimizedStyles = serialize(optimizedTokens, context);\n      var output = withMetadata(optimizedStyles, context);\n\n      return callback\n        ? callback(context.errors.length > 0 ? context.errors : null, output)\n        : output;\n    });\n  });\n}\n\nfunction runner(localOnly) {\n  // to always execute code asynchronously when a callback is given\n  // more at blog.izs.me/post/59142742143/designing-apis-for-asynchrony\n  return localOnly\n    ? function(callback) { return callback(); }\n    : process.nextTick;\n}\n\nfunction optimize(tokens, context) {\n  var optimized = level0Optimize(tokens, context);\n\n  optimized = OptimizationLevel.One in context.options.level\n    ? level1Optimize(tokens, context)\n    : tokens;\n  optimized = OptimizationLevel.Two in context.options.level\n    ? level2Optimize(tokens, context, true)\n    : optimized;\n\n  return optimized;\n}\n\nfunction withMetadata(output, context) {\n  output.stats = calculateStatsFrom(output.styles, context);\n  output.errors = context.errors;\n  output.inlinedStylesheets = context.inlinedStylesheets;\n  output.warnings = context.warnings;\n\n  return output;\n}\n\nfunction calculateStatsFrom(styles, context) {\n  var finishedAt = Date.now();\n  var timeSpent = finishedAt - context.stats.startedAt;\n\n  delete context.stats.startedAt;\n  context.stats.timeSpent = timeSpent;\n  context.stats.efficiency = 1 - styles.length / context.stats.originalSize;\n  context.stats.minifiedSize = styles.length;\n\n  return context.stats;\n}\n", "module.exports = require('./lib/clean');\n", "/*! https://mths.be/he v1.2.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t// All astral symbols.\n\tvar regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\t// All ASCII symbols (not just printable ASCII) except those listed in the\n\t// first column of the overrides table.\n\t// https://html.spec.whatwg.org/multipage/syntax.html#table-charref-overrides\n\tvar regexAsciiWhitelist = /[\\x01-\\x7F]/g;\n\t// All BMP symbols that are not ASCII newlines, printable ASCII symbols, or\n\t// code points listed in the first column of the overrides table on\n\t// https://html.spec.whatwg.org/multipage/syntax.html#table-charref-overrides.\n\tvar regexBmpWhitelist = /[\\x01-\\t\\x0B\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g;\n\n\tvar regexEncodeNonAscii = /<\\u20D2|=\\u20E5|>\\u20D2|\\u205F\\u200A|\\u219D\\u0338|\\u2202\\u0338|\\u2220\\u20D2|\\u2229\\uFE00|\\u222A\\uFE00|\\u223C\\u20D2|\\u223D\\u0331|\\u223E\\u0333|\\u2242\\u0338|\\u224B\\u0338|\\u224D\\u20D2|\\u224E\\u0338|\\u224F\\u0338|\\u2250\\u0338|\\u2261\\u20E5|\\u2264\\u20D2|\\u2265\\u20D2|\\u2266\\u0338|\\u2267\\u0338|\\u2268\\uFE00|\\u2269\\uFE00|\\u226A\\u0338|\\u226A\\u20D2|\\u226B\\u0338|\\u226B\\u20D2|\\u227F\\u0338|\\u2282\\u20D2|\\u2283\\u20D2|\\u228A\\uFE00|\\u228B\\uFE00|\\u228F\\u0338|\\u2290\\u0338|\\u2293\\uFE00|\\u2294\\uFE00|\\u22B4\\u20D2|\\u22B5\\u20D2|\\u22D8\\u0338|\\u22D9\\u0338|\\u22DA\\uFE00|\\u22DB\\uFE00|\\u22F5\\u0338|\\u22F9\\u0338|\\u2933\\u0338|\\u29CF\\u0338|\\u29D0\\u0338|\\u2A6D\\u0338|\\u2A70\\u0338|\\u2A7D\\u0338|\\u2A7E\\u0338|\\u2AA1\\u0338|\\u2AA2\\u0338|\\u2AAC\\uFE00|\\u2AAD\\uFE00|\\u2AAF\\u0338|\\u2AB0\\u0338|\\u2AC5\\u0338|\\u2AC6\\u0338|\\u2ACB\\uFE00|\\u2ACC\\uFE00|\\u2AFD\\u20E5|[\\xA0-\\u0113\\u0116-\\u0122\\u0124-\\u012B\\u012E-\\u014D\\u0150-\\u017E\\u0192\\u01B5\\u01F5\\u0237\\u02C6\\u02C7\\u02D8-\\u02DD\\u0311\\u0391-\\u03A1\\u03A3-\\u03A9\\u03B1-\\u03C9\\u03D1\\u03D2\\u03D5\\u03D6\\u03DC\\u03DD\\u03F0\\u03F1\\u03F5\\u03F6\\u0401-\\u040C\\u040E-\\u044F\\u0451-\\u045C\\u045E\\u045F\\u2002-\\u2005\\u2007-\\u2010\\u2013-\\u2016\\u2018-\\u201A\\u201C-\\u201E\\u2020-\\u2022\\u2025\\u2026\\u2030-\\u2035\\u2039\\u203A\\u203E\\u2041\\u2043\\u2044\\u204F\\u2057\\u205F-\\u2063\\u20AC\\u20DB\\u20DC\\u2102\\u2105\\u210A-\\u2113\\u2115-\\u211E\\u2122\\u2124\\u2127-\\u2129\\u212C\\u212D\\u212F-\\u2131\\u2133-\\u2138\\u2145-\\u2148\\u2153-\\u215E\\u2190-\\u219B\\u219D-\\u21A7\\u21A9-\\u21AE\\u21B0-\\u21B3\\u21B5-\\u21B7\\u21BA-\\u21DB\\u21DD\\u21E4\\u21E5\\u21F5\\u21FD-\\u2205\\u2207-\\u2209\\u220B\\u220C\\u220F-\\u2214\\u2216-\\u2218\\u221A\\u221D-\\u2238\\u223A-\\u2257\\u2259\\u225A\\u225C\\u225F-\\u2262\\u2264-\\u228B\\u228D-\\u229B\\u229D-\\u22A5\\u22A7-\\u22B0\\u22B2-\\u22BB\\u22BD-\\u22DB\\u22DE-\\u22E3\\u22E6-\\u22F7\\u22F9-\\u22FE\\u2305\\u2306\\u2308-\\u2310\\u2312\\u2313\\u2315\\u2316\\u231C-\\u231F\\u2322\\u2323\\u232D\\u232E\\u2336\\u233D\\u233F\\u237C\\u23B0\\u23B1\\u23B4-\\u23B6\\u23DC-\\u23DF\\u23E2\\u23E7\\u2423\\u24C8\\u2500\\u2502\\u250C\\u2510\\u2514\\u2518\\u251C\\u2524\\u252C\\u2534\\u253C\\u2550-\\u256C\\u2580\\u2584\\u2588\\u2591-\\u2593\\u25A1\\u25AA\\u25AB\\u25AD\\u25AE\\u25B1\\u25B3-\\u25B5\\u25B8\\u25B9\\u25BD-\\u25BF\\u25C2\\u25C3\\u25CA\\u25CB\\u25EC\\u25EF\\u25F8-\\u25FC\\u2605\\u2606\\u260E\\u2640\\u2642\\u2660\\u2663\\u2665\\u2666\\u266A\\u266D-\\u266F\\u2713\\u2717\\u2720\\u2736\\u2758\\u2772\\u2773\\u27C8\\u27C9\\u27E6-\\u27ED\\u27F5-\\u27FA\\u27FC\\u27FF\\u2902-\\u2905\\u290C-\\u2913\\u2916\\u2919-\\u2920\\u2923-\\u292A\\u2933\\u2935-\\u2939\\u293C\\u293D\\u2945\\u2948-\\u294B\\u294E-\\u2976\\u2978\\u2979\\u297B-\\u297F\\u2985\\u2986\\u298B-\\u2996\\u299A\\u299C\\u299D\\u29A4-\\u29B7\\u29B9\\u29BB\\u29BC\\u29BE-\\u29C5\\u29C9\\u29CD-\\u29D0\\u29DC-\\u29DE\\u29E3-\\u29E5\\u29EB\\u29F4\\u29F6\\u2A00-\\u2A02\\u2A04\\u2A06\\u2A0C\\u2A0D\\u2A10-\\u2A17\\u2A22-\\u2A27\\u2A29\\u2A2A\\u2A2D-\\u2A31\\u2A33-\\u2A3C\\u2A3F\\u2A40\\u2A42-\\u2A4D\\u2A50\\u2A53-\\u2A58\\u2A5A-\\u2A5D\\u2A5F\\u2A66\\u2A6A\\u2A6D-\\u2A75\\u2A77-\\u2A9A\\u2A9D-\\u2AA2\\u2AA4-\\u2AB0\\u2AB3-\\u2AC8\\u2ACB\\u2ACC\\u2ACF-\\u2ADB\\u2AE4\\u2AE6-\\u2AE9\\u2AEB-\\u2AF3\\u2AFD\\uFB00-\\uFB04]|\\uD835[\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDD6B]/g;\n\tvar encodeMap = {'\\xAD':'shy','\\u200C':'zwnj','\\u200D':'zwj','\\u200E':'lrm','\\u2063':'ic','\\u2062':'it','\\u2061':'af','\\u200F':'rlm','\\u200B':'ZeroWidthSpace','\\u2060':'NoBreak','\\u0311':'DownBreve','\\u20DB':'tdot','\\u20DC':'DotDot','\\t':'Tab','\\n':'NewLine','\\u2008':'puncsp','\\u205F':'MediumSpace','\\u2009':'thinsp','\\u200A':'hairsp','\\u2004':'emsp13','\\u2002':'ensp','\\u2005':'emsp14','\\u2003':'emsp','\\u2007':'numsp','\\xA0':'nbsp','\\u205F\\u200A':'ThickSpace','\\u203E':'oline','_':'lowbar','\\u2010':'dash','\\u2013':'ndash','\\u2014':'mdash','\\u2015':'horbar',',':'comma',';':'semi','\\u204F':'bsemi',':':'colon','\\u2A74':'Colone','!':'excl','\\xA1':'iexcl','?':'quest','\\xBF':'iquest','.':'period','\\u2025':'nldr','\\u2026':'mldr','\\xB7':'middot','\\'':'apos','\\u2018':'lsquo','\\u2019':'rsquo','\\u201A':'sbquo','\\u2039':'lsaquo','\\u203A':'rsaquo','\"':'quot','\\u201C':'ldquo','\\u201D':'rdquo','\\u201E':'bdquo','\\xAB':'laquo','\\xBB':'raquo','(':'lpar',')':'rpar','[':'lsqb',']':'rsqb','{':'lcub','}':'rcub','\\u2308':'lceil','\\u2309':'rceil','\\u230A':'lfloor','\\u230B':'rfloor','\\u2985':'lopar','\\u2986':'ropar','\\u298B':'lbrke','\\u298C':'rbrke','\\u298D':'lbrkslu','\\u298E':'rbrksld','\\u298F':'lbrksld','\\u2990':'rbrkslu','\\u2991':'langd','\\u2992':'rangd','\\u2993':'lparlt','\\u2994':'rpargt','\\u2995':'gtlPar','\\u2996':'ltrPar','\\u27E6':'lobrk','\\u27E7':'robrk','\\u27E8':'lang','\\u27E9':'rang','\\u27EA':'Lang','\\u27EB':'Rang','\\u27EC':'loang','\\u27ED':'roang','\\u2772':'lbbrk','\\u2773':'rbbrk','\\u2016':'Vert','\\xA7':'sect','\\xB6':'para','@':'commat','*':'ast','/':'sol','undefined':null,'&':'amp','#':'num','%':'percnt','\\u2030':'permil','\\u2031':'pertenk','\\u2020':'dagger','\\u2021':'Dagger','\\u2022':'bull','\\u2043':'hybull','\\u2032':'prime','\\u2033':'Prime','\\u2034':'tprime','\\u2057':'qprime','\\u2035':'bprime','\\u2041':'caret','`':'grave','\\xB4':'acute','\\u02DC':'tilde','^':'Hat','\\xAF':'macr','\\u02D8':'breve','\\u02D9':'dot','\\xA8':'die','\\u02DA':'ring','\\u02DD':'dblac','\\xB8':'cedil','\\u02DB':'ogon','\\u02C6':'circ','\\u02C7':'caron','\\xB0':'deg','\\xA9':'copy','\\xAE':'reg','\\u2117':'copysr','\\u2118':'wp','\\u211E':'rx','\\u2127':'mho','\\u2129':'iiota','\\u2190':'larr','\\u219A':'nlarr','\\u2192':'rarr','\\u219B':'nrarr','\\u2191':'uarr','\\u2193':'darr','\\u2194':'harr','\\u21AE':'nharr','\\u2195':'varr','\\u2196':'nwarr','\\u2197':'nearr','\\u2198':'searr','\\u2199':'swarr','\\u219D':'rarrw','\\u219D\\u0338':'nrarrw','\\u219E':'Larr','\\u219F':'Uarr','\\u21A0':'Rarr','\\u21A1':'Darr','\\u21A2':'larrtl','\\u21A3':'rarrtl','\\u21A4':'mapstoleft','\\u21A5':'mapstoup','\\u21A6':'map','\\u21A7':'mapstodown','\\u21A9':'larrhk','\\u21AA':'rarrhk','\\u21AB':'larrlp','\\u21AC':'rarrlp','\\u21AD':'harrw','\\u21B0':'lsh','\\u21B1':'rsh','\\u21B2':'ldsh','\\u21B3':'rdsh','\\u21B5':'crarr','\\u21B6':'cularr','\\u21B7':'curarr','\\u21BA':'olarr','\\u21BB':'orarr','\\u21BC':'lharu','\\u21BD':'lhard','\\u21BE':'uharr','\\u21BF':'uharl','\\u21C0':'rharu','\\u21C1':'rhard','\\u21C2':'dharr','\\u21C3':'dharl','\\u21C4':'rlarr','\\u21C5':'udarr','\\u21C6':'lrarr','\\u21C7':'llarr','\\u21C8':'uuarr','\\u21C9':'rrarr','\\u21CA':'ddarr','\\u21CB':'lrhar','\\u21CC':'rlhar','\\u21D0':'lArr','\\u21CD':'nlArr','\\u21D1':'uArr','\\u21D2':'rArr','\\u21CF':'nrArr','\\u21D3':'dArr','\\u21D4':'iff','\\u21CE':'nhArr','\\u21D5':'vArr','\\u21D6':'nwArr','\\u21D7':'neArr','\\u21D8':'seArr','\\u21D9':'swArr','\\u21DA':'lAarr','\\u21DB':'rAarr','\\u21DD':'zigrarr','\\u21E4':'larrb','\\u21E5':'rarrb','\\u21F5':'duarr','\\u21FD':'loarr','\\u21FE':'roarr','\\u21FF':'hoarr','\\u2200':'forall','\\u2201':'comp','\\u2202':'part','\\u2202\\u0338':'npart','\\u2203':'exist','\\u2204':'nexist','\\u2205':'empty','\\u2207':'Del','\\u2208':'in','\\u2209':'notin','\\u220B':'ni','\\u220C':'notni','\\u03F6':'bepsi','\\u220F':'prod','\\u2210':'coprod','\\u2211':'sum','+':'plus','\\xB1':'pm','\\xF7':'div','\\xD7':'times','<':'lt','\\u226E':'nlt','<\\u20D2':'nvlt','=':'equals','\\u2260':'ne','=\\u20E5':'bne','\\u2A75':'Equal','>':'gt','\\u226F':'ngt','>\\u20D2':'nvgt','\\xAC':'not','|':'vert','\\xA6':'brvbar','\\u2212':'minus','\\u2213':'mp','\\u2214':'plusdo','\\u2044':'frasl','\\u2216':'setmn','\\u2217':'lowast','\\u2218':'compfn','\\u221A':'Sqrt','\\u221D':'prop','\\u221E':'infin','\\u221F':'angrt','\\u2220':'ang','\\u2220\\u20D2':'nang','\\u2221':'angmsd','\\u2222':'angsph','\\u2223':'mid','\\u2224':'nmid','\\u2225':'par','\\u2226':'npar','\\u2227':'and','\\u2228':'or','\\u2229':'cap','\\u2229\\uFE00':'caps','\\u222A':'cup','\\u222A\\uFE00':'cups','\\u222B':'int','\\u222C':'Int','\\u222D':'tint','\\u2A0C':'qint','\\u222E':'oint','\\u222F':'Conint','\\u2230':'Cconint','\\u2231':'cwint','\\u2232':'cwconint','\\u2233':'awconint','\\u2234':'there4','\\u2235':'becaus','\\u2236':'ratio','\\u2237':'Colon','\\u2238':'minusd','\\u223A':'mDDot','\\u223B':'homtht','\\u223C':'sim','\\u2241':'nsim','\\u223C\\u20D2':'nvsim','\\u223D':'bsim','\\u223D\\u0331':'race','\\u223E':'ac','\\u223E\\u0333':'acE','\\u223F':'acd','\\u2240':'wr','\\u2242':'esim','\\u2242\\u0338':'nesim','\\u2243':'sime','\\u2244':'nsime','\\u2245':'cong','\\u2247':'ncong','\\u2246':'simne','\\u2248':'ap','\\u2249':'nap','\\u224A':'ape','\\u224B':'apid','\\u224B\\u0338':'napid','\\u224C':'bcong','\\u224D':'CupCap','\\u226D':'NotCupCap','\\u224D\\u20D2':'nvap','\\u224E':'bump','\\u224E\\u0338':'nbump','\\u224F':'bumpe','\\u224F\\u0338':'nbumpe','\\u2250':'doteq','\\u2250\\u0338':'nedot','\\u2251':'eDot','\\u2252':'efDot','\\u2253':'erDot','\\u2254':'colone','\\u2255':'ecolon','\\u2256':'ecir','\\u2257':'cire','\\u2259':'wedgeq','\\u225A':'veeeq','\\u225C':'trie','\\u225F':'equest','\\u2261':'equiv','\\u2262':'nequiv','\\u2261\\u20E5':'bnequiv','\\u2264':'le','\\u2270':'nle','\\u2264\\u20D2':'nvle','\\u2265':'ge','\\u2271':'nge','\\u2265\\u20D2':'nvge','\\u2266':'lE','\\u2266\\u0338':'nlE','\\u2267':'gE','\\u2267\\u0338':'ngE','\\u2268\\uFE00':'lvnE','\\u2268':'lnE','\\u2269':'gnE','\\u2269\\uFE00':'gvnE','\\u226A':'ll','\\u226A\\u0338':'nLtv','\\u226A\\u20D2':'nLt','\\u226B':'gg','\\u226B\\u0338':'nGtv','\\u226B\\u20D2':'nGt','\\u226C':'twixt','\\u2272':'lsim','\\u2274':'nlsim','\\u2273':'gsim','\\u2275':'ngsim','\\u2276':'lg','\\u2278':'ntlg','\\u2277':'gl','\\u2279':'ntgl','\\u227A':'pr','\\u2280':'npr','\\u227B':'sc','\\u2281':'nsc','\\u227C':'prcue','\\u22E0':'nprcue','\\u227D':'sccue','\\u22E1':'nsccue','\\u227E':'prsim','\\u227F':'scsim','\\u227F\\u0338':'NotSucceedsTilde','\\u2282':'sub','\\u2284':'nsub','\\u2282\\u20D2':'vnsub','\\u2283':'sup','\\u2285':'nsup','\\u2283\\u20D2':'vnsup','\\u2286':'sube','\\u2288':'nsube','\\u2287':'supe','\\u2289':'nsupe','\\u228A\\uFE00':'vsubne','\\u228A':'subne','\\u228B\\uFE00':'vsupne','\\u228B':'supne','\\u228D':'cupdot','\\u228E':'uplus','\\u228F':'sqsub','\\u228F\\u0338':'NotSquareSubset','\\u2290':'sqsup','\\u2290\\u0338':'NotSquareSuperset','\\u2291':'sqsube','\\u22E2':'nsqsube','\\u2292':'sqsupe','\\u22E3':'nsqsupe','\\u2293':'sqcap','\\u2293\\uFE00':'sqcaps','\\u2294':'sqcup','\\u2294\\uFE00':'sqcups','\\u2295':'oplus','\\u2296':'ominus','\\u2297':'otimes','\\u2298':'osol','\\u2299':'odot','\\u229A':'ocir','\\u229B':'oast','\\u229D':'odash','\\u229E':'plusb','\\u229F':'minusb','\\u22A0':'timesb','\\u22A1':'sdotb','\\u22A2':'vdash','\\u22AC':'nvdash','\\u22A3':'dashv','\\u22A4':'top','\\u22A5':'bot','\\u22A7':'models','\\u22A8':'vDash','\\u22AD':'nvDash','\\u22A9':'Vdash','\\u22AE':'nVdash','\\u22AA':'Vvdash','\\u22AB':'VDash','\\u22AF':'nVDash','\\u22B0':'prurel','\\u22B2':'vltri','\\u22EA':'nltri','\\u22B3':'vrtri','\\u22EB':'nrtri','\\u22B4':'ltrie','\\u22EC':'nltrie','\\u22B4\\u20D2':'nvltrie','\\u22B5':'rtrie','\\u22ED':'nrtrie','\\u22B5\\u20D2':'nvrtrie','\\u22B6':'origof','\\u22B7':'imof','\\u22B8':'mumap','\\u22B9':'hercon','\\u22BA':'intcal','\\u22BB':'veebar','\\u22BD':'barvee','\\u22BE':'angrtvb','\\u22BF':'lrtri','\\u22C0':'Wedge','\\u22C1':'Vee','\\u22C2':'xcap','\\u22C3':'xcup','\\u22C4':'diam','\\u22C5':'sdot','\\u22C6':'Star','\\u22C7':'divonx','\\u22C8':'bowtie','\\u22C9':'ltimes','\\u22CA':'rtimes','\\u22CB':'lthree','\\u22CC':'rthree','\\u22CD':'bsime','\\u22CE':'cuvee','\\u22CF':'cuwed','\\u22D0':'Sub','\\u22D1':'Sup','\\u22D2':'Cap','\\u22D3':'Cup','\\u22D4':'fork','\\u22D5':'epar','\\u22D6':'ltdot','\\u22D7':'gtdot','\\u22D8':'Ll','\\u22D8\\u0338':'nLl','\\u22D9':'Gg','\\u22D9\\u0338':'nGg','\\u22DA\\uFE00':'lesg','\\u22DA':'leg','\\u22DB':'gel','\\u22DB\\uFE00':'gesl','\\u22DE':'cuepr','\\u22DF':'cuesc','\\u22E6':'lnsim','\\u22E7':'gnsim','\\u22E8':'prnsim','\\u22E9':'scnsim','\\u22EE':'vellip','\\u22EF':'ctdot','\\u22F0':'utdot','\\u22F1':'dtdot','\\u22F2':'disin','\\u22F3':'isinsv','\\u22F4':'isins','\\u22F5':'isindot','\\u22F5\\u0338':'notindot','\\u22F6':'notinvc','\\u22F7':'notinvb','\\u22F9':'isinE','\\u22F9\\u0338':'notinE','\\u22FA':'nisd','\\u22FB':'xnis','\\u22FC':'nis','\\u22FD':'notnivc','\\u22FE':'notnivb','\\u2305':'barwed','\\u2306':'Barwed','\\u230C':'drcrop','\\u230D':'dlcrop','\\u230E':'urcrop','\\u230F':'ulcrop','\\u2310':'bnot','\\u2312':'profline','\\u2313':'profsurf','\\u2315':'telrec','\\u2316':'target','\\u231C':'ulcorn','\\u231D':'urcorn','\\u231E':'dlcorn','\\u231F':'drcorn','\\u2322':'frown','\\u2323':'smile','\\u232D':'cylcty','\\u232E':'profalar','\\u2336':'topbot','\\u233D':'ovbar','\\u233F':'solbar','\\u237C':'angzarr','\\u23B0':'lmoust','\\u23B1':'rmoust','\\u23B4':'tbrk','\\u23B5':'bbrk','\\u23B6':'bbrktbrk','\\u23DC':'OverParenthesis','\\u23DD':'UnderParenthesis','\\u23DE':'OverBrace','\\u23DF':'UnderBrace','\\u23E2':'trpezium','\\u23E7':'elinters','\\u2423':'blank','\\u2500':'boxh','\\u2502':'boxv','\\u250C':'boxdr','\\u2510':'boxdl','\\u2514':'boxur','\\u2518':'boxul','\\u251C':'boxvr','\\u2524':'boxvl','\\u252C':'boxhd','\\u2534':'boxhu','\\u253C':'boxvh','\\u2550':'boxH','\\u2551':'boxV','\\u2552':'boxdR','\\u2553':'boxDr','\\u2554':'boxDR','\\u2555':'boxdL','\\u2556':'boxDl','\\u2557':'boxDL','\\u2558':'boxuR','\\u2559':'boxUr','\\u255A':'boxUR','\\u255B':'boxuL','\\u255C':'boxUl','\\u255D':'boxUL','\\u255E':'boxvR','\\u255F':'boxVr','\\u2560':'boxVR','\\u2561':'boxvL','\\u2562':'boxVl','\\u2563':'boxVL','\\u2564':'boxHd','\\u2565':'boxhD','\\u2566':'boxHD','\\u2567':'boxHu','\\u2568':'boxhU','\\u2569':'boxHU','\\u256A':'boxvH','\\u256B':'boxVh','\\u256C':'boxVH','\\u2580':'uhblk','\\u2584':'lhblk','\\u2588':'block','\\u2591':'blk14','\\u2592':'blk12','\\u2593':'blk34','\\u25A1':'squ','\\u25AA':'squf','\\u25AB':'EmptyVerySmallSquare','\\u25AD':'rect','\\u25AE':'marker','\\u25B1':'fltns','\\u25B3':'xutri','\\u25B4':'utrif','\\u25B5':'utri','\\u25B8':'rtrif','\\u25B9':'rtri','\\u25BD':'xdtri','\\u25BE':'dtrif','\\u25BF':'dtri','\\u25C2':'ltrif','\\u25C3':'ltri','\\u25CA':'loz','\\u25CB':'cir','\\u25EC':'tridot','\\u25EF':'xcirc','\\u25F8':'ultri','\\u25F9':'urtri','\\u25FA':'lltri','\\u25FB':'EmptySmallSquare','\\u25FC':'FilledSmallSquare','\\u2605':'starf','\\u2606':'star','\\u260E':'phone','\\u2640':'female','\\u2642':'male','\\u2660':'spades','\\u2663':'clubs','\\u2665':'hearts','\\u2666':'diams','\\u266A':'sung','\\u2713':'check','\\u2717':'cross','\\u2720':'malt','\\u2736':'sext','\\u2758':'VerticalSeparator','\\u27C8':'bsolhsub','\\u27C9':'suphsol','\\u27F5':'xlarr','\\u27F6':'xrarr','\\u27F7':'xharr','\\u27F8':'xlArr','\\u27F9':'xrArr','\\u27FA':'xhArr','\\u27FC':'xmap','\\u27FF':'dzigrarr','\\u2902':'nvlArr','\\u2903':'nvrArr','\\u2904':'nvHarr','\\u2905':'Map','\\u290C':'lbarr','\\u290D':'rbarr','\\u290E':'lBarr','\\u290F':'rBarr','\\u2910':'RBarr','\\u2911':'DDotrahd','\\u2912':'UpArrowBar','\\u2913':'DownArrowBar','\\u2916':'Rarrtl','\\u2919':'latail','\\u291A':'ratail','\\u291B':'lAtail','\\u291C':'rAtail','\\u291D':'larrfs','\\u291E':'rarrfs','\\u291F':'larrbfs','\\u2920':'rarrbfs','\\u2923':'nwarhk','\\u2924':'nearhk','\\u2925':'searhk','\\u2926':'swarhk','\\u2927':'nwnear','\\u2928':'toea','\\u2929':'tosa','\\u292A':'swnwar','\\u2933':'rarrc','\\u2933\\u0338':'nrarrc','\\u2935':'cudarrr','\\u2936':'ldca','\\u2937':'rdca','\\u2938':'cudarrl','\\u2939':'larrpl','\\u293C':'curarrm','\\u293D':'cularrp','\\u2945':'rarrpl','\\u2948':'harrcir','\\u2949':'Uarrocir','\\u294A':'lurdshar','\\u294B':'ldrushar','\\u294E':'LeftRightVector','\\u294F':'RightUpDownVector','\\u2950':'DownLeftRightVector','\\u2951':'LeftUpDownVector','\\u2952':'LeftVectorBar','\\u2953':'RightVectorBar','\\u2954':'RightUpVectorBar','\\u2955':'RightDownVectorBar','\\u2956':'DownLeftVectorBar','\\u2957':'DownRightVectorBar','\\u2958':'LeftUpVectorBar','\\u2959':'LeftDownVectorBar','\\u295A':'LeftTeeVector','\\u295B':'RightTeeVector','\\u295C':'RightUpTeeVector','\\u295D':'RightDownTeeVector','\\u295E':'DownLeftTeeVector','\\u295F':'DownRightTeeVector','\\u2960':'LeftUpTeeVector','\\u2961':'LeftDownTeeVector','\\u2962':'lHar','\\u2963':'uHar','\\u2964':'rHar','\\u2965':'dHar','\\u2966':'luruhar','\\u2967':'ldrdhar','\\u2968':'ruluhar','\\u2969':'rdldhar','\\u296A':'lharul','\\u296B':'llhard','\\u296C':'rharul','\\u296D':'lrhard','\\u296E':'udhar','\\u296F':'duhar','\\u2970':'RoundImplies','\\u2971':'erarr','\\u2972':'simrarr','\\u2973':'larrsim','\\u2974':'rarrsim','\\u2975':'rarrap','\\u2976':'ltlarr','\\u2978':'gtrarr','\\u2979':'subrarr','\\u297B':'suplarr','\\u297C':'lfisht','\\u297D':'rfisht','\\u297E':'ufisht','\\u297F':'dfisht','\\u299A':'vzigzag','\\u299C':'vangrt','\\u299D':'angrtvbd','\\u29A4':'ange','\\u29A5':'range','\\u29A6':'dwangle','\\u29A7':'uwangle','\\u29A8':'angmsdaa','\\u29A9':'angmsdab','\\u29AA':'angmsdac','\\u29AB':'angmsdad','\\u29AC':'angmsdae','\\u29AD':'angmsdaf','\\u29AE':'angmsdag','\\u29AF':'angmsdah','\\u29B0':'bemptyv','\\u29B1':'demptyv','\\u29B2':'cemptyv','\\u29B3':'raemptyv','\\u29B4':'laemptyv','\\u29B5':'ohbar','\\u29B6':'omid','\\u29B7':'opar','\\u29B9':'operp','\\u29BB':'olcross','\\u29BC':'odsold','\\u29BE':'olcir','\\u29BF':'ofcir','\\u29C0':'olt','\\u29C1':'ogt','\\u29C2':'cirscir','\\u29C3':'cirE','\\u29C4':'solb','\\u29C5':'bsolb','\\u29C9':'boxbox','\\u29CD':'trisb','\\u29CE':'rtriltri','\\u29CF':'LeftTriangleBar','\\u29CF\\u0338':'NotLeftTriangleBar','\\u29D0':'RightTriangleBar','\\u29D0\\u0338':'NotRightTriangleBar','\\u29DC':'iinfin','\\u29DD':'infintie','\\u29DE':'nvinfin','\\u29E3':'eparsl','\\u29E4':'smeparsl','\\u29E5':'eqvparsl','\\u29EB':'lozf','\\u29F4':'RuleDelayed','\\u29F6':'dsol','\\u2A00':'xodot','\\u2A01':'xoplus','\\u2A02':'xotime','\\u2A04':'xuplus','\\u2A06':'xsqcup','\\u2A0D':'fpartint','\\u2A10':'cirfnint','\\u2A11':'awint','\\u2A12':'rppolint','\\u2A13':'scpolint','\\u2A14':'npolint','\\u2A15':'pointint','\\u2A16':'quatint','\\u2A17':'intlarhk','\\u2A22':'pluscir','\\u2A23':'plusacir','\\u2A24':'simplus','\\u2A25':'plusdu','\\u2A26':'plussim','\\u2A27':'plustwo','\\u2A29':'mcomma','\\u2A2A':'minusdu','\\u2A2D':'loplus','\\u2A2E':'roplus','\\u2A2F':'Cross','\\u2A30':'timesd','\\u2A31':'timesbar','\\u2A33':'smashp','\\u2A34':'lotimes','\\u2A35':'rotimes','\\u2A36':'otimesas','\\u2A37':'Otimes','\\u2A38':'odiv','\\u2A39':'triplus','\\u2A3A':'triminus','\\u2A3B':'tritime','\\u2A3C':'iprod','\\u2A3F':'amalg','\\u2A40':'capdot','\\u2A42':'ncup','\\u2A43':'ncap','\\u2A44':'capand','\\u2A45':'cupor','\\u2A46':'cupcap','\\u2A47':'capcup','\\u2A48':'cupbrcap','\\u2A49':'capbrcup','\\u2A4A':'cupcup','\\u2A4B':'capcap','\\u2A4C':'ccups','\\u2A4D':'ccaps','\\u2A50':'ccupssm','\\u2A53':'And','\\u2A54':'Or','\\u2A55':'andand','\\u2A56':'oror','\\u2A57':'orslope','\\u2A58':'andslope','\\u2A5A':'andv','\\u2A5B':'orv','\\u2A5C':'andd','\\u2A5D':'ord','\\u2A5F':'wedbar','\\u2A66':'sdote','\\u2A6A':'simdot','\\u2A6D':'congdot','\\u2A6D\\u0338':'ncongdot','\\u2A6E':'easter','\\u2A6F':'apacir','\\u2A70':'apE','\\u2A70\\u0338':'napE','\\u2A71':'eplus','\\u2A72':'pluse','\\u2A73':'Esim','\\u2A77':'eDDot','\\u2A78':'equivDD','\\u2A79':'ltcir','\\u2A7A':'gtcir','\\u2A7B':'ltquest','\\u2A7C':'gtquest','\\u2A7D':'les','\\u2A7D\\u0338':'nles','\\u2A7E':'ges','\\u2A7E\\u0338':'nges','\\u2A7F':'lesdot','\\u2A80':'gesdot','\\u2A81':'lesdoto','\\u2A82':'gesdoto','\\u2A83':'lesdotor','\\u2A84':'gesdotol','\\u2A85':'lap','\\u2A86':'gap','\\u2A87':'lne','\\u2A88':'gne','\\u2A89':'lnap','\\u2A8A':'gnap','\\u2A8B':'lEg','\\u2A8C':'gEl','\\u2A8D':'lsime','\\u2A8E':'gsime','\\u2A8F':'lsimg','\\u2A90':'gsiml','\\u2A91':'lgE','\\u2A92':'glE','\\u2A93':'lesges','\\u2A94':'gesles','\\u2A95':'els','\\u2A96':'egs','\\u2A97':'elsdot','\\u2A98':'egsdot','\\u2A99':'el','\\u2A9A':'eg','\\u2A9D':'siml','\\u2A9E':'simg','\\u2A9F':'simlE','\\u2AA0':'simgE','\\u2AA1':'LessLess','\\u2AA1\\u0338':'NotNestedLessLess','\\u2AA2':'GreaterGreater','\\u2AA2\\u0338':'NotNestedGreaterGreater','\\u2AA4':'glj','\\u2AA5':'gla','\\u2AA6':'ltcc','\\u2AA7':'gtcc','\\u2AA8':'lescc','\\u2AA9':'gescc','\\u2AAA':'smt','\\u2AAB':'lat','\\u2AAC':'smte','\\u2AAC\\uFE00':'smtes','\\u2AAD':'late','\\u2AAD\\uFE00':'lates','\\u2AAE':'bumpE','\\u2AAF':'pre','\\u2AAF\\u0338':'npre','\\u2AB0':'sce','\\u2AB0\\u0338':'nsce','\\u2AB3':'prE','\\u2AB4':'scE','\\u2AB5':'prnE','\\u2AB6':'scnE','\\u2AB7':'prap','\\u2AB8':'scap','\\u2AB9':'prnap','\\u2ABA':'scnap','\\u2ABB':'Pr','\\u2ABC':'Sc','\\u2ABD':'subdot','\\u2ABE':'supdot','\\u2ABF':'subplus','\\u2AC0':'supplus','\\u2AC1':'submult','\\u2AC2':'supmult','\\u2AC3':'subedot','\\u2AC4':'supedot','\\u2AC5':'subE','\\u2AC5\\u0338':'nsubE','\\u2AC6':'supE','\\u2AC6\\u0338':'nsupE','\\u2AC7':'subsim','\\u2AC8':'supsim','\\u2ACB\\uFE00':'vsubnE','\\u2ACB':'subnE','\\u2ACC\\uFE00':'vsupnE','\\u2ACC':'supnE','\\u2ACF':'csub','\\u2AD0':'csup','\\u2AD1':'csube','\\u2AD2':'csupe','\\u2AD3':'subsup','\\u2AD4':'supsub','\\u2AD5':'subsub','\\u2AD6':'supsup','\\u2AD7':'suphsub','\\u2AD8':'supdsub','\\u2AD9':'forkv','\\u2ADA':'topfork','\\u2ADB':'mlcp','\\u2AE4':'Dashv','\\u2AE6':'Vdashl','\\u2AE7':'Barv','\\u2AE8':'vBar','\\u2AE9':'vBarv','\\u2AEB':'Vbar','\\u2AEC':'Not','\\u2AED':'bNot','\\u2AEE':'rnmid','\\u2AEF':'cirmid','\\u2AF0':'midcir','\\u2AF1':'topcir','\\u2AF2':'nhpar','\\u2AF3':'parsim','\\u2AFD':'parsl','\\u2AFD\\u20E5':'nparsl','\\u266D':'flat','\\u266E':'natur','\\u266F':'sharp','\\xA4':'curren','\\xA2':'cent','$':'dollar','\\xA3':'pound','\\xA5':'yen','\\u20AC':'euro','\\xB9':'sup1','\\xBD':'half','\\u2153':'frac13','\\xBC':'frac14','\\u2155':'frac15','\\u2159':'frac16','\\u215B':'frac18','\\xB2':'sup2','\\u2154':'frac23','\\u2156':'frac25','\\xB3':'sup3','\\xBE':'frac34','\\u2157':'frac35','\\u215C':'frac38','\\u2158':'frac45','\\u215A':'frac56','\\u215D':'frac58','\\u215E':'frac78','\\uD835\\uDCB6':'ascr','\\uD835\\uDD52':'aopf','\\uD835\\uDD1E':'afr','\\uD835\\uDD38':'Aopf','\\uD835\\uDD04':'Afr','\\uD835\\uDC9C':'Ascr','\\xAA':'ordf','\\xE1':'aacute','\\xC1':'Aacute','\\xE0':'agrave','\\xC0':'Agrave','\\u0103':'abreve','\\u0102':'Abreve','\\xE2':'acirc','\\xC2':'Acirc','\\xE5':'aring','\\xC5':'angst','\\xE4':'auml','\\xC4':'Auml','\\xE3':'atilde','\\xC3':'Atilde','\\u0105':'aogon','\\u0104':'Aogon','\\u0101':'amacr','\\u0100':'Amacr','\\xE6':'aelig','\\xC6':'AElig','\\uD835\\uDCB7':'bscr','\\uD835\\uDD53':'bopf','\\uD835\\uDD1F':'bfr','\\uD835\\uDD39':'Bopf','\\u212C':'Bscr','\\uD835\\uDD05':'Bfr','\\uD835\\uDD20':'cfr','\\uD835\\uDCB8':'cscr','\\uD835\\uDD54':'copf','\\u212D':'Cfr','\\uD835\\uDC9E':'Cscr','\\u2102':'Copf','\\u0107':'cacute','\\u0106':'Cacute','\\u0109':'ccirc','\\u0108':'Ccirc','\\u010D':'ccaron','\\u010C':'Ccaron','\\u010B':'cdot','\\u010A':'Cdot','\\xE7':'ccedil','\\xC7':'Ccedil','\\u2105':'incare','\\uD835\\uDD21':'dfr','\\u2146':'dd','\\uD835\\uDD55':'dopf','\\uD835\\uDCB9':'dscr','\\uD835\\uDC9F':'Dscr','\\uD835\\uDD07':'Dfr','\\u2145':'DD','\\uD835\\uDD3B':'Dopf','\\u010F':'dcaron','\\u010E':'Dcaron','\\u0111':'dstrok','\\u0110':'Dstrok','\\xF0':'eth','\\xD0':'ETH','\\u2147':'ee','\\u212F':'escr','\\uD835\\uDD22':'efr','\\uD835\\uDD56':'eopf','\\u2130':'Escr','\\uD835\\uDD08':'Efr','\\uD835\\uDD3C':'Eopf','\\xE9':'eacute','\\xC9':'Eacute','\\xE8':'egrave','\\xC8':'Egrave','\\xEA':'ecirc','\\xCA':'Ecirc','\\u011B':'ecaron','\\u011A':'Ecaron','\\xEB':'euml','\\xCB':'Euml','\\u0117':'edot','\\u0116':'Edot','\\u0119':'eogon','\\u0118':'Eogon','\\u0113':'emacr','\\u0112':'Emacr','\\uD835\\uDD23':'ffr','\\uD835\\uDD57':'fopf','\\uD835\\uDCBB':'fscr','\\uD835\\uDD09':'Ffr','\\uD835\\uDD3D':'Fopf','\\u2131':'Fscr','\\uFB00':'fflig','\\uFB03':'ffilig','\\uFB04':'ffllig','\\uFB01':'filig','fj':'fjlig','\\uFB02':'fllig','\\u0192':'fnof','\\u210A':'gscr','\\uD835\\uDD58':'gopf','\\uD835\\uDD24':'gfr','\\uD835\\uDCA2':'Gscr','\\uD835\\uDD3E':'Gopf','\\uD835\\uDD0A':'Gfr','\\u01F5':'gacute','\\u011F':'gbreve','\\u011E':'Gbreve','\\u011D':'gcirc','\\u011C':'Gcirc','\\u0121':'gdot','\\u0120':'Gdot','\\u0122':'Gcedil','\\uD835\\uDD25':'hfr','\\u210E':'planckh','\\uD835\\uDCBD':'hscr','\\uD835\\uDD59':'hopf','\\u210B':'Hscr','\\u210C':'Hfr','\\u210D':'Hopf','\\u0125':'hcirc','\\u0124':'Hcirc','\\u210F':'hbar','\\u0127':'hstrok','\\u0126':'Hstrok','\\uD835\\uDD5A':'iopf','\\uD835\\uDD26':'ifr','\\uD835\\uDCBE':'iscr','\\u2148':'ii','\\uD835\\uDD40':'Iopf','\\u2110':'Iscr','\\u2111':'Im','\\xED':'iacute','\\xCD':'Iacute','\\xEC':'igrave','\\xCC':'Igrave','\\xEE':'icirc','\\xCE':'Icirc','\\xEF':'iuml','\\xCF':'Iuml','\\u0129':'itilde','\\u0128':'Itilde','\\u0130':'Idot','\\u012F':'iogon','\\u012E':'Iogon','\\u012B':'imacr','\\u012A':'Imacr','\\u0133':'ijlig','\\u0132':'IJlig','\\u0131':'imath','\\uD835\\uDCBF':'jscr','\\uD835\\uDD5B':'jopf','\\uD835\\uDD27':'jfr','\\uD835\\uDCA5':'Jscr','\\uD835\\uDD0D':'Jfr','\\uD835\\uDD41':'Jopf','\\u0135':'jcirc','\\u0134':'Jcirc','\\u0237':'jmath','\\uD835\\uDD5C':'kopf','\\uD835\\uDCC0':'kscr','\\uD835\\uDD28':'kfr','\\uD835\\uDCA6':'Kscr','\\uD835\\uDD42':'Kopf','\\uD835\\uDD0E':'Kfr','\\u0137':'kcedil','\\u0136':'Kcedil','\\uD835\\uDD29':'lfr','\\uD835\\uDCC1':'lscr','\\u2113':'ell','\\uD835\\uDD5D':'lopf','\\u2112':'Lscr','\\uD835\\uDD0F':'Lfr','\\uD835\\uDD43':'Lopf','\\u013A':'lacute','\\u0139':'Lacute','\\u013E':'lcaron','\\u013D':'Lcaron','\\u013C':'lcedil','\\u013B':'Lcedil','\\u0142':'lstrok','\\u0141':'Lstrok','\\u0140':'lmidot','\\u013F':'Lmidot','\\uD835\\uDD2A':'mfr','\\uD835\\uDD5E':'mopf','\\uD835\\uDCC2':'mscr','\\uD835\\uDD10':'Mfr','\\uD835\\uDD44':'Mopf','\\u2133':'Mscr','\\uD835\\uDD2B':'nfr','\\uD835\\uDD5F':'nopf','\\uD835\\uDCC3':'nscr','\\u2115':'Nopf','\\uD835\\uDCA9':'Nscr','\\uD835\\uDD11':'Nfr','\\u0144':'nacute','\\u0143':'Nacute','\\u0148':'ncaron','\\u0147':'Ncaron','\\xF1':'ntilde','\\xD1':'Ntilde','\\u0146':'ncedil','\\u0145':'Ncedil','\\u2116':'numero','\\u014B':'eng','\\u014A':'ENG','\\uD835\\uDD60':'oopf','\\uD835\\uDD2C':'ofr','\\u2134':'oscr','\\uD835\\uDCAA':'Oscr','\\uD835\\uDD12':'Ofr','\\uD835\\uDD46':'Oopf','\\xBA':'ordm','\\xF3':'oacute','\\xD3':'Oacute','\\xF2':'ograve','\\xD2':'Ograve','\\xF4':'ocirc','\\xD4':'Ocirc','\\xF6':'ouml','\\xD6':'Ouml','\\u0151':'odblac','\\u0150':'Odblac','\\xF5':'otilde','\\xD5':'Otilde','\\xF8':'oslash','\\xD8':'Oslash','\\u014D':'omacr','\\u014C':'Omacr','\\u0153':'oelig','\\u0152':'OElig','\\uD835\\uDD2D':'pfr','\\uD835\\uDCC5':'pscr','\\uD835\\uDD61':'popf','\\u2119':'Popf','\\uD835\\uDD13':'Pfr','\\uD835\\uDCAB':'Pscr','\\uD835\\uDD62':'qopf','\\uD835\\uDD2E':'qfr','\\uD835\\uDCC6':'qscr','\\uD835\\uDCAC':'Qscr','\\uD835\\uDD14':'Qfr','\\u211A':'Qopf','\\u0138':'kgreen','\\uD835\\uDD2F':'rfr','\\uD835\\uDD63':'ropf','\\uD835\\uDCC7':'rscr','\\u211B':'Rscr','\\u211C':'Re','\\u211D':'Ropf','\\u0155':'racute','\\u0154':'Racute','\\u0159':'rcaron','\\u0158':'Rcaron','\\u0157':'rcedil','\\u0156':'Rcedil','\\uD835\\uDD64':'sopf','\\uD835\\uDCC8':'sscr','\\uD835\\uDD30':'sfr','\\uD835\\uDD4A':'Sopf','\\uD835\\uDD16':'Sfr','\\uD835\\uDCAE':'Sscr','\\u24C8':'oS','\\u015B':'sacute','\\u015A':'Sacute','\\u015D':'scirc','\\u015C':'Scirc','\\u0161':'scaron','\\u0160':'Scaron','\\u015F':'scedil','\\u015E':'Scedil','\\xDF':'szlig','\\uD835\\uDD31':'tfr','\\uD835\\uDCC9':'tscr','\\uD835\\uDD65':'topf','\\uD835\\uDCAF':'Tscr','\\uD835\\uDD17':'Tfr','\\uD835\\uDD4B':'Topf','\\u0165':'tcaron','\\u0164':'Tcaron','\\u0163':'tcedil','\\u0162':'Tcedil','\\u2122':'trade','\\u0167':'tstrok','\\u0166':'Tstrok','\\uD835\\uDCCA':'uscr','\\uD835\\uDD66':'uopf','\\uD835\\uDD32':'ufr','\\uD835\\uDD4C':'Uopf','\\uD835\\uDD18':'Ufr','\\uD835\\uDCB0':'Uscr','\\xFA':'uacute','\\xDA':'Uacute','\\xF9':'ugrave','\\xD9':'Ugrave','\\u016D':'ubreve','\\u016C':'Ubreve','\\xFB':'ucirc','\\xDB':'Ucirc','\\u016F':'uring','\\u016E':'Uring','\\xFC':'uuml','\\xDC':'Uuml','\\u0171':'udblac','\\u0170':'Udblac','\\u0169':'utilde','\\u0168':'Utilde','\\u0173':'uogon','\\u0172':'Uogon','\\u016B':'umacr','\\u016A':'Umacr','\\uD835\\uDD33':'vfr','\\uD835\\uDD67':'vopf','\\uD835\\uDCCB':'vscr','\\uD835\\uDD19':'Vfr','\\uD835\\uDD4D':'Vopf','\\uD835\\uDCB1':'Vscr','\\uD835\\uDD68':'wopf','\\uD835\\uDCCC':'wscr','\\uD835\\uDD34':'wfr','\\uD835\\uDCB2':'Wscr','\\uD835\\uDD4E':'Wopf','\\uD835\\uDD1A':'Wfr','\\u0175':'wcirc','\\u0174':'Wcirc','\\uD835\\uDD35':'xfr','\\uD835\\uDCCD':'xscr','\\uD835\\uDD69':'xopf','\\uD835\\uDD4F':'Xopf','\\uD835\\uDD1B':'Xfr','\\uD835\\uDCB3':'Xscr','\\uD835\\uDD36':'yfr','\\uD835\\uDCCE':'yscr','\\uD835\\uDD6A':'yopf','\\uD835\\uDCB4':'Yscr','\\uD835\\uDD1C':'Yfr','\\uD835\\uDD50':'Yopf','\\xFD':'yacute','\\xDD':'Yacute','\\u0177':'ycirc','\\u0176':'Ycirc','\\xFF':'yuml','\\u0178':'Yuml','\\uD835\\uDCCF':'zscr','\\uD835\\uDD37':'zfr','\\uD835\\uDD6B':'zopf','\\u2128':'Zfr','\\u2124':'Zopf','\\uD835\\uDCB5':'Zscr','\\u017A':'zacute','\\u0179':'Zacute','\\u017E':'zcaron','\\u017D':'Zcaron','\\u017C':'zdot','\\u017B':'Zdot','\\u01B5':'imped','\\xFE':'thorn','\\xDE':'THORN','\\u0149':'napos','\\u03B1':'alpha','\\u0391':'Alpha','\\u03B2':'beta','\\u0392':'Beta','\\u03B3':'gamma','\\u0393':'Gamma','\\u03B4':'delta','\\u0394':'Delta','\\u03B5':'epsi','\\u03F5':'epsiv','\\u0395':'Epsilon','\\u03DD':'gammad','\\u03DC':'Gammad','\\u03B6':'zeta','\\u0396':'Zeta','\\u03B7':'eta','\\u0397':'Eta','\\u03B8':'theta','\\u03D1':'thetav','\\u0398':'Theta','\\u03B9':'iota','\\u0399':'Iota','\\u03BA':'kappa','\\u03F0':'kappav','\\u039A':'Kappa','\\u03BB':'lambda','\\u039B':'Lambda','\\u03BC':'mu','\\xB5':'micro','\\u039C':'Mu','\\u03BD':'nu','\\u039D':'Nu','\\u03BE':'xi','\\u039E':'Xi','\\u03BF':'omicron','\\u039F':'Omicron','\\u03C0':'pi','\\u03D6':'piv','\\u03A0':'Pi','\\u03C1':'rho','\\u03F1':'rhov','\\u03A1':'Rho','\\u03C3':'sigma','\\u03A3':'Sigma','\\u03C2':'sigmaf','\\u03C4':'tau','\\u03A4':'Tau','\\u03C5':'upsi','\\u03A5':'Upsilon','\\u03D2':'Upsi','\\u03C6':'phi','\\u03D5':'phiv','\\u03A6':'Phi','\\u03C7':'chi','\\u03A7':'Chi','\\u03C8':'psi','\\u03A8':'Psi','\\u03C9':'omega','\\u03A9':'ohm','\\u0430':'acy','\\u0410':'Acy','\\u0431':'bcy','\\u0411':'Bcy','\\u0432':'vcy','\\u0412':'Vcy','\\u0433':'gcy','\\u0413':'Gcy','\\u0453':'gjcy','\\u0403':'GJcy','\\u0434':'dcy','\\u0414':'Dcy','\\u0452':'djcy','\\u0402':'DJcy','\\u0435':'iecy','\\u0415':'IEcy','\\u0451':'iocy','\\u0401':'IOcy','\\u0454':'jukcy','\\u0404':'Jukcy','\\u0436':'zhcy','\\u0416':'ZHcy','\\u0437':'zcy','\\u0417':'Zcy','\\u0455':'dscy','\\u0405':'DScy','\\u0438':'icy','\\u0418':'Icy','\\u0456':'iukcy','\\u0406':'Iukcy','\\u0457':'yicy','\\u0407':'YIcy','\\u0439':'jcy','\\u0419':'Jcy','\\u0458':'jsercy','\\u0408':'Jsercy','\\u043A':'kcy','\\u041A':'Kcy','\\u045C':'kjcy','\\u040C':'KJcy','\\u043B':'lcy','\\u041B':'Lcy','\\u0459':'ljcy','\\u0409':'LJcy','\\u043C':'mcy','\\u041C':'Mcy','\\u043D':'ncy','\\u041D':'Ncy','\\u045A':'njcy','\\u040A':'NJcy','\\u043E':'ocy','\\u041E':'Ocy','\\u043F':'pcy','\\u041F':'Pcy','\\u0440':'rcy','\\u0420':'Rcy','\\u0441':'scy','\\u0421':'Scy','\\u0442':'tcy','\\u0422':'Tcy','\\u045B':'tshcy','\\u040B':'TSHcy','\\u0443':'ucy','\\u0423':'Ucy','\\u045E':'ubrcy','\\u040E':'Ubrcy','\\u0444':'fcy','\\u0424':'Fcy','\\u0445':'khcy','\\u0425':'KHcy','\\u0446':'tscy','\\u0426':'TScy','\\u0447':'chcy','\\u0427':'CHcy','\\u045F':'dzcy','\\u040F':'DZcy','\\u0448':'shcy','\\u0428':'SHcy','\\u0449':'shchcy','\\u0429':'SHCHcy','\\u044A':'hardcy','\\u042A':'HARDcy','\\u044B':'ycy','\\u042B':'Ycy','\\u044C':'softcy','\\u042C':'SOFTcy','\\u044D':'ecy','\\u042D':'Ecy','\\u044E':'yucy','\\u042E':'YUcy','\\u044F':'yacy','\\u042F':'YAcy','\\u2135':'aleph','\\u2136':'beth','\\u2137':'gimel','\\u2138':'daleth'};\n\n\tvar regexEscape = /[\"&'<>`]/g;\n\tvar escapeMap = {\n\t\t'\"': '&quot;',\n\t\t'&': '&amp;',\n\t\t'\\'': '&#x27;',\n\t\t'<': '&lt;',\n\t\t// See https://mathiasbynens.be/notes/ambiguous-ampersands: in HTML, the\n\t\t// following is not strictly necessary unless it’s part of a tag or an\n\t\t// unquoted attribute value. We’re only escaping it to support those\n\t\t// situations, and for XML support.\n\t\t'>': '&gt;',\n\t\t// In Internet Explorer ≤ 8, the backtick character can be used\n\t\t// to break out of (un)quoted attribute values or HTML comments.\n\t\t// See http://html5sec.org/#102, http://html5sec.org/#108, and\n\t\t// http://html5sec.org/#133.\n\t\t'`': '&#x60;'\n\t};\n\n\tvar regexInvalidEntity = /&#(?:[xX][^a-fA-F0-9]|[^0-9xX])/;\n\tvar regexInvalidRawCodePoint = /[\\0-\\x08\\x0B\\x0E-\\x1F\\x7F-\\x9F\\uFDD0-\\uFDEF\\uFFFE\\uFFFF]|[\\uD83F\\uD87F\\uD8BF\\uD8FF\\uD93F\\uD97F\\uD9BF\\uD9FF\\uDA3F\\uDA7F\\uDABF\\uDAFF\\uDB3F\\uDB7F\\uDBBF\\uDBFF][\\uDFFE\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\n\tvar regexDecode = /&(CounterClockwiseContourIntegral|DoubleLongLeftRightArrow|ClockwiseContourIntegral|NotNestedGreaterGreater|NotSquareSupersetEqual|DiacriticalDoubleAcute|NotRightTriangleEqual|NotSucceedsSlantEqual|NotPrecedesSlantEqual|CloseCurlyDoubleQuote|NegativeVeryThinSpace|DoubleContourIntegral|FilledVerySmallSquare|CapitalDifferentialD|OpenCurlyDoubleQuote|EmptyVerySmallSquare|NestedGreaterGreater|DoubleLongRightArrow|NotLeftTriangleEqual|NotGreaterSlantEqual|ReverseUpEquilibrium|DoubleLeftRightArrow|NotSquareSubsetEqual|NotDoubleVerticalBar|RightArrowLeftArrow|NotGreaterFullEqual|NotRightTriangleBar|SquareSupersetEqual|DownLeftRightVector|DoubleLongLeftArrow|leftrightsquigarrow|LeftArrowRightArrow|NegativeMediumSpace|blacktriangleright|RightDownVectorBar|PrecedesSlantEqual|RightDoubleBracket|SucceedsSlantEqual|NotLeftTriangleBar|RightTriangleEqual|SquareIntersection|RightDownTeeVector|ReverseEquilibrium|NegativeThickSpace|longleftrightarrow|Longleftrightarrow|LongLeftRightArrow|DownRightTeeVector|DownRightVectorBar|GreaterSlantEqual|SquareSubsetEqual|LeftDownVectorBar|LeftDoubleBracket|VerticalSeparator|rightleftharpoons|NotGreaterGreater|NotSquareSuperset|blacktriangleleft|blacktriangledown|NegativeThinSpace|LeftDownTeeVector|NotLessSlantEqual|leftrightharpoons|DoubleUpDownArrow|DoubleVerticalBar|LeftTriangleEqual|FilledSmallSquare|twoheadrightarrow|NotNestedLessLess|DownLeftTeeVector|DownLeftVectorBar|RightAngleBracket|NotTildeFullEqual|NotReverseElement|RightUpDownVector|DiacriticalTilde|NotSucceedsTilde|circlearrowright|NotPrecedesEqual|rightharpoondown|DoubleRightArrow|NotSucceedsEqual|NonBreakingSpace|NotRightTriangle|LessEqualGreater|RightUpTeeVector|LeftAngleBracket|GreaterFullEqual|DownArrowUpArrow|RightUpVectorBar|twoheadleftarrow|GreaterEqualLess|downharpoonright|RightTriangleBar|ntrianglerighteq|NotSupersetEqual|LeftUpDownVector|DiacriticalAcute|rightrightarrows|vartriangleright|UpArrowDownArrow|DiacriticalGrave|UnderParenthesis|EmptySmallSquare|LeftUpVectorBar|leftrightarrows|DownRightVector|downharpoonleft|trianglerighteq|ShortRightArrow|OverParenthesis|DoubleLeftArrow|DoubleDownArrow|NotSquareSubset|bigtriangledown|ntrianglelefteq|UpperRightArrow|curvearrowright|vartriangleleft|NotLeftTriangle|nleftrightarrow|LowerRightArrow|NotHumpDownHump|NotGreaterTilde|rightthreetimes|LeftUpTeeVector|NotGreaterEqual|straightepsilon|LeftTriangleBar|rightsquigarrow|ContourIntegral|rightleftarrows|CloseCurlyQuote|RightDownVector|LeftRightVector|nLeftrightarrow|leftharpoondown|circlearrowleft|SquareSuperset|OpenCurlyQuote|hookrightarrow|HorizontalLine|DiacriticalDot|NotLessGreater|ntriangleright|DoubleRightTee|InvisibleComma|InvisibleTimes|LowerLeftArrow|DownLeftVector|NotSubsetEqual|curvearrowleft|trianglelefteq|NotVerticalBar|TildeFullEqual|downdownarrows|NotGreaterLess|RightTeeVector|ZeroWidthSpace|looparrowright|LongRightArrow|doublebarwedge|ShortLeftArrow|ShortDownArrow|RightVectorBar|GreaterGreater|ReverseElement|rightharpoonup|LessSlantEqual|leftthreetimes|upharpoonright|rightarrowtail|LeftDownVector|Longrightarrow|NestedLessLess|UpperLeftArrow|nshortparallel|leftleftarrows|leftrightarrow|Leftrightarrow|LeftRightArrow|longrightarrow|upharpoonleft|RightArrowBar|ApplyFunction|LeftTeeVector|leftarrowtail|NotEqualTilde|varsubsetneqq|varsupsetneqq|RightTeeArrow|SucceedsEqual|SucceedsTilde|LeftVectorBar|SupersetEqual|hookleftarrow|DifferentialD|VerticalTilde|VeryThinSpace|blacktriangle|bigtriangleup|LessFullEqual|divideontimes|leftharpoonup|UpEquilibrium|ntriangleleft|RightTriangle|measuredangle|shortparallel|longleftarrow|Longleftarrow|LongLeftArrow|DoubleLeftTee|Poincareplane|PrecedesEqual|triangleright|DoubleUpArrow|RightUpVector|fallingdotseq|looparrowleft|PrecedesTilde|NotTildeEqual|NotTildeTilde|smallsetminus|Proportional|triangleleft|triangledown|UnderBracket|NotHumpEqual|exponentiale|ExponentialE|NotLessTilde|HilbertSpace|RightCeiling|blacklozenge|varsupsetneq|HumpDownHump|GreaterEqual|VerticalLine|LeftTeeArrow|NotLessEqual|DownTeeArrow|LeftTriangle|varsubsetneq|Intersection|NotCongruent|DownArrowBar|LeftUpVector|LeftArrowBar|risingdotseq|GreaterTilde|RoundImplies|SquareSubset|ShortUpArrow|NotSuperset|quaternions|precnapprox|backepsilon|preccurlyeq|OverBracket|blacksquare|MediumSpace|VerticalBar|circledcirc|circleddash|CircleMinus|CircleTimes|LessGreater|curlyeqprec|curlyeqsucc|diamondsuit|UpDownArrow|Updownarrow|RuleDelayed|Rrightarrow|updownarrow|RightVector|nRightarrow|nrightarrow|eqslantless|LeftCeiling|Equilibrium|SmallCircle|expectation|NotSucceeds|thickapprox|GreaterLess|SquareUnion|NotPrecedes|NotLessLess|straightphi|succnapprox|succcurlyeq|SubsetEqual|sqsupseteq|Proportion|Laplacetrf|ImaginaryI|supsetneqq|NotGreater|gtreqqless|NotElement|ThickSpace|TildeEqual|TildeTilde|Fouriertrf|rmoustache|EqualTilde|eqslantgtr|UnderBrace|LeftVector|UpArrowBar|nLeftarrow|nsubseteqq|subsetneqq|nsupseteqq|nleftarrow|succapprox|lessapprox|UpTeeArrow|upuparrows|curlywedge|lesseqqgtr|varepsilon|varnothing|RightFloor|complement|CirclePlus|sqsubseteq|Lleftarrow|circledast|RightArrow|Rightarrow|rightarrow|lmoustache|Bernoullis|precapprox|mapstoleft|mapstodown|longmapsto|dotsquare|downarrow|DoubleDot|nsubseteq|supsetneq|leftarrow|nsupseteq|subsetneq|ThinSpace|ngeqslant|subseteqq|HumpEqual|NotSubset|triangleq|NotCupCap|lesseqgtr|heartsuit|TripleDot|Leftarrow|Coproduct|Congruent|varpropto|complexes|gvertneqq|LeftArrow|LessTilde|supseteqq|MinusPlus|CircleDot|nleqslant|NotExists|gtreqless|nparallel|UnionPlus|LeftFloor|checkmark|CenterDot|centerdot|Mellintrf|gtrapprox|bigotimes|OverBrace|spadesuit|therefore|pitchfork|rationals|PlusMinus|Backslash|Therefore|DownBreve|backsimeq|backprime|DownArrow|nshortmid|Downarrow|lvertneqq|eqvparsl|imagline|imagpart|infintie|integers|Integral|intercal|LessLess|Uarrocir|intlarhk|sqsupset|angmsdaf|sqsubset|llcorner|vartheta|cupbrcap|lnapprox|Superset|SuchThat|succnsim|succneqq|angmsdag|biguplus|curlyvee|trpezium|Succeeds|NotTilde|bigwedge|angmsdah|angrtvbd|triminus|cwconint|fpartint|lrcorner|smeparsl|subseteq|urcorner|lurdshar|laemptyv|DDotrahd|approxeq|ldrushar|awconint|mapstoup|backcong|shortmid|triangle|geqslant|gesdotol|timesbar|circledR|circledS|setminus|multimap|naturals|scpolint|ncongdot|RightTee|boxminus|gnapprox|boxtimes|andslope|thicksim|angmsdaa|varsigma|cirfnint|rtriltri|angmsdab|rppolint|angmsdac|barwedge|drbkarow|clubsuit|thetasym|bsolhsub|capbrcup|dzigrarr|doteqdot|DotEqual|dotminus|UnderBar|NotEqual|realpart|otimesas|ulcorner|hksearow|hkswarow|parallel|PartialD|elinters|emptyset|plusacir|bbrktbrk|angmsdad|pointint|bigoplus|angmsdae|Precedes|bigsqcup|varkappa|notindot|supseteq|precneqq|precnsim|profalar|profline|profsurf|leqslant|lesdotor|raemptyv|subplus|notnivb|notnivc|subrarr|zigrarr|vzigzag|submult|subedot|Element|between|cirscir|larrbfs|larrsim|lotimes|lbrksld|lbrkslu|lozenge|ldrdhar|dbkarow|bigcirc|epsilon|simrarr|simplus|ltquest|Epsilon|luruhar|gtquest|maltese|npolint|eqcolon|npreceq|bigodot|ddagger|gtrless|bnequiv|harrcir|ddotseq|equivDD|backsim|demptyv|nsqsube|nsqsupe|Upsilon|nsubset|upsilon|minusdu|nsucceq|swarrow|nsupset|coloneq|searrow|boxplus|napprox|natural|asympeq|alefsym|congdot|nearrow|bigstar|diamond|supplus|tritime|LeftTee|nvinfin|triplus|NewLine|nvltrie|nvrtrie|nwarrow|nexists|Diamond|ruluhar|Implies|supmult|angzarr|suplarr|suphsub|questeq|because|digamma|Because|olcross|bemptyv|omicron|Omicron|rotimes|NoBreak|intprod|angrtvb|orderof|uwangle|suphsol|lesdoto|orslope|DownTee|realine|cudarrl|rdldhar|OverBar|supedot|lessdot|supdsub|topfork|succsim|rbrkslu|rbrksld|pertenk|cudarrr|isindot|planckh|lessgtr|pluscir|gesdoto|plussim|plustwo|lesssim|cularrp|rarrsim|Cayleys|notinva|notinvb|notinvc|UpArrow|Uparrow|uparrow|NotLess|dwangle|precsim|Product|curarrm|Cconint|dotplus|rarrbfs|ccupssm|Cedilla|cemptyv|notniva|quatint|frac35|frac38|frac45|frac56|frac58|frac78|tridot|xoplus|gacute|gammad|Gammad|lfisht|lfloor|bigcup|sqsupe|gbreve|Gbreve|lharul|sqsube|sqcups|Gcedil|apacir|llhard|lmidot|Lmidot|lmoust|andand|sqcaps|approx|Abreve|spades|circeq|tprime|divide|topcir|Assign|topbot|gesdot|divonx|xuplus|timesd|gesles|atilde|solbar|SOFTcy|loplus|timesb|lowast|lowbar|dlcorn|dlcrop|softcy|dollar|lparlt|thksim|lrhard|Atilde|lsaquo|smashp|bigvee|thinsp|wreath|bkarow|lsquor|lstrok|Lstrok|lthree|ltimes|ltlarr|DotDot|simdot|ltrPar|weierp|xsqcup|angmsd|sigmav|sigmaf|zeetrf|Zcaron|zcaron|mapsto|vsupne|thetav|cirmid|marker|mcomma|Zacute|vsubnE|there4|gtlPar|vsubne|bottom|gtrarr|SHCHcy|shchcy|midast|midcir|middot|minusb|minusd|gtrdot|bowtie|sfrown|mnplus|models|colone|seswar|Colone|mstpos|searhk|gtrsim|nacute|Nacute|boxbox|telrec|hairsp|Tcedil|nbumpe|scnsim|ncaron|Ncaron|ncedil|Ncedil|hamilt|Scedil|nearhk|hardcy|HARDcy|tcedil|Tcaron|commat|nequiv|nesear|tcaron|target|hearts|nexist|varrho|scedil|Scaron|scaron|hellip|Sacute|sacute|hercon|swnwar|compfn|rtimes|rthree|rsquor|rsaquo|zacute|wedgeq|homtht|barvee|barwed|Barwed|rpargt|horbar|conint|swarhk|roplus|nltrie|hslash|hstrok|Hstrok|rmoust|Conint|bprime|hybull|hyphen|iacute|Iacute|supsup|supsub|supsim|varphi|coprod|brvbar|agrave|Supset|supset|igrave|Igrave|notinE|Agrave|iiiint|iinfin|copysr|wedbar|Verbar|vangrt|becaus|incare|verbar|inodot|bullet|drcorn|intcal|drcrop|cularr|vellip|Utilde|bumpeq|cupcap|dstrok|Dstrok|CupCap|cupcup|cupdot|eacute|Eacute|supdot|iquest|easter|ecaron|Ecaron|ecolon|isinsv|utilde|itilde|Itilde|curarr|succeq|Bumpeq|cacute|ulcrop|nparsl|Cacute|nprcue|egrave|Egrave|nrarrc|nrarrw|subsup|subsub|nrtrie|jsercy|nsccue|Jsercy|kappav|kcedil|Kcedil|subsim|ulcorn|nsimeq|egsdot|veebar|kgreen|capand|elsdot|Subset|subset|curren|aacute|lacute|Lacute|emptyv|ntilde|Ntilde|lagran|lambda|Lambda|capcap|Ugrave|langle|subdot|emsp13|numero|emsp14|nvdash|nvDash|nVdash|nVDash|ugrave|ufisht|nvHarr|larrfs|nvlArr|larrhk|larrlp|larrpl|nvrArr|Udblac|nwarhk|larrtl|nwnear|oacute|Oacute|latail|lAtail|sstarf|lbrace|odblac|Odblac|lbrack|udblac|odsold|eparsl|lcaron|Lcaron|ograve|Ograve|lcedil|Lcedil|Aacute|ssmile|ssetmn|squarf|ldquor|capcup|ominus|cylcty|rharul|eqcirc|dagger|rfloor|rfisht|Dagger|daleth|equals|origof|capdot|equest|dcaron|Dcaron|rdquor|oslash|Oslash|otilde|Otilde|otimes|Otimes|urcrop|Ubreve|ubreve|Yacute|Uacute|uacute|Rcedil|rcedil|urcorn|parsim|Rcaron|Vdashl|rcaron|Tstrok|percnt|period|permil|Exists|yacute|rbrack|rbrace|phmmat|ccaron|Ccaron|planck|ccedil|plankv|tstrok|female|plusdo|plusdu|ffilig|plusmn|ffllig|Ccedil|rAtail|dfisht|bernou|ratail|Rarrtl|rarrtl|angsph|rarrpl|rarrlp|rarrhk|xwedge|xotime|forall|ForAll|Vvdash|vsupnE|preceq|bigcap|frac12|frac13|frac14|primes|rarrfs|prnsim|frac15|Square|frac16|square|lesdot|frac18|frac23|propto|prurel|rarrap|rangle|puncsp|frac25|Racute|qprime|racute|lesges|frac34|abreve|AElig|eqsim|utdot|setmn|urtri|Equal|Uring|seArr|uring|searr|dashv|Dashv|mumap|nabla|iogon|Iogon|sdote|sdotb|scsim|napid|napos|equiv|natur|Acirc|dblac|erarr|nbump|iprod|erDot|ucirc|awint|esdot|angrt|ncong|isinE|scnap|Scirc|scirc|ndash|isins|Ubrcy|nearr|neArr|isinv|nedot|ubrcy|acute|Ycirc|iukcy|Iukcy|xutri|nesim|caret|jcirc|Jcirc|caron|twixt|ddarr|sccue|exist|jmath|sbquo|ngeqq|angst|ccaps|lceil|ngsim|UpTee|delta|Delta|rtrif|nharr|nhArr|nhpar|rtrie|jukcy|Jukcy|kappa|rsquo|Kappa|nlarr|nlArr|TSHcy|rrarr|aogon|Aogon|fflig|xrarr|tshcy|ccirc|nleqq|filig|upsih|nless|dharl|nlsim|fjlig|ropar|nltri|dharr|robrk|roarr|fllig|fltns|roang|rnmid|subnE|subne|lAarr|trisb|Ccirc|acirc|ccups|blank|VDash|forkv|Vdash|langd|cedil|blk12|blk14|laquo|strns|diams|notin|vDash|larrb|blk34|block|disin|uplus|vdash|vBarv|aelig|starf|Wedge|check|xrArr|lates|lbarr|lBarr|notni|lbbrk|bcong|frasl|lbrke|frown|vrtri|vprop|vnsup|gamma|Gamma|wedge|xodot|bdquo|srarr|doteq|ldquo|boxdl|boxdL|gcirc|Gcirc|boxDl|boxDL|boxdr|boxdR|boxDr|TRADE|trade|rlhar|boxDR|vnsub|npart|vltri|rlarr|boxhd|boxhD|nprec|gescc|nrarr|nrArr|boxHd|boxHD|boxhu|boxhU|nrtri|boxHu|clubs|boxHU|times|colon|Colon|gimel|xlArr|Tilde|nsime|tilde|nsmid|nspar|THORN|thorn|xlarr|nsube|nsubE|thkap|xhArr|comma|nsucc|boxul|boxuL|nsupe|nsupE|gneqq|gnsim|boxUl|boxUL|grave|boxur|boxuR|boxUr|boxUR|lescc|angle|bepsi|boxvh|varpi|boxvH|numsp|Theta|gsime|gsiml|theta|boxVh|boxVH|boxvl|gtcir|gtdot|boxvL|boxVl|boxVL|crarr|cross|Cross|nvsim|boxvr|nwarr|nwArr|sqsup|dtdot|Uogon|lhard|lharu|dtrif|ocirc|Ocirc|lhblk|duarr|odash|sqsub|Hacek|sqcup|llarr|duhar|oelig|OElig|ofcir|boxvR|uogon|lltri|boxVr|csube|uuarr|ohbar|csupe|ctdot|olarr|olcir|harrw|oline|sqcap|omacr|Omacr|omega|Omega|boxVR|aleph|lneqq|lnsim|loang|loarr|rharu|lobrk|hcirc|operp|oplus|rhard|Hcirc|orarr|Union|order|ecirc|Ecirc|cuepr|szlig|cuesc|breve|reals|eDDot|Breve|hoarr|lopar|utrif|rdquo|Umacr|umacr|efDot|swArr|ultri|alpha|rceil|ovbar|swarr|Wcirc|wcirc|smtes|smile|bsemi|lrarr|aring|parsl|lrhar|bsime|uhblk|lrtri|cupor|Aring|uharr|uharl|slarr|rbrke|bsolb|lsime|rbbrk|RBarr|lsimg|phone|rBarr|rbarr|icirc|lsquo|Icirc|emacr|Emacr|ratio|simne|plusb|simlE|simgE|simeq|pluse|ltcir|ltdot|empty|xharr|xdtri|iexcl|Alpha|ltrie|rarrw|pound|ltrif|xcirc|bumpe|prcue|bumpE|asymp|amacr|cuvee|Sigma|sigma|iiint|udhar|iiota|ijlig|IJlig|supnE|imacr|Imacr|prime|Prime|image|prnap|eogon|Eogon|rarrc|mdash|mDDot|cuwed|imath|supne|imped|Amacr|udarr|prsim|micro|rarrb|cwint|raquo|infin|eplus|range|rangd|Ucirc|radic|minus|amalg|veeeq|rAarr|epsiv|ycirc|quest|sharp|quot|zwnj|Qscr|race|qscr|Qopf|qopf|qint|rang|Rang|Zscr|zscr|Zopf|zopf|rarr|rArr|Rarr|Pscr|pscr|prop|prod|prnE|prec|ZHcy|zhcy|prap|Zeta|zeta|Popf|popf|Zdot|plus|zdot|Yuml|yuml|phiv|YUcy|yucy|Yscr|yscr|perp|Yopf|yopf|part|para|YIcy|Ouml|rcub|yicy|YAcy|rdca|ouml|osol|Oscr|rdsh|yacy|real|oscr|xvee|andd|rect|andv|Xscr|oror|ordm|ordf|xscr|ange|aopf|Aopf|rHar|Xopf|opar|Oopf|xopf|xnis|rhov|oopf|omid|xmap|oint|apid|apos|ogon|ascr|Ascr|odot|odiv|xcup|xcap|ocir|oast|nvlt|nvle|nvgt|nvge|nvap|Wscr|wscr|auml|ntlg|ntgl|nsup|nsub|nsim|Nscr|nscr|nsce|Wopf|ring|npre|wopf|npar|Auml|Barv|bbrk|Nopf|nopf|nmid|nLtv|beta|ropf|Ropf|Beta|beth|nles|rpar|nleq|bnot|bNot|nldr|NJcy|rscr|Rscr|Vscr|vscr|rsqb|njcy|bopf|nisd|Bopf|rtri|Vopf|nGtv|ngtr|vopf|boxh|boxH|boxv|nges|ngeq|boxV|bscr|scap|Bscr|bsim|Vert|vert|bsol|bull|bump|caps|cdot|ncup|scnE|ncap|nbsp|napE|Cdot|cent|sdot|Vbar|nang|vBar|chcy|Mscr|mscr|sect|semi|CHcy|Mopf|mopf|sext|circ|cire|mldr|mlcp|cirE|comp|shcy|SHcy|vArr|varr|cong|copf|Copf|copy|COPY|malt|male|macr|lvnE|cscr|ltri|sime|ltcc|simg|Cscr|siml|csub|Uuml|lsqb|lsim|uuml|csup|Lscr|lscr|utri|smid|lpar|cups|smte|lozf|darr|Lopf|Uscr|solb|lopf|sopf|Sopf|lneq|uscr|spar|dArr|lnap|Darr|dash|Sqrt|LJcy|ljcy|lHar|dHar|Upsi|upsi|diam|lesg|djcy|DJcy|leqq|dopf|Dopf|dscr|Dscr|dscy|ldsh|ldca|squf|DScy|sscr|Sscr|dsol|lcub|late|star|Star|Uopf|Larr|lArr|larr|uopf|dtri|dzcy|sube|subE|Lang|lang|Kscr|kscr|Kopf|kopf|KJcy|kjcy|KHcy|khcy|DZcy|ecir|edot|eDot|Jscr|jscr|succ|Jopf|jopf|Edot|uHar|emsp|ensp|Iuml|iuml|eopf|isin|Iscr|iscr|Eopf|epar|sung|epsi|escr|sup1|sup2|sup3|Iota|iota|supe|supE|Iopf|iopf|IOcy|iocy|Escr|esim|Esim|imof|Uarr|QUOT|uArr|uarr|euml|IEcy|iecy|Idot|Euml|euro|excl|Hscr|hscr|Hopf|hopf|TScy|tscy|Tscr|hbar|tscr|flat|tbrk|fnof|hArr|harr|half|fopf|Fopf|tdot|gvnE|fork|trie|gtcc|fscr|Fscr|gdot|gsim|Gscr|gscr|Gopf|gopf|gneq|Gdot|tosa|gnap|Topf|topf|geqq|toea|GJcy|gjcy|tint|gesl|mid|Sfr|ggg|top|ges|gla|glE|glj|geq|gne|gEl|gel|gnE|Gcy|gcy|gap|Tfr|tfr|Tcy|tcy|Hat|Tau|Ffr|tau|Tab|hfr|Hfr|ffr|Fcy|fcy|icy|Icy|iff|ETH|eth|ifr|Ifr|Eta|eta|int|Int|Sup|sup|ucy|Ucy|Sum|sum|jcy|ENG|ufr|Ufr|eng|Jcy|jfr|els|ell|egs|Efr|efr|Jfr|uml|kcy|Kcy|Ecy|ecy|kfr|Kfr|lap|Sub|sub|lat|lcy|Lcy|leg|Dot|dot|lEg|leq|les|squ|div|die|lfr|Lfr|lgE|Dfr|dfr|Del|deg|Dcy|dcy|lne|lnE|sol|loz|smt|Cup|lrm|cup|lsh|Lsh|sim|shy|map|Map|mcy|Mcy|mfr|Mfr|mho|gfr|Gfr|sfr|cir|Chi|chi|nap|Cfr|vcy|Vcy|cfr|Scy|scy|ncy|Ncy|vee|Vee|Cap|cap|nfr|scE|sce|Nfr|nge|ngE|nGg|vfr|Vfr|ngt|bot|nGt|nis|niv|Rsh|rsh|nle|nlE|bne|Bfr|bfr|nLl|nlt|nLt|Bcy|bcy|not|Not|rlm|wfr|Wfr|npr|nsc|num|ocy|ast|Ocy|ofr|xfr|Xfr|Ofr|ogt|ohm|apE|olt|Rho|ape|rho|Rfr|rfr|ord|REG|ang|reg|orv|And|and|AMP|Rcy|amp|Afr|ycy|Ycy|yen|yfr|Yfr|rcy|par|pcy|Pcy|pfr|Pfr|phi|Phi|afr|Acy|acy|zcy|Zcy|piv|acE|acd|zfr|Zfr|pre|prE|psi|Psi|qfr|Qfr|zwj|Or|ge|Gg|gt|gg|el|oS|lt|Lt|LT|Re|lg|gl|eg|ne|Im|it|le|DD|wp|wr|nu|Nu|dd|lE|Sc|sc|pi|Pi|ee|af|ll|Ll|rx|gE|xi|pm|Xi|ic|pr|Pr|in|ni|mp|mu|ac|Mu|or|ap|Gt|GT|ii);|&(Aacute|Agrave|Atilde|Ccedil|Eacute|Egrave|Iacute|Igrave|Ntilde|Oacute|Ograve|Oslash|Otilde|Uacute|Ugrave|Yacute|aacute|agrave|atilde|brvbar|ccedil|curren|divide|eacute|egrave|frac12|frac14|frac34|iacute|igrave|iquest|middot|ntilde|oacute|ograve|oslash|otilde|plusmn|uacute|ugrave|yacute|AElig|Acirc|Aring|Ecirc|Icirc|Ocirc|THORN|Ucirc|acirc|acute|aelig|aring|cedil|ecirc|icirc|iexcl|laquo|micro|ocirc|pound|raquo|szlig|thorn|times|ucirc|Auml|COPY|Euml|Iuml|Ouml|QUOT|Uuml|auml|cent|copy|euml|iuml|macr|nbsp|ordf|ordm|ouml|para|quot|sect|sup1|sup2|sup3|uuml|yuml|AMP|ETH|REG|amp|deg|eth|not|reg|shy|uml|yen|GT|LT|gt|lt)(?!;)([=a-zA-Z0-9]?)|&#([0-9]+)(;?)|&#[xX]([a-fA-F0-9]+)(;?)|&([0-9a-zA-Z]+)/g;\n\tvar decodeMap = {'aacute':'\\xE1','Aacute':'\\xC1','abreve':'\\u0103','Abreve':'\\u0102','ac':'\\u223E','acd':'\\u223F','acE':'\\u223E\\u0333','acirc':'\\xE2','Acirc':'\\xC2','acute':'\\xB4','acy':'\\u0430','Acy':'\\u0410','aelig':'\\xE6','AElig':'\\xC6','af':'\\u2061','afr':'\\uD835\\uDD1E','Afr':'\\uD835\\uDD04','agrave':'\\xE0','Agrave':'\\xC0','alefsym':'\\u2135','aleph':'\\u2135','alpha':'\\u03B1','Alpha':'\\u0391','amacr':'\\u0101','Amacr':'\\u0100','amalg':'\\u2A3F','amp':'&','AMP':'&','and':'\\u2227','And':'\\u2A53','andand':'\\u2A55','andd':'\\u2A5C','andslope':'\\u2A58','andv':'\\u2A5A','ang':'\\u2220','ange':'\\u29A4','angle':'\\u2220','angmsd':'\\u2221','angmsdaa':'\\u29A8','angmsdab':'\\u29A9','angmsdac':'\\u29AA','angmsdad':'\\u29AB','angmsdae':'\\u29AC','angmsdaf':'\\u29AD','angmsdag':'\\u29AE','angmsdah':'\\u29AF','angrt':'\\u221F','angrtvb':'\\u22BE','angrtvbd':'\\u299D','angsph':'\\u2222','angst':'\\xC5','angzarr':'\\u237C','aogon':'\\u0105','Aogon':'\\u0104','aopf':'\\uD835\\uDD52','Aopf':'\\uD835\\uDD38','ap':'\\u2248','apacir':'\\u2A6F','ape':'\\u224A','apE':'\\u2A70','apid':'\\u224B','apos':'\\'','ApplyFunction':'\\u2061','approx':'\\u2248','approxeq':'\\u224A','aring':'\\xE5','Aring':'\\xC5','ascr':'\\uD835\\uDCB6','Ascr':'\\uD835\\uDC9C','Assign':'\\u2254','ast':'*','asymp':'\\u2248','asympeq':'\\u224D','atilde':'\\xE3','Atilde':'\\xC3','auml':'\\xE4','Auml':'\\xC4','awconint':'\\u2233','awint':'\\u2A11','backcong':'\\u224C','backepsilon':'\\u03F6','backprime':'\\u2035','backsim':'\\u223D','backsimeq':'\\u22CD','Backslash':'\\u2216','Barv':'\\u2AE7','barvee':'\\u22BD','barwed':'\\u2305','Barwed':'\\u2306','barwedge':'\\u2305','bbrk':'\\u23B5','bbrktbrk':'\\u23B6','bcong':'\\u224C','bcy':'\\u0431','Bcy':'\\u0411','bdquo':'\\u201E','becaus':'\\u2235','because':'\\u2235','Because':'\\u2235','bemptyv':'\\u29B0','bepsi':'\\u03F6','bernou':'\\u212C','Bernoullis':'\\u212C','beta':'\\u03B2','Beta':'\\u0392','beth':'\\u2136','between':'\\u226C','bfr':'\\uD835\\uDD1F','Bfr':'\\uD835\\uDD05','bigcap':'\\u22C2','bigcirc':'\\u25EF','bigcup':'\\u22C3','bigodot':'\\u2A00','bigoplus':'\\u2A01','bigotimes':'\\u2A02','bigsqcup':'\\u2A06','bigstar':'\\u2605','bigtriangledown':'\\u25BD','bigtriangleup':'\\u25B3','biguplus':'\\u2A04','bigvee':'\\u22C1','bigwedge':'\\u22C0','bkarow':'\\u290D','blacklozenge':'\\u29EB','blacksquare':'\\u25AA','blacktriangle':'\\u25B4','blacktriangledown':'\\u25BE','blacktriangleleft':'\\u25C2','blacktriangleright':'\\u25B8','blank':'\\u2423','blk12':'\\u2592','blk14':'\\u2591','blk34':'\\u2593','block':'\\u2588','bne':'=\\u20E5','bnequiv':'\\u2261\\u20E5','bnot':'\\u2310','bNot':'\\u2AED','bopf':'\\uD835\\uDD53','Bopf':'\\uD835\\uDD39','bot':'\\u22A5','bottom':'\\u22A5','bowtie':'\\u22C8','boxbox':'\\u29C9','boxdl':'\\u2510','boxdL':'\\u2555','boxDl':'\\u2556','boxDL':'\\u2557','boxdr':'\\u250C','boxdR':'\\u2552','boxDr':'\\u2553','boxDR':'\\u2554','boxh':'\\u2500','boxH':'\\u2550','boxhd':'\\u252C','boxhD':'\\u2565','boxHd':'\\u2564','boxHD':'\\u2566','boxhu':'\\u2534','boxhU':'\\u2568','boxHu':'\\u2567','boxHU':'\\u2569','boxminus':'\\u229F','boxplus':'\\u229E','boxtimes':'\\u22A0','boxul':'\\u2518','boxuL':'\\u255B','boxUl':'\\u255C','boxUL':'\\u255D','boxur':'\\u2514','boxuR':'\\u2558','boxUr':'\\u2559','boxUR':'\\u255A','boxv':'\\u2502','boxV':'\\u2551','boxvh':'\\u253C','boxvH':'\\u256A','boxVh':'\\u256B','boxVH':'\\u256C','boxvl':'\\u2524','boxvL':'\\u2561','boxVl':'\\u2562','boxVL':'\\u2563','boxvr':'\\u251C','boxvR':'\\u255E','boxVr':'\\u255F','boxVR':'\\u2560','bprime':'\\u2035','breve':'\\u02D8','Breve':'\\u02D8','brvbar':'\\xA6','bscr':'\\uD835\\uDCB7','Bscr':'\\u212C','bsemi':'\\u204F','bsim':'\\u223D','bsime':'\\u22CD','bsol':'\\\\','bsolb':'\\u29C5','bsolhsub':'\\u27C8','bull':'\\u2022','bullet':'\\u2022','bump':'\\u224E','bumpe':'\\u224F','bumpE':'\\u2AAE','bumpeq':'\\u224F','Bumpeq':'\\u224E','cacute':'\\u0107','Cacute':'\\u0106','cap':'\\u2229','Cap':'\\u22D2','capand':'\\u2A44','capbrcup':'\\u2A49','capcap':'\\u2A4B','capcup':'\\u2A47','capdot':'\\u2A40','CapitalDifferentialD':'\\u2145','caps':'\\u2229\\uFE00','caret':'\\u2041','caron':'\\u02C7','Cayleys':'\\u212D','ccaps':'\\u2A4D','ccaron':'\\u010D','Ccaron':'\\u010C','ccedil':'\\xE7','Ccedil':'\\xC7','ccirc':'\\u0109','Ccirc':'\\u0108','Cconint':'\\u2230','ccups':'\\u2A4C','ccupssm':'\\u2A50','cdot':'\\u010B','Cdot':'\\u010A','cedil':'\\xB8','Cedilla':'\\xB8','cemptyv':'\\u29B2','cent':'\\xA2','centerdot':'\\xB7','CenterDot':'\\xB7','cfr':'\\uD835\\uDD20','Cfr':'\\u212D','chcy':'\\u0447','CHcy':'\\u0427','check':'\\u2713','checkmark':'\\u2713','chi':'\\u03C7','Chi':'\\u03A7','cir':'\\u25CB','circ':'\\u02C6','circeq':'\\u2257','circlearrowleft':'\\u21BA','circlearrowright':'\\u21BB','circledast':'\\u229B','circledcirc':'\\u229A','circleddash':'\\u229D','CircleDot':'\\u2299','circledR':'\\xAE','circledS':'\\u24C8','CircleMinus':'\\u2296','CirclePlus':'\\u2295','CircleTimes':'\\u2297','cire':'\\u2257','cirE':'\\u29C3','cirfnint':'\\u2A10','cirmid':'\\u2AEF','cirscir':'\\u29C2','ClockwiseContourIntegral':'\\u2232','CloseCurlyDoubleQuote':'\\u201D','CloseCurlyQuote':'\\u2019','clubs':'\\u2663','clubsuit':'\\u2663','colon':':','Colon':'\\u2237','colone':'\\u2254','Colone':'\\u2A74','coloneq':'\\u2254','comma':',','commat':'@','comp':'\\u2201','compfn':'\\u2218','complement':'\\u2201','complexes':'\\u2102','cong':'\\u2245','congdot':'\\u2A6D','Congruent':'\\u2261','conint':'\\u222E','Conint':'\\u222F','ContourIntegral':'\\u222E','copf':'\\uD835\\uDD54','Copf':'\\u2102','coprod':'\\u2210','Coproduct':'\\u2210','copy':'\\xA9','COPY':'\\xA9','copysr':'\\u2117','CounterClockwiseContourIntegral':'\\u2233','crarr':'\\u21B5','cross':'\\u2717','Cross':'\\u2A2F','cscr':'\\uD835\\uDCB8','Cscr':'\\uD835\\uDC9E','csub':'\\u2ACF','csube':'\\u2AD1','csup':'\\u2AD0','csupe':'\\u2AD2','ctdot':'\\u22EF','cudarrl':'\\u2938','cudarrr':'\\u2935','cuepr':'\\u22DE','cuesc':'\\u22DF','cularr':'\\u21B6','cularrp':'\\u293D','cup':'\\u222A','Cup':'\\u22D3','cupbrcap':'\\u2A48','cupcap':'\\u2A46','CupCap':'\\u224D','cupcup':'\\u2A4A','cupdot':'\\u228D','cupor':'\\u2A45','cups':'\\u222A\\uFE00','curarr':'\\u21B7','curarrm':'\\u293C','curlyeqprec':'\\u22DE','curlyeqsucc':'\\u22DF','curlyvee':'\\u22CE','curlywedge':'\\u22CF','curren':'\\xA4','curvearrowleft':'\\u21B6','curvearrowright':'\\u21B7','cuvee':'\\u22CE','cuwed':'\\u22CF','cwconint':'\\u2232','cwint':'\\u2231','cylcty':'\\u232D','dagger':'\\u2020','Dagger':'\\u2021','daleth':'\\u2138','darr':'\\u2193','dArr':'\\u21D3','Darr':'\\u21A1','dash':'\\u2010','dashv':'\\u22A3','Dashv':'\\u2AE4','dbkarow':'\\u290F','dblac':'\\u02DD','dcaron':'\\u010F','Dcaron':'\\u010E','dcy':'\\u0434','Dcy':'\\u0414','dd':'\\u2146','DD':'\\u2145','ddagger':'\\u2021','ddarr':'\\u21CA','DDotrahd':'\\u2911','ddotseq':'\\u2A77','deg':'\\xB0','Del':'\\u2207','delta':'\\u03B4','Delta':'\\u0394','demptyv':'\\u29B1','dfisht':'\\u297F','dfr':'\\uD835\\uDD21','Dfr':'\\uD835\\uDD07','dHar':'\\u2965','dharl':'\\u21C3','dharr':'\\u21C2','DiacriticalAcute':'\\xB4','DiacriticalDot':'\\u02D9','DiacriticalDoubleAcute':'\\u02DD','DiacriticalGrave':'`','DiacriticalTilde':'\\u02DC','diam':'\\u22C4','diamond':'\\u22C4','Diamond':'\\u22C4','diamondsuit':'\\u2666','diams':'\\u2666','die':'\\xA8','DifferentialD':'\\u2146','digamma':'\\u03DD','disin':'\\u22F2','div':'\\xF7','divide':'\\xF7','divideontimes':'\\u22C7','divonx':'\\u22C7','djcy':'\\u0452','DJcy':'\\u0402','dlcorn':'\\u231E','dlcrop':'\\u230D','dollar':'$','dopf':'\\uD835\\uDD55','Dopf':'\\uD835\\uDD3B','dot':'\\u02D9','Dot':'\\xA8','DotDot':'\\u20DC','doteq':'\\u2250','doteqdot':'\\u2251','DotEqual':'\\u2250','dotminus':'\\u2238','dotplus':'\\u2214','dotsquare':'\\u22A1','doublebarwedge':'\\u2306','DoubleContourIntegral':'\\u222F','DoubleDot':'\\xA8','DoubleDownArrow':'\\u21D3','DoubleLeftArrow':'\\u21D0','DoubleLeftRightArrow':'\\u21D4','DoubleLeftTee':'\\u2AE4','DoubleLongLeftArrow':'\\u27F8','DoubleLongLeftRightArrow':'\\u27FA','DoubleLongRightArrow':'\\u27F9','DoubleRightArrow':'\\u21D2','DoubleRightTee':'\\u22A8','DoubleUpArrow':'\\u21D1','DoubleUpDownArrow':'\\u21D5','DoubleVerticalBar':'\\u2225','downarrow':'\\u2193','Downarrow':'\\u21D3','DownArrow':'\\u2193','DownArrowBar':'\\u2913','DownArrowUpArrow':'\\u21F5','DownBreve':'\\u0311','downdownarrows':'\\u21CA','downharpoonleft':'\\u21C3','downharpoonright':'\\u21C2','DownLeftRightVector':'\\u2950','DownLeftTeeVector':'\\u295E','DownLeftVector':'\\u21BD','DownLeftVectorBar':'\\u2956','DownRightTeeVector':'\\u295F','DownRightVector':'\\u21C1','DownRightVectorBar':'\\u2957','DownTee':'\\u22A4','DownTeeArrow':'\\u21A7','drbkarow':'\\u2910','drcorn':'\\u231F','drcrop':'\\u230C','dscr':'\\uD835\\uDCB9','Dscr':'\\uD835\\uDC9F','dscy':'\\u0455','DScy':'\\u0405','dsol':'\\u29F6','dstrok':'\\u0111','Dstrok':'\\u0110','dtdot':'\\u22F1','dtri':'\\u25BF','dtrif':'\\u25BE','duarr':'\\u21F5','duhar':'\\u296F','dwangle':'\\u29A6','dzcy':'\\u045F','DZcy':'\\u040F','dzigrarr':'\\u27FF','eacute':'\\xE9','Eacute':'\\xC9','easter':'\\u2A6E','ecaron':'\\u011B','Ecaron':'\\u011A','ecir':'\\u2256','ecirc':'\\xEA','Ecirc':'\\xCA','ecolon':'\\u2255','ecy':'\\u044D','Ecy':'\\u042D','eDDot':'\\u2A77','edot':'\\u0117','eDot':'\\u2251','Edot':'\\u0116','ee':'\\u2147','efDot':'\\u2252','efr':'\\uD835\\uDD22','Efr':'\\uD835\\uDD08','eg':'\\u2A9A','egrave':'\\xE8','Egrave':'\\xC8','egs':'\\u2A96','egsdot':'\\u2A98','el':'\\u2A99','Element':'\\u2208','elinters':'\\u23E7','ell':'\\u2113','els':'\\u2A95','elsdot':'\\u2A97','emacr':'\\u0113','Emacr':'\\u0112','empty':'\\u2205','emptyset':'\\u2205','EmptySmallSquare':'\\u25FB','emptyv':'\\u2205','EmptyVerySmallSquare':'\\u25AB','emsp':'\\u2003','emsp13':'\\u2004','emsp14':'\\u2005','eng':'\\u014B','ENG':'\\u014A','ensp':'\\u2002','eogon':'\\u0119','Eogon':'\\u0118','eopf':'\\uD835\\uDD56','Eopf':'\\uD835\\uDD3C','epar':'\\u22D5','eparsl':'\\u29E3','eplus':'\\u2A71','epsi':'\\u03B5','epsilon':'\\u03B5','Epsilon':'\\u0395','epsiv':'\\u03F5','eqcirc':'\\u2256','eqcolon':'\\u2255','eqsim':'\\u2242','eqslantgtr':'\\u2A96','eqslantless':'\\u2A95','Equal':'\\u2A75','equals':'=','EqualTilde':'\\u2242','equest':'\\u225F','Equilibrium':'\\u21CC','equiv':'\\u2261','equivDD':'\\u2A78','eqvparsl':'\\u29E5','erarr':'\\u2971','erDot':'\\u2253','escr':'\\u212F','Escr':'\\u2130','esdot':'\\u2250','esim':'\\u2242','Esim':'\\u2A73','eta':'\\u03B7','Eta':'\\u0397','eth':'\\xF0','ETH':'\\xD0','euml':'\\xEB','Euml':'\\xCB','euro':'\\u20AC','excl':'!','exist':'\\u2203','Exists':'\\u2203','expectation':'\\u2130','exponentiale':'\\u2147','ExponentialE':'\\u2147','fallingdotseq':'\\u2252','fcy':'\\u0444','Fcy':'\\u0424','female':'\\u2640','ffilig':'\\uFB03','fflig':'\\uFB00','ffllig':'\\uFB04','ffr':'\\uD835\\uDD23','Ffr':'\\uD835\\uDD09','filig':'\\uFB01','FilledSmallSquare':'\\u25FC','FilledVerySmallSquare':'\\u25AA','fjlig':'fj','flat':'\\u266D','fllig':'\\uFB02','fltns':'\\u25B1','fnof':'\\u0192','fopf':'\\uD835\\uDD57','Fopf':'\\uD835\\uDD3D','forall':'\\u2200','ForAll':'\\u2200','fork':'\\u22D4','forkv':'\\u2AD9','Fouriertrf':'\\u2131','fpartint':'\\u2A0D','frac12':'\\xBD','frac13':'\\u2153','frac14':'\\xBC','frac15':'\\u2155','frac16':'\\u2159','frac18':'\\u215B','frac23':'\\u2154','frac25':'\\u2156','frac34':'\\xBE','frac35':'\\u2157','frac38':'\\u215C','frac45':'\\u2158','frac56':'\\u215A','frac58':'\\u215D','frac78':'\\u215E','frasl':'\\u2044','frown':'\\u2322','fscr':'\\uD835\\uDCBB','Fscr':'\\u2131','gacute':'\\u01F5','gamma':'\\u03B3','Gamma':'\\u0393','gammad':'\\u03DD','Gammad':'\\u03DC','gap':'\\u2A86','gbreve':'\\u011F','Gbreve':'\\u011E','Gcedil':'\\u0122','gcirc':'\\u011D','Gcirc':'\\u011C','gcy':'\\u0433','Gcy':'\\u0413','gdot':'\\u0121','Gdot':'\\u0120','ge':'\\u2265','gE':'\\u2267','gel':'\\u22DB','gEl':'\\u2A8C','geq':'\\u2265','geqq':'\\u2267','geqslant':'\\u2A7E','ges':'\\u2A7E','gescc':'\\u2AA9','gesdot':'\\u2A80','gesdoto':'\\u2A82','gesdotol':'\\u2A84','gesl':'\\u22DB\\uFE00','gesles':'\\u2A94','gfr':'\\uD835\\uDD24','Gfr':'\\uD835\\uDD0A','gg':'\\u226B','Gg':'\\u22D9','ggg':'\\u22D9','gimel':'\\u2137','gjcy':'\\u0453','GJcy':'\\u0403','gl':'\\u2277','gla':'\\u2AA5','glE':'\\u2A92','glj':'\\u2AA4','gnap':'\\u2A8A','gnapprox':'\\u2A8A','gne':'\\u2A88','gnE':'\\u2269','gneq':'\\u2A88','gneqq':'\\u2269','gnsim':'\\u22E7','gopf':'\\uD835\\uDD58','Gopf':'\\uD835\\uDD3E','grave':'`','GreaterEqual':'\\u2265','GreaterEqualLess':'\\u22DB','GreaterFullEqual':'\\u2267','GreaterGreater':'\\u2AA2','GreaterLess':'\\u2277','GreaterSlantEqual':'\\u2A7E','GreaterTilde':'\\u2273','gscr':'\\u210A','Gscr':'\\uD835\\uDCA2','gsim':'\\u2273','gsime':'\\u2A8E','gsiml':'\\u2A90','gt':'>','Gt':'\\u226B','GT':'>','gtcc':'\\u2AA7','gtcir':'\\u2A7A','gtdot':'\\u22D7','gtlPar':'\\u2995','gtquest':'\\u2A7C','gtrapprox':'\\u2A86','gtrarr':'\\u2978','gtrdot':'\\u22D7','gtreqless':'\\u22DB','gtreqqless':'\\u2A8C','gtrless':'\\u2277','gtrsim':'\\u2273','gvertneqq':'\\u2269\\uFE00','gvnE':'\\u2269\\uFE00','Hacek':'\\u02C7','hairsp':'\\u200A','half':'\\xBD','hamilt':'\\u210B','hardcy':'\\u044A','HARDcy':'\\u042A','harr':'\\u2194','hArr':'\\u21D4','harrcir':'\\u2948','harrw':'\\u21AD','Hat':'^','hbar':'\\u210F','hcirc':'\\u0125','Hcirc':'\\u0124','hearts':'\\u2665','heartsuit':'\\u2665','hellip':'\\u2026','hercon':'\\u22B9','hfr':'\\uD835\\uDD25','Hfr':'\\u210C','HilbertSpace':'\\u210B','hksearow':'\\u2925','hkswarow':'\\u2926','hoarr':'\\u21FF','homtht':'\\u223B','hookleftarrow':'\\u21A9','hookrightarrow':'\\u21AA','hopf':'\\uD835\\uDD59','Hopf':'\\u210D','horbar':'\\u2015','HorizontalLine':'\\u2500','hscr':'\\uD835\\uDCBD','Hscr':'\\u210B','hslash':'\\u210F','hstrok':'\\u0127','Hstrok':'\\u0126','HumpDownHump':'\\u224E','HumpEqual':'\\u224F','hybull':'\\u2043','hyphen':'\\u2010','iacute':'\\xED','Iacute':'\\xCD','ic':'\\u2063','icirc':'\\xEE','Icirc':'\\xCE','icy':'\\u0438','Icy':'\\u0418','Idot':'\\u0130','iecy':'\\u0435','IEcy':'\\u0415','iexcl':'\\xA1','iff':'\\u21D4','ifr':'\\uD835\\uDD26','Ifr':'\\u2111','igrave':'\\xEC','Igrave':'\\xCC','ii':'\\u2148','iiiint':'\\u2A0C','iiint':'\\u222D','iinfin':'\\u29DC','iiota':'\\u2129','ijlig':'\\u0133','IJlig':'\\u0132','Im':'\\u2111','imacr':'\\u012B','Imacr':'\\u012A','image':'\\u2111','ImaginaryI':'\\u2148','imagline':'\\u2110','imagpart':'\\u2111','imath':'\\u0131','imof':'\\u22B7','imped':'\\u01B5','Implies':'\\u21D2','in':'\\u2208','incare':'\\u2105','infin':'\\u221E','infintie':'\\u29DD','inodot':'\\u0131','int':'\\u222B','Int':'\\u222C','intcal':'\\u22BA','integers':'\\u2124','Integral':'\\u222B','intercal':'\\u22BA','Intersection':'\\u22C2','intlarhk':'\\u2A17','intprod':'\\u2A3C','InvisibleComma':'\\u2063','InvisibleTimes':'\\u2062','iocy':'\\u0451','IOcy':'\\u0401','iogon':'\\u012F','Iogon':'\\u012E','iopf':'\\uD835\\uDD5A','Iopf':'\\uD835\\uDD40','iota':'\\u03B9','Iota':'\\u0399','iprod':'\\u2A3C','iquest':'\\xBF','iscr':'\\uD835\\uDCBE','Iscr':'\\u2110','isin':'\\u2208','isindot':'\\u22F5','isinE':'\\u22F9','isins':'\\u22F4','isinsv':'\\u22F3','isinv':'\\u2208','it':'\\u2062','itilde':'\\u0129','Itilde':'\\u0128','iukcy':'\\u0456','Iukcy':'\\u0406','iuml':'\\xEF','Iuml':'\\xCF','jcirc':'\\u0135','Jcirc':'\\u0134','jcy':'\\u0439','Jcy':'\\u0419','jfr':'\\uD835\\uDD27','Jfr':'\\uD835\\uDD0D','jmath':'\\u0237','jopf':'\\uD835\\uDD5B','Jopf':'\\uD835\\uDD41','jscr':'\\uD835\\uDCBF','Jscr':'\\uD835\\uDCA5','jsercy':'\\u0458','Jsercy':'\\u0408','jukcy':'\\u0454','Jukcy':'\\u0404','kappa':'\\u03BA','Kappa':'\\u039A','kappav':'\\u03F0','kcedil':'\\u0137','Kcedil':'\\u0136','kcy':'\\u043A','Kcy':'\\u041A','kfr':'\\uD835\\uDD28','Kfr':'\\uD835\\uDD0E','kgreen':'\\u0138','khcy':'\\u0445','KHcy':'\\u0425','kjcy':'\\u045C','KJcy':'\\u040C','kopf':'\\uD835\\uDD5C','Kopf':'\\uD835\\uDD42','kscr':'\\uD835\\uDCC0','Kscr':'\\uD835\\uDCA6','lAarr':'\\u21DA','lacute':'\\u013A','Lacute':'\\u0139','laemptyv':'\\u29B4','lagran':'\\u2112','lambda':'\\u03BB','Lambda':'\\u039B','lang':'\\u27E8','Lang':'\\u27EA','langd':'\\u2991','langle':'\\u27E8','lap':'\\u2A85','Laplacetrf':'\\u2112','laquo':'\\xAB','larr':'\\u2190','lArr':'\\u21D0','Larr':'\\u219E','larrb':'\\u21E4','larrbfs':'\\u291F','larrfs':'\\u291D','larrhk':'\\u21A9','larrlp':'\\u21AB','larrpl':'\\u2939','larrsim':'\\u2973','larrtl':'\\u21A2','lat':'\\u2AAB','latail':'\\u2919','lAtail':'\\u291B','late':'\\u2AAD','lates':'\\u2AAD\\uFE00','lbarr':'\\u290C','lBarr':'\\u290E','lbbrk':'\\u2772','lbrace':'{','lbrack':'[','lbrke':'\\u298B','lbrksld':'\\u298F','lbrkslu':'\\u298D','lcaron':'\\u013E','Lcaron':'\\u013D','lcedil':'\\u013C','Lcedil':'\\u013B','lceil':'\\u2308','lcub':'{','lcy':'\\u043B','Lcy':'\\u041B','ldca':'\\u2936','ldquo':'\\u201C','ldquor':'\\u201E','ldrdhar':'\\u2967','ldrushar':'\\u294B','ldsh':'\\u21B2','le':'\\u2264','lE':'\\u2266','LeftAngleBracket':'\\u27E8','leftarrow':'\\u2190','Leftarrow':'\\u21D0','LeftArrow':'\\u2190','LeftArrowBar':'\\u21E4','LeftArrowRightArrow':'\\u21C6','leftarrowtail':'\\u21A2','LeftCeiling':'\\u2308','LeftDoubleBracket':'\\u27E6','LeftDownTeeVector':'\\u2961','LeftDownVector':'\\u21C3','LeftDownVectorBar':'\\u2959','LeftFloor':'\\u230A','leftharpoondown':'\\u21BD','leftharpoonup':'\\u21BC','leftleftarrows':'\\u21C7','leftrightarrow':'\\u2194','Leftrightarrow':'\\u21D4','LeftRightArrow':'\\u2194','leftrightarrows':'\\u21C6','leftrightharpoons':'\\u21CB','leftrightsquigarrow':'\\u21AD','LeftRightVector':'\\u294E','LeftTee':'\\u22A3','LeftTeeArrow':'\\u21A4','LeftTeeVector':'\\u295A','leftthreetimes':'\\u22CB','LeftTriangle':'\\u22B2','LeftTriangleBar':'\\u29CF','LeftTriangleEqual':'\\u22B4','LeftUpDownVector':'\\u2951','LeftUpTeeVector':'\\u2960','LeftUpVector':'\\u21BF','LeftUpVectorBar':'\\u2958','LeftVector':'\\u21BC','LeftVectorBar':'\\u2952','leg':'\\u22DA','lEg':'\\u2A8B','leq':'\\u2264','leqq':'\\u2266','leqslant':'\\u2A7D','les':'\\u2A7D','lescc':'\\u2AA8','lesdot':'\\u2A7F','lesdoto':'\\u2A81','lesdotor':'\\u2A83','lesg':'\\u22DA\\uFE00','lesges':'\\u2A93','lessapprox':'\\u2A85','lessdot':'\\u22D6','lesseqgtr':'\\u22DA','lesseqqgtr':'\\u2A8B','LessEqualGreater':'\\u22DA','LessFullEqual':'\\u2266','LessGreater':'\\u2276','lessgtr':'\\u2276','LessLess':'\\u2AA1','lesssim':'\\u2272','LessSlantEqual':'\\u2A7D','LessTilde':'\\u2272','lfisht':'\\u297C','lfloor':'\\u230A','lfr':'\\uD835\\uDD29','Lfr':'\\uD835\\uDD0F','lg':'\\u2276','lgE':'\\u2A91','lHar':'\\u2962','lhard':'\\u21BD','lharu':'\\u21BC','lharul':'\\u296A','lhblk':'\\u2584','ljcy':'\\u0459','LJcy':'\\u0409','ll':'\\u226A','Ll':'\\u22D8','llarr':'\\u21C7','llcorner':'\\u231E','Lleftarrow':'\\u21DA','llhard':'\\u296B','lltri':'\\u25FA','lmidot':'\\u0140','Lmidot':'\\u013F','lmoust':'\\u23B0','lmoustache':'\\u23B0','lnap':'\\u2A89','lnapprox':'\\u2A89','lne':'\\u2A87','lnE':'\\u2268','lneq':'\\u2A87','lneqq':'\\u2268','lnsim':'\\u22E6','loang':'\\u27EC','loarr':'\\u21FD','lobrk':'\\u27E6','longleftarrow':'\\u27F5','Longleftarrow':'\\u27F8','LongLeftArrow':'\\u27F5','longleftrightarrow':'\\u27F7','Longleftrightarrow':'\\u27FA','LongLeftRightArrow':'\\u27F7','longmapsto':'\\u27FC','longrightarrow':'\\u27F6','Longrightarrow':'\\u27F9','LongRightArrow':'\\u27F6','looparrowleft':'\\u21AB','looparrowright':'\\u21AC','lopar':'\\u2985','lopf':'\\uD835\\uDD5D','Lopf':'\\uD835\\uDD43','loplus':'\\u2A2D','lotimes':'\\u2A34','lowast':'\\u2217','lowbar':'_','LowerLeftArrow':'\\u2199','LowerRightArrow':'\\u2198','loz':'\\u25CA','lozenge':'\\u25CA','lozf':'\\u29EB','lpar':'(','lparlt':'\\u2993','lrarr':'\\u21C6','lrcorner':'\\u231F','lrhar':'\\u21CB','lrhard':'\\u296D','lrm':'\\u200E','lrtri':'\\u22BF','lsaquo':'\\u2039','lscr':'\\uD835\\uDCC1','Lscr':'\\u2112','lsh':'\\u21B0','Lsh':'\\u21B0','lsim':'\\u2272','lsime':'\\u2A8D','lsimg':'\\u2A8F','lsqb':'[','lsquo':'\\u2018','lsquor':'\\u201A','lstrok':'\\u0142','Lstrok':'\\u0141','lt':'<','Lt':'\\u226A','LT':'<','ltcc':'\\u2AA6','ltcir':'\\u2A79','ltdot':'\\u22D6','lthree':'\\u22CB','ltimes':'\\u22C9','ltlarr':'\\u2976','ltquest':'\\u2A7B','ltri':'\\u25C3','ltrie':'\\u22B4','ltrif':'\\u25C2','ltrPar':'\\u2996','lurdshar':'\\u294A','luruhar':'\\u2966','lvertneqq':'\\u2268\\uFE00','lvnE':'\\u2268\\uFE00','macr':'\\xAF','male':'\\u2642','malt':'\\u2720','maltese':'\\u2720','map':'\\u21A6','Map':'\\u2905','mapsto':'\\u21A6','mapstodown':'\\u21A7','mapstoleft':'\\u21A4','mapstoup':'\\u21A5','marker':'\\u25AE','mcomma':'\\u2A29','mcy':'\\u043C','Mcy':'\\u041C','mdash':'\\u2014','mDDot':'\\u223A','measuredangle':'\\u2221','MediumSpace':'\\u205F','Mellintrf':'\\u2133','mfr':'\\uD835\\uDD2A','Mfr':'\\uD835\\uDD10','mho':'\\u2127','micro':'\\xB5','mid':'\\u2223','midast':'*','midcir':'\\u2AF0','middot':'\\xB7','minus':'\\u2212','minusb':'\\u229F','minusd':'\\u2238','minusdu':'\\u2A2A','MinusPlus':'\\u2213','mlcp':'\\u2ADB','mldr':'\\u2026','mnplus':'\\u2213','models':'\\u22A7','mopf':'\\uD835\\uDD5E','Mopf':'\\uD835\\uDD44','mp':'\\u2213','mscr':'\\uD835\\uDCC2','Mscr':'\\u2133','mstpos':'\\u223E','mu':'\\u03BC','Mu':'\\u039C','multimap':'\\u22B8','mumap':'\\u22B8','nabla':'\\u2207','nacute':'\\u0144','Nacute':'\\u0143','nang':'\\u2220\\u20D2','nap':'\\u2249','napE':'\\u2A70\\u0338','napid':'\\u224B\\u0338','napos':'\\u0149','napprox':'\\u2249','natur':'\\u266E','natural':'\\u266E','naturals':'\\u2115','nbsp':'\\xA0','nbump':'\\u224E\\u0338','nbumpe':'\\u224F\\u0338','ncap':'\\u2A43','ncaron':'\\u0148','Ncaron':'\\u0147','ncedil':'\\u0146','Ncedil':'\\u0145','ncong':'\\u2247','ncongdot':'\\u2A6D\\u0338','ncup':'\\u2A42','ncy':'\\u043D','Ncy':'\\u041D','ndash':'\\u2013','ne':'\\u2260','nearhk':'\\u2924','nearr':'\\u2197','neArr':'\\u21D7','nearrow':'\\u2197','nedot':'\\u2250\\u0338','NegativeMediumSpace':'\\u200B','NegativeThickSpace':'\\u200B','NegativeThinSpace':'\\u200B','NegativeVeryThinSpace':'\\u200B','nequiv':'\\u2262','nesear':'\\u2928','nesim':'\\u2242\\u0338','NestedGreaterGreater':'\\u226B','NestedLessLess':'\\u226A','NewLine':'\\n','nexist':'\\u2204','nexists':'\\u2204','nfr':'\\uD835\\uDD2B','Nfr':'\\uD835\\uDD11','nge':'\\u2271','ngE':'\\u2267\\u0338','ngeq':'\\u2271','ngeqq':'\\u2267\\u0338','ngeqslant':'\\u2A7E\\u0338','nges':'\\u2A7E\\u0338','nGg':'\\u22D9\\u0338','ngsim':'\\u2275','ngt':'\\u226F','nGt':'\\u226B\\u20D2','ngtr':'\\u226F','nGtv':'\\u226B\\u0338','nharr':'\\u21AE','nhArr':'\\u21CE','nhpar':'\\u2AF2','ni':'\\u220B','nis':'\\u22FC','nisd':'\\u22FA','niv':'\\u220B','njcy':'\\u045A','NJcy':'\\u040A','nlarr':'\\u219A','nlArr':'\\u21CD','nldr':'\\u2025','nle':'\\u2270','nlE':'\\u2266\\u0338','nleftarrow':'\\u219A','nLeftarrow':'\\u21CD','nleftrightarrow':'\\u21AE','nLeftrightarrow':'\\u21CE','nleq':'\\u2270','nleqq':'\\u2266\\u0338','nleqslant':'\\u2A7D\\u0338','nles':'\\u2A7D\\u0338','nless':'\\u226E','nLl':'\\u22D8\\u0338','nlsim':'\\u2274','nlt':'\\u226E','nLt':'\\u226A\\u20D2','nltri':'\\u22EA','nltrie':'\\u22EC','nLtv':'\\u226A\\u0338','nmid':'\\u2224','NoBreak':'\\u2060','NonBreakingSpace':'\\xA0','nopf':'\\uD835\\uDD5F','Nopf':'\\u2115','not':'\\xAC','Not':'\\u2AEC','NotCongruent':'\\u2262','NotCupCap':'\\u226D','NotDoubleVerticalBar':'\\u2226','NotElement':'\\u2209','NotEqual':'\\u2260','NotEqualTilde':'\\u2242\\u0338','NotExists':'\\u2204','NotGreater':'\\u226F','NotGreaterEqual':'\\u2271','NotGreaterFullEqual':'\\u2267\\u0338','NotGreaterGreater':'\\u226B\\u0338','NotGreaterLess':'\\u2279','NotGreaterSlantEqual':'\\u2A7E\\u0338','NotGreaterTilde':'\\u2275','NotHumpDownHump':'\\u224E\\u0338','NotHumpEqual':'\\u224F\\u0338','notin':'\\u2209','notindot':'\\u22F5\\u0338','notinE':'\\u22F9\\u0338','notinva':'\\u2209','notinvb':'\\u22F7','notinvc':'\\u22F6','NotLeftTriangle':'\\u22EA','NotLeftTriangleBar':'\\u29CF\\u0338','NotLeftTriangleEqual':'\\u22EC','NotLess':'\\u226E','NotLessEqual':'\\u2270','NotLessGreater':'\\u2278','NotLessLess':'\\u226A\\u0338','NotLessSlantEqual':'\\u2A7D\\u0338','NotLessTilde':'\\u2274','NotNestedGreaterGreater':'\\u2AA2\\u0338','NotNestedLessLess':'\\u2AA1\\u0338','notni':'\\u220C','notniva':'\\u220C','notnivb':'\\u22FE','notnivc':'\\u22FD','NotPrecedes':'\\u2280','NotPrecedesEqual':'\\u2AAF\\u0338','NotPrecedesSlantEqual':'\\u22E0','NotReverseElement':'\\u220C','NotRightTriangle':'\\u22EB','NotRightTriangleBar':'\\u29D0\\u0338','NotRightTriangleEqual':'\\u22ED','NotSquareSubset':'\\u228F\\u0338','NotSquareSubsetEqual':'\\u22E2','NotSquareSuperset':'\\u2290\\u0338','NotSquareSupersetEqual':'\\u22E3','NotSubset':'\\u2282\\u20D2','NotSubsetEqual':'\\u2288','NotSucceeds':'\\u2281','NotSucceedsEqual':'\\u2AB0\\u0338','NotSucceedsSlantEqual':'\\u22E1','NotSucceedsTilde':'\\u227F\\u0338','NotSuperset':'\\u2283\\u20D2','NotSupersetEqual':'\\u2289','NotTilde':'\\u2241','NotTildeEqual':'\\u2244','NotTildeFullEqual':'\\u2247','NotTildeTilde':'\\u2249','NotVerticalBar':'\\u2224','npar':'\\u2226','nparallel':'\\u2226','nparsl':'\\u2AFD\\u20E5','npart':'\\u2202\\u0338','npolint':'\\u2A14','npr':'\\u2280','nprcue':'\\u22E0','npre':'\\u2AAF\\u0338','nprec':'\\u2280','npreceq':'\\u2AAF\\u0338','nrarr':'\\u219B','nrArr':'\\u21CF','nrarrc':'\\u2933\\u0338','nrarrw':'\\u219D\\u0338','nrightarrow':'\\u219B','nRightarrow':'\\u21CF','nrtri':'\\u22EB','nrtrie':'\\u22ED','nsc':'\\u2281','nsccue':'\\u22E1','nsce':'\\u2AB0\\u0338','nscr':'\\uD835\\uDCC3','Nscr':'\\uD835\\uDCA9','nshortmid':'\\u2224','nshortparallel':'\\u2226','nsim':'\\u2241','nsime':'\\u2244','nsimeq':'\\u2244','nsmid':'\\u2224','nspar':'\\u2226','nsqsube':'\\u22E2','nsqsupe':'\\u22E3','nsub':'\\u2284','nsube':'\\u2288','nsubE':'\\u2AC5\\u0338','nsubset':'\\u2282\\u20D2','nsubseteq':'\\u2288','nsubseteqq':'\\u2AC5\\u0338','nsucc':'\\u2281','nsucceq':'\\u2AB0\\u0338','nsup':'\\u2285','nsupe':'\\u2289','nsupE':'\\u2AC6\\u0338','nsupset':'\\u2283\\u20D2','nsupseteq':'\\u2289','nsupseteqq':'\\u2AC6\\u0338','ntgl':'\\u2279','ntilde':'\\xF1','Ntilde':'\\xD1','ntlg':'\\u2278','ntriangleleft':'\\u22EA','ntrianglelefteq':'\\u22EC','ntriangleright':'\\u22EB','ntrianglerighteq':'\\u22ED','nu':'\\u03BD','Nu':'\\u039D','num':'#','numero':'\\u2116','numsp':'\\u2007','nvap':'\\u224D\\u20D2','nvdash':'\\u22AC','nvDash':'\\u22AD','nVdash':'\\u22AE','nVDash':'\\u22AF','nvge':'\\u2265\\u20D2','nvgt':'>\\u20D2','nvHarr':'\\u2904','nvinfin':'\\u29DE','nvlArr':'\\u2902','nvle':'\\u2264\\u20D2','nvlt':'<\\u20D2','nvltrie':'\\u22B4\\u20D2','nvrArr':'\\u2903','nvrtrie':'\\u22B5\\u20D2','nvsim':'\\u223C\\u20D2','nwarhk':'\\u2923','nwarr':'\\u2196','nwArr':'\\u21D6','nwarrow':'\\u2196','nwnear':'\\u2927','oacute':'\\xF3','Oacute':'\\xD3','oast':'\\u229B','ocir':'\\u229A','ocirc':'\\xF4','Ocirc':'\\xD4','ocy':'\\u043E','Ocy':'\\u041E','odash':'\\u229D','odblac':'\\u0151','Odblac':'\\u0150','odiv':'\\u2A38','odot':'\\u2299','odsold':'\\u29BC','oelig':'\\u0153','OElig':'\\u0152','ofcir':'\\u29BF','ofr':'\\uD835\\uDD2C','Ofr':'\\uD835\\uDD12','ogon':'\\u02DB','ograve':'\\xF2','Ograve':'\\xD2','ogt':'\\u29C1','ohbar':'\\u29B5','ohm':'\\u03A9','oint':'\\u222E','olarr':'\\u21BA','olcir':'\\u29BE','olcross':'\\u29BB','oline':'\\u203E','olt':'\\u29C0','omacr':'\\u014D','Omacr':'\\u014C','omega':'\\u03C9','Omega':'\\u03A9','omicron':'\\u03BF','Omicron':'\\u039F','omid':'\\u29B6','ominus':'\\u2296','oopf':'\\uD835\\uDD60','Oopf':'\\uD835\\uDD46','opar':'\\u29B7','OpenCurlyDoubleQuote':'\\u201C','OpenCurlyQuote':'\\u2018','operp':'\\u29B9','oplus':'\\u2295','or':'\\u2228','Or':'\\u2A54','orarr':'\\u21BB','ord':'\\u2A5D','order':'\\u2134','orderof':'\\u2134','ordf':'\\xAA','ordm':'\\xBA','origof':'\\u22B6','oror':'\\u2A56','orslope':'\\u2A57','orv':'\\u2A5B','oS':'\\u24C8','oscr':'\\u2134','Oscr':'\\uD835\\uDCAA','oslash':'\\xF8','Oslash':'\\xD8','osol':'\\u2298','otilde':'\\xF5','Otilde':'\\xD5','otimes':'\\u2297','Otimes':'\\u2A37','otimesas':'\\u2A36','ouml':'\\xF6','Ouml':'\\xD6','ovbar':'\\u233D','OverBar':'\\u203E','OverBrace':'\\u23DE','OverBracket':'\\u23B4','OverParenthesis':'\\u23DC','par':'\\u2225','para':'\\xB6','parallel':'\\u2225','parsim':'\\u2AF3','parsl':'\\u2AFD','part':'\\u2202','PartialD':'\\u2202','pcy':'\\u043F','Pcy':'\\u041F','percnt':'%','period':'.','permil':'\\u2030','perp':'\\u22A5','pertenk':'\\u2031','pfr':'\\uD835\\uDD2D','Pfr':'\\uD835\\uDD13','phi':'\\u03C6','Phi':'\\u03A6','phiv':'\\u03D5','phmmat':'\\u2133','phone':'\\u260E','pi':'\\u03C0','Pi':'\\u03A0','pitchfork':'\\u22D4','piv':'\\u03D6','planck':'\\u210F','planckh':'\\u210E','plankv':'\\u210F','plus':'+','plusacir':'\\u2A23','plusb':'\\u229E','pluscir':'\\u2A22','plusdo':'\\u2214','plusdu':'\\u2A25','pluse':'\\u2A72','PlusMinus':'\\xB1','plusmn':'\\xB1','plussim':'\\u2A26','plustwo':'\\u2A27','pm':'\\xB1','Poincareplane':'\\u210C','pointint':'\\u2A15','popf':'\\uD835\\uDD61','Popf':'\\u2119','pound':'\\xA3','pr':'\\u227A','Pr':'\\u2ABB','prap':'\\u2AB7','prcue':'\\u227C','pre':'\\u2AAF','prE':'\\u2AB3','prec':'\\u227A','precapprox':'\\u2AB7','preccurlyeq':'\\u227C','Precedes':'\\u227A','PrecedesEqual':'\\u2AAF','PrecedesSlantEqual':'\\u227C','PrecedesTilde':'\\u227E','preceq':'\\u2AAF','precnapprox':'\\u2AB9','precneqq':'\\u2AB5','precnsim':'\\u22E8','precsim':'\\u227E','prime':'\\u2032','Prime':'\\u2033','primes':'\\u2119','prnap':'\\u2AB9','prnE':'\\u2AB5','prnsim':'\\u22E8','prod':'\\u220F','Product':'\\u220F','profalar':'\\u232E','profline':'\\u2312','profsurf':'\\u2313','prop':'\\u221D','Proportion':'\\u2237','Proportional':'\\u221D','propto':'\\u221D','prsim':'\\u227E','prurel':'\\u22B0','pscr':'\\uD835\\uDCC5','Pscr':'\\uD835\\uDCAB','psi':'\\u03C8','Psi':'\\u03A8','puncsp':'\\u2008','qfr':'\\uD835\\uDD2E','Qfr':'\\uD835\\uDD14','qint':'\\u2A0C','qopf':'\\uD835\\uDD62','Qopf':'\\u211A','qprime':'\\u2057','qscr':'\\uD835\\uDCC6','Qscr':'\\uD835\\uDCAC','quaternions':'\\u210D','quatint':'\\u2A16','quest':'?','questeq':'\\u225F','quot':'\"','QUOT':'\"','rAarr':'\\u21DB','race':'\\u223D\\u0331','racute':'\\u0155','Racute':'\\u0154','radic':'\\u221A','raemptyv':'\\u29B3','rang':'\\u27E9','Rang':'\\u27EB','rangd':'\\u2992','range':'\\u29A5','rangle':'\\u27E9','raquo':'\\xBB','rarr':'\\u2192','rArr':'\\u21D2','Rarr':'\\u21A0','rarrap':'\\u2975','rarrb':'\\u21E5','rarrbfs':'\\u2920','rarrc':'\\u2933','rarrfs':'\\u291E','rarrhk':'\\u21AA','rarrlp':'\\u21AC','rarrpl':'\\u2945','rarrsim':'\\u2974','rarrtl':'\\u21A3','Rarrtl':'\\u2916','rarrw':'\\u219D','ratail':'\\u291A','rAtail':'\\u291C','ratio':'\\u2236','rationals':'\\u211A','rbarr':'\\u290D','rBarr':'\\u290F','RBarr':'\\u2910','rbbrk':'\\u2773','rbrace':'}','rbrack':']','rbrke':'\\u298C','rbrksld':'\\u298E','rbrkslu':'\\u2990','rcaron':'\\u0159','Rcaron':'\\u0158','rcedil':'\\u0157','Rcedil':'\\u0156','rceil':'\\u2309','rcub':'}','rcy':'\\u0440','Rcy':'\\u0420','rdca':'\\u2937','rdldhar':'\\u2969','rdquo':'\\u201D','rdquor':'\\u201D','rdsh':'\\u21B3','Re':'\\u211C','real':'\\u211C','realine':'\\u211B','realpart':'\\u211C','reals':'\\u211D','rect':'\\u25AD','reg':'\\xAE','REG':'\\xAE','ReverseElement':'\\u220B','ReverseEquilibrium':'\\u21CB','ReverseUpEquilibrium':'\\u296F','rfisht':'\\u297D','rfloor':'\\u230B','rfr':'\\uD835\\uDD2F','Rfr':'\\u211C','rHar':'\\u2964','rhard':'\\u21C1','rharu':'\\u21C0','rharul':'\\u296C','rho':'\\u03C1','Rho':'\\u03A1','rhov':'\\u03F1','RightAngleBracket':'\\u27E9','rightarrow':'\\u2192','Rightarrow':'\\u21D2','RightArrow':'\\u2192','RightArrowBar':'\\u21E5','RightArrowLeftArrow':'\\u21C4','rightarrowtail':'\\u21A3','RightCeiling':'\\u2309','RightDoubleBracket':'\\u27E7','RightDownTeeVector':'\\u295D','RightDownVector':'\\u21C2','RightDownVectorBar':'\\u2955','RightFloor':'\\u230B','rightharpoondown':'\\u21C1','rightharpoonup':'\\u21C0','rightleftarrows':'\\u21C4','rightleftharpoons':'\\u21CC','rightrightarrows':'\\u21C9','rightsquigarrow':'\\u219D','RightTee':'\\u22A2','RightTeeArrow':'\\u21A6','RightTeeVector':'\\u295B','rightthreetimes':'\\u22CC','RightTriangle':'\\u22B3','RightTriangleBar':'\\u29D0','RightTriangleEqual':'\\u22B5','RightUpDownVector':'\\u294F','RightUpTeeVector':'\\u295C','RightUpVector':'\\u21BE','RightUpVectorBar':'\\u2954','RightVector':'\\u21C0','RightVectorBar':'\\u2953','ring':'\\u02DA','risingdotseq':'\\u2253','rlarr':'\\u21C4','rlhar':'\\u21CC','rlm':'\\u200F','rmoust':'\\u23B1','rmoustache':'\\u23B1','rnmid':'\\u2AEE','roang':'\\u27ED','roarr':'\\u21FE','robrk':'\\u27E7','ropar':'\\u2986','ropf':'\\uD835\\uDD63','Ropf':'\\u211D','roplus':'\\u2A2E','rotimes':'\\u2A35','RoundImplies':'\\u2970','rpar':')','rpargt':'\\u2994','rppolint':'\\u2A12','rrarr':'\\u21C9','Rrightarrow':'\\u21DB','rsaquo':'\\u203A','rscr':'\\uD835\\uDCC7','Rscr':'\\u211B','rsh':'\\u21B1','Rsh':'\\u21B1','rsqb':']','rsquo':'\\u2019','rsquor':'\\u2019','rthree':'\\u22CC','rtimes':'\\u22CA','rtri':'\\u25B9','rtrie':'\\u22B5','rtrif':'\\u25B8','rtriltri':'\\u29CE','RuleDelayed':'\\u29F4','ruluhar':'\\u2968','rx':'\\u211E','sacute':'\\u015B','Sacute':'\\u015A','sbquo':'\\u201A','sc':'\\u227B','Sc':'\\u2ABC','scap':'\\u2AB8','scaron':'\\u0161','Scaron':'\\u0160','sccue':'\\u227D','sce':'\\u2AB0','scE':'\\u2AB4','scedil':'\\u015F','Scedil':'\\u015E','scirc':'\\u015D','Scirc':'\\u015C','scnap':'\\u2ABA','scnE':'\\u2AB6','scnsim':'\\u22E9','scpolint':'\\u2A13','scsim':'\\u227F','scy':'\\u0441','Scy':'\\u0421','sdot':'\\u22C5','sdotb':'\\u22A1','sdote':'\\u2A66','searhk':'\\u2925','searr':'\\u2198','seArr':'\\u21D8','searrow':'\\u2198','sect':'\\xA7','semi':';','seswar':'\\u2929','setminus':'\\u2216','setmn':'\\u2216','sext':'\\u2736','sfr':'\\uD835\\uDD30','Sfr':'\\uD835\\uDD16','sfrown':'\\u2322','sharp':'\\u266F','shchcy':'\\u0449','SHCHcy':'\\u0429','shcy':'\\u0448','SHcy':'\\u0428','ShortDownArrow':'\\u2193','ShortLeftArrow':'\\u2190','shortmid':'\\u2223','shortparallel':'\\u2225','ShortRightArrow':'\\u2192','ShortUpArrow':'\\u2191','shy':'\\xAD','sigma':'\\u03C3','Sigma':'\\u03A3','sigmaf':'\\u03C2','sigmav':'\\u03C2','sim':'\\u223C','simdot':'\\u2A6A','sime':'\\u2243','simeq':'\\u2243','simg':'\\u2A9E','simgE':'\\u2AA0','siml':'\\u2A9D','simlE':'\\u2A9F','simne':'\\u2246','simplus':'\\u2A24','simrarr':'\\u2972','slarr':'\\u2190','SmallCircle':'\\u2218','smallsetminus':'\\u2216','smashp':'\\u2A33','smeparsl':'\\u29E4','smid':'\\u2223','smile':'\\u2323','smt':'\\u2AAA','smte':'\\u2AAC','smtes':'\\u2AAC\\uFE00','softcy':'\\u044C','SOFTcy':'\\u042C','sol':'/','solb':'\\u29C4','solbar':'\\u233F','sopf':'\\uD835\\uDD64','Sopf':'\\uD835\\uDD4A','spades':'\\u2660','spadesuit':'\\u2660','spar':'\\u2225','sqcap':'\\u2293','sqcaps':'\\u2293\\uFE00','sqcup':'\\u2294','sqcups':'\\u2294\\uFE00','Sqrt':'\\u221A','sqsub':'\\u228F','sqsube':'\\u2291','sqsubset':'\\u228F','sqsubseteq':'\\u2291','sqsup':'\\u2290','sqsupe':'\\u2292','sqsupset':'\\u2290','sqsupseteq':'\\u2292','squ':'\\u25A1','square':'\\u25A1','Square':'\\u25A1','SquareIntersection':'\\u2293','SquareSubset':'\\u228F','SquareSubsetEqual':'\\u2291','SquareSuperset':'\\u2290','SquareSupersetEqual':'\\u2292','SquareUnion':'\\u2294','squarf':'\\u25AA','squf':'\\u25AA','srarr':'\\u2192','sscr':'\\uD835\\uDCC8','Sscr':'\\uD835\\uDCAE','ssetmn':'\\u2216','ssmile':'\\u2323','sstarf':'\\u22C6','star':'\\u2606','Star':'\\u22C6','starf':'\\u2605','straightepsilon':'\\u03F5','straightphi':'\\u03D5','strns':'\\xAF','sub':'\\u2282','Sub':'\\u22D0','subdot':'\\u2ABD','sube':'\\u2286','subE':'\\u2AC5','subedot':'\\u2AC3','submult':'\\u2AC1','subne':'\\u228A','subnE':'\\u2ACB','subplus':'\\u2ABF','subrarr':'\\u2979','subset':'\\u2282','Subset':'\\u22D0','subseteq':'\\u2286','subseteqq':'\\u2AC5','SubsetEqual':'\\u2286','subsetneq':'\\u228A','subsetneqq':'\\u2ACB','subsim':'\\u2AC7','subsub':'\\u2AD5','subsup':'\\u2AD3','succ':'\\u227B','succapprox':'\\u2AB8','succcurlyeq':'\\u227D','Succeeds':'\\u227B','SucceedsEqual':'\\u2AB0','SucceedsSlantEqual':'\\u227D','SucceedsTilde':'\\u227F','succeq':'\\u2AB0','succnapprox':'\\u2ABA','succneqq':'\\u2AB6','succnsim':'\\u22E9','succsim':'\\u227F','SuchThat':'\\u220B','sum':'\\u2211','Sum':'\\u2211','sung':'\\u266A','sup':'\\u2283','Sup':'\\u22D1','sup1':'\\xB9','sup2':'\\xB2','sup3':'\\xB3','supdot':'\\u2ABE','supdsub':'\\u2AD8','supe':'\\u2287','supE':'\\u2AC6','supedot':'\\u2AC4','Superset':'\\u2283','SupersetEqual':'\\u2287','suphsol':'\\u27C9','suphsub':'\\u2AD7','suplarr':'\\u297B','supmult':'\\u2AC2','supne':'\\u228B','supnE':'\\u2ACC','supplus':'\\u2AC0','supset':'\\u2283','Supset':'\\u22D1','supseteq':'\\u2287','supseteqq':'\\u2AC6','supsetneq':'\\u228B','supsetneqq':'\\u2ACC','supsim':'\\u2AC8','supsub':'\\u2AD4','supsup':'\\u2AD6','swarhk':'\\u2926','swarr':'\\u2199','swArr':'\\u21D9','swarrow':'\\u2199','swnwar':'\\u292A','szlig':'\\xDF','Tab':'\\t','target':'\\u2316','tau':'\\u03C4','Tau':'\\u03A4','tbrk':'\\u23B4','tcaron':'\\u0165','Tcaron':'\\u0164','tcedil':'\\u0163','Tcedil':'\\u0162','tcy':'\\u0442','Tcy':'\\u0422','tdot':'\\u20DB','telrec':'\\u2315','tfr':'\\uD835\\uDD31','Tfr':'\\uD835\\uDD17','there4':'\\u2234','therefore':'\\u2234','Therefore':'\\u2234','theta':'\\u03B8','Theta':'\\u0398','thetasym':'\\u03D1','thetav':'\\u03D1','thickapprox':'\\u2248','thicksim':'\\u223C','ThickSpace':'\\u205F\\u200A','thinsp':'\\u2009','ThinSpace':'\\u2009','thkap':'\\u2248','thksim':'\\u223C','thorn':'\\xFE','THORN':'\\xDE','tilde':'\\u02DC','Tilde':'\\u223C','TildeEqual':'\\u2243','TildeFullEqual':'\\u2245','TildeTilde':'\\u2248','times':'\\xD7','timesb':'\\u22A0','timesbar':'\\u2A31','timesd':'\\u2A30','tint':'\\u222D','toea':'\\u2928','top':'\\u22A4','topbot':'\\u2336','topcir':'\\u2AF1','topf':'\\uD835\\uDD65','Topf':'\\uD835\\uDD4B','topfork':'\\u2ADA','tosa':'\\u2929','tprime':'\\u2034','trade':'\\u2122','TRADE':'\\u2122','triangle':'\\u25B5','triangledown':'\\u25BF','triangleleft':'\\u25C3','trianglelefteq':'\\u22B4','triangleq':'\\u225C','triangleright':'\\u25B9','trianglerighteq':'\\u22B5','tridot':'\\u25EC','trie':'\\u225C','triminus':'\\u2A3A','TripleDot':'\\u20DB','triplus':'\\u2A39','trisb':'\\u29CD','tritime':'\\u2A3B','trpezium':'\\u23E2','tscr':'\\uD835\\uDCC9','Tscr':'\\uD835\\uDCAF','tscy':'\\u0446','TScy':'\\u0426','tshcy':'\\u045B','TSHcy':'\\u040B','tstrok':'\\u0167','Tstrok':'\\u0166','twixt':'\\u226C','twoheadleftarrow':'\\u219E','twoheadrightarrow':'\\u21A0','uacute':'\\xFA','Uacute':'\\xDA','uarr':'\\u2191','uArr':'\\u21D1','Uarr':'\\u219F','Uarrocir':'\\u2949','ubrcy':'\\u045E','Ubrcy':'\\u040E','ubreve':'\\u016D','Ubreve':'\\u016C','ucirc':'\\xFB','Ucirc':'\\xDB','ucy':'\\u0443','Ucy':'\\u0423','udarr':'\\u21C5','udblac':'\\u0171','Udblac':'\\u0170','udhar':'\\u296E','ufisht':'\\u297E','ufr':'\\uD835\\uDD32','Ufr':'\\uD835\\uDD18','ugrave':'\\xF9','Ugrave':'\\xD9','uHar':'\\u2963','uharl':'\\u21BF','uharr':'\\u21BE','uhblk':'\\u2580','ulcorn':'\\u231C','ulcorner':'\\u231C','ulcrop':'\\u230F','ultri':'\\u25F8','umacr':'\\u016B','Umacr':'\\u016A','uml':'\\xA8','UnderBar':'_','UnderBrace':'\\u23DF','UnderBracket':'\\u23B5','UnderParenthesis':'\\u23DD','Union':'\\u22C3','UnionPlus':'\\u228E','uogon':'\\u0173','Uogon':'\\u0172','uopf':'\\uD835\\uDD66','Uopf':'\\uD835\\uDD4C','uparrow':'\\u2191','Uparrow':'\\u21D1','UpArrow':'\\u2191','UpArrowBar':'\\u2912','UpArrowDownArrow':'\\u21C5','updownarrow':'\\u2195','Updownarrow':'\\u21D5','UpDownArrow':'\\u2195','UpEquilibrium':'\\u296E','upharpoonleft':'\\u21BF','upharpoonright':'\\u21BE','uplus':'\\u228E','UpperLeftArrow':'\\u2196','UpperRightArrow':'\\u2197','upsi':'\\u03C5','Upsi':'\\u03D2','upsih':'\\u03D2','upsilon':'\\u03C5','Upsilon':'\\u03A5','UpTee':'\\u22A5','UpTeeArrow':'\\u21A5','upuparrows':'\\u21C8','urcorn':'\\u231D','urcorner':'\\u231D','urcrop':'\\u230E','uring':'\\u016F','Uring':'\\u016E','urtri':'\\u25F9','uscr':'\\uD835\\uDCCA','Uscr':'\\uD835\\uDCB0','utdot':'\\u22F0','utilde':'\\u0169','Utilde':'\\u0168','utri':'\\u25B5','utrif':'\\u25B4','uuarr':'\\u21C8','uuml':'\\xFC','Uuml':'\\xDC','uwangle':'\\u29A7','vangrt':'\\u299C','varepsilon':'\\u03F5','varkappa':'\\u03F0','varnothing':'\\u2205','varphi':'\\u03D5','varpi':'\\u03D6','varpropto':'\\u221D','varr':'\\u2195','vArr':'\\u21D5','varrho':'\\u03F1','varsigma':'\\u03C2','varsubsetneq':'\\u228A\\uFE00','varsubsetneqq':'\\u2ACB\\uFE00','varsupsetneq':'\\u228B\\uFE00','varsupsetneqq':'\\u2ACC\\uFE00','vartheta':'\\u03D1','vartriangleleft':'\\u22B2','vartriangleright':'\\u22B3','vBar':'\\u2AE8','Vbar':'\\u2AEB','vBarv':'\\u2AE9','vcy':'\\u0432','Vcy':'\\u0412','vdash':'\\u22A2','vDash':'\\u22A8','Vdash':'\\u22A9','VDash':'\\u22AB','Vdashl':'\\u2AE6','vee':'\\u2228','Vee':'\\u22C1','veebar':'\\u22BB','veeeq':'\\u225A','vellip':'\\u22EE','verbar':'|','Verbar':'\\u2016','vert':'|','Vert':'\\u2016','VerticalBar':'\\u2223','VerticalLine':'|','VerticalSeparator':'\\u2758','VerticalTilde':'\\u2240','VeryThinSpace':'\\u200A','vfr':'\\uD835\\uDD33','Vfr':'\\uD835\\uDD19','vltri':'\\u22B2','vnsub':'\\u2282\\u20D2','vnsup':'\\u2283\\u20D2','vopf':'\\uD835\\uDD67','Vopf':'\\uD835\\uDD4D','vprop':'\\u221D','vrtri':'\\u22B3','vscr':'\\uD835\\uDCCB','Vscr':'\\uD835\\uDCB1','vsubne':'\\u228A\\uFE00','vsubnE':'\\u2ACB\\uFE00','vsupne':'\\u228B\\uFE00','vsupnE':'\\u2ACC\\uFE00','Vvdash':'\\u22AA','vzigzag':'\\u299A','wcirc':'\\u0175','Wcirc':'\\u0174','wedbar':'\\u2A5F','wedge':'\\u2227','Wedge':'\\u22C0','wedgeq':'\\u2259','weierp':'\\u2118','wfr':'\\uD835\\uDD34','Wfr':'\\uD835\\uDD1A','wopf':'\\uD835\\uDD68','Wopf':'\\uD835\\uDD4E','wp':'\\u2118','wr':'\\u2240','wreath':'\\u2240','wscr':'\\uD835\\uDCCC','Wscr':'\\uD835\\uDCB2','xcap':'\\u22C2','xcirc':'\\u25EF','xcup':'\\u22C3','xdtri':'\\u25BD','xfr':'\\uD835\\uDD35','Xfr':'\\uD835\\uDD1B','xharr':'\\u27F7','xhArr':'\\u27FA','xi':'\\u03BE','Xi':'\\u039E','xlarr':'\\u27F5','xlArr':'\\u27F8','xmap':'\\u27FC','xnis':'\\u22FB','xodot':'\\u2A00','xopf':'\\uD835\\uDD69','Xopf':'\\uD835\\uDD4F','xoplus':'\\u2A01','xotime':'\\u2A02','xrarr':'\\u27F6','xrArr':'\\u27F9','xscr':'\\uD835\\uDCCD','Xscr':'\\uD835\\uDCB3','xsqcup':'\\u2A06','xuplus':'\\u2A04','xutri':'\\u25B3','xvee':'\\u22C1','xwedge':'\\u22C0','yacute':'\\xFD','Yacute':'\\xDD','yacy':'\\u044F','YAcy':'\\u042F','ycirc':'\\u0177','Ycirc':'\\u0176','ycy':'\\u044B','Ycy':'\\u042B','yen':'\\xA5','yfr':'\\uD835\\uDD36','Yfr':'\\uD835\\uDD1C','yicy':'\\u0457','YIcy':'\\u0407','yopf':'\\uD835\\uDD6A','Yopf':'\\uD835\\uDD50','yscr':'\\uD835\\uDCCE','Yscr':'\\uD835\\uDCB4','yucy':'\\u044E','YUcy':'\\u042E','yuml':'\\xFF','Yuml':'\\u0178','zacute':'\\u017A','Zacute':'\\u0179','zcaron':'\\u017E','Zcaron':'\\u017D','zcy':'\\u0437','Zcy':'\\u0417','zdot':'\\u017C','Zdot':'\\u017B','zeetrf':'\\u2128','ZeroWidthSpace':'\\u200B','zeta':'\\u03B6','Zeta':'\\u0396','zfr':'\\uD835\\uDD37','Zfr':'\\u2128','zhcy':'\\u0436','ZHcy':'\\u0416','zigrarr':'\\u21DD','zopf':'\\uD835\\uDD6B','Zopf':'\\u2124','zscr':'\\uD835\\uDCCF','Zscr':'\\uD835\\uDCB5','zwj':'\\u200D','zwnj':'\\u200C'};\n\tvar decodeMapLegacy = {'aacute':'\\xE1','Aacute':'\\xC1','acirc':'\\xE2','Acirc':'\\xC2','acute':'\\xB4','aelig':'\\xE6','AElig':'\\xC6','agrave':'\\xE0','Agrave':'\\xC0','amp':'&','AMP':'&','aring':'\\xE5','Aring':'\\xC5','atilde':'\\xE3','Atilde':'\\xC3','auml':'\\xE4','Auml':'\\xC4','brvbar':'\\xA6','ccedil':'\\xE7','Ccedil':'\\xC7','cedil':'\\xB8','cent':'\\xA2','copy':'\\xA9','COPY':'\\xA9','curren':'\\xA4','deg':'\\xB0','divide':'\\xF7','eacute':'\\xE9','Eacute':'\\xC9','ecirc':'\\xEA','Ecirc':'\\xCA','egrave':'\\xE8','Egrave':'\\xC8','eth':'\\xF0','ETH':'\\xD0','euml':'\\xEB','Euml':'\\xCB','frac12':'\\xBD','frac14':'\\xBC','frac34':'\\xBE','gt':'>','GT':'>','iacute':'\\xED','Iacute':'\\xCD','icirc':'\\xEE','Icirc':'\\xCE','iexcl':'\\xA1','igrave':'\\xEC','Igrave':'\\xCC','iquest':'\\xBF','iuml':'\\xEF','Iuml':'\\xCF','laquo':'\\xAB','lt':'<','LT':'<','macr':'\\xAF','micro':'\\xB5','middot':'\\xB7','nbsp':'\\xA0','not':'\\xAC','ntilde':'\\xF1','Ntilde':'\\xD1','oacute':'\\xF3','Oacute':'\\xD3','ocirc':'\\xF4','Ocirc':'\\xD4','ograve':'\\xF2','Ograve':'\\xD2','ordf':'\\xAA','ordm':'\\xBA','oslash':'\\xF8','Oslash':'\\xD8','otilde':'\\xF5','Otilde':'\\xD5','ouml':'\\xF6','Ouml':'\\xD6','para':'\\xB6','plusmn':'\\xB1','pound':'\\xA3','quot':'\"','QUOT':'\"','raquo':'\\xBB','reg':'\\xAE','REG':'\\xAE','sect':'\\xA7','shy':'\\xAD','sup1':'\\xB9','sup2':'\\xB2','sup3':'\\xB3','szlig':'\\xDF','thorn':'\\xFE','THORN':'\\xDE','times':'\\xD7','uacute':'\\xFA','Uacute':'\\xDA','ucirc':'\\xFB','Ucirc':'\\xDB','ugrave':'\\xF9','Ugrave':'\\xD9','uml':'\\xA8','uuml':'\\xFC','Uuml':'\\xDC','yacute':'\\xFD','Yacute':'\\xDD','yen':'\\xA5','yuml':'\\xFF'};\n\tvar decodeMapNumeric = {'0':'\\uFFFD','128':'\\u20AC','130':'\\u201A','131':'\\u0192','132':'\\u201E','133':'\\u2026','134':'\\u2020','135':'\\u2021','136':'\\u02C6','137':'\\u2030','138':'\\u0160','139':'\\u2039','140':'\\u0152','142':'\\u017D','145':'\\u2018','146':'\\u2019','147':'\\u201C','148':'\\u201D','149':'\\u2022','150':'\\u2013','151':'\\u2014','152':'\\u02DC','153':'\\u2122','154':'\\u0161','155':'\\u203A','156':'\\u0153','158':'\\u017E','159':'\\u0178'};\n\tvar invalidReferenceCodePoints = [1,2,3,4,5,6,7,8,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,64976,64977,64978,64979,64980,64981,64982,64983,64984,64985,64986,64987,64988,64989,64990,64991,64992,64993,64994,64995,64996,64997,64998,64999,65000,65001,65002,65003,65004,65005,65006,65007,65534,65535,131070,131071,196606,196607,262142,262143,327678,327679,393214,393215,458750,458751,524286,524287,589822,589823,655358,655359,720894,720895,786430,786431,851966,851967,917502,917503,983038,983039,1048574,1048575,1114110,1114111];\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\tvar object = {};\n\tvar hasOwnProperty = object.hasOwnProperty;\n\tvar has = function(object, propertyName) {\n\t\treturn hasOwnProperty.call(object, propertyName);\n\t};\n\n\tvar contains = function(array, value) {\n\t\tvar index = -1;\n\t\tvar length = array.length;\n\t\twhile (++index < length) {\n\t\t\tif (array[index] == value) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t};\n\n\tvar merge = function(options, defaults) {\n\t\tif (!options) {\n\t\t\treturn defaults;\n\t\t}\n\t\tvar result = {};\n\t\tvar key;\n\t\tfor (key in defaults) {\n\t\t\t// A `hasOwnProperty` check is not needed here, since only recognized\n\t\t\t// option names are used anyway. Any others are ignored.\n\t\t\tresult[key] = has(options, key) ? options[key] : defaults[key];\n\t\t}\n\t\treturn result;\n\t};\n\n\t// Modified version of `ucs2encode`; see https://mths.be/punycode.\n\tvar codePointToSymbol = function(codePoint, strict) {\n\t\tvar output = '';\n\t\tif ((codePoint >= 0xD800 && codePoint <= 0xDFFF) || codePoint > 0x10FFFF) {\n\t\t\t// See issue #4:\n\t\t\t// “Otherwise, if the number is in the range 0xD800 to 0xDFFF or is\n\t\t\t// greater than 0x10FFFF, then this is a parse error. Return a U+FFFD\n\t\t\t// REPLACEMENT CHARACTER.”\n\t\t\tif (strict) {\n\t\t\t\tparseError('character reference outside the permissible Unicode range');\n\t\t\t}\n\t\t\treturn '\\uFFFD';\n\t\t}\n\t\tif (has(decodeMapNumeric, codePoint)) {\n\t\t\tif (strict) {\n\t\t\t\tparseError('disallowed character reference');\n\t\t\t}\n\t\t\treturn decodeMapNumeric[codePoint];\n\t\t}\n\t\tif (strict && contains(invalidReferenceCodePoints, codePoint)) {\n\t\t\tparseError('disallowed character reference');\n\t\t}\n\t\tif (codePoint > 0xFFFF) {\n\t\t\tcodePoint -= 0x10000;\n\t\t\toutput += stringFromCharCode(codePoint >>> 10 & 0x3FF | 0xD800);\n\t\t\tcodePoint = 0xDC00 | codePoint & 0x3FF;\n\t\t}\n\t\toutput += stringFromCharCode(codePoint);\n\t\treturn output;\n\t};\n\n\tvar hexEscape = function(codePoint) {\n\t\treturn '&#x' + codePoint.toString(16).toUpperCase() + ';';\n\t};\n\n\tvar decEscape = function(codePoint) {\n\t\treturn '&#' + codePoint + ';';\n\t};\n\n\tvar parseError = function(message) {\n\t\tthrow Error('Parse error: ' + message);\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar encode = function(string, options) {\n\t\toptions = merge(options, encode.options);\n\t\tvar strict = options.strict;\n\t\tif (strict && regexInvalidRawCodePoint.test(string)) {\n\t\t\tparseError('forbidden code point');\n\t\t}\n\t\tvar encodeEverything = options.encodeEverything;\n\t\tvar useNamedReferences = options.useNamedReferences;\n\t\tvar allowUnsafeSymbols = options.allowUnsafeSymbols;\n\t\tvar escapeCodePoint = options.decimal ? decEscape : hexEscape;\n\n\t\tvar escapeBmpSymbol = function(symbol) {\n\t\t\treturn escapeCodePoint(symbol.charCodeAt(0));\n\t\t};\n\n\t\tif (encodeEverything) {\n\t\t\t// Encode ASCII symbols.\n\t\t\tstring = string.replace(regexAsciiWhitelist, function(symbol) {\n\t\t\t\t// Use named references if requested & possible.\n\t\t\t\tif (useNamedReferences && has(encodeMap, symbol)) {\n\t\t\t\t\treturn '&' + encodeMap[symbol] + ';';\n\t\t\t\t}\n\t\t\t\treturn escapeBmpSymbol(symbol);\n\t\t\t});\n\t\t\t// Shorten a few escapes that represent two symbols, of which at least one\n\t\t\t// is within the ASCII range.\n\t\t\tif (useNamedReferences) {\n\t\t\t\tstring = string\n\t\t\t\t\t.replace(/&gt;\\u20D2/g, '&nvgt;')\n\t\t\t\t\t.replace(/&lt;\\u20D2/g, '&nvlt;')\n\t\t\t\t\t.replace(/&#x66;&#x6A;/g, '&fjlig;');\n\t\t\t}\n\t\t\t// Encode non-ASCII symbols.\n\t\t\tif (useNamedReferences) {\n\t\t\t\t// Encode non-ASCII symbols that can be replaced with a named reference.\n\t\t\t\tstring = string.replace(regexEncodeNonAscii, function(string) {\n\t\t\t\t\t// Note: there is no need to check `has(encodeMap, string)` here.\n\t\t\t\t\treturn '&' + encodeMap[string] + ';';\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Note: any remaining non-ASCII symbols are handled outside of the `if`.\n\t\t} else if (useNamedReferences) {\n\t\t\t// Apply named character references.\n\t\t\t// Encode `<>\"'&` using named character references.\n\t\t\tif (!allowUnsafeSymbols) {\n\t\t\t\tstring = string.replace(regexEscape, function(string) {\n\t\t\t\t\treturn '&' + encodeMap[string] + ';'; // no need to check `has()` here\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Shorten escapes that represent two symbols, of which at least one is\n\t\t\t// `<>\"'&`.\n\t\t\tstring = string\n\t\t\t\t.replace(/&gt;\\u20D2/g, '&nvgt;')\n\t\t\t\t.replace(/&lt;\\u20D2/g, '&nvlt;');\n\t\t\t// Encode non-ASCII symbols that can be replaced with a named reference.\n\t\t\tstring = string.replace(regexEncodeNonAscii, function(string) {\n\t\t\t\t// Note: there is no need to check `has(encodeMap, string)` here.\n\t\t\t\treturn '&' + encodeMap[string] + ';';\n\t\t\t});\n\t\t} else if (!allowUnsafeSymbols) {\n\t\t\t// Encode `<>\"'&` using hexadecimal escapes, now that they’re not handled\n\t\t\t// using named character references.\n\t\t\tstring = string.replace(regexEscape, escapeBmpSymbol);\n\t\t}\n\t\treturn string\n\t\t\t// Encode astral symbols.\n\t\t\t.replace(regexAstralSymbols, function($0) {\n\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\tvar high = $0.charCodeAt(0);\n\t\t\t\tvar low = $0.charCodeAt(1);\n\t\t\t\tvar codePoint = (high - 0xD800) * 0x400 + low - 0xDC00 + 0x10000;\n\t\t\t\treturn escapeCodePoint(codePoint);\n\t\t\t})\n\t\t\t// Encode any remaining BMP symbols that are not printable ASCII symbols\n\t\t\t// using a hexadecimal escape.\n\t\t\t.replace(regexBmpWhitelist, escapeBmpSymbol);\n\t};\n\t// Expose default options (so they can be overridden globally).\n\tencode.options = {\n\t\t'allowUnsafeSymbols': false,\n\t\t'encodeEverything': false,\n\t\t'strict': false,\n\t\t'useNamedReferences': false,\n\t\t'decimal' : false\n\t};\n\n\tvar decode = function(html, options) {\n\t\toptions = merge(options, decode.options);\n\t\tvar strict = options.strict;\n\t\tif (strict && regexInvalidEntity.test(html)) {\n\t\t\tparseError('malformed character reference');\n\t\t}\n\t\treturn html.replace(regexDecode, function($0, $1, $2, $3, $4, $5, $6, $7, $8) {\n\t\t\tvar codePoint;\n\t\t\tvar semicolon;\n\t\t\tvar decDigits;\n\t\t\tvar hexDigits;\n\t\t\tvar reference;\n\t\t\tvar next;\n\n\t\t\tif ($1) {\n\t\t\t\treference = $1;\n\t\t\t\t// Note: there is no need to check `has(decodeMap, reference)`.\n\t\t\t\treturn decodeMap[reference];\n\t\t\t}\n\n\t\t\tif ($2) {\n\t\t\t\t// Decode named character references without trailing `;`, e.g. `&amp`.\n\t\t\t\t// This is only a parse error if it gets converted to `&`, or if it is\n\t\t\t\t// followed by `=` in an attribute context.\n\t\t\t\treference = $2;\n\t\t\t\tnext = $3;\n\t\t\t\tif (next && options.isAttributeValue) {\n\t\t\t\t\tif (strict && next == '=') {\n\t\t\t\t\t\tparseError('`&` did not start a character reference');\n\t\t\t\t\t}\n\t\t\t\t\treturn $0;\n\t\t\t\t} else {\n\t\t\t\t\tif (strict) {\n\t\t\t\t\t\tparseError(\n\t\t\t\t\t\t\t'named character reference was not terminated by a semicolon'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t// Note: there is no need to check `has(decodeMapLegacy, reference)`.\n\t\t\t\t\treturn decodeMapLegacy[reference] + (next || '');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($4) {\n\t\t\t\t// Decode decimal escapes, e.g. `&#119558;`.\n\t\t\t\tdecDigits = $4;\n\t\t\t\tsemicolon = $5;\n\t\t\t\tif (strict && !semicolon) {\n\t\t\t\t\tparseError('character reference was not terminated by a semicolon');\n\t\t\t\t}\n\t\t\t\tcodePoint = parseInt(decDigits, 10);\n\t\t\t\treturn codePointToSymbol(codePoint, strict);\n\t\t\t}\n\n\t\t\tif ($6) {\n\t\t\t\t// Decode hexadecimal escapes, e.g. `&#x1D306;`.\n\t\t\t\thexDigits = $6;\n\t\t\t\tsemicolon = $7;\n\t\t\t\tif (strict && !semicolon) {\n\t\t\t\t\tparseError('character reference was not terminated by a semicolon');\n\t\t\t\t}\n\t\t\t\tcodePoint = parseInt(hexDigits, 16);\n\t\t\t\treturn codePointToSymbol(codePoint, strict);\n\t\t\t}\n\n\t\t\t// If we’re still here, `if ($7)` is implied; it’s an ambiguous\n\t\t\t// ampersand for sure. https://mths.be/notes/ambiguous-ampersands\n\t\t\tif (strict) {\n\t\t\t\tparseError(\n\t\t\t\t\t'named character reference was not terminated by a semicolon'\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn $0;\n\t\t});\n\t};\n\t// Expose default options (so they can be overridden globally).\n\tdecode.options = {\n\t\t'isAttributeValue': false,\n\t\t'strict': false\n\t};\n\n\tvar escape = function(string) {\n\t\treturn string.replace(regexEscape, function($0) {\n\t\t\t// Note: there is no need to check `has(escapeMap, $0)` here.\n\t\t\treturn escapeMap[$0];\n\t\t});\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar he = {\n\t\t'version': '1.2.0',\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'escape': escape,\n\t\t'unescape': decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn he;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = he;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in he) {\n\t\t\t\thas(he, key) && (freeExports[key] = he[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.he = he;\n\t}\n\n}(this));\n", "'use strict';\n\nfunction createMap(values, ignoreCase) {\n  var map = {};\n  values.forEach(function(value) {\n    map[value] = 1;\n  });\n  return ignoreCase ? function(value) {\n    return map[value.toLowerCase()] === 1;\n  } : function(value) {\n    return map[value] === 1;\n  };\n}\n\nasync function replaceAsync(str, regex, asyncFn) {\n  const promises = [];\n  str.replace(regex, (match, ...args) => {\n    const promise = asyncFn(match, ...args);\n    promises.push(promise);\n  });\n  const data = await Promise.all(promises);\n  return str.replace(regex, () => data.shift());\n}\n\n\nexports.createMap = createMap;\nexports.createMapFromString = function(values, ignoreCase) {\n  return createMap(values.split(/,/), ignoreCase);\n};\n\nexports.replaceAsync = replaceAsync;\n", "/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n/*\n * // Use like so:\n * HTMLParser(htmlString, {\n *     start: function(tag, attrs, unary) {},\n *     end: function(tag) {},\n *     chars: function(text) {},\n *     comment: function(text) {}\n * });\n *\n * // or to get an XML string:\n * HTMLtoXML(htmlString);\n *\n * // or to get an XML DOM Document\n * HTMLtoDOM(htmlString);\n *\n * // or to inject into an existing document/DOM node\n * HTMLtoDOM(htmlString, document);\n * HTMLtoDOM(htmlString, document.body);\n *\n */\n\n/* global ActiveXObject, DOMDocument */\n\n'use strict';\n\nvar createMapFromString = require('./utils').createMapFromString;\nvar replaceAsync = require('./utils').replaceAsync;\n\nfunction makeMap(values) {\n  return createMapFromString(values, true);\n}\n\n// Regular Expressions for parsing tags and attributes\nvar singleAttrIdentifier = /([^\\s\"'<>/=]+)/,\n    singleAttrAssigns = [/=/],\n    singleAttrValues = [\n    // attr value double quotes\n      /\"([^\"]*)\"+/.source,\n      // attr value, single quotes\n      /'([^']*)'+/.source,\n      // attr value, no quotes\n      /([^ \\t\\n\\f\\r\"'`=<>]+)/.source\n    ],\n    // https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n    qnameCapture = (function() {\n    // based on https://www.npmjs.com/package/ncname\n      var combiningChar = '\\\\u0300-\\\\u0345\\\\u0360\\\\u0361\\\\u0483-\\\\u0486\\\\u0591-\\\\u05A1\\\\u05A3-\\\\u05B9\\\\u05BB-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u064B-\\\\u0652\\\\u0670\\\\u06D6-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0901-\\\\u0903\\\\u093C\\\\u093E-\\\\u094D\\\\u0951-\\\\u0954\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u0A02\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A70\\\\u0A71\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B43\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B56\\\\u0B57\\\\u0B82\\\\u0B83\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C01-\\\\u0C03\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C82\\\\u0C83\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0D02\\\\u0D03\\\\u0D3E-\\\\u0D43\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EB9\\\\u0EBB\\\\u0EBC\\\\u0EC8-\\\\u0ECD\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86-\\\\u0F8B\\\\u0F90-\\\\u0F95\\\\u0F97\\\\u0F99-\\\\u0FAD\\\\u0FB1-\\\\u0FB7\\\\u0FB9\\\\u20D0-\\\\u20DC\\\\u20E1\\\\u302A-\\\\u302F\\\\u3099\\\\u309A';\n      var digit = '0-9\\\\u0660-\\\\u0669\\\\u06F0-\\\\u06F9\\\\u0966-\\\\u096F\\\\u09E6-\\\\u09EF\\\\u0A66-\\\\u0A6F\\\\u0AE6-\\\\u0AEF\\\\u0B66-\\\\u0B6F\\\\u0BE7-\\\\u0BEF\\\\u0C66-\\\\u0C6F\\\\u0CE6-\\\\u0CEF\\\\u0D66-\\\\u0D6F\\\\u0E50-\\\\u0E59\\\\u0ED0-\\\\u0ED9\\\\u0F20-\\\\u0F29';\n      var extender = '\\\\xB7\\\\u02D0\\\\u02D1\\\\u0387\\\\u0640\\\\u0E46\\\\u0EC6\\\\u3005\\\\u3031-\\\\u3035\\\\u309D\\\\u309E\\\\u30FC-\\\\u30FE';\n      var letter = 'A-Za-z\\\\xC0-\\\\xD6\\\\xD8-\\\\xF6\\\\xF8-\\\\u0131\\\\u0134-\\\\u013E\\\\u0141-\\\\u0148\\\\u014A-\\\\u017E\\\\u0180-\\\\u01C3\\\\u01CD-\\\\u01F0\\\\u01F4\\\\u01F5\\\\u01FA-\\\\u0217\\\\u0250-\\\\u02A8\\\\u02BB-\\\\u02C1\\\\u0386\\\\u0388-\\\\u038A\\\\u038C\\\\u038E-\\\\u03A1\\\\u03A3-\\\\u03CE\\\\u03D0-\\\\u03D6\\\\u03DA\\\\u03DC\\\\u03DE\\\\u03E0\\\\u03E2-\\\\u03F3\\\\u0401-\\\\u040C\\\\u040E-\\\\u044F\\\\u0451-\\\\u045C\\\\u045E-\\\\u0481\\\\u0490-\\\\u04C4\\\\u04C7\\\\u04C8\\\\u04CB\\\\u04CC\\\\u04D0-\\\\u04EB\\\\u04EE-\\\\u04F5\\\\u04F8\\\\u04F9\\\\u0531-\\\\u0556\\\\u0559\\\\u0561-\\\\u0586\\\\u05D0-\\\\u05EA\\\\u05F0-\\\\u05F2\\\\u0621-\\\\u063A\\\\u0641-\\\\u064A\\\\u0671-\\\\u06B7\\\\u06BA-\\\\u06BE\\\\u06C0-\\\\u06CE\\\\u06D0-\\\\u06D3\\\\u06D5\\\\u06E5\\\\u06E6\\\\u0905-\\\\u0939\\\\u093D\\\\u0958-\\\\u0961\\\\u0985-\\\\u098C\\\\u098F\\\\u0990\\\\u0993-\\\\u09A8\\\\u09AA-\\\\u09B0\\\\u09B2\\\\u09B6-\\\\u09B9\\\\u09DC\\\\u09DD\\\\u09DF-\\\\u09E1\\\\u09F0\\\\u09F1\\\\u0A05-\\\\u0A0A\\\\u0A0F\\\\u0A10\\\\u0A13-\\\\u0A28\\\\u0A2A-\\\\u0A30\\\\u0A32\\\\u0A33\\\\u0A35\\\\u0A36\\\\u0A38\\\\u0A39\\\\u0A59-\\\\u0A5C\\\\u0A5E\\\\u0A72-\\\\u0A74\\\\u0A85-\\\\u0A8B\\\\u0A8D\\\\u0A8F-\\\\u0A91\\\\u0A93-\\\\u0AA8\\\\u0AAA-\\\\u0AB0\\\\u0AB2\\\\u0AB3\\\\u0AB5-\\\\u0AB9\\\\u0ABD\\\\u0AE0\\\\u0B05-\\\\u0B0C\\\\u0B0F\\\\u0B10\\\\u0B13-\\\\u0B28\\\\u0B2A-\\\\u0B30\\\\u0B32\\\\u0B33\\\\u0B36-\\\\u0B39\\\\u0B3D\\\\u0B5C\\\\u0B5D\\\\u0B5F-\\\\u0B61\\\\u0B85-\\\\u0B8A\\\\u0B8E-\\\\u0B90\\\\u0B92-\\\\u0B95\\\\u0B99\\\\u0B9A\\\\u0B9C\\\\u0B9E\\\\u0B9F\\\\u0BA3\\\\u0BA4\\\\u0BA8-\\\\u0BAA\\\\u0BAE-\\\\u0BB5\\\\u0BB7-\\\\u0BB9\\\\u0C05-\\\\u0C0C\\\\u0C0E-\\\\u0C10\\\\u0C12-\\\\u0C28\\\\u0C2A-\\\\u0C33\\\\u0C35-\\\\u0C39\\\\u0C60\\\\u0C61\\\\u0C85-\\\\u0C8C\\\\u0C8E-\\\\u0C90\\\\u0C92-\\\\u0CA8\\\\u0CAA-\\\\u0CB3\\\\u0CB5-\\\\u0CB9\\\\u0CDE\\\\u0CE0\\\\u0CE1\\\\u0D05-\\\\u0D0C\\\\u0D0E-\\\\u0D10\\\\u0D12-\\\\u0D28\\\\u0D2A-\\\\u0D39\\\\u0D60\\\\u0D61\\\\u0E01-\\\\u0E2E\\\\u0E30\\\\u0E32\\\\u0E33\\\\u0E40-\\\\u0E45\\\\u0E81\\\\u0E82\\\\u0E84\\\\u0E87\\\\u0E88\\\\u0E8A\\\\u0E8D\\\\u0E94-\\\\u0E97\\\\u0E99-\\\\u0E9F\\\\u0EA1-\\\\u0EA3\\\\u0EA5\\\\u0EA7\\\\u0EAA\\\\u0EAB\\\\u0EAD\\\\u0EAE\\\\u0EB0\\\\u0EB2\\\\u0EB3\\\\u0EBD\\\\u0EC0-\\\\u0EC4\\\\u0F40-\\\\u0F47\\\\u0F49-\\\\u0F69\\\\u10A0-\\\\u10C5\\\\u10D0-\\\\u10F6\\\\u1100\\\\u1102\\\\u1103\\\\u1105-\\\\u1107\\\\u1109\\\\u110B\\\\u110C\\\\u110E-\\\\u1112\\\\u113C\\\\u113E\\\\u1140\\\\u114C\\\\u114E\\\\u1150\\\\u1154\\\\u1155\\\\u1159\\\\u115F-\\\\u1161\\\\u1163\\\\u1165\\\\u1167\\\\u1169\\\\u116D\\\\u116E\\\\u1172\\\\u1173\\\\u1175\\\\u119E\\\\u11A8\\\\u11AB\\\\u11AE\\\\u11AF\\\\u11B7\\\\u11B8\\\\u11BA\\\\u11BC-\\\\u11C2\\\\u11EB\\\\u11F0\\\\u11F9\\\\u1E00-\\\\u1E9B\\\\u1EA0-\\\\u1EF9\\\\u1F00-\\\\u1F15\\\\u1F18-\\\\u1F1D\\\\u1F20-\\\\u1F45\\\\u1F48-\\\\u1F4D\\\\u1F50-\\\\u1F57\\\\u1F59\\\\u1F5B\\\\u1F5D\\\\u1F5F-\\\\u1F7D\\\\u1F80-\\\\u1FB4\\\\u1FB6-\\\\u1FBC\\\\u1FBE\\\\u1FC2-\\\\u1FC4\\\\u1FC6-\\\\u1FCC\\\\u1FD0-\\\\u1FD3\\\\u1FD6-\\\\u1FDB\\\\u1FE0-\\\\u1FEC\\\\u1FF2-\\\\u1FF4\\\\u1FF6-\\\\u1FFC\\\\u2126\\\\u212A\\\\u212B\\\\u212E\\\\u2180-\\\\u2182\\\\u3007\\\\u3021-\\\\u3029\\\\u3041-\\\\u3094\\\\u30A1-\\\\u30FA\\\\u3105-\\\\u312C\\\\u4E00-\\\\u9FA5\\\\uAC00-\\\\uD7A3';\n      var ncname = '[' + letter + '_][' + letter + digit + '\\\\.\\\\-_' + combiningChar + extender + ']*';\n      return '((?:' + ncname + '\\\\:)?' + ncname + ')';\n    })(),\n    startTagOpen = new RegExp('^<' + qnameCapture),\n    startTagClose = /^\\s*(\\/?)>/,\n    endTag = new RegExp('^<\\\\/' + qnameCapture + '[^>]*>'),\n    doctype = /^<!DOCTYPE\\s?[^>]+>/i;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function(m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Empty Elements\nvar empty = makeMap('area,base,basefont,br,col,embed,frame,hr,img,input,isindex,keygen,link,meta,param,source,track,wbr');\n\n// Inline Elements\nvar inline = makeMap('a,abbr,acronym,applet,b,basefont,bdo,big,br,button,cite,code,del,dfn,em,font,i,iframe,img,input,ins,kbd,label,map,noscript,object,q,s,samp,script,select,small,span,strike,strong,sub,sup,svg,textarea,tt,u,var');\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar closeSelf = makeMap('colgroup,dd,dt,li,option,p,td,tfoot,th,thead,tr,source');\n\n// Attributes that have their values filled in disabled='disabled'\nvar fillAttrs = makeMap('checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected');\n\n// Special Elements (can contain anything)\nvar special = makeMap('script,style');\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar nonPhrasing = makeMap('address,article,aside,base,blockquote,body,caption,col,colgroup,dd,details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,ol,optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,title,tr,track,ul');\n\nvar reCache = {};\n\nfunction attrForHandler(handler) {\n  var pattern = singleAttrIdentifier.source +\n    '(?:\\\\s*(' + joinSingleAttrAssigns(handler) + ')' +\n    '[ \\\\t\\\\n\\\\f\\\\r]*(?:' + singleAttrValues.join('|') + '))?';\n  if (handler.customAttrSurround) {\n    var attrClauses = [];\n    for (var i = handler.customAttrSurround.length - 1; i >= 0; i--) {\n      attrClauses[i] = '(?:' +\n        '(' + handler.customAttrSurround[i][0].source + ')\\\\s*' +\n        pattern +\n        '\\\\s*(' + handler.customAttrSurround[i][1].source + ')' +\n        ')';\n    }\n    attrClauses.push('(?:' + pattern + ')');\n    pattern = '(?:' + attrClauses.join('|') + ')';\n  }\n  return new RegExp('^\\\\s*' + pattern);\n}\n\nfunction joinSingleAttrAssigns(handler) {\n  return singleAttrAssigns.concat(\n    handler.customAttrAssign || []\n  ).map(function(assign) {\n    return '(?:' + assign.source + ')';\n  }).join('|');\n}\n\nclass HTMLParser {\n  constructor(html, handler) {\n    this.html = html;\n    this.handler = handler;\n  }\n\n  async parse() {\n    let html = this.html;\n    const handler = this.handler;\n\n    var stack = [], lastTag;\n    var attribute = attrForHandler(handler);\n    var last, prevTag, nextTag;\n    while (html) {\n      last = html;\n      // Make sure we're not in a script or style element\n      if (!lastTag || !special(lastTag)) {\n        var textEnd = html.indexOf('<');\n        if (textEnd === 0) {\n          // Comment:\n          if (/^<!--/.test(html)) {\n            var commentEnd = html.indexOf('-->');\n\n            if (commentEnd >= 0) {\n              if (handler.comment) {\n                await handler.comment(html.substring(4, commentEnd));\n              }\n              html = html.substring(commentEnd + 3);\n              prevTag = '';\n              continue;\n            }\n          }\n\n          // https://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n          if (/^<!\\[/.test(html)) {\n            var conditionalEnd = html.indexOf(']>');\n\n            if (conditionalEnd >= 0) {\n              if (handler.comment) {\n                await handler.comment(html.substring(2, conditionalEnd + 1), true /* non-standard */);\n              }\n              html = html.substring(conditionalEnd + 2);\n              prevTag = '';\n              continue;\n            }\n          }\n\n          // Doctype:\n          var doctypeMatch = html.match(doctype);\n          if (doctypeMatch) {\n            if (handler.doctype) {\n              handler.doctype(doctypeMatch[0]);\n            }\n            html = html.substring(doctypeMatch[0].length);\n            prevTag = '';\n            continue;\n          }\n\n          // End tag:\n          var endTagMatch = html.match(endTag);\n          if (endTagMatch) {\n            html = html.substring(endTagMatch[0].length);\n            await replaceAsync(endTagMatch[0], endTag, parseEndTag);\n            prevTag = '/' + endTagMatch[1].toLowerCase();\n            continue;\n          }\n\n          // Start tag:\n          var startTagMatch = parseStartTag(html);\n          if (startTagMatch) {\n            html = startTagMatch.rest;\n            await handleStartTag(startTagMatch);\n            prevTag = startTagMatch.tagName.toLowerCase();\n            continue;\n          }\n\n          // Treat `<` as text\n          if (handler.continueOnParseError) {\n            textEnd = html.indexOf('<', 1);\n          }\n        }\n\n        var text;\n        if (textEnd >= 0) {\n          text = html.substring(0, textEnd);\n          html = html.substring(textEnd);\n        }\n        else {\n          text = html;\n          html = '';\n        }\n\n        // next tag\n        var nextTagMatch = parseStartTag(html);\n        if (nextTagMatch) {\n          nextTag = nextTagMatch.tagName;\n        }\n        else {\n          nextTagMatch = html.match(endTag);\n          if (nextTagMatch) {\n            nextTag = '/' + nextTagMatch[1];\n          }\n          else {\n            nextTag = '';\n          }\n        }\n\n        if (handler.chars) {\n          await handler.chars(text, prevTag, nextTag);\n        }\n        prevTag = '';\n      }\n      else {\n        var stackedTag = lastTag.toLowerCase();\n        var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)</' + stackedTag + '[^>]*>', 'i'));\n\n        html = await replaceAsync(html, reStackedTag, async(_, text) => {\n          if (stackedTag !== 'script' && stackedTag !== 'style' && stackedTag !== 'noscript') {\n            text = text\n              .replace(/<!--([\\s\\S]*?)-->/g, '$1')\n              .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n          }\n\n\n          if (handler.chars) {\n            await handler.chars(text);\n          }\n\n          return '';\n        });\n\n        await parseEndTag('</' + stackedTag + '>', stackedTag);\n      }\n\n      if (html === last) {\n        throw new Error('Parse Error: ' + html);\n      }\n    }\n\n    if (!handler.partialMarkup) {\n      // Clean up any remaining tags\n      await parseEndTag();\n    }\n\n    function parseStartTag(input) {\n      var start = input.match(startTagOpen);\n      if (start) {\n        var match = {\n          tagName: start[1],\n          attrs: []\n        };\n        input = input.slice(start[0].length);\n        var end, attr;\n        while (!(end = input.match(startTagClose)) && (attr = input.match(attribute))) {\n          input = input.slice(attr[0].length);\n          match.attrs.push(attr);\n        }\n        if (end) {\n          match.unarySlash = end[1];\n          match.rest = input.slice(end[0].length);\n          return match;\n        }\n      }\n    }\n\n    async function closeIfFound(tagName) {\n      if (findTag(tagName) >= 0) {\n        await parseEndTag('', tagName);\n        return true;\n      }\n    }\n\n    async function handleStartTag(match) {\n      var tagName = match.tagName;\n      var unarySlash = match.unarySlash;\n\n      if (handler.html5) {\n        if (lastTag === 'p' && nonPhrasing(tagName)) {\n          await parseEndTag('', lastTag);\n        }\n        else if (tagName === 'tbody') {\n          await closeIfFound('thead');\n        }\n        else if (tagName === 'tfoot') {\n          if (!await closeIfFound('tbody')) {\n            await closeIfFound('thead');\n          }\n        }\n        if (tagName === 'col' && findTag('colgroup') < 0) {\n          lastTag = 'colgroup';\n          stack.push({ tag: lastTag, attrs: [] });\n          if (handler.start) {\n            await handler.start(lastTag, [], false, '');\n          }\n        }\n      }\n\n      if (!handler.html5 && !inline(tagName)) {\n        while (lastTag && inline(lastTag)) {\n          await parseEndTag('', lastTag);\n        }\n      }\n\n      if (closeSelf(tagName) && lastTag === tagName) {\n        await parseEndTag('', tagName);\n      }\n\n      var unary = empty(tagName) || tagName === 'html' && lastTag === 'head' || !!unarySlash;\n\n      var attrs = match.attrs.map(function(args) {\n        var name, value, customOpen, customClose, customAssign, quote;\n        var ncp = 7; // number of captured parts, scalar\n\n        // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n        if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n          if (args[3] === '') { delete args[3]; }\n          if (args[4] === '') { delete args[4]; }\n          if (args[5] === '') { delete args[5]; }\n        }\n\n        function populate(index) {\n          customAssign = args[index];\n          value = args[index + 1];\n          if (typeof value !== 'undefined') {\n            return '\"';\n          }\n          value = args[index + 2];\n          if (typeof value !== 'undefined') {\n            return '\\'';\n          }\n          value = args[index + 3];\n          if (typeof value === 'undefined' && fillAttrs(name)) {\n            value = name;\n          }\n          return '';\n        }\n\n        var j = 1;\n        if (handler.customAttrSurround) {\n          for (var i = 0, l = handler.customAttrSurround.length; i < l; i++, j += ncp) {\n            name = args[j + 1];\n            if (name) {\n              quote = populate(j + 2);\n              customOpen = args[j];\n              customClose = args[j + 6];\n              break;\n            }\n          }\n        }\n\n        if (!name && (name = args[j])) {\n          quote = populate(j + 1);\n        }\n\n        return {\n          name: name,\n          value: value,\n          customAssign: customAssign || '=',\n          customOpen: customOpen || '',\n          customClose: customClose || '',\n          quote: quote || ''\n        };\n      });\n\n      if (!unary) {\n        stack.push({ tag: tagName, attrs: attrs });\n        lastTag = tagName;\n        unarySlash = '';\n      }\n\n      if (handler.start) {\n        await handler.start(tagName, attrs, unary, unarySlash);\n      }\n    }\n\n    function findTag(tagName) {\n      var pos;\n      var needle = tagName.toLowerCase();\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].tag.toLowerCase() === needle) {\n          break;\n        }\n      }\n      return pos;\n    }\n\n    async function parseEndTag(tag, tagName) {\n      var pos;\n\n      // Find the closest opened tag of the same type\n      if (tagName) {\n        pos = findTag(tagName);\n      }\n      // If no tag name is provided, clean shop\n      else {\n        pos = 0;\n      }\n\n      if (pos >= 0) {\n        // Close all the open elements, up the stack\n        for (var i = stack.length - 1; i >= pos; i--) {\n          if (handler.end) {\n            handler.end(stack[i].tag, stack[i].attrs, i > pos || !tag);\n          }\n        }\n\n        // Remove the open elements from the stack\n        stack.length = pos;\n        lastTag = pos && stack[pos - 1].tag;\n      }\n      else if (tagName.toLowerCase() === 'br') {\n        if (handler.start) {\n          await handler.start(tagName, [], true, '');\n        }\n      }\n      else if (tagName.toLowerCase() === 'p') {\n        if (handler.start) {\n          await handler.start(tagName, [], false, '', true);\n        }\n        if (handler.end) {\n          handler.end(tagName, []);\n        }\n      }\n    }\n  }\n}\n\nexports.HTMLParser = HTMLParser;\nexports.HTMLtoXML = function(html) {\n  var results = '';\n\n  new HTMLParser(html, {\n    start: function(tag, attrs, unary) {\n      results += '<' + tag;\n\n      for (var i = 0, len = attrs.length; i < len; i++) {\n        results += ' ' + attrs[i].name + '=\"' + (attrs[i].value || '').replace(/\"/g, '&#34;') + '\"';\n      }\n\n      results += (unary ? '/' : '') + '>';\n    },\n    end: function(tag) {\n      results += '</' + tag + '>';\n    },\n    chars: function(text) {\n      results += text;\n    },\n    comment: function(text) {\n      results += '<!--' + text + '-->';\n    },\n    ignore: function(text) {\n      results += text;\n    }\n  });\n\n  return results;\n};\n\nexports.HTMLtoDOM = function(html, doc) {\n  // There can be only one of these elements\n  var one = {\n    html: true,\n    head: true,\n    body: true,\n    title: true\n  };\n\n  // Enforce a structure for the document\n  var structure = {\n    link: 'head',\n    base: 'head'\n  };\n\n  if (doc) {\n    doc = doc.ownerDocument || doc.getOwnerDocument && doc.getOwnerDocument() || doc;\n  }\n  else if (typeof DOMDocument !== 'undefined') {\n    doc = new DOMDocument();\n  }\n  else if (typeof document !== 'undefined' && document.implementation && document.implementation.createDocument) {\n    doc = document.implementation.createDocument('', '', null);\n  }\n  else if (typeof ActiveX !== 'undefined') {\n    doc = new ActiveXObject('Msxml.DOMDocument');\n  }\n\n  var elems = [],\n      documentElement = doc.documentElement ||\n      doc.getDocumentElement && doc.getDocumentElement();\n\n  // If we're dealing with an empty document then we\n  // need to pre-populate it with the HTML document structure\n  if (!documentElement && doc.createElement) {\n    (function() {\n      var html = doc.createElement('html');\n      var head = doc.createElement('head');\n      head.appendChild(doc.createElement('title'));\n      html.appendChild(head);\n      html.appendChild(doc.createElement('body'));\n      doc.appendChild(html);\n    })();\n  }\n\n  // Find all the unique elements\n  if (doc.getElementsByTagName) {\n    for (var i in one) {\n      one[i] = doc.getElementsByTagName(i)[0];\n    }\n  }\n\n  // If we're working with a document, inject contents into\n  // the body element\n  var curParentNode = one.body;\n\n  new HTMLParser(html, {\n    start: function(tagName, attrs, unary) {\n      // If it's a pre-built element, then we can ignore\n      // its construction\n      if (one[tagName]) {\n        curParentNode = one[tagName];\n        return;\n      }\n\n      var elem = doc.createElement(tagName);\n\n      for (var attr in attrs) {\n        elem.setAttribute(attrs[attr].name, attrs[attr].value);\n      }\n\n      if (structure[tagName] && typeof one[structure[tagName]] !== 'boolean') {\n        one[structure[tagName]].appendChild(elem);\n      }\n      else if (curParentNode && curParentNode.appendChild) {\n        curParentNode.appendChild(elem);\n      }\n\n      if (!unary) {\n        elems.push(elem);\n        curParentNode = elem;\n      }\n    },\n    end: function(/* tag */) {\n      elems.length -= 1;\n\n      // Init the new parentNode\n      curParentNode = elems[elems.length - 1];\n    },\n    chars: function(text) {\n      curParentNode.appendChild(doc.createTextNode(text));\n    },\n    comment: function(/* text */) {\n      // create comment node\n    },\n    ignore: function(/* text */) {\n      // What to do here?\n    }\n  });\n\n  return doc;\n};\n\nexports.endTag = endTag;\n", "\"use strict\";\n\nmodule.exports =\n{\n\t// Output\n\tABSOLUTE:      \"absolute\",\n\tPATH_RELATIVE: \"pathRelative\",\n\tROOT_RELATIVE: \"rootRelative\",\n\tSHORTEST:      \"shortest\"\n};\n", "\"use strict\";\n\nvar constants = require(\"./constants\");\n\n\n\nfunction formatAuth(urlObj, options)\n{\n\tif (urlObj.auth && !options.removeAuth && (urlObj.extra.relation.maximumHost || options.output===constants.ABSOLUTE))\n\t{\n\t\treturn urlObj.auth + \"@\";\n\t}\n\t\n\treturn \"\";\n}\n\n\n\nfunction formatHash(urlObj, options)\n{\n\treturn urlObj.hash ? urlObj.hash : \"\";\n}\n\n\n\nfunction formatHost(urlObj, options)\n{\n\tif (urlObj.host.full && (urlObj.extra.relation.maximumAuth || options.output===constants.ABSOLUTE))\n\t{\n\t\treturn urlObj.host.full;\n\t}\n\t\n\treturn \"\";\n}\n\n\n\nfunction formatPath(urlObj, options)\n{\n\tvar str = \"\";\n\t\n\tvar absolutePath = urlObj.path.absolute.string;\n\tvar relativePath = urlObj.path.relative.string;\n\tvar resource = showResource(urlObj, options);\n\t\n\tif (urlObj.extra.relation.maximumHost || options.output===constants.ABSOLUTE || options.output===constants.ROOT_RELATIVE)\n\t{\n\t\tstr = absolutePath;\n\t}\n\telse if (relativePath.length<=absolutePath.length && options.output===constants.SHORTEST || options.output===constants.PATH_RELATIVE)\n\t{\n\t\tstr = relativePath;\n\t\t\n\t\tif (str === \"\")\n\t\t{\n\t\t\tvar query = showQuery(urlObj,options) && !!getQuery(urlObj,options);\n\t\t\t\n\t\t\tif (urlObj.extra.relation.maximumPath && !resource)\n\t\t\t{\n\t\t\t\tstr = \"./\";\n\t\t\t}\n\t\t\telse if (urlObj.extra.relation.overridesQuery && !resource && !query)\n\t\t\t{\n\t\t\t\tstr = \"./\";\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tstr = absolutePath;\n\t}\n\t\n\tif ( str===\"/\" && !resource && options.removeRootTrailingSlash && (!urlObj.extra.relation.minimumPort || options.output===constants.ABSOLUTE) )\n\t{\n\t\tstr = \"\";\n\t}\n\t\n\treturn str;\n}\n\n\n\nfunction formatPort(urlObj, options)\n{\n\tif (urlObj.port && !urlObj.extra.portIsDefault && urlObj.extra.relation.maximumHost)\n\t{\n\t\treturn \":\" + urlObj.port;\n\t}\n\t\n\treturn \"\";\n}\n\n\n\nfunction formatQuery(urlObj, options)\n{\n\treturn showQuery(urlObj,options) ? getQuery(urlObj, options) : \"\";\n}\n\n\n\nfunction formatResource(urlObj, options)\n{\n\treturn showResource(urlObj,options) ? urlObj.resource : \"\";\n}\n\n\n\nfunction formatScheme(urlObj, options)\n{\n\tvar str = \"\";\n\t\n\tif (urlObj.extra.relation.maximumHost || options.output===constants.ABSOLUTE)\n\t{\n\t\tif (!urlObj.extra.relation.minimumScheme || !options.schemeRelative || options.output===constants.ABSOLUTE)\n\t\t{\n\t\t\tstr += urlObj.scheme + \"://\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr += \"//\";\n\t\t}\n\t}\n\t\n\treturn str;\n}\n\n\n\nfunction formatUrl(urlObj, options)\n{\n\tvar url = \"\";\n\t\n\turl += formatScheme(urlObj, options);\n\turl += formatAuth(urlObj, options);\n\turl += formatHost(urlObj, options);\n\turl += formatPort(urlObj, options);\n\turl += formatPath(urlObj, options);\n\turl += formatResource(urlObj, options);\n\turl += formatQuery(urlObj, options);\n\turl += formatHash(urlObj, options);\n\t\n\treturn url;\n}\n\n\n\nfunction getQuery(urlObj, options)\n{\n\tvar stripQuery = options.removeEmptyQueries && urlObj.extra.relation.minimumPort;\n\t\n\treturn urlObj.query.string[ stripQuery ? \"stripped\" : \"full\" ];\n}\n\n\n\nfunction showQuery(urlObj, options)\n{\n\treturn !urlObj.extra.relation.minimumQuery || options.output===constants.ABSOLUTE || options.output===constants.ROOT_RELATIVE;\n}\n\n\n\nfunction showResource(urlObj, options)\n{\n\tvar removeIndex = options.removeDirectoryIndexes && urlObj.extra.resourceIsIndex;\n\tvar removeMatchingResource = urlObj.extra.relation.minimumResource && options.output!==constants.ABSOLUTE && options.output!==constants.ROOT_RELATIVE;\n\t\n\treturn !!urlObj.resource && !removeMatchingResource && !removeIndex;\n}\n\n\n\nmodule.exports = formatUrl;\n", "\"use strict\";\n\n/*\n\tDeep-clone an object.\n*/\nfunction clone(obj)\n{\n\tif (obj instanceof Object)\n\t{\n\t\tvar clonedObj = (obj instanceof Array) ? [] : {};\n\t\t\n\t\tfor (var i in obj)\n\t\t{\n\t\t\tif ( obj.hasOwnProperty(i) )\n\t\t\t{\n\t\t\t\tclonedObj[i] = clone( obj[i] );\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn clonedObj;\n\t}\n\t\n\treturn obj;\n}\n\n\n\n/*\n\thttps://github.com/jonschlinkert/is-plain-object\n*/\nfunction isPlainObject(obj)\n{\n\treturn !!obj && typeof obj===\"object\" && obj.constructor===Object;\n}\n\n\n\n/*\n\tShallow-merge two objects.\n*/\nfunction shallowMerge(target, source)\n{\n\tif (target instanceof Object && source instanceof Object)\n\t{\n\t\tfor (var i in source)\n\t\t{\n\t\t\tif ( source.hasOwnProperty(i) )\n\t\t\t{\n\t\t\t\ttarget[i] = source[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn target;\n}\n\n\n\nmodule.exports =\n{\n\tclone: clone,\n\tisPlainObject: isPlainObject,\n\tshallowMerge: shallowMerge\n};\n", "\"use strict\";\n\nvar objUtils = require(\"./util/object\");\n\n\n\nfunction getOptions(options, defaults)\n{\n\tif ( objUtils.isPlainObject(options) )\n\t{\n\t\tvar newOptions = {};\n\t\t\n\t\tfor (var i in defaults)\n\t\t{\n\t\t\tif ( defaults.hasOwnProperty(i) )\n\t\t\t{\n\t\t\t\tif (options[i] !== undefined)\n\t\t\t\t{\n\t\t\t\t\tnewOptions[i] = mergeOption(options[i], defaults[i]);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnewOptions[i] = defaults[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn newOptions;\n\t}\n\telse\n\t{\n\t\treturn defaults;\n\t}\n}\n\n\n\nfunction mergeOption(newValues, defaultValues)\n{\n\tif (defaultValues instanceof Object && newValues instanceof Object)\n\t{\n\t\tif (defaultValues instanceof Array && newValues instanceof Array)\n\t\t{\n\t\t\treturn defaultValues.concat(newValues);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn objUtils.shallowMerge(newValues, defaultValues);\n\t\t}\n\t}\n\t\n\treturn newValues;\n}\n\n\n\nmodule.exports = getOptions;\n", "\"use strict\";\n\nfunction hrefInfo(urlObj)\n{\n\tvar minimumPathOnly     = (!urlObj.scheme && !urlObj.auth && !urlObj.host.full && !urlObj.port);\n\tvar minimumResourceOnly = (minimumPathOnly && !urlObj.path.absolute.string);\n\tvar minimumQueryOnly    = (minimumResourceOnly && !urlObj.resource);\n\tvar minimumHashOnly     = (minimumQueryOnly && !urlObj.query.string.full.length);\n\tvar empty               = (minimumHashOnly && !urlObj.hash);\n\t\n\turlObj.extra.hrefInfo.minimumPathOnly     = minimumPathOnly;\n\turlObj.extra.hrefInfo.minimumResourceOnly = minimumResourceOnly;\n\turlObj.extra.hrefInfo.minimumQueryOnly    = minimumQueryOnly;\n\turlObj.extra.hrefInfo.minimumHashOnly     = minimumHashOnly;\n\turlObj.extra.hrefInfo.empty = empty;\n}\n\n\n\nmodule.exports = hrefInfo;\n", "\"use strict\";\n\nfunction parseHost(urlObj, options)\n{\n\t// TWEAK :: condition only for speed optimization\n\tif (options.ignore_www)\n\t{\n\t\tvar host = urlObj.host.full;\n\t\t\n\t\tif (host)\n\t\t{\n\t\t\tvar stripped = host;\n\t\t\t\n\t\t\tif (host.indexOf(\"www.\") === 0)\n\t\t\t{\n\t\t\t\tstripped = host.substr(4);\n\t\t\t}\n\t\t\t\n\t\t\turlObj.host.stripped = stripped;\n\t\t}\n\t}\n}\n\n\n\nmodule.exports = parseHost;\n", "\"use strict\";\n\nfunction isDirectoryIndex(resource, options)\n{\n\tvar verdict = false;\n\t\n\toptions.directoryIndexes.every( function(index)\n\t{\n\t\tif (index === resource)\n\t\t{\n\t\t\tverdict = true;\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\treturn true;\n\t});\n\t\n\treturn verdict;\n}\n\n\n\nfunction parsePath(urlObj, options)\n{\n\tvar path = urlObj.path.absolute.string;\n\t\n\tif (path)\n\t{\n\t\tvar lastSlash = path.lastIndexOf(\"/\");\n\t\t\n\t\tif (lastSlash > -1)\n\t\t{\n\t\t\tif (++lastSlash < path.length)\n\t\t\t{\n\t\t\t\tvar resource = path.substr(lastSlash);\n\t\t\t\t\n\t\t\t\tif (resource!==\".\" && resource!==\"..\")\n\t\t\t\t{\n\t\t\t\t\turlObj.resource = resource;\n\t\t\t\t\tpath = path.substr(0, lastSlash);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpath += \"/\";\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\turlObj.path.absolute.string = path;\n\t\t\turlObj.path.absolute.array = splitPath(path);\n\t\t}\n\t\telse if (path===\".\" || path===\"..\")\n\t\t{\n\t\t\t// \"..?var\", \"..#anchor\", etc ... not \"..index.html\"\n\t\t\tpath += \"/\";\n\t\t\t\n\t\t\turlObj.path.absolute.string = path;\n\t\t\turlObj.path.absolute.array = splitPath(path);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Resource-only\n\t\t\turlObj.resource = path;\n\t\t\turlObj.path.absolute.string = null;\n\t\t}\n\t\t\n\t\turlObj.extra.resourceIsIndex = isDirectoryIndex(urlObj.resource, options);\n\t}\n\t// Else: query/hash-only or empty\n}\n\n\n\nfunction splitPath(path)\n{\n\t// TWEAK :: condition only for speed optimization\n\tif (path !== \"/\")\n\t{\n\t\tvar cleaned = [];\n\t\t\n\t\tpath.split(\"/\").forEach( function(dir)\n\t\t{\n\t\t\t// Cleanup -- splitting \"/dir/\" becomes [\"\",\"dir\",\"\"]\n\t\t\tif (dir !== \"\")\n\t\t\t{\n\t\t\t\tcleaned.push(dir);\n\t\t\t}\n\t\t});\n\t\t\n\t\treturn cleaned;\n\t}\n\telse\n\t{\n\t\t// Faster to skip the above block and just create an array\n\t\treturn [];\n\t}\n}\n\n\n\nmodule.exports = parsePath;\n", "\"use strict\";\n\nfunction parsePort(urlObj, options)\n{\n\tvar defaultPort = -1;\n\t\n\tfor (var i in options.defaultPorts)\n\t{\n\t\tif ( i===urlObj.scheme && options.defaultPorts.hasOwnProperty(i) )\n\t\t{\n\t\t\tdefaultPort = options.defaultPorts[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tif (defaultPort > -1)\n\t{\n\t\t// Force same type as urlObj.port\n\t\tdefaultPort = defaultPort.toString();\n\t\t\n\t\tif (urlObj.port === null)\n\t\t{\n\t\t\turlObj.port = defaultPort;\n\t\t}\n\t\t\n\t\turlObj.extra.portIsDefault = (urlObj.port === defaultPort);\n\t}\n}\n\n\n\nmodule.exports = parsePort;\n", "\"use strict\";\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n\n\nfunction parseQuery(urlObj, options)\n{\n\turlObj.query.string.full = stringify(urlObj.query.object, false);\n\t\n\t// TWEAK :: condition only for speed optimization\n\tif (options.removeEmptyQueries)\n\t{\n\t\turlObj.query.string.stripped = stringify(urlObj.query.object, true);\n\t}\n}\n\n\n\nfunction stringify(queryObj, removeEmptyQueries)\n{\n\tvar count = 0;\n\tvar str = \"\";\n\t\n\tfor (var i in queryObj)\n\t{\n\t\tif ( i!==\"\" && hasOwnProperty.call(queryObj, i)===true )\n\t\t{\n\t\t\tvar value = queryObj[i];\n\t\t\t\n\t\t\tif (value !== \"\" || !removeEmptyQueries)\n\t\t\t{\n\t\t\t\tstr += (++count===1) ? \"?\" : \"&\";\n\t\t\t\t\n\t\t\t\ti = encodeURIComponent(i);\n\t\t\t\t\n\t\t\t\tif (value !== \"\")\n\t\t\t\t{\n\t\t\t\t\tstr += i +\"=\"+ encodeURIComponent(value).replace(/%20/g,\"+\");\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tstr += i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn str;\n}\n\n\n\nmodule.exports = parseQuery;\n", "\"use strict\";\n\nvar _parseUrl = require(\"url\").parse;\n\n\n\n/*\n\tCustomize the URL object that Node generates\n\tbecause:\n\t\n\t* necessary data for later\n\t* urlObj.host is useless\n\t* urlObj.hostname is too long\n\t* urlObj.path is useless\n\t* urlObj.pathname is too long\n\t* urlObj.protocol is inaccurate; should be called \"scheme\"\n\t* urlObj.search is mostly useless\n*/\nfunction clean(urlObj)\n{\n\tvar scheme = urlObj.protocol;\n\t\n\tif (scheme)\n\t{\n\t\t// Remove \":\" suffix\n\t\tif (scheme.indexOf(\":\") === scheme.length-1)\n\t\t{\n\t\t\tscheme = scheme.substr(0, scheme.length-1);\n\t\t}\n\t}\n\t\n\turlObj.host =\n\t{\n\t\t// TODO :: unescape(encodeURIComponent(s)) ? ... http://ecmanaut.blogspot.ca/2006/07/encoding-decoding-utf8-in-javascript.html\n\t\tfull: urlObj.hostname,\n\t\tstripped: null\n\t};\n\t\n\turlObj.path =\n\t{\n\t\tabsolute:\n\t\t{\n\t\t\tarray: null,\n\t\t\tstring: urlObj.pathname\n\t\t},\n\t\trelative:\n\t\t{\n\t\t\tarray: null,\n\t\t\tstring: null\n\t\t}\n\t};\n\t\n\turlObj.query =\n\t{\n\t\tobject: urlObj.query,\n\t\tstring:\n\t\t{\n\t\t\tfull: null,\n\t\t\tstripped: null\n\t\t}\n\t};\n\t\n\turlObj.extra =\n\t{\n\t\threfInfo:\n\t\t{\n\t\t\tminimumPathOnly: null,\n\t\t\tminimumResourceOnly: null,\n\t\t\tminimumQueryOnly: null,\n\t\t\tminimumHashOnly: null,\n\t\t\tempty: null,\n\t\t\t\n\t\t\tseparatorOnlyQuery: urlObj.search===\"?\"\n\t\t},\n\t\tportIsDefault: null,\n\t\trelation:\n\t\t{\n\t\t\tmaximumScheme: null,\n\t\t\tmaximumAuth: null,\n\t\t\tmaximumHost: null,\n\t\t\tmaximumPort: null,\n\t\t\tmaximumPath: null,\n\t\t\tmaximumResource: null,\n\t\t\tmaximumQuery: null,\n\t\t\tmaximumHash: null,\n\t\t\t\n\t\t\tminimumScheme: null,\n\t\t\tminimumAuth: null,\n\t\t\tminimumHost: null,\n\t\t\tminimumPort: null,\n\t\t\tminimumPath: null,\n\t\t\tminimumResource: null,\n\t\t\tminimumQuery: null,\n\t\t\tminimumHash: null,\n\t\t\t\n\t\t\toverridesQuery: null\n\t\t},\n\t\tresourceIsIndex: null,\n\t\tslashes: urlObj.slashes\n\t};\n\t\n\turlObj.resource = null;\n\turlObj.scheme = scheme;\n\tdelete urlObj.hostname;\n\tdelete urlObj.pathname;\n\tdelete urlObj.protocol;\n\tdelete urlObj.search;\n\tdelete urlObj.slashes;\n\t\n\treturn urlObj;\n}\n\n\n\nfunction validScheme(url, options)\n{\n\tvar valid = true;\n\t\n\toptions.rejectedSchemes.every( function(rejectedScheme)\n\t{\n\t\tvalid = !(url.indexOf(rejectedScheme+\":\") === 0);\n\t\t\n\t\t// Break loop\n\t\treturn valid;\n\t});\n\t\n\treturn valid;\n}\n\n\n\nfunction parseUrlString(url, options)\n{\n\tif ( validScheme(url,options) )\n\t{\n\t\treturn clean( _parseUrl(url, true, options.slashesDenoteHost) );\n\t}\n\telse\n\t{\n\t\treturn {href:url, valid:false};\n\t}\n}\n\n\n\nmodule.exports = parseUrlString;\n", "\"use strict\";\n\nfunction joinPath(pathArray)\n{\n\tif (pathArray.length > 0)\n\t{\n\t\treturn pathArray.join(\"/\") + \"/\";\n\t}\n\telse\n\t{\n\t\treturn \"\";\n\t}\n}\n\n\n\nfunction resolveDotSegments(pathArray)\n{\n\tvar pathAbsolute = [];\n\t\n\tpathArray.forEach( function(dir)\n\t{\n\t\tif (dir !== \"..\")\n\t\t{\n\t\t\tif (dir !== \".\")\n\t\t\t{\n\t\t\t\tpathAbsolute.push(dir);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Remove parent\n\t\t\tif (pathAbsolute.length > 0)\n\t\t\t{\n\t\t\t\tpathAbsolute.splice(pathAbsolute.length-1, 1);\n\t\t\t}\n\t\t}\n\t});\n\t\n\treturn pathAbsolute;\n}\n\n\n\nmodule.exports =\n{\n\tjoin: joinPath,\n\tresolveDotSegments: resolveDotSegments\n};\n", "\"use strict\";\n\nvar hrefInfo   = require(\"./hrefInfo\");\nvar parseHost  = require(\"./host\");\nvar parsePath  = require(\"./path\");\nvar parsePort  = require(\"./port\");\nvar parseQuery = require(\"./query\");\nvar parseUrlString = require(\"./urlstring\");\nvar pathUtils      = require(\"../util/path\");\n\n\n\nfunction parseFromUrl(url, options, fallback)\n{\n\tif (url)\n\t{\n\t\tvar urlObj = parseUrl(url, options);\n\t\t\n\t\t// Because the following occurs in the relate stage for \"to\" URLs,\n\t\t// such had to be mostly duplicated here\n\t\t\n\t\tvar pathArray = pathUtils.resolveDotSegments(urlObj.path.absolute.array);\n\t\t\n\t\turlObj.path.absolute.array  = pathArray;\n\t\turlObj.path.absolute.string = \"/\" + pathUtils.join(pathArray);\n\t\t\n\t\treturn urlObj;\n\t}\n\telse\n\t{\n\t\treturn fallback;\n\t}\n}\n\n\n\nfunction parseUrl(url, options)\n{\n\tvar urlObj = parseUrlString(url, options);\n\t\n\tif (urlObj.valid===false) return urlObj;\n\t\n\tparseHost(urlObj, options);\n\tparsePort(urlObj, options);\n\tparsePath(urlObj, options);\n\tparseQuery(urlObj, options);\n\threfInfo(urlObj);\n\t\n\treturn urlObj;\n}\n\n\n\nmodule.exports =\n{\n\tfrom: parseFromUrl,\n\tto:   parseUrl\n};\n", "\"use strict\";\n\nfunction findRelation_upToPath(urlObj, siteUrlObj, options)\n{\n\t// Path- or root-relative URL\n\tvar pathOnly = urlObj.extra.hrefInfo.minimumPathOnly;\n\t\n\t// Matching scheme, scheme-relative or path-only\n\tvar minimumScheme = (urlObj.scheme===siteUrlObj.scheme || !urlObj.scheme);\n\t\n\t// Matching auth, ignoring auth or path-only\n\tvar minimumAuth = minimumScheme && (urlObj.auth===siteUrlObj.auth || options.removeAuth || pathOnly);\n\t\n\t// Matching host or path-only\n\tvar www = options.ignore_www ? \"stripped\" : \"full\";\n\tvar minimumHost = minimumAuth && (urlObj.host[www]===siteUrlObj.host[www] || pathOnly);\n\t\n\t// Matching port or path-only\n\tvar minimumPort = minimumHost && (urlObj.port===siteUrlObj.port || pathOnly);\n\t\n\turlObj.extra.relation.minimumScheme = minimumScheme;\n\turlObj.extra.relation.minimumAuth   = minimumAuth;\n\turlObj.extra.relation.minimumHost   = minimumHost;\n\turlObj.extra.relation.minimumPort   = minimumPort;\n\t\n\turlObj.extra.relation.maximumScheme = !minimumScheme || minimumScheme && !minimumAuth;\n\turlObj.extra.relation.maximumAuth   = !minimumScheme || minimumScheme && !minimumHost;\n\turlObj.extra.relation.maximumHost   = !minimumScheme || minimumScheme && !minimumPort;\n}\n\n\n\nfunction findRelation_pathOn(urlObj, siteUrlObj, options)\n{\n\tvar queryOnly = urlObj.extra.hrefInfo.minimumQueryOnly;\n\tvar hashOnly  = urlObj.extra.hrefInfo.minimumHashOnly;\n\tvar empty     = urlObj.extra.hrefInfo.empty;\t// not required, but self-documenting\n\t\n\t// From upToPath()\n\tvar minimumPort   = urlObj.extra.relation.minimumPort;\n\tvar minimumScheme = urlObj.extra.relation.minimumScheme;\n\t\n\t// Matching port and path\n\tvar minimumPath = minimumPort && urlObj.path.absolute.string===siteUrlObj.path.absolute.string;\n\t\n\t// Matching resource or query/hash-only or empty\n\tvar matchingResource = (urlObj.resource===siteUrlObj.resource || !urlObj.resource && siteUrlObj.extra.resourceIsIndex) || (options.removeDirectoryIndexes && urlObj.extra.resourceIsIndex && !siteUrlObj.resource);\n\tvar minimumResource = minimumPath && (matchingResource || queryOnly || hashOnly || empty);\n\t\n\t// Matching query or hash-only/empty\n\tvar query = options.removeEmptyQueries ? \"stripped\" : \"full\";\n\tvar urlQuery = urlObj.query.string[query];\n\tvar siteUrlQuery = siteUrlObj.query.string[query];\n\tvar minimumQuery = (minimumResource && !!urlQuery && urlQuery===siteUrlQuery) || ((hashOnly || empty) && !urlObj.extra.hrefInfo.separatorOnlyQuery);\n\t\n\tvar minimumHash = minimumQuery && urlObj.hash===siteUrlObj.hash;\n\t\n\turlObj.extra.relation.minimumPath     = minimumPath;\n\turlObj.extra.relation.minimumResource = minimumResource;\n\turlObj.extra.relation.minimumQuery    = minimumQuery;\n\turlObj.extra.relation.minimumHash     = minimumHash;\n\t\n\turlObj.extra.relation.maximumPort     = !minimumScheme || minimumScheme && !minimumPath;\n\turlObj.extra.relation.maximumPath     = !minimumScheme || minimumScheme && !minimumResource;\n\turlObj.extra.relation.maximumResource = !minimumScheme || minimumScheme && !minimumQuery;\n\turlObj.extra.relation.maximumQuery    = !minimumScheme || minimumScheme && !minimumHash;\n\turlObj.extra.relation.maximumHash     = !minimumScheme || minimumScheme && !minimumHash;\t// there's nothing after hash, so it's the same as maximumQuery\n\t\n\t// Matching path and/or resource with existing but non-matching site query\n\turlObj.extra.relation.overridesQuery  = minimumPath && urlObj.extra.relation.maximumResource && !minimumQuery && !!siteUrlQuery;\n}\n\n\n\nmodule.exports =\n{\n\tpathOn:   findRelation_pathOn,\n\tupToPath: findRelation_upToPath\n};\n", "\"use strict\";\n\nvar findRelation = require(\"./findRelation\");\nvar objUtils     = require(\"../util/object\");\nvar pathUtils    = require(\"../util/path\");\n\n\n\nfunction absolutize(urlObj, siteUrlObj, options)\n{\n\tfindRelation.upToPath(urlObj, siteUrlObj, options);\n\t\n\t// Fill in relative URLs\n\tif (urlObj.extra.relation.minimumScheme) urlObj.scheme = siteUrlObj.scheme;\n\tif (urlObj.extra.relation.minimumAuth)   urlObj.auth   = siteUrlObj.auth;\n\tif (urlObj.extra.relation.minimumHost)   urlObj.host   = objUtils.clone(siteUrlObj.host);\n\tif (urlObj.extra.relation.minimumPort)   copyPort(urlObj, siteUrlObj);\n\tif (urlObj.extra.relation.minimumScheme) copyPath(urlObj, siteUrlObj);\n\t\n\t// Check remaining relativeness now that path has been copied and/or resolved\n\tfindRelation.pathOn(urlObj, siteUrlObj, options);\n\t\n\t// Fill in relative URLs\n\tif (urlObj.extra.relation.minimumResource) copyResource(urlObj, siteUrlObj);\n\tif (urlObj.extra.relation.minimumQuery)    urlObj.query = objUtils.clone(siteUrlObj.query);\n\tif (urlObj.extra.relation.minimumHash)     urlObj.hash  = siteUrlObj.hash;\n}\n\n\n\n/*\n\tGet an absolute path that's relative to site url.\n*/\nfunction copyPath(urlObj, siteUrlObj)\n{\n\tif (urlObj.extra.relation.maximumHost || !urlObj.extra.hrefInfo.minimumResourceOnly)\n\t{\n\t\tvar pathArray = urlObj.path.absolute.array;\n\t\tvar pathString = \"/\";\n\t\t\n\t\t// If not erroneous URL\n\t\tif (pathArray)\n\t\t{\n\t\t\t// If is relative path\n\t\t\tif (urlObj.extra.hrefInfo.minimumPathOnly && urlObj.path.absolute.string.indexOf(\"/\")!==0)\n\t\t\t{\n\t\t\t\t// Append path to site path\n\t\t\t\tpathArray = siteUrlObj.path.absolute.array.concat(pathArray);\n\t\t\t}\n\t\t\t\n\t\t\tpathArray   = pathUtils.resolveDotSegments(pathArray);\n\t\t\tpathString += pathUtils.join(pathArray);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpathArray = [];\n\t\t}\n\t\t\n\t\turlObj.path.absolute.array  = pathArray;\n\t\turlObj.path.absolute.string = pathString;\n\t}\n\telse\n\t{\n\t\t// Resource-, query- or hash-only or empty\n\t\turlObj.path = objUtils.clone(siteUrlObj.path);\n\t}\n}\n\n\n\nfunction copyPort(urlObj, siteUrlObj)\n{\n\turlObj.port = siteUrlObj.port;\n\t\n\turlObj.extra.portIsDefault = siteUrlObj.extra.portIsDefault;\n}\n\n\n\nfunction copyResource(urlObj, siteUrlObj)\n{\n\turlObj.resource = siteUrlObj.resource;\n\t\n\turlObj.extra.resourceIsIndex = siteUrlObj.extra.resourceIsIndex;\n}\n\n\n\nmodule.exports = absolutize;\n", "\"use strict\";\n\nvar pathUtils = require(\"../util/path\");\n\n\n\n/*\n\tGet a path relative to the site path.\n*/\nfunction relatePath(absolutePath, siteAbsolutePath)\n{\n\tvar relativePath = [];\n\t\n\t// At this point, it's related to the host/port\n\tvar related = true;\n\tvar parentIndex = -1;\n\t\n\t// Find parents\n\tsiteAbsolutePath.forEach( function(siteAbsoluteDir, i)\n\t{\n\t\tif (related)\n\t\t{\n\t\t\tif (absolutePath[i] !== siteAbsoluteDir)\n\t\t\t{\n\t\t\t\trelated = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tparentIndex = i;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (!related)\n\t\t{\n\t\t\t// Up one level\n\t\t\trelativePath.push(\"..\");\n\t\t}\n\t});\n\t\n\t// Form path\n\tabsolutePath.forEach( function(dir, i)\n\t{\n\t\tif (i > parentIndex)\n\t\t{\n\t\t\trelativePath.push(dir);\n\t\t}\n\t});\n\t\n\treturn relativePath;\n}\n\n\n\nfunction relativize(urlObj, siteUrlObj, options)\n{\n\tif (urlObj.extra.relation.minimumScheme)\n\t{\n\t\tvar pathArray = relatePath(urlObj.path.absolute.array, siteUrlObj.path.absolute.array);\n\t\t\n\t\turlObj.path.relative.array  = pathArray;\n\t\turlObj.path.relative.string = pathUtils.join(pathArray);\n\t}\n}\n\n\n\nmodule.exports = relativize;\n", "\"use strict\";\n\nvar absolutize = require(\"./absolutize\");\nvar relativize = require(\"./relativize\");\n\n\n\nfunction relateUrl(siteUrlObj, urlObj, options)\n{\n\tabsolutize(urlObj, siteUrlObj, options);\n\trelativize(urlObj, siteUrlObj, options);\n\t\n\treturn urlObj;\n}\n\n\n\nmodule.exports = relateUrl;\n", "\"use strict\";\n\nvar constants  = require(\"./constants\");\nvar formatUrl  = require(\"./format\");\nvar getOptions = require(\"./options\");\nvar objUtils   = require(\"./util/object\");\nvar parseUrl   = require(\"./parse\");\nvar relateUrl  = require(\"./relate\");\n\n\n\nfunction RelateUrl(from, options)\n{\n\tthis.options = getOptions(options,\n\t{\n\t\tdefaultPorts: {ftp:21, http:80, https:443},\n\t\tdirectoryIndexes: [\"index.html\"],\n\t\tignore_www: false,\n\t\toutput: RelateUrl.SHORTEST,\n\t\trejectedSchemes: [\"data\",\"javascript\",\"mailto\"],\n\t\tremoveAuth: false,\n\t\tremoveDirectoryIndexes: true,\n\t\tremoveEmptyQueries: false,\n\t\tremoveRootTrailingSlash: true,\n\t\tschemeRelative: true,\n\t\tsite: undefined,\n\t\tslashesDenoteHost: true\n\t});\n\t\n\tthis.from = parseUrl.from(from, this.options, null);\n}\n\n\n\n/*\n\tUsage: instance=new RelateUrl(); instance.relate();\n*/\nRelateUrl.prototype.relate = function(from, to, options)\n{\n\t// relate(to,options)\n\tif ( objUtils.isPlainObject(to) )\n\t{\n\t\toptions = to;\n\t\tto = from;\n\t\tfrom = null;\n\t}\n\t// relate(to)\n\telse if (!to)\n\t{\n\t\tto = from;\n\t\tfrom = null;\n\t}\n\t\n\toptions = getOptions(options, this.options);\n\tfrom = from || options.site;\n\tfrom = parseUrl.from(from, options, this.from);\n\t\n\tif (!from || !from.href)\n\t{\n\t\tthrow new Error(\"from value not defined.\");\n\t}\n\telse if (from.extra.hrefInfo.minimumPathOnly)\n\t{\n\t\tthrow new Error(\"from value supplied is not absolute: \"+from.href);\n\t}\n\t\n\tto = parseUrl.to(to, options);\n\t\n\tif (to.valid===false) return to.href;\n\t\n\tto = relateUrl(from, to, options);\n\tto = formatUrl(to, options);\n\t\n\treturn to;\n}\n\n\n\n/*\n\tUsage: RelateUrl.relate();\n*/\nRelateUrl.relate = function(from, to, options)\n{\n\treturn new RelateUrl().relate(from, to, options);\n}\n\n\n\n// Make constants accessible from API\nobjUtils.shallowMerge(RelateUrl, constants);\n\n\n\nmodule.exports = RelateUrl;\n", "'use strict';\n\nfunction Sorter() {\n}\n\nSorter.prototype.sort = function(tokens, fromIndex) {\n  fromIndex = fromIndex || 0;\n  for (var i = 0, len = this.keys.length; i < len; i++) {\n    var key = this.keys[i];\n    var token = key.slice(1);\n    var index = tokens.indexOf(token, fromIndex);\n    if (index !== -1) {\n      do {\n        if (index !== fromIndex) {\n          tokens.splice(index, 1);\n          tokens.splice(fromIndex, 0, token);\n        }\n        fromIndex++;\n      } while ((index = tokens.indexOf(token, fromIndex)) !== -1);\n      return this[key].sort(tokens, fromIndex);\n    }\n  }\n  return tokens;\n};\n\nfunction TokenChain() {\n}\n\nTokenChain.prototype = {\n  add: function(tokens) {\n    var self = this;\n    tokens.forEach(function(token) {\n      var key = '$' + token;\n      if (!self[key]) {\n        self[key] = [];\n        self[key].processed = 0;\n      }\n      self[key].push(tokens);\n    });\n  },\n  createSorter: function() {\n    var self = this;\n    var sorter = new Sorter();\n    sorter.keys = Object.keys(self).sort(function(j, k) {\n      var m = self[j].length;\n      var n = self[k].length;\n      return m < n ? 1 : m > n ? -1 : j < k ? -1 : j > k ? 1 : 0;\n    }).filter(function(key) {\n      if (self[key].processed < self[key].length) {\n        var token = key.slice(1);\n        var chain = new TokenChain();\n        self[key].forEach(function(tokens) {\n          var index;\n          while ((index = tokens.indexOf(token)) !== -1) {\n            tokens.splice(index, 1);\n          }\n          tokens.forEach(function(token) {\n            self['$' + token].processed++;\n          });\n          chain.add(tokens.slice(0));\n        });\n        sorter[key] = chain.createSorter();\n        return true;\n      }\n      return false;\n    });\n    return sorter;\n  }\n};\n\nmodule.exports = TokenChain;\n", "const comma = ','.charCodeAt(0);\nconst semicolon = ';'.charCodeAt(0);\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst intToChar = new Uint8Array(64); // 64 possible chars.\nconst charToInteger = new Uint8Array(128); // z is 122 in ASCII\nfor (let i = 0; i < chars.length; i++) {\n    const c = chars.charCodeAt(i);\n    charToInteger[c] = i;\n    intToChar[i] = c;\n}\n// Provide a fallback for older environments.\nconst td = typeof TextDecoder !== 'undefined'\n    ? new TextDecoder()\n    : typeof Buffer !== 'undefined'\n        ? {\n            decode(buf) {\n                const out = Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength);\n                return out.toString();\n            },\n        }\n        : {\n            decode(buf) {\n                let out = '';\n                for (let i = 0; i < buf.length; i++) {\n                    out += String.fromCharCode(buf[i]);\n                }\n                return out;\n            },\n        };\nfunction decode(mappings) {\n    const state = new Int32Array(5);\n    const decoded = [];\n    let line = [];\n    let sorted = true;\n    let lastCol = 0;\n    for (let i = 0; i < mappings.length;) {\n        const c = mappings.charCodeAt(i);\n        if (c === comma) {\n            i++;\n        }\n        else if (c === semicolon) {\n            state[0] = lastCol = 0;\n            if (!sorted)\n                sort(line);\n            sorted = true;\n            decoded.push(line);\n            line = [];\n            i++;\n        }\n        else {\n            i = decodeInteger(mappings, i, state, 0); // generatedCodeColumn\n            const col = state[0];\n            if (col < lastCol)\n                sorted = false;\n            lastCol = col;\n            if (!hasMoreSegments(mappings, i)) {\n                line.push([col]);\n                continue;\n            }\n            i = decodeInteger(mappings, i, state, 1); // sourceFileIndex\n            i = decodeInteger(mappings, i, state, 2); // sourceCodeLine\n            i = decodeInteger(mappings, i, state, 3); // sourceCodeColumn\n            if (!hasMoreSegments(mappings, i)) {\n                line.push([col, state[1], state[2], state[3]]);\n                continue;\n            }\n            i = decodeInteger(mappings, i, state, 4); // nameIndex\n            line.push([col, state[1], state[2], state[3], state[4]]);\n        }\n    }\n    if (!sorted)\n        sort(line);\n    decoded.push(line);\n    return decoded;\n}\nfunction decodeInteger(mappings, pos, state, j) {\n    let value = 0;\n    let shift = 0;\n    let integer = 0;\n    do {\n        const c = mappings.charCodeAt(pos++);\n        integer = charToInteger[c];\n        value |= (integer & 31) << shift;\n        shift += 5;\n    } while (integer & 32);\n    const shouldNegate = value & 1;\n    value >>>= 1;\n    if (shouldNegate) {\n        value = -0x80000000 | -value;\n    }\n    state[j] += value;\n    return pos;\n}\nfunction hasMoreSegments(mappings, i) {\n    if (i >= mappings.length)\n        return false;\n    const c = mappings.charCodeAt(i);\n    if (c === comma || c === semicolon)\n        return false;\n    return true;\n}\nfunction sort(line) {\n    line.sort(sortComparator);\n}\nfunction sortComparator(a, b) {\n    return a[0] - b[0];\n}\nfunction encode(decoded) {\n    const state = new Int32Array(5);\n    let buf = new Uint8Array(1024);\n    let pos = 0;\n    for (let i = 0; i < decoded.length; i++) {\n        const line = decoded[i];\n        if (i > 0) {\n            buf = reserve(buf, pos, 1);\n            buf[pos++] = semicolon;\n        }\n        if (line.length === 0)\n            continue;\n        state[0] = 0;\n        for (let j = 0; j < line.length; j++) {\n            const segment = line[j];\n            // We can push up to 5 ints, each int can take at most 7 chars, and we\n            // may push a comma.\n            buf = reserve(buf, pos, 36);\n            if (j > 0)\n                buf[pos++] = comma;\n            pos = encodeInteger(buf, pos, state, segment, 0); // generatedCodeColumn\n            if (segment.length === 1)\n                continue;\n            pos = encodeInteger(buf, pos, state, segment, 1); // sourceFileIndex\n            pos = encodeInteger(buf, pos, state, segment, 2); // sourceCodeLine\n            pos = encodeInteger(buf, pos, state, segment, 3); // sourceCodeColumn\n            if (segment.length === 4)\n                continue;\n            pos = encodeInteger(buf, pos, state, segment, 4); // nameIndex\n        }\n    }\n    return td.decode(buf.subarray(0, pos));\n}\nfunction reserve(buf, pos, count) {\n    if (buf.length > pos + count)\n        return buf;\n    const swap = new Uint8Array(buf.length * 2);\n    swap.set(buf);\n    return swap;\n}\nfunction encodeInteger(buf, pos, state, segment, j) {\n    const next = segment[j];\n    let num = next - state[j];\n    state[j] = next;\n    num = num < 0 ? (-num << 1) | 1 : num << 1;\n    do {\n        let clamped = num & 0b011111;\n        num >>>= 5;\n        if (num > 0)\n            clamped |= 0b100000;\n        buf[pos++] = intToChar[clamped];\n    } while (num > 0);\n    return pos;\n}\n\nexport { decode, encode };\n//# sourceMappingURL=sourcemap-codec.mjs.map\n", "// Matches the scheme of a URL, eg \"http://\"\nconst schemeRegex = /^[\\w+.-]+:\\/\\//;\n/**\n * Matches the parts of a URL:\n * 1. Scheme, including \":\", guaranteed.\n * 2. User/password, including \"@\", optional.\n * 3. Host, guaranteed.\n * 4. Port, including \":\", optional.\n * 5. Path, including \"/\", optional.\n */\nconst urlRegex = /^([\\w+.-]+:)\\/\\/([^@/#?]*@)?([^:/#?]*)(:\\d+)?(\\/[^#?]*)?/;\n/**\n * File URLs are weird. They dont' need the regular `//` in the scheme, they may or may not start\n * with a leading `/`, they can have a domain (but only if they don't start with a Windows drive).\n *\n * 1. Host, optional.\n * 2. Path, which may inclue \"/\", guaranteed.\n */\nconst fileRegex = /^file:(?:\\/\\/((?![a-z]:)[^/]*)?)?(\\/?.*)/i;\nfunction isAbsoluteUrl(input) {\n    return schemeRegex.test(input);\n}\nfunction isSchemeRelativeUrl(input) {\n    return input.startsWith('//');\n}\nfunction isAbsolutePath(input) {\n    return input.startsWith('/');\n}\nfunction isFileUrl(input) {\n    return input.startsWith('file:');\n}\nfunction parseAbsoluteUrl(input) {\n    const match = urlRegex.exec(input);\n    return makeUrl(match[1], match[2] || '', match[3], match[4] || '', match[5] || '/');\n}\nfunction parseFileUrl(input) {\n    const match = fileRegex.exec(input);\n    const path = match[2];\n    return makeUrl('file:', '', match[1] || '', '', isAbsolutePath(path) ? path : '/' + path);\n}\nfunction makeUrl(scheme, user, host, port, path) {\n    return {\n        scheme,\n        user,\n        host,\n        port,\n        path,\n        relativePath: false,\n    };\n}\nfunction parseUrl(input) {\n    if (isSchemeRelativeUrl(input)) {\n        const url = parseAbsoluteUrl('http:' + input);\n        url.scheme = '';\n        return url;\n    }\n    if (isAbsolutePath(input)) {\n        const url = parseAbsoluteUrl('http://foo.com' + input);\n        url.scheme = '';\n        url.host = '';\n        return url;\n    }\n    if (isFileUrl(input))\n        return parseFileUrl(input);\n    if (isAbsoluteUrl(input))\n        return parseAbsoluteUrl(input);\n    const url = parseAbsoluteUrl('http://foo.com/' + input);\n    url.scheme = '';\n    url.host = '';\n    url.relativePath = true;\n    return url;\n}\nfunction stripPathFilename(path) {\n    // If a path ends with a parent directory \"..\", then it's a relative path with excess parent\n    // paths. It's not a file, so we can't strip it.\n    if (path.endsWith('/..'))\n        return path;\n    const index = path.lastIndexOf('/');\n    return path.slice(0, index + 1);\n}\nfunction mergePaths(url, base) {\n    // If we're not a relative path, then we're an absolute path, and it doesn't matter what base is.\n    if (!url.relativePath)\n        return;\n    normalizePath(base);\n    // If the path is just a \"/\", then it was an empty path to begin with (remember, we're a relative\n    // path).\n    if (url.path === '/') {\n        url.path = base.path;\n    }\n    else {\n        // Resolution happens relative to the base path's directory, not the file.\n        url.path = stripPathFilename(base.path) + url.path;\n    }\n    // If the base path is absolute, then our path is now absolute too.\n    url.relativePath = base.relativePath;\n}\n/**\n * The path can have empty directories \"//\", unneeded parents \"foo/..\", or current directory\n * \"foo/.\". We need to normalize to a standard representation.\n */\nfunction normalizePath(url) {\n    const { relativePath } = url;\n    const pieces = url.path.split('/');\n    // We need to preserve the first piece always, so that we output a leading slash. The item at\n    // pieces[0] is an empty string.\n    let pointer = 1;\n    // Positive is the number of real directories we've output, used for popping a parent directory.\n    // Eg, \"foo/bar/..\" will have a positive 2, and we can decrement to be left with just \"foo\".\n    let positive = 0;\n    // We need to keep a trailing slash if we encounter an empty directory (eg, splitting \"foo/\" will\n    // generate `[\"foo\", \"\"]` pieces). And, if we pop a parent directory. But once we encounter a\n    // real directory, we won't need to append, unless the other conditions happen again.\n    let addTrailingSlash = false;\n    for (let i = 1; i < pieces.length; i++) {\n        const piece = pieces[i];\n        // An empty directory, could be a trailing slash, or just a double \"//\" in the path.\n        if (!piece) {\n            addTrailingSlash = true;\n            continue;\n        }\n        // If we encounter a real directory, then we don't need to append anymore.\n        addTrailingSlash = false;\n        // A current directory, which we can always drop.\n        if (piece === '.')\n            continue;\n        // A parent directory, we need to see if there are any real directories we can pop. Else, we\n        // have an excess of parents, and we'll need to keep the \"..\".\n        if (piece === '..') {\n            if (positive) {\n                addTrailingSlash = true;\n                positive--;\n                pointer--;\n            }\n            else if (relativePath) {\n                // If we're in a relativePath, then we need to keep the excess parents. Else, in an absolute\n                // URL, protocol relative URL, or an absolute path, we don't need to keep excess.\n                pieces[pointer++] = piece;\n            }\n            continue;\n        }\n        // We've encountered a real directory. Move it to the next insertion pointer, which accounts for\n        // any popped or dropped directories.\n        pieces[pointer++] = piece;\n        positive++;\n    }\n    let path = '';\n    for (let i = 1; i < pointer; i++) {\n        path += '/' + pieces[i];\n    }\n    if (!path || (addTrailingSlash && !path.endsWith('/..'))) {\n        path += '/';\n    }\n    url.path = path;\n}\n/**\n * Attempts to resolve `input` URL/path relative to `base`.\n */\nfunction resolve(input, base) {\n    if (!input && !base)\n        return '';\n    const url = parseUrl(input);\n    // If we have a base, and the input isn't already an absolute URL, then we need to merge.\n    if (base && !url.scheme) {\n        const baseUrl = parseUrl(base);\n        url.scheme = baseUrl.scheme;\n        // If there's no host, then we were just a path.\n        if (!url.host) {\n            // The host, user, and port are joined, you can't copy one without the others.\n            url.user = baseUrl.user;\n            url.host = baseUrl.host;\n            url.port = baseUrl.port;\n        }\n        mergePaths(url, baseUrl);\n    }\n    normalizePath(url);\n    // If the input (and base, if there was one) are both relative, then we need to output a relative.\n    if (url.relativePath) {\n        // The first char is always a \"/\".\n        const path = url.path.slice(1);\n        if (!path)\n            return '.';\n        // If base started with a leading \".\", or there is no base and input started with a \".\", then we\n        // need to ensure that the relative path starts with a \".\". We don't know if relative starts\n        // with a \"..\", though, so check before prepending.\n        const keepRelative = (base || input).startsWith('.');\n        return !keepRelative || path.startsWith('.') ? path : './' + path;\n    }\n    // If there's no host (and no scheme/user/port), then we need to output an absolute path.\n    if (!url.scheme && !url.host)\n        return url.path;\n    // We're outputting either an absolute URL, or a protocol relative one.\n    return `${url.scheme}//${url.user}${url.host}${url.port}${url.path}`;\n}\n\nexport { resolve as default };\n//# sourceMappingURL=resolve-uri.mjs.map\n", "import { encode, decode } from '@jridgewell/sourcemap-codec';\nimport resolveUri from '@jridgewell/resolve-uri';\n\nfunction resolve(input, base) {\n    // The base is always treated as a directory, if it's not empty.\n    // https://github.com/mozilla/source-map/blob/8cb3ee57/lib/util.js#L327\n    // https://github.com/chromium/chromium/blob/da4adbb3/third_party/blink/renderer/devtools/front_end/sdk/SourceMap.js#L400-L401\n    if (base && !base.endsWith('/'))\n        base += '/';\n    return resolveUri(input, base);\n}\n\n/**\n * Removes everything after the last \"/\", but leaves the slash.\n */\nfunction stripFilename(path) {\n    if (!path)\n        return '';\n    const index = path.lastIndexOf('/');\n    return path.slice(0, index + 1);\n}\n\nconst COLUMN = 0;\nconst SOURCES_INDEX = 1;\nconst SOURCE_LINE = 2;\nconst SOURCE_COLUMN = 3;\nconst NAMES_INDEX = 4;\nconst REV_GENERATED_LINE = 1;\nconst REV_GENERATED_COLUMN = 2;\n\nfunction maybeSort(mappings, owned) {\n    const unsortedIndex = nextUnsortedSegmentLine(mappings, 0);\n    if (unsortedIndex === mappings.length)\n        return mappings;\n    // If we own the array (meaning we parsed it from JSON), then we're free to directly mutate it. If\n    // not, we do not want to modify the consumer's input array.\n    if (!owned)\n        mappings = mappings.slice();\n    for (let i = unsortedIndex; i < mappings.length; i = nextUnsortedSegmentLine(mappings, i + 1)) {\n        mappings[i] = sortSegments(mappings[i], owned);\n    }\n    return mappings;\n}\nfunction nextUnsortedSegmentLine(mappings, start) {\n    for (let i = start; i < mappings.length; i++) {\n        if (!isSorted(mappings[i]))\n            return i;\n    }\n    return mappings.length;\n}\nfunction isSorted(line) {\n    for (let j = 1; j < line.length; j++) {\n        if (line[j][COLUMN] < line[j - 1][COLUMN]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction sortSegments(line, owned) {\n    if (!owned)\n        line = line.slice();\n    return line.sort(sortComparator);\n}\nfunction sortComparator(a, b) {\n    return a[COLUMN] - b[COLUMN];\n}\n\nlet found = false;\n/**\n * A binary search implementation that returns the index if a match is found.\n * If no match is found, then the left-index (the index associated with the item that comes just\n * before the desired index) is returned. To maintain proper sort order, a splice would happen at\n * the next index:\n *\n * ```js\n * const array = [1, 3];\n * const needle = 2;\n * const index = binarySearch(array, needle, (item, needle) => item - needle);\n *\n * assert.equal(index, 0);\n * array.splice(index + 1, 0, needle);\n * assert.deepEqual(array, [1, 2, 3]);\n * ```\n */\nfunction binarySearch(haystack, needle, low, high) {\n    while (low <= high) {\n        const mid = low + ((high - low) >> 1);\n        const cmp = haystack[mid][COLUMN] - needle;\n        if (cmp === 0) {\n            found = true;\n            return mid;\n        }\n        if (cmp < 0) {\n            low = mid + 1;\n        }\n        else {\n            high = mid - 1;\n        }\n    }\n    found = false;\n    return low - 1;\n}\nfunction upperBound(haystack, needle, index) {\n    for (let i = index + 1; i < haystack.length; i++, index++) {\n        if (haystack[i][COLUMN] !== needle)\n            break;\n    }\n    return index;\n}\nfunction lowerBound(haystack, needle, index) {\n    for (let i = index - 1; i >= 0; i--, index--) {\n        if (haystack[i][COLUMN] !== needle)\n            break;\n    }\n    return index;\n}\nfunction memoizedState() {\n    return {\n        lastKey: -1,\n        lastNeedle: -1,\n        lastIndex: -1,\n    };\n}\n/**\n * This overly complicated beast is just to record the last tested line/column and the resulting\n * index, allowing us to skip a few tests if mappings are monotonically increasing.\n */\nfunction memoizedBinarySearch(haystack, needle, state, key) {\n    const { lastKey, lastNeedle, lastIndex } = state;\n    let low = 0;\n    let high = haystack.length - 1;\n    if (key === lastKey) {\n        if (needle === lastNeedle) {\n            found = lastIndex !== -1 && haystack[lastIndex][COLUMN] === needle;\n            return lastIndex;\n        }\n        if (needle >= lastNeedle) {\n            // lastIndex may be -1 if the previous needle was not found.\n            low = lastIndex === -1 ? 0 : lastIndex;\n        }\n        else {\n            high = lastIndex;\n        }\n    }\n    state.lastKey = key;\n    state.lastNeedle = needle;\n    return (state.lastIndex = binarySearch(haystack, needle, low, high));\n}\n\n// Rebuilds the original source files, with mappings that are ordered by source line/column instead\n// of generated line/column.\nfunction buildBySources(decoded, memos) {\n    const sources = memos.map(buildNullArray);\n    for (let i = 0; i < decoded.length; i++) {\n        const line = decoded[i];\n        for (let j = 0; j < line.length; j++) {\n            const seg = line[j];\n            if (seg.length === 1)\n                continue;\n            const sourceIndex = seg[SOURCES_INDEX];\n            const sourceLine = seg[SOURCE_LINE];\n            const sourceColumn = seg[SOURCE_COLUMN];\n            const originalSource = sources[sourceIndex];\n            const originalLine = (originalSource[sourceLine] || (originalSource[sourceLine] = []));\n            const memo = memos[sourceIndex];\n            // The binary search either found a match, or it found the left-index just before where the\n            // segment should go. Either way, we want to insert after that. And there may be multiple\n            // generated segments associated with an original location, so there may need to move several\n            // indexes before we find where we need to insert.\n            const index = upperBound(originalLine, sourceColumn, memoizedBinarySearch(originalLine, sourceColumn, memo, sourceLine));\n            insert(originalLine, (memo.lastIndex = index + 1), [sourceColumn, i, seg[COLUMN]]);\n        }\n    }\n    return sources;\n}\nfunction insert(array, index, value) {\n    for (let i = array.length; i > index; i--) {\n        array[i] = array[i - 1];\n    }\n    array[index] = value;\n}\n// Null arrays allow us to use ordered index keys without actually allocating contiguous memory like\n// a real array. We use a null-prototype object to avoid prototype pollution and deoptimizations.\n// Numeric properties on objects are magically sorted in ascending order by the engine regardless of\n// the insertion order. So, by setting any numeric keys, even out of order, we'll get ascending\n// order when iterating with for-in.\nfunction buildNullArray() {\n    return { __proto__: null };\n}\n\nconst AnyMap = function (map, mapUrl) {\n    const parsed = typeof map === 'string' ? JSON.parse(map) : map;\n    if (!('sections' in parsed))\n        return new TraceMap(parsed, mapUrl);\n    const mappings = [];\n    const sources = [];\n    const sourcesContent = [];\n    const names = [];\n    const { sections } = parsed;\n    let i = 0;\n    for (; i < sections.length - 1; i++) {\n        const no = sections[i + 1].offset;\n        addSection(sections[i], mapUrl, mappings, sources, sourcesContent, names, no.line, no.column);\n    }\n    if (sections.length > 0) {\n        addSection(sections[i], mapUrl, mappings, sources, sourcesContent, names, Infinity, Infinity);\n    }\n    const joined = {\n        version: 3,\n        file: parsed.file,\n        names,\n        sources,\n        sourcesContent,\n        mappings,\n    };\n    return presortedDecodedMap(joined);\n};\nfunction addSection(section, mapUrl, mappings, sources, sourcesContent, names, stopLine, stopColumn) {\n    const map = AnyMap(section.map, mapUrl);\n    const { line: lineOffset, column: columnOffset } = section.offset;\n    const sourcesOffset = sources.length;\n    const namesOffset = names.length;\n    const decoded = decodedMappings(map);\n    const { resolvedSources } = map;\n    append(sources, resolvedSources);\n    append(sourcesContent, map.sourcesContent || fillSourcesContent(resolvedSources.length));\n    append(names, map.names);\n    // If this section jumps forwards several lines, we need to add lines to the output mappings catch up.\n    for (let i = mappings.length; i <= lineOffset; i++)\n        mappings.push([]);\n    // We can only add so many lines before we step into the range that the next section's map\n    // controls. When we get to the last line, then we'll start checking the segments to see if\n    // they've crossed into the column range.\n    const stopI = stopLine - lineOffset;\n    const len = Math.min(decoded.length, stopI + 1);\n    for (let i = 0; i < len; i++) {\n        const line = decoded[i];\n        // On the 0th loop, the line will already exist due to a previous section, or the line catch up\n        // loop above.\n        const out = i === 0 ? mappings[lineOffset] : (mappings[lineOffset + i] = []);\n        // On the 0th loop, the section's column offset shifts us forward. On all other lines (since the\n        // map can be multiple lines), it doesn't.\n        const cOffset = i === 0 ? columnOffset : 0;\n        for (let j = 0; j < line.length; j++) {\n            const seg = line[j];\n            const column = cOffset + seg[COLUMN];\n            // If this segment steps into the column range that the next section's map controls, we need\n            // to stop early.\n            if (i === stopI && column >= stopColumn)\n                break;\n            if (seg.length === 1) {\n                out.push([column]);\n                continue;\n            }\n            const sourcesIndex = sourcesOffset + seg[SOURCES_INDEX];\n            const sourceLine = seg[SOURCE_LINE];\n            const sourceColumn = seg[SOURCE_COLUMN];\n            if (seg.length === 4) {\n                out.push([column, sourcesIndex, sourceLine, sourceColumn]);\n                continue;\n            }\n            out.push([column, sourcesIndex, sourceLine, sourceColumn, namesOffset + seg[NAMES_INDEX]]);\n        }\n    }\n}\nfunction append(arr, other) {\n    for (let i = 0; i < other.length; i++)\n        arr.push(other[i]);\n}\n// Sourcemaps don't need to have sourcesContent, and if they don't, we need to create an array of\n// equal length to the sources. This is because the sources and sourcesContent are paired arrays,\n// where `sourcesContent[i]` is the content of the `sources[i]` file. If we didn't, then joined\n// sourcemap would desynchronize the sources/contents.\nfunction fillSourcesContent(len) {\n    const sourcesContent = [];\n    for (let i = 0; i < len; i++)\n        sourcesContent[i] = null;\n    return sourcesContent;\n}\n\nconst INVALID_ORIGINAL_MAPPING = Object.freeze({\n    source: null,\n    line: null,\n    column: null,\n    name: null,\n});\nconst INVALID_GENERATED_MAPPING = Object.freeze({\n    line: null,\n    column: null,\n});\nconst LINE_GTR_ZERO = '`line` must be greater than 0 (lines start at line 1)';\nconst COL_GTR_EQ_ZERO = '`column` must be greater than or equal to 0 (columns start at column 0)';\nconst LEAST_UPPER_BOUND = -1;\nconst GREATEST_LOWER_BOUND = 1;\n/**\n * Returns the encoded (VLQ string) form of the SourceMap's mappings field.\n */\nlet encodedMappings;\n/**\n * Returns the decoded (array of lines of segments) form of the SourceMap's mappings field.\n */\nlet decodedMappings;\n/**\n * A low-level API to find the segment associated with a generated line/column (think, from a\n * stack trace). Line and column here are 0-based, unlike `originalPositionFor`.\n */\nlet traceSegment;\n/**\n * A higher-level API to find the source/line/column associated with a generated line/column\n * (think, from a stack trace). Line is 1-based, but column is 0-based, due to legacy behavior in\n * `source-map` library.\n */\nlet originalPositionFor;\n/**\n * Finds the source/line/column directly after the mapping returned by originalPositionFor, provided\n * the found mapping is from the same source and line as the originalPositionFor mapping.\n *\n * Eg, in the code `let id = 1`, `originalPositionAfter` could find the mapping associated with `1`\n * using the same needle that would return `id` when calling `originalPositionFor`.\n */\nlet generatedPositionFor;\n/**\n * Iterates each mapping in generated position order.\n */\nlet eachMapping;\n/**\n * A helper that skips sorting of the input map's mappings array, which can be expensive for larger\n * maps.\n */\nlet presortedDecodedMap;\n/**\n * Returns a sourcemap object (with decoded mappings) suitable for passing to a library that expects\n * a sourcemap, or to JSON.stringify.\n */\nlet decodedMap;\n/**\n * Returns a sourcemap object (with encoded mappings) suitable for passing to a library that expects\n * a sourcemap, or to JSON.stringify.\n */\nlet encodedMap;\nclass TraceMap {\n    constructor(map, mapUrl) {\n        this._decodedMemo = memoizedState();\n        this._bySources = undefined;\n        this._bySourceMemos = undefined;\n        const isString = typeof map === 'string';\n        if (!isString && map.constructor === TraceMap)\n            return map;\n        const parsed = (isString ? JSON.parse(map) : map);\n        const { version, file, names, sourceRoot, sources, sourcesContent } = parsed;\n        this.version = version;\n        this.file = file;\n        this.names = names;\n        this.sourceRoot = sourceRoot;\n        this.sources = sources;\n        this.sourcesContent = sourcesContent;\n        if (sourceRoot || mapUrl) {\n            const from = resolve(sourceRoot || '', stripFilename(mapUrl));\n            this.resolvedSources = sources.map((s) => resolve(s || '', from));\n        }\n        else {\n            this.resolvedSources = sources.map((s) => s || '');\n        }\n        const { mappings } = parsed;\n        if (typeof mappings === 'string') {\n            this._encoded = mappings;\n            this._decoded = undefined;\n        }\n        else {\n            this._encoded = undefined;\n            this._decoded = maybeSort(mappings, isString);\n        }\n    }\n}\n(() => {\n    encodedMappings = (map) => {\n        var _a;\n        return ((_a = map._encoded) !== null && _a !== void 0 ? _a : (map._encoded = encode(map._decoded)));\n    };\n    decodedMappings = (map) => {\n        return (map._decoded || (map._decoded = decode(map._encoded)));\n    };\n    traceSegment = (map, line, column) => {\n        const decoded = decodedMappings(map);\n        // It's common for parent source maps to have pointers to lines that have no\n        // mapping (like a \"//# sourceMappingURL=\") at the end of the child file.\n        if (line >= decoded.length)\n            return null;\n        return traceSegmentInternal(decoded[line], map._decodedMemo, line, column, GREATEST_LOWER_BOUND);\n    };\n    originalPositionFor = (map, { line, column, bias }) => {\n        line--;\n        if (line < 0)\n            throw new Error(LINE_GTR_ZERO);\n        if (column < 0)\n            throw new Error(COL_GTR_EQ_ZERO);\n        const decoded = decodedMappings(map);\n        // It's common for parent source maps to have pointers to lines that have no\n        // mapping (like a \"//# sourceMappingURL=\") at the end of the child file.\n        if (line >= decoded.length)\n            return INVALID_ORIGINAL_MAPPING;\n        const segment = traceSegmentInternal(decoded[line], map._decodedMemo, line, column, bias || GREATEST_LOWER_BOUND);\n        if (segment == null)\n            return INVALID_ORIGINAL_MAPPING;\n        if (segment.length == 1)\n            return INVALID_ORIGINAL_MAPPING;\n        const { names, resolvedSources } = map;\n        return {\n            source: resolvedSources[segment[SOURCES_INDEX]],\n            line: segment[SOURCE_LINE] + 1,\n            column: segment[SOURCE_COLUMN],\n            name: segment.length === 5 ? names[segment[NAMES_INDEX]] : null,\n        };\n    };\n    generatedPositionFor = (map, { source, line, column, bias }) => {\n        line--;\n        if (line < 0)\n            throw new Error(LINE_GTR_ZERO);\n        if (column < 0)\n            throw new Error(COL_GTR_EQ_ZERO);\n        const { sources, resolvedSources } = map;\n        let sourceIndex = sources.indexOf(source);\n        if (sourceIndex === -1)\n            sourceIndex = resolvedSources.indexOf(source);\n        if (sourceIndex === -1)\n            return INVALID_GENERATED_MAPPING;\n        const generated = (map._bySources || (map._bySources = buildBySources(decodedMappings(map), (map._bySourceMemos = sources.map(memoizedState)))));\n        const memos = map._bySourceMemos;\n        const segments = generated[sourceIndex][line];\n        if (segments == null)\n            return INVALID_GENERATED_MAPPING;\n        const segment = traceSegmentInternal(segments, memos[sourceIndex], line, column, bias || GREATEST_LOWER_BOUND);\n        if (segment == null)\n            return INVALID_GENERATED_MAPPING;\n        return {\n            line: segment[REV_GENERATED_LINE] + 1,\n            column: segment[REV_GENERATED_COLUMN],\n        };\n    };\n    eachMapping = (map, cb) => {\n        const decoded = decodedMappings(map);\n        const { names, resolvedSources } = map;\n        for (let i = 0; i < decoded.length; i++) {\n            const line = decoded[i];\n            for (let j = 0; j < line.length; j++) {\n                const seg = line[j];\n                const generatedLine = i + 1;\n                const generatedColumn = seg[0];\n                let source = null;\n                let originalLine = null;\n                let originalColumn = null;\n                let name = null;\n                if (seg.length !== 1) {\n                    source = resolvedSources[seg[1]];\n                    originalLine = seg[2] + 1;\n                    originalColumn = seg[3];\n                }\n                if (seg.length === 5)\n                    name = names[seg[4]];\n                cb({\n                    generatedLine,\n                    generatedColumn,\n                    source,\n                    originalLine,\n                    originalColumn,\n                    name,\n                });\n            }\n        }\n    };\n    presortedDecodedMap = (map, mapUrl) => {\n        const clone = Object.assign({}, map);\n        clone.mappings = [];\n        const tracer = new TraceMap(clone, mapUrl);\n        tracer._decoded = map.mappings;\n        return tracer;\n    };\n    decodedMap = (map) => {\n        return {\n            version: 3,\n            file: map.file,\n            names: map.names,\n            sourceRoot: map.sourceRoot,\n            sources: map.sources,\n            sourcesContent: map.sourcesContent,\n            mappings: decodedMappings(map),\n        };\n    };\n    encodedMap = (map) => {\n        return {\n            version: 3,\n            file: map.file,\n            names: map.names,\n            sourceRoot: map.sourceRoot,\n            sources: map.sources,\n            sourcesContent: map.sourcesContent,\n            mappings: encodedMappings(map),\n        };\n    };\n})();\nfunction traceSegmentInternal(segments, memo, line, column, bias) {\n    let index = memoizedBinarySearch(segments, column, memo, line);\n    if (found) {\n        index = (bias === LEAST_UPPER_BOUND ? upperBound : lowerBound)(segments, column, index);\n    }\n    else if (bias === LEAST_UPPER_BOUND)\n        index++;\n    if (index === -1 || index === segments.length)\n        return null;\n    return segments[index];\n}\n\nexport { AnyMap, GREATEST_LOWER_BOUND, LEAST_UPPER_BOUND, TraceMap, decodedMap, decodedMappings, eachMapping, encodedMap, encodedMappings, generatedPositionFor, originalPositionFor, presortedDecodedMap, traceSegment };\n//# sourceMappingURL=trace-mapping.mjs.map\n", "/**\n * Gets the index associated with `key` in the backing array, if it is already present.\n */\nlet get;\n/**\n * Puts `key` into the backing array, if it is not already present. Returns\n * the index of the `key` in the backing array.\n */\nlet put;\n/**\n * Pops the last added item out of the SetArray.\n */\nlet pop;\n/**\n * SetArray acts like a `Set` (allowing only one occurrence of a string `key`), but provides the\n * index of the `key` in the backing array.\n *\n * This is designed to allow synchronizing a second array with the contents of the backing array,\n * like how in a sourcemap `sourcesContent[i]` is the source content associated with `source[i]`,\n * and there are never duplicates.\n */\nclass SetArray {\n    constructor() {\n        this._indexes = { __proto__: null };\n        this.array = [];\n    }\n}\n(() => {\n    get = (strarr, key) => strarr._indexes[key];\n    put = (strarr, key) => {\n        // The key may or may not be present. If it is present, it's a number.\n        const index = get(strarr, key);\n        if (index !== undefined)\n            return index;\n        const { array, _indexes: indexes } = strarr;\n        return (indexes[key] = array.push(key) - 1);\n    };\n    pop = (strarr) => {\n        const { array, _indexes: indexes } = strarr;\n        if (array.length === 0)\n            return;\n        const last = array.pop();\n        indexes[last] = undefined;\n    };\n})();\n\nexport { SetArray, get, pop, put };\n//# sourceMappingURL=set-array.mjs.map\n", "import { SetArray, put } from '@jridgewell/set-array';\nimport { encode } from '@jridgewell/sourcemap-codec';\nimport { TraceMap, decodedMappings } from '@jridgewell/trace-mapping';\n\nconst COLUMN = 0;\nconst SOURCES_INDEX = 1;\nconst SOURCE_LINE = 2;\nconst SOURCE_COLUMN = 3;\nconst NAMES_INDEX = 4;\n\nconst NO_NAME = -1;\n/**\n * A low-level API to associate a generated position with an original source position. Line and\n * column here are 0-based, unlike `addMapping`.\n */\nlet addSegment;\n/**\n * A high-level API to associate a generated position with an original source position. Line is\n * 1-based, but column is 0-based, due to legacy behavior in `source-map` library.\n */\nlet addMapping;\n/**\n * Same as `addSegment`, but will only add the segment if it generates useful information in the\n * resulting map. This only works correctly if segments are added **in order**, meaning you should\n * not add a segment with a lower generated line/column than one that came before.\n */\nlet maybeAddSegment;\n/**\n * Same as `addMapping`, but will only add the mapping if it generates useful information in the\n * resulting map. This only works correctly if mappings are added **in order**, meaning you should\n * not add a mapping with a lower generated line/column than one that came before.\n */\nlet maybeAddMapping;\n/**\n * Adds/removes the content of the source file to the source map.\n */\nlet setSourceContent;\n/**\n * Returns a sourcemap object (with decoded mappings) suitable for passing to a library that expects\n * a sourcemap, or to JSON.stringify.\n */\nlet toDecodedMap;\n/**\n * Returns a sourcemap object (with encoded mappings) suitable for passing to a library that expects\n * a sourcemap, or to JSON.stringify.\n */\nlet toEncodedMap;\n/**\n * Constructs a new GenMapping, using the already present mappings of the input.\n */\nlet fromMap;\n/**\n * Returns an array of high-level mapping objects for every recorded segment, which could then be\n * passed to the `source-map` library.\n */\nlet allMappings;\n// This split declaration is only so that terser can elminiate the static initialization block.\nlet addSegmentInternal;\n/**\n * Provides the state to generate a sourcemap.\n */\nclass GenMapping {\n    constructor({ file, sourceRoot } = {}) {\n        this._names = new SetArray();\n        this._sources = new SetArray();\n        this._sourcesContent = [];\n        this._mappings = [];\n        this.file = file;\n        this.sourceRoot = sourceRoot;\n    }\n}\n(() => {\n    addSegment = (map, genLine, genColumn, source, sourceLine, sourceColumn, name) => {\n        return addSegmentInternal(false, map, genLine, genColumn, source, sourceLine, sourceColumn, name);\n    };\n    maybeAddSegment = (map, genLine, genColumn, source, sourceLine, sourceColumn, name) => {\n        return addSegmentInternal(true, map, genLine, genColumn, source, sourceLine, sourceColumn, name);\n    };\n    addMapping = (map, mapping) => {\n        return addMappingInternal(false, map, mapping);\n    };\n    maybeAddMapping = (map, mapping) => {\n        return addMappingInternal(true, map, mapping);\n    };\n    setSourceContent = (map, source, content) => {\n        const { _sources: sources, _sourcesContent: sourcesContent } = map;\n        sourcesContent[put(sources, source)] = content;\n    };\n    toDecodedMap = (map) => {\n        const { file, sourceRoot, _mappings: mappings, _sources: sources, _sourcesContent: sourcesContent, _names: names, } = map;\n        removeEmptyFinalLines(mappings);\n        return {\n            version: 3,\n            file: file || undefined,\n            names: names.array,\n            sourceRoot: sourceRoot || undefined,\n            sources: sources.array,\n            sourcesContent,\n            mappings,\n        };\n    };\n    toEncodedMap = (map) => {\n        const decoded = toDecodedMap(map);\n        return Object.assign(Object.assign({}, decoded), { mappings: encode(decoded.mappings) });\n    };\n    allMappings = (map) => {\n        const out = [];\n        const { _mappings: mappings, _sources: sources, _names: names } = map;\n        for (let i = 0; i < mappings.length; i++) {\n            const line = mappings[i];\n            for (let j = 0; j < line.length; j++) {\n                const seg = line[j];\n                const generated = { line: i + 1, column: seg[COLUMN] };\n                let source = undefined;\n                let original = undefined;\n                let name = undefined;\n                if (seg.length !== 1) {\n                    source = sources.array[seg[SOURCES_INDEX]];\n                    original = { line: seg[SOURCE_LINE] + 1, column: seg[SOURCE_COLUMN] };\n                    if (seg.length === 5)\n                        name = names.array[seg[NAMES_INDEX]];\n                }\n                out.push({ generated, source, original, name });\n            }\n        }\n        return out;\n    };\n    fromMap = (input) => {\n        const map = new TraceMap(input);\n        const gen = new GenMapping({ file: map.file, sourceRoot: map.sourceRoot });\n        putAll(gen._names, map.names);\n        putAll(gen._sources, map.sources);\n        gen._sourcesContent = map.sourcesContent || map.sources.map(() => null);\n        gen._mappings = decodedMappings(map);\n        return gen;\n    };\n    // Internal helpers\n    addSegmentInternal = (skipable, map, genLine, genColumn, source, sourceLine, sourceColumn, name) => {\n        const { _mappings: mappings, _sources: sources, _sourcesContent: sourcesContent, _names: names, } = map;\n        const line = getLine(mappings, genLine);\n        const index = getColumnIndex(line, genColumn);\n        if (!source) {\n            if (skipable && skipSourceless(line, index))\n                return;\n            return insert(line, index, [genColumn]);\n        }\n        const sourcesIndex = put(sources, source);\n        const namesIndex = name ? put(names, name) : NO_NAME;\n        if (sourcesIndex === sourcesContent.length)\n            sourcesContent[sourcesIndex] = null;\n        if (skipable && skipSource(line, index, sourcesIndex, sourceLine, sourceColumn, namesIndex)) {\n            return;\n        }\n        return insert(line, index, name\n            ? [genColumn, sourcesIndex, sourceLine, sourceColumn, namesIndex]\n            : [genColumn, sourcesIndex, sourceLine, sourceColumn]);\n    };\n})();\nfunction getLine(mappings, index) {\n    for (let i = mappings.length; i <= index; i++) {\n        mappings[i] = [];\n    }\n    return mappings[index];\n}\nfunction getColumnIndex(line, genColumn) {\n    let index = line.length;\n    for (let i = index - 1; i >= 0; index = i--) {\n        const current = line[i];\n        if (genColumn >= current[COLUMN])\n            break;\n    }\n    return index;\n}\nfunction insert(array, index, value) {\n    for (let i = array.length; i > index; i--) {\n        array[i] = array[i - 1];\n    }\n    array[index] = value;\n}\nfunction removeEmptyFinalLines(mappings) {\n    const { length } = mappings;\n    let len = length;\n    for (let i = len - 1; i >= 0; len = i, i--) {\n        if (mappings[i].length > 0)\n            break;\n    }\n    if (len < length)\n        mappings.length = len;\n}\nfunction putAll(strarr, array) {\n    for (let i = 0; i < array.length; i++)\n        put(strarr, array[i]);\n}\nfunction skipSourceless(line, index) {\n    // The start of a line is already sourceless, so adding a sourceless segment to the beginning\n    // doesn't generate any useful information.\n    if (index === 0)\n        return true;\n    const prev = line[index - 1];\n    // If the previous segment is also sourceless, then adding another sourceless segment doesn't\n    // genrate any new information. Else, this segment will end the source/named segment and point to\n    // a sourceless position, which is useful.\n    return prev.length === 1;\n}\nfunction skipSource(line, index, sourcesIndex, sourceLine, sourceColumn, namesIndex) {\n    // A source/named segment at the start of a line gives position at that genColumn\n    if (index === 0)\n        return false;\n    const prev = line[index - 1];\n    // If the previous segment is sourceless, then we're transitioning to a source.\n    if (prev.length === 1)\n        return false;\n    // If the previous segment maps to the exact same source position, then this segment doesn't\n    // provide any new position information.\n    return (sourcesIndex === prev[SOURCES_INDEX] &&\n        sourceLine === prev[SOURCE_LINE] &&\n        sourceColumn === prev[SOURCE_COLUMN] &&\n        namesIndex === (prev.length === 5 ? prev[NAMES_INDEX] : NO_NAME));\n}\nfunction addMappingInternal(skipable, map, mapping) {\n    const { generated, source, original, name } = mapping;\n    if (!source) {\n        return addSegmentInternal(skipable, map, generated.line - 1, generated.column, null, null, null, null);\n    }\n    const s = source;\n    return addSegmentInternal(skipable, map, generated.line - 1, generated.column, s, original.line - 1, original.column, name);\n}\n\nexport { GenMapping, addMapping, addSegment, allMappings, fromMap, maybeAddMapping, maybeAddSegment, setSourceContent, toDecodedMap, toEncodedMap };\n//# sourceMappingURL=gen-mapping.mjs.map\n", "import { AnyMap, originalPositionFor } from '@jridgewell/trace-mapping';\nimport {\n  GenMapping,\n  maybeAddMapping,\n  toDecodedMap,\n  toEncodedMap,\n  setSourceContent,\n} from '@jridgewell/gen-mapping';\n\nimport type { TraceMap, SectionedSourceMapInput } from '@jridgewell/trace-mapping';\nexport type { TraceMap, SectionedSourceMapInput };\n\nimport type { Mapping, EncodedSourceMap, DecodedSourceMap } from '@jridgewell/gen-mapping';\nexport type { Mapping, EncodedSourceMap, DecodedSourceMap };\n\nexport class SourceMapConsumer {\n  private declare _map: TraceMap;\n  declare file: TraceMap['file'];\n  declare names: TraceMap['names'];\n  declare sourceRoot: TraceMap['sourceRoot'];\n  declare sources: TraceMap['sources'];\n  declare sourcesContent: TraceMap['sourcesContent'];\n\n  constructor(map: ConstructorParameters<typeof AnyMap>[0], mapUrl: Parameters<typeof AnyMap>[1]) {\n    const trace = (this._map = new AnyMap(map, mapUrl));\n\n    this.file = trace.file;\n    this.names = trace.names;\n    this.sourceRoot = trace.sourceRoot;\n    this.sources = trace.resolvedSources;\n    this.sourcesContent = trace.sourcesContent;\n  }\n\n  originalPositionFor(\n    needle: Parameters<typeof originalPositionFor>[1],\n  ): ReturnType<typeof originalPositionFor> {\n    return originalPositionFor(this._map, needle);\n  }\n\n  destroy() {\n    // noop.\n  }\n}\n\nexport class SourceMapGenerator {\n  private declare _map: GenMapping;\n\n  constructor(opts: ConstructorParameters<typeof GenMapping>[0]) {\n    this._map = new GenMapping(opts);\n  }\n\n  addMapping(mapping: Parameters<typeof maybeAddMapping>[1]): ReturnType<typeof maybeAddMapping> {\n    maybeAddMapping(this._map, mapping);\n  }\n\n  setSourceContent(\n    source: Parameters<typeof setSourceContent>[1],\n    content: Parameters<typeof setSourceContent>[2],\n  ): ReturnType<typeof setSourceContent> {\n    setSourceContent(this._map, source, content);\n  }\n\n  toJSON(): ReturnType<typeof toEncodedMap> {\n    return toEncodedMap(this._map);\n  }\n\n  toDecodedMap(): ReturnType<typeof toDecodedMap> {\n    return toDecodedMap(this._map);\n  }\n}\n", "(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.acorn = {}));\n})(this, (function (exports) { 'use strict';\n\n  // This file was generated. Do not modify manually!\n  var astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 81, 2, 71, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 3, 0, 158, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 10, 1, 2, 0, 49, 6, 4, 4, 14, 9, 5351, 0, 7, 14, 13835, 9, 87, 9, 39, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4706, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 101, 0, 161, 6, 10, 9, 357, 0, 62, 13, 499, 13, 983, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\n  // This file was generated. Do not modify manually!\n  var astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 68, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 20, 1, 64, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 16, 0, 2, 12, 2, 33, 125, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1071, 18, 5, 4026, 582, 8634, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8936, 3, 2, 6, 2, 1, 2, 290, 16, 0, 30, 2, 3, 0, 15, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 7, 5, 262, 61, 147, 44, 11, 6, 17, 0, 322, 29, 19, 43, 485, 27, 757, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4153, 7, 221, 3, 5761, 15, 7472, 16, 621, 2467, 541, 1507, 4938, 6, 4191];\n\n  // This file was generated. Do not modify manually!\n  var nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0cf3\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ece\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\u30fb\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\\uff65\";\n\n  // This file was generated. Do not modify manually!\n  var nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n\n  // These are a run-length and offset encoded representation of the\n  // >0xffff code points that are a valid part of identifiers. The\n  // offset starts at 0x10000, and each pair of numbers represents an\n  // offset to the next range, and then a size of the range.\n\n  // Reserved word lists for various dialects of the language\n\n  var reservedWords = {\n    3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n    5: \"class enum extends super const export import\",\n    6: \"enum\",\n    strict: \"implements interface let package private protected public static yield\",\n    strictBind: \"eval arguments\"\n  };\n\n  // And the keywords\n\n  var ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\n  var keywords$1 = {\n    5: ecma5AndLessKeywords,\n    \"5module\": ecma5AndLessKeywords + \" export import\",\n    6: ecma5AndLessKeywords + \" const class extends export import super\"\n  };\n\n  var keywordRelationalOperator = /^in(stanceof)?$/;\n\n  // ## Character categories\n\n  var nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\n  var nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\n  // This has a complexity linear to the value of the code. The\n  // assumption is that looking up astral identifier characters is\n  // rare.\n  function isInAstralSet(code, set) {\n    var pos = 0x10000;\n    for (var i = 0; i < set.length; i += 2) {\n      pos += set[i];\n      if (pos > code) { return false }\n      pos += set[i + 1];\n      if (pos >= code) { return true }\n    }\n    return false\n  }\n\n  // Test whether a given character code starts an identifier.\n\n  function isIdentifierStart(code, astral) {\n    if (code < 65) { return code === 36 }\n    if (code < 91) { return true }\n    if (code < 97) { return code === 95 }\n    if (code < 123) { return true }\n    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n    if (astral === false) { return false }\n    return isInAstralSet(code, astralIdentifierStartCodes)\n  }\n\n  // Test whether a given character is part of an identifier.\n\n  function isIdentifierChar(code, astral) {\n    if (code < 48) { return code === 36 }\n    if (code < 58) { return true }\n    if (code < 65) { return false }\n    if (code < 91) { return true }\n    if (code < 97) { return code === 95 }\n    if (code < 123) { return true }\n    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n    if (astral === false) { return false }\n    return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n  }\n\n  // ## Token types\n\n  // The assignment of fine-grained, information-carrying type objects\n  // allows the tokenizer to store the information it has about a\n  // token in a way that is very cheap for the parser to look up.\n\n  // All token type variables start with an underscore, to make them\n  // easy to recognize.\n\n  // The `beforeExpr` property is used to disambiguate between regular\n  // expressions and divisions. It is set on all token types that can\n  // be followed by an expression (thus, a slash after them would be a\n  // regular expression).\n  //\n  // The `startsExpr` property is used to check if the token ends a\n  // `yield` expression. It is set on all token types that either can\n  // directly start an expression (like a quotation mark) or can\n  // continue an expression (like the body of a string).\n  //\n  // `isLoop` marks a keyword as starting a loop, which is important\n  // to know when parsing a label, in order to allow or disallow\n  // continue jumps to that label.\n\n  var TokenType = function TokenType(label, conf) {\n    if ( conf === void 0 ) conf = {};\n\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop || null;\n    this.updateContext = null;\n  };\n\n  function binop(name, prec) {\n    return new TokenType(name, {beforeExpr: true, binop: prec})\n  }\n  var beforeExpr = {beforeExpr: true}, startsExpr = {startsExpr: true};\n\n  // Map keyword names to token types.\n\n  var keywords = {};\n\n  // Succinct definitions of keyword token types\n  function kw(name, options) {\n    if ( options === void 0 ) options = {};\n\n    options.keyword = name;\n    return keywords[name] = new TokenType(name, options)\n  }\n\n  var types$1 = {\n    num: new TokenType(\"num\", startsExpr),\n    regexp: new TokenType(\"regexp\", startsExpr),\n    string: new TokenType(\"string\", startsExpr),\n    name: new TokenType(\"name\", startsExpr),\n    privateId: new TokenType(\"privateId\", startsExpr),\n    eof: new TokenType(\"eof\"),\n\n    // Punctuation token types.\n    bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n    bracketR: new TokenType(\"]\"),\n    braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n    braceR: new TokenType(\"}\"),\n    parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n    parenR: new TokenType(\")\"),\n    comma: new TokenType(\",\", beforeExpr),\n    semi: new TokenType(\";\", beforeExpr),\n    colon: new TokenType(\":\", beforeExpr),\n    dot: new TokenType(\".\"),\n    question: new TokenType(\"?\", beforeExpr),\n    questionDot: new TokenType(\"?.\"),\n    arrow: new TokenType(\"=>\", beforeExpr),\n    template: new TokenType(\"template\"),\n    invalidTemplate: new TokenType(\"invalidTemplate\"),\n    ellipsis: new TokenType(\"...\", beforeExpr),\n    backQuote: new TokenType(\"`\", startsExpr),\n    dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n    // Operators. These carry several kinds of properties to help the\n    // parser use them properly (the presence of these properties is\n    // what categorizes them as operators).\n    //\n    // `binop`, when present, specifies that this operator is a binary\n    // operator, and will refer to its precedence.\n    //\n    // `prefix` and `postfix` mark the operator as a prefix or postfix\n    // unary operator.\n    //\n    // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n    // binary operators with a very low precedence, that should result\n    // in AssignmentExpression nodes.\n\n    eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n    assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n    incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n    prefix: new TokenType(\"!/~\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    logicalOR: binop(\"||\", 1),\n    logicalAND: binop(\"&&\", 2),\n    bitwiseOR: binop(\"|\", 3),\n    bitwiseXOR: binop(\"^\", 4),\n    bitwiseAND: binop(\"&\", 5),\n    equality: binop(\"==/!=/===/!==\", 6),\n    relational: binop(\"</>/<=/>=\", 7),\n    bitShift: binop(\"<</>>/>>>\", 8),\n    plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n    modulo: binop(\"%\", 10),\n    star: binop(\"*\", 10),\n    slash: binop(\"/\", 10),\n    starstar: new TokenType(\"**\", {beforeExpr: true}),\n    coalesce: binop(\"??\", 1),\n\n    // Keyword token types.\n    _break: kw(\"break\"),\n    _case: kw(\"case\", beforeExpr),\n    _catch: kw(\"catch\"),\n    _continue: kw(\"continue\"),\n    _debugger: kw(\"debugger\"),\n    _default: kw(\"default\", beforeExpr),\n    _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n    _else: kw(\"else\", beforeExpr),\n    _finally: kw(\"finally\"),\n    _for: kw(\"for\", {isLoop: true}),\n    _function: kw(\"function\", startsExpr),\n    _if: kw(\"if\"),\n    _return: kw(\"return\", beforeExpr),\n    _switch: kw(\"switch\"),\n    _throw: kw(\"throw\", beforeExpr),\n    _try: kw(\"try\"),\n    _var: kw(\"var\"),\n    _const: kw(\"const\"),\n    _while: kw(\"while\", {isLoop: true}),\n    _with: kw(\"with\"),\n    _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n    _this: kw(\"this\", startsExpr),\n    _super: kw(\"super\", startsExpr),\n    _class: kw(\"class\", startsExpr),\n    _extends: kw(\"extends\", beforeExpr),\n    _export: kw(\"export\"),\n    _import: kw(\"import\", startsExpr),\n    _null: kw(\"null\", startsExpr),\n    _true: kw(\"true\", startsExpr),\n    _false: kw(\"false\", startsExpr),\n    _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n    _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n    _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n  };\n\n  // Matches a whole line break (where CRLF is considered a single\n  // line break). Used to count lines.\n\n  var lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\n  var lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n  function isNewLine(code) {\n    return code === 10 || code === 13 || code === 0x2028 || code === 0x2029\n  }\n\n  function nextLineBreak(code, from, end) {\n    if ( end === void 0 ) end = code.length;\n\n    for (var i = from; i < end; i++) {\n      var next = code.charCodeAt(i);\n      if (isNewLine(next))\n        { return i < end - 1 && next === 13 && code.charCodeAt(i + 1) === 10 ? i + 2 : i + 1 }\n    }\n    return -1\n  }\n\n  var nonASCIIwhitespace = /[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\n  var skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\n  var ref = Object.prototype;\n  var hasOwnProperty = ref.hasOwnProperty;\n  var toString = ref.toString;\n\n  var hasOwn = Object.hasOwn || (function (obj, propName) { return (\n    hasOwnProperty.call(obj, propName)\n  ); });\n\n  var isArray = Array.isArray || (function (obj) { return (\n    toString.call(obj) === \"[object Array]\"\n  ); });\n\n  var regexpCache = Object.create(null);\n\n  function wordsRegexp(words) {\n    return regexpCache[words] || (regexpCache[words] = new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\"))\n  }\n\n  function codePointToString(code) {\n    // UTF-16 Decoding\n    if (code <= 0xFFFF) { return String.fromCharCode(code) }\n    code -= 0x10000;\n    return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n  }\n\n  var loneSurrogate = /(?:[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/;\n\n  // These are used when `options.locations` is on, for the\n  // `startLoc` and `endLoc` properties.\n\n  var Position = function Position(line, col) {\n    this.line = line;\n    this.column = col;\n  };\n\n  Position.prototype.offset = function offset (n) {\n    return new Position(this.line, this.column + n)\n  };\n\n  var SourceLocation = function SourceLocation(p, start, end) {\n    this.start = start;\n    this.end = end;\n    if (p.sourceFile !== null) { this.source = p.sourceFile; }\n  };\n\n  // The `getLineInfo` function is mostly useful when the\n  // `locations` option is off (for performance reasons) and you\n  // want to find the line/column position for a given character\n  // offset. `input` should be the code string that the offset refers\n  // into.\n\n  function getLineInfo(input, offset) {\n    for (var line = 1, cur = 0;;) {\n      var nextBreak = nextLineBreak(input, cur, offset);\n      if (nextBreak < 0) { return new Position(line, offset - cur) }\n      ++line;\n      cur = nextBreak;\n    }\n  }\n\n  // A second argument must be given to configure the parser process.\n  // These options are recognized (only `ecmaVersion` is required):\n\n  var defaultOptions = {\n    // `ecmaVersion` indicates the ECMAScript version to parse. Must be\n    // either 3, 5, 6 (or 2015), 7 (2016), 8 (2017), 9 (2018), 10\n    // (2019), 11 (2020), 12 (2021), 13 (2022), 14 (2023), or `\"latest\"`\n    // (the latest version the library supports). This influences\n    // support for strict mode, the set of reserved words, and support\n    // for new syntax features.\n    ecmaVersion: null,\n    // `sourceType` indicates the mode the code should be parsed in.\n    // Can be either `\"script\"` or `\"module\"`. This influences global\n    // strict mode and parsing of `import` and `export` declarations.\n    sourceType: \"script\",\n    // `onInsertedSemicolon` can be a callback that will be called when\n    // a semicolon is automatically inserted. It will be passed the\n    // position of the inserted semicolon as an offset, and if\n    // `locations` is enabled, it is given the location as a `{line,\n    // column}` object as second argument.\n    onInsertedSemicolon: null,\n    // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n    // trailing commas.\n    onTrailingComma: null,\n    // By default, reserved words are only enforced if ecmaVersion >= 5.\n    // Set `allowReserved` to a boolean value to explicitly turn this on\n    // an off. When this option has the value \"never\", reserved words\n    // and keywords can also not be used as property names.\n    allowReserved: null,\n    // When enabled, a return at the top level is not considered an\n    // error.\n    allowReturnOutsideFunction: false,\n    // When enabled, import/export statements are not constrained to\n    // appearing at the top of the program, and an import.meta expression\n    // in a script isn't considered an error.\n    allowImportExportEverywhere: false,\n    // By default, await identifiers are allowed to appear at the top-level scope only if ecmaVersion >= 2022.\n    // When enabled, await identifiers are allowed to appear at the top-level scope,\n    // but they are still not allowed in non-async functions.\n    allowAwaitOutsideFunction: null,\n    // When enabled, super identifiers are not constrained to\n    // appearing in methods and do not raise an error when they appear elsewhere.\n    allowSuperOutsideMethod: null,\n    // When enabled, hashbang directive in the beginning of file is\n    // allowed and treated as a line comment. Enabled by default when\n    // `ecmaVersion` >= 2023.\n    allowHashBang: false,\n    // By default, the parser will verify that private properties are\n    // only used in places where they are valid and have been declared.\n    // Set this to false to turn such checks off.\n    checkPrivateFields: true,\n    // When `locations` is on, `loc` properties holding objects with\n    // `start` and `end` properties in `{line, column}` form (with\n    // line being 1-based and column 0-based) will be attached to the\n    // nodes.\n    locations: false,\n    // A function can be passed as `onToken` option, which will\n    // cause Acorn to call that function with object in the same\n    // format as tokens returned from `tokenizer().getToken()`. Note\n    // that you are not allowed to call the parser from the\n    // callback—that will corrupt its internal state.\n    onToken: null,\n    // A function can be passed as `onComment` option, which will\n    // cause Acorn to call that function with `(block, text, start,\n    // end)` parameters whenever a comment is skipped. `block` is a\n    // boolean indicating whether this is a block (`/* */`) comment,\n    // `text` is the content of the comment, and `start` and `end` are\n    // character offsets that denote the start and end of the comment.\n    // When the `locations` option is on, two more parameters are\n    // passed, the full `{line, column}` locations of the start and\n    // end of the comments. Note that you are not allowed to call the\n    // parser from the callback—that will corrupt its internal state.\n    // When this option has an array as value, objects representing the\n    // comments are pushed to it.\n    onComment: null,\n    // Nodes have their start and end characters offsets recorded in\n    // `start` and `end` properties (directly on the node, rather than\n    // the `loc` object, which holds line/column data. To also add a\n    // [semi-standardized][range] `range` property holding a `[start,\n    // end]` array with the same numbers, set the `ranges` option to\n    // `true`.\n    //\n    // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n    ranges: false,\n    // It is possible to parse multiple files into a single AST by\n    // passing the tree produced by parsing the first file as\n    // `program` option in subsequent parses. This will add the\n    // toplevel forms of the parsed file to the `Program` (top) node\n    // of an existing parse tree.\n    program: null,\n    // When `locations` is on, you can pass this to record the source\n    // file in every node's `loc` object.\n    sourceFile: null,\n    // This value, if given, is stored in every node, whether\n    // `locations` is on or off.\n    directSourceFile: null,\n    // When enabled, parenthesized expressions are represented by\n    // (non-standard) ParenthesizedExpression nodes\n    preserveParens: false\n  };\n\n  // Interpret and default an options object\n\n  var warnedAboutEcmaVersion = false;\n\n  function getOptions(opts) {\n    var options = {};\n\n    for (var opt in defaultOptions)\n      { options[opt] = opts && hasOwn(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n    if (options.ecmaVersion === \"latest\") {\n      options.ecmaVersion = 1e8;\n    } else if (options.ecmaVersion == null) {\n      if (!warnedAboutEcmaVersion && typeof console === \"object\" && console.warn) {\n        warnedAboutEcmaVersion = true;\n        console.warn(\"Since Acorn 8.0.0, options.ecmaVersion is required.\\nDefaulting to 2020, but this will stop working in the future.\");\n      }\n      options.ecmaVersion = 11;\n    } else if (options.ecmaVersion >= 2015) {\n      options.ecmaVersion -= 2009;\n    }\n\n    if (options.allowReserved == null)\n      { options.allowReserved = options.ecmaVersion < 5; }\n\n    if (!opts || opts.allowHashBang == null)\n      { options.allowHashBang = options.ecmaVersion >= 14; }\n\n    if (isArray(options.onToken)) {\n      var tokens = options.onToken;\n      options.onToken = function (token) { return tokens.push(token); };\n    }\n    if (isArray(options.onComment))\n      { options.onComment = pushComment(options, options.onComment); }\n\n    return options\n  }\n\n  function pushComment(options, array) {\n    return function(block, text, start, end, startLoc, endLoc) {\n      var comment = {\n        type: block ? \"Block\" : \"Line\",\n        value: text,\n        start: start,\n        end: end\n      };\n      if (options.locations)\n        { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n      if (options.ranges)\n        { comment.range = [start, end]; }\n      array.push(comment);\n    }\n  }\n\n  // Each scope gets a bitset that may contain these flags\n  var\n      SCOPE_TOP = 1,\n      SCOPE_FUNCTION = 2,\n      SCOPE_ASYNC = 4,\n      SCOPE_GENERATOR = 8,\n      SCOPE_ARROW = 16,\n      SCOPE_SIMPLE_CATCH = 32,\n      SCOPE_SUPER = 64,\n      SCOPE_DIRECT_SUPER = 128,\n      SCOPE_CLASS_STATIC_BLOCK = 256,\n      SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK;\n\n  function functionFlags(async, generator) {\n    return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0)\n  }\n\n  // Used in checkLVal* and declareName to determine the type of a binding\n  var\n      BIND_NONE = 0, // Not a binding\n      BIND_VAR = 1, // Var-style binding\n      BIND_LEXICAL = 2, // Let- or const-style binding\n      BIND_FUNCTION = 3, // Function declaration\n      BIND_SIMPLE_CATCH = 4, // Simple (identifier pattern) catch binding\n      BIND_OUTSIDE = 5; // Special case for function names as bound inside the function\n\n  var Parser = function Parser(options, input, startPos) {\n    this.options = options = getOptions(options);\n    this.sourceFile = options.sourceFile;\n    this.keywords = wordsRegexp(keywords$1[options.ecmaVersion >= 6 ? 6 : options.sourceType === \"module\" ? \"5module\" : 5]);\n    var reserved = \"\";\n    if (options.allowReserved !== true) {\n      reserved = reservedWords[options.ecmaVersion >= 6 ? 6 : options.ecmaVersion === 5 ? 5 : 3];\n      if (options.sourceType === \"module\") { reserved += \" await\"; }\n    }\n    this.reservedWords = wordsRegexp(reserved);\n    var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n    this.reservedWordsStrict = wordsRegexp(reservedStrict);\n    this.reservedWordsStrictBind = wordsRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n    this.input = String(input);\n\n    // Used to signal to callers of `readWord1` whether the word\n    // contained any escape sequences. This is needed because words with\n    // escape sequences must not be interpreted as keywords.\n    this.containsEsc = false;\n\n    // Set up token state\n\n    // The current position of the tokenizer in the input.\n    if (startPos) {\n      this.pos = startPos;\n      this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n      this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n    } else {\n      this.pos = this.lineStart = 0;\n      this.curLine = 1;\n    }\n\n    // Properties of the current token:\n    // Its type\n    this.type = types$1.eof;\n    // For tokens that include more information than their type, the value\n    this.value = null;\n    // Its start and end offset\n    this.start = this.end = this.pos;\n    // And, if locations are used, the {line, column} object\n    // corresponding to those offsets\n    this.startLoc = this.endLoc = this.curPosition();\n\n    // Position information for the previous token\n    this.lastTokEndLoc = this.lastTokStartLoc = null;\n    this.lastTokStart = this.lastTokEnd = this.pos;\n\n    // The context stack is used to superficially track syntactic\n    // context to predict whether a regular expression is allowed in a\n    // given position.\n    this.context = this.initialContext();\n    this.exprAllowed = true;\n\n    // Figure out if it's a module code.\n    this.inModule = options.sourceType === \"module\";\n    this.strict = this.inModule || this.strictDirective(this.pos);\n\n    // Used to signify the start of a potential arrow function\n    this.potentialArrowAt = -1;\n    this.potentialArrowInForAwait = false;\n\n    // Positions to delayed-check that yield/await does not exist in default parameters.\n    this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;\n    // Labels in scope.\n    this.labels = [];\n    // Thus-far undefined exports.\n    this.undefinedExports = Object.create(null);\n\n    // If enabled, skip leading hashbang line.\n    if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n      { this.skipLineComment(2); }\n\n    // Scope tracking for duplicate variable names (see scope.js)\n    this.scopeStack = [];\n    this.enterScope(SCOPE_TOP);\n\n    // For RegExp validation\n    this.regexpState = null;\n\n    // The stack of private names.\n    // Each element has two properties: 'declared' and 'used'.\n    // When it exited from the outermost class definition, all used private names must be declared.\n    this.privateNameStack = [];\n  };\n\n  var prototypeAccessors = { inFunction: { configurable: true },inGenerator: { configurable: true },inAsync: { configurable: true },canAwait: { configurable: true },allowSuper: { configurable: true },allowDirectSuper: { configurable: true },treatFunctionsAsVar: { configurable: true },allowNewDotTarget: { configurable: true },inClassStaticBlock: { configurable: true } };\n\n  Parser.prototype.parse = function parse () {\n    var node = this.options.program || this.startNode();\n    this.nextToken();\n    return this.parseTopLevel(node)\n  };\n\n  prototypeAccessors.inFunction.get = function () { return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0 };\n\n  prototypeAccessors.inGenerator.get = function () { return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0 && !this.currentVarScope().inClassFieldInit };\n\n  prototypeAccessors.inAsync.get = function () { return (this.currentVarScope().flags & SCOPE_ASYNC) > 0 && !this.currentVarScope().inClassFieldInit };\n\n  prototypeAccessors.canAwait.get = function () {\n    for (var i = this.scopeStack.length - 1; i >= 0; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.inClassFieldInit || scope.flags & SCOPE_CLASS_STATIC_BLOCK) { return false }\n      if (scope.flags & SCOPE_FUNCTION) { return (scope.flags & SCOPE_ASYNC) > 0 }\n    }\n    return (this.inModule && this.options.ecmaVersion >= 13) || this.options.allowAwaitOutsideFunction\n  };\n\n  prototypeAccessors.allowSuper.get = function () {\n    var ref = this.currentThisScope();\n      var flags = ref.flags;\n      var inClassFieldInit = ref.inClassFieldInit;\n    return (flags & SCOPE_SUPER) > 0 || inClassFieldInit || this.options.allowSuperOutsideMethod\n  };\n\n  prototypeAccessors.allowDirectSuper.get = function () { return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0 };\n\n  prototypeAccessors.treatFunctionsAsVar.get = function () { return this.treatFunctionsAsVarInScope(this.currentScope()) };\n\n  prototypeAccessors.allowNewDotTarget.get = function () {\n    var ref = this.currentThisScope();\n      var flags = ref.flags;\n      var inClassFieldInit = ref.inClassFieldInit;\n    return (flags & (SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK)) > 0 || inClassFieldInit\n  };\n\n  prototypeAccessors.inClassStaticBlock.get = function () {\n    return (this.currentVarScope().flags & SCOPE_CLASS_STATIC_BLOCK) > 0\n  };\n\n  Parser.extend = function extend () {\n      var plugins = [], len = arguments.length;\n      while ( len-- ) plugins[ len ] = arguments[ len ];\n\n    var cls = this;\n    for (var i = 0; i < plugins.length; i++) { cls = plugins[i](cls); }\n    return cls\n  };\n\n  Parser.parse = function parse (input, options) {\n    return new this(options, input).parse()\n  };\n\n  Parser.parseExpressionAt = function parseExpressionAt (input, pos, options) {\n    var parser = new this(options, input, pos);\n    parser.nextToken();\n    return parser.parseExpression()\n  };\n\n  Parser.tokenizer = function tokenizer (input, options) {\n    return new this(options, input)\n  };\n\n  Object.defineProperties( Parser.prototype, prototypeAccessors );\n\n  var pp$9 = Parser.prototype;\n\n  // ## Parser utilities\n\n  var literal = /^(?:'((?:\\\\.|[^'\\\\])*?)'|\"((?:\\\\.|[^\"\\\\])*?)\")/;\n  pp$9.strictDirective = function(start) {\n    if (this.options.ecmaVersion < 5) { return false }\n    for (;;) {\n      // Try to find string literal.\n      skipWhiteSpace.lastIndex = start;\n      start += skipWhiteSpace.exec(this.input)[0].length;\n      var match = literal.exec(this.input.slice(start));\n      if (!match) { return false }\n      if ((match[1] || match[2]) === \"use strict\") {\n        skipWhiteSpace.lastIndex = start + match[0].length;\n        var spaceAfter = skipWhiteSpace.exec(this.input), end = spaceAfter.index + spaceAfter[0].length;\n        var next = this.input.charAt(end);\n        return next === \";\" || next === \"}\" ||\n          (lineBreak.test(spaceAfter[0]) &&\n           !(/[(`.[+\\-/*%<>=,?^&]/.test(next) || next === \"!\" && this.input.charAt(end + 1) === \"=\"))\n      }\n      start += match[0].length;\n\n      // Skip semicolon, if any.\n      skipWhiteSpace.lastIndex = start;\n      start += skipWhiteSpace.exec(this.input)[0].length;\n      if (this.input[start] === \";\")\n        { start++; }\n    }\n  };\n\n  // Predicate that tests whether the next token is of the given\n  // type, and if yes, consumes it as a side effect.\n\n  pp$9.eat = function(type) {\n    if (this.type === type) {\n      this.next();\n      return true\n    } else {\n      return false\n    }\n  };\n\n  // Tests whether parsed token is a contextual keyword.\n\n  pp$9.isContextual = function(name) {\n    return this.type === types$1.name && this.value === name && !this.containsEsc\n  };\n\n  // Consumes contextual keyword if possible.\n\n  pp$9.eatContextual = function(name) {\n    if (!this.isContextual(name)) { return false }\n    this.next();\n    return true\n  };\n\n  // Asserts that following token is given contextual keyword.\n\n  pp$9.expectContextual = function(name) {\n    if (!this.eatContextual(name)) { this.unexpected(); }\n  };\n\n  // Test whether a semicolon can be inserted at the current position.\n\n  pp$9.canInsertSemicolon = function() {\n    return this.type === types$1.eof ||\n      this.type === types$1.braceR ||\n      lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  };\n\n  pp$9.insertSemicolon = function() {\n    if (this.canInsertSemicolon()) {\n      if (this.options.onInsertedSemicolon)\n        { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n      return true\n    }\n  };\n\n  // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n  pp$9.semicolon = function() {\n    if (!this.eat(types$1.semi) && !this.insertSemicolon()) { this.unexpected(); }\n  };\n\n  pp$9.afterTrailingComma = function(tokType, notNext) {\n    if (this.type === tokType) {\n      if (this.options.onTrailingComma)\n        { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n      if (!notNext)\n        { this.next(); }\n      return true\n    }\n  };\n\n  // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error.\n\n  pp$9.expect = function(type) {\n    this.eat(type) || this.unexpected();\n  };\n\n  // Raise an unexpected token error.\n\n  pp$9.unexpected = function(pos) {\n    this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n  };\n\n  var DestructuringErrors = function DestructuringErrors() {\n    this.shorthandAssign =\n    this.trailingComma =\n    this.parenthesizedAssign =\n    this.parenthesizedBind =\n    this.doubleProto =\n      -1;\n  };\n\n  pp$9.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n    if (!refDestructuringErrors) { return }\n    if (refDestructuringErrors.trailingComma > -1)\n      { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n    var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n    if (parens > -1) { this.raiseRecoverable(parens, isAssign ? \"Assigning to rvalue\" : \"Parenthesized pattern\"); }\n  };\n\n  pp$9.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n    if (!refDestructuringErrors) { return false }\n    var shorthandAssign = refDestructuringErrors.shorthandAssign;\n    var doubleProto = refDestructuringErrors.doubleProto;\n    if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }\n    if (shorthandAssign >= 0)\n      { this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n    if (doubleProto >= 0)\n      { this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\"); }\n  };\n\n  pp$9.checkYieldAwaitInDefaultParams = function() {\n    if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n      { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n    if (this.awaitPos)\n      { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n  };\n\n  pp$9.isSimpleAssignTarget = function(expr) {\n    if (expr.type === \"ParenthesizedExpression\")\n      { return this.isSimpleAssignTarget(expr.expression) }\n    return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n  };\n\n  var pp$8 = Parser.prototype;\n\n  // ### Statement parsing\n\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  pp$8.parseTopLevel = function(node) {\n    var exports = Object.create(null);\n    if (!node.body) { node.body = []; }\n    while (this.type !== types$1.eof) {\n      var stmt = this.parseStatement(null, true, exports);\n      node.body.push(stmt);\n    }\n    if (this.inModule)\n      { for (var i = 0, list = Object.keys(this.undefinedExports); i < list.length; i += 1)\n        {\n          var name = list[i];\n\n          this.raiseRecoverable(this.undefinedExports[name].start, (\"Export '\" + name + \"' is not defined\"));\n        } }\n    this.adaptDirectivePrologue(node.body);\n    this.next();\n    node.sourceType = this.options.sourceType;\n    return this.finishNode(node, \"Program\")\n  };\n\n  var loopLabel = {kind: \"loop\"}, switchLabel = {kind: \"switch\"};\n\n  pp$8.isLet = function(context) {\n    if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) { return false }\n    skipWhiteSpace.lastIndex = this.pos;\n    var skip = skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n    // For ambiguous cases, determine if a LexicalDeclaration (or only a\n    // Statement) is allowed here. If context is not empty then only a Statement\n    // is allowed. However, `let [` is an explicit negative lookahead for\n    // ExpressionStatement, so special-case it first.\n    if (nextCh === 91 || nextCh === 92) { return true } // '[', '/'\n    if (context) { return false }\n\n    if (nextCh === 123 || nextCh > 0xd7ff && nextCh < 0xdc00) { return true } // '{', astral\n    if (isIdentifierStart(nextCh, true)) {\n      var pos = next + 1;\n      while (isIdentifierChar(nextCh = this.input.charCodeAt(pos), true)) { ++pos; }\n      if (nextCh === 92 || nextCh > 0xd7ff && nextCh < 0xdc00) { return true }\n      var ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) { return true }\n    }\n    return false\n  };\n\n  // check 'async [no LineTerminator here] function'\n  // - 'async /*foo*/ function' is OK.\n  // - 'async /*\\n*/ function' is invalid.\n  pp$8.isAsyncFunction = function() {\n    if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\"))\n      { return false }\n\n    skipWhiteSpace.lastIndex = this.pos;\n    var skip = skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length, after;\n    return !lineBreak.test(this.input.slice(this.pos, next)) &&\n      this.input.slice(next, next + 8) === \"function\" &&\n      (next + 8 === this.input.length ||\n       !(isIdentifierChar(after = this.input.charCodeAt(next + 8)) || after > 0xd7ff && after < 0xdc00))\n  };\n\n  // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo)`, where looking at the previous token\n  // does not help.\n\n  pp$8.parseStatement = function(context, topLevel, exports) {\n    var starttype = this.type, node = this.startNode(), kind;\n\n    if (this.isLet(context)) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (starttype) {\n    case types$1._break: case types$1._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n    case types$1._debugger: return this.parseDebuggerStatement(node)\n    case types$1._do: return this.parseDoStatement(node)\n    case types$1._for: return this.parseForStatement(node)\n    case types$1._function:\n      // Function as sole body of either an if statement or a labeled statement\n      // works, but not when it is part of a labeled statement that is the sole\n      // body of an if statement.\n      if ((context && (this.strict || context !== \"if\" && context !== \"label\")) && this.options.ecmaVersion >= 6) { this.unexpected(); }\n      return this.parseFunctionStatement(node, false, !context)\n    case types$1._class:\n      if (context) { this.unexpected(); }\n      return this.parseClass(node, true)\n    case types$1._if: return this.parseIfStatement(node)\n    case types$1._return: return this.parseReturnStatement(node)\n    case types$1._switch: return this.parseSwitchStatement(node)\n    case types$1._throw: return this.parseThrowStatement(node)\n    case types$1._try: return this.parseTryStatement(node)\n    case types$1._const: case types$1._var:\n      kind = kind || this.value;\n      if (context && kind !== \"var\") { this.unexpected(); }\n      return this.parseVarStatement(node, kind)\n    case types$1._while: return this.parseWhileStatement(node)\n    case types$1._with: return this.parseWithStatement(node)\n    case types$1.braceL: return this.parseBlock(true, node)\n    case types$1.semi: return this.parseEmptyStatement(node)\n    case types$1._export:\n    case types$1._import:\n      if (this.options.ecmaVersion > 10 && starttype === types$1._import) {\n        skipWhiteSpace.lastIndex = this.pos;\n        var skip = skipWhiteSpace.exec(this.input);\n        var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n        if (nextCh === 40 || nextCh === 46) // '(' or '.'\n          { return this.parseExpressionStatement(node, this.parseExpression()) }\n      }\n\n      if (!this.options.allowImportExportEverywhere) {\n        if (!topLevel)\n          { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n        if (!this.inModule)\n          { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n      }\n      return starttype === types$1._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n      // If the statement does not start with a statement keyword or a\n      // brace, it's an ExpressionStatement or LabeledStatement. We\n      // simply start parsing an expression, and afterwards, if the\n      // next token is a colon and the expression was a simple\n      // Identifier node, we switch to interpreting it as a label.\n    default:\n      if (this.isAsyncFunction()) {\n        if (context) { this.unexpected(); }\n        this.next();\n        return this.parseFunctionStatement(node, true, !context)\n      }\n\n      var maybeName = this.value, expr = this.parseExpression();\n      if (starttype === types$1.name && expr.type === \"Identifier\" && this.eat(types$1.colon))\n        { return this.parseLabeledStatement(node, maybeName, expr, context) }\n      else { return this.parseExpressionStatement(node, expr) }\n    }\n  };\n\n  pp$8.parseBreakContinueStatement = function(node, keyword) {\n    var isBreak = keyword === \"break\";\n    this.next();\n    if (this.eat(types$1.semi) || this.insertSemicolon()) { node.label = null; }\n    else if (this.type !== types$1.name) { this.unexpected(); }\n    else {\n      node.label = this.parseIdent();\n      this.semicolon();\n    }\n\n    // Verify that there is an actual destination to break or\n    // continue to.\n    var i = 0;\n    for (; i < this.labels.length; ++i) {\n      var lab = this.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n        if (node.label && isBreak) { break }\n      }\n    }\n    if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n  };\n\n  pp$8.parseDebuggerStatement = function(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\")\n  };\n\n  pp$8.parseDoStatement = function(node) {\n    this.next();\n    this.labels.push(loopLabel);\n    node.body = this.parseStatement(\"do\");\n    this.labels.pop();\n    this.expect(types$1._while);\n    node.test = this.parseParenExpression();\n    if (this.options.ecmaVersion >= 6)\n      { this.eat(types$1.semi); }\n    else\n      { this.semicolon(); }\n    return this.finishNode(node, \"DoWhileStatement\")\n  };\n\n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n  // loop is non-trivial. Basically, we have to parse the init `var`\n  // statement or expression, disallowing the `in` operator (see\n  // the second parameter to `parseExpression`), and then check\n  // whether the next token is `in` or `of`. When there is no init\n  // part (semicolon immediately after the opening parenthesis), it\n  // is a regular `for` loop.\n\n  pp$8.parseForStatement = function(node) {\n    this.next();\n    var awaitAt = (this.options.ecmaVersion >= 9 && this.canAwait && this.eatContextual(\"await\")) ? this.lastTokStart : -1;\n    this.labels.push(loopLabel);\n    this.enterScope(0);\n    this.expect(types$1.parenL);\n    if (this.type === types$1.semi) {\n      if (awaitAt > -1) { this.unexpected(awaitAt); }\n      return this.parseFor(node, null)\n    }\n    var isLet = this.isLet();\n    if (this.type === types$1._var || this.type === types$1._const || isLet) {\n      var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n      this.next();\n      this.parseVar(init$1, true, kind);\n      this.finishNode(init$1, \"VariableDeclaration\");\n      if ((this.type === types$1._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1) {\n        if (this.options.ecmaVersion >= 9) {\n          if (this.type === types$1._in) {\n            if (awaitAt > -1) { this.unexpected(awaitAt); }\n          } else { node.await = awaitAt > -1; }\n        }\n        return this.parseForIn(node, init$1)\n      }\n      if (awaitAt > -1) { this.unexpected(awaitAt); }\n      return this.parseFor(node, init$1)\n    }\n    var startsWithLet = this.isContextual(\"let\"), isForOf = false;\n    var refDestructuringErrors = new DestructuringErrors;\n    var init = this.parseExpression(awaitAt > -1 ? \"await\" : true, refDestructuringErrors);\n    if (this.type === types$1._in || (isForOf = this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n      if (this.options.ecmaVersion >= 9) {\n        if (this.type === types$1._in) {\n          if (awaitAt > -1) { this.unexpected(awaitAt); }\n        } else { node.await = awaitAt > -1; }\n      }\n      if (startsWithLet && isForOf) { this.raise(init.start, \"The left-hand side of a for-of loop may not start with 'let'.\"); }\n      this.toAssignable(init, false, refDestructuringErrors);\n      this.checkLValPattern(init);\n      return this.parseForIn(node, init)\n    } else {\n      this.checkExpressionErrors(refDestructuringErrors, true);\n    }\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, init)\n  };\n\n  pp$8.parseFunctionStatement = function(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync)\n  };\n\n  pp$8.parseIfStatement = function(node) {\n    this.next();\n    node.test = this.parseParenExpression();\n    // allow function declarations in branches, but only in non-strict mode\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types$1._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\")\n  };\n\n  pp$8.parseReturnStatement = function(node) {\n    if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n      { this.raise(this.start, \"'return' outside of function\"); }\n    this.next();\n\n    // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n\n    if (this.eat(types$1.semi) || this.insertSemicolon()) { node.argument = null; }\n    else { node.argument = this.parseExpression(); this.semicolon(); }\n    return this.finishNode(node, \"ReturnStatement\")\n  };\n\n  pp$8.parseSwitchStatement = function(node) {\n    this.next();\n    node.discriminant = this.parseParenExpression();\n    node.cases = [];\n    this.expect(types$1.braceL);\n    this.labels.push(switchLabel);\n    this.enterScope(0);\n\n    // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n\n    var cur;\n    for (var sawDefault = false; this.type !== types$1.braceR;) {\n      if (this.type === types$1._case || this.type === types$1._default) {\n        var isCase = this.type === types$1._case;\n        if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n        node.cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) { this.raiseRecoverable(this.lastTokStart, \"Multiple default clauses\"); }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(types$1.colon);\n      } else {\n        if (!cur) { this.unexpected(); }\n        cur.consequent.push(this.parseStatement(null));\n      }\n    }\n    this.exitScope();\n    if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n    this.next(); // Closing brace\n    this.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\")\n  };\n\n  pp$8.parseThrowStatement = function(node) {\n    this.next();\n    if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n      { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\")\n  };\n\n  // Reused empty array added for node fields that are always empty.\n\n  var empty$1 = [];\n\n  pp$8.parseCatchClauseParam = function() {\n    var param = this.parseBindingAtom();\n    var simple = param.type === \"Identifier\";\n    this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLValPattern(param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);\n    this.expect(types$1.parenR);\n\n    return param\n  };\n\n  pp$8.parseTryStatement = function(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n    if (this.type === types$1._catch) {\n      var clause = this.startNode();\n      this.next();\n      if (this.eat(types$1.parenL)) {\n        clause.param = this.parseCatchClauseParam();\n      } else {\n        if (this.options.ecmaVersion < 10) { this.unexpected(); }\n        clause.param = null;\n        this.enterScope(0);\n      }\n      clause.body = this.parseBlock(false);\n      this.exitScope();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n    node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;\n    if (!node.handler && !node.finalizer)\n      { this.raise(node.start, \"Missing catch or finally clause\"); }\n    return this.finishNode(node, \"TryStatement\")\n  };\n\n  pp$8.parseVarStatement = function(node, kind, allowMissingInitializer) {\n    this.next();\n    this.parseVar(node, false, kind, allowMissingInitializer);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\")\n  };\n\n  pp$8.parseWhileStatement = function(node) {\n    this.next();\n    node.test = this.parseParenExpression();\n    this.labels.push(loopLabel);\n    node.body = this.parseStatement(\"while\");\n    this.labels.pop();\n    return this.finishNode(node, \"WhileStatement\")\n  };\n\n  pp$8.parseWithStatement = function(node) {\n    if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n    this.next();\n    node.object = this.parseParenExpression();\n    node.body = this.parseStatement(\"with\");\n    return this.finishNode(node, \"WithStatement\")\n  };\n\n  pp$8.parseEmptyStatement = function(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\")\n  };\n\n  pp$8.parseLabeledStatement = function(node, maybeName, expr, context) {\n    for (var i$1 = 0, list = this.labels; i$1 < list.length; i$1 += 1)\n      {\n      var label = list[i$1];\n\n      if (label.name === maybeName)\n        { this.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n    } }\n    var kind = this.type.isLoop ? \"loop\" : this.type === types$1._switch ? \"switch\" : null;\n    for (var i = this.labels.length - 1; i >= 0; i--) {\n      var label$1 = this.labels[i];\n      if (label$1.statementStart === node.start) {\n        // Update information about previous labels on this node\n        label$1.statementStart = this.start;\n        label$1.kind = kind;\n      } else { break }\n    }\n    this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\")\n  };\n\n  pp$8.parseExpressionStatement = function(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\")\n  };\n\n  // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowStrict` is true (used for\n  // function bodies).\n\n  pp$8.parseBlock = function(createNewLexicalScope, node, exitStrict) {\n    if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n    if ( node === void 0 ) node = this.startNode();\n\n    node.body = [];\n    this.expect(types$1.braceL);\n    if (createNewLexicalScope) { this.enterScope(0); }\n    while (this.type !== types$1.braceR) {\n      var stmt = this.parseStatement(null);\n      node.body.push(stmt);\n    }\n    if (exitStrict) { this.strict = false; }\n    this.next();\n    if (createNewLexicalScope) { this.exitScope(); }\n    return this.finishNode(node, \"BlockStatement\")\n  };\n\n  // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n  pp$8.parseFor = function(node, init) {\n    node.init = init;\n    this.expect(types$1.semi);\n    node.test = this.type === types$1.semi ? null : this.parseExpression();\n    this.expect(types$1.semi);\n    node.update = this.type === types$1.parenR ? null : this.parseExpression();\n    this.expect(types$1.parenR);\n    node.body = this.parseStatement(\"for\");\n    this.exitScope();\n    this.labels.pop();\n    return this.finishNode(node, \"ForStatement\")\n  };\n\n  // Parse a `for`/`in` and `for`/`of` loop, which are almost\n  // same from parser's perspective.\n\n  pp$8.parseForIn = function(node, init) {\n    var isForIn = this.type === types$1._in;\n    this.next();\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (\n        !isForIn ||\n        this.options.ecmaVersion < 8 ||\n        this.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\"\n      )\n    ) {\n      this.raise(\n        init.start,\n        ((isForIn ? \"for-in\" : \"for-of\") + \" loop variable declaration may not have an initializer\")\n      );\n    }\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();\n    this.expect(types$1.parenR);\n    node.body = this.parseStatement(\"for\");\n    this.exitScope();\n    this.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\")\n  };\n\n  // Parse a list of variable declarations.\n\n  pp$8.parseVar = function(node, isFor, kind, allowMissingInitializer) {\n    node.declarations = [];\n    node.kind = kind;\n    for (;;) {\n      var decl = this.startNode();\n      this.parseVarId(decl, kind);\n      if (this.eat(types$1.eq)) {\n        decl.init = this.parseMaybeAssign(isFor);\n      } else if (!allowMissingInitializer && kind === \"const\" && !(this.type === types$1._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\")))) {\n        this.unexpected();\n      } else if (!allowMissingInitializer && decl.id.type !== \"Identifier\" && !(isFor && (this.type === types$1._in || this.isContextual(\"of\")))) {\n        this.raise(this.lastTokEnd, \"Complex binding patterns require an initialization value\");\n      } else {\n        decl.init = null;\n      }\n      node.declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types$1.comma)) { break }\n    }\n    return node\n  };\n\n  pp$8.parseVarId = function(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLValPattern(decl.id, kind === \"var\" ? BIND_VAR : BIND_LEXICAL, false);\n  };\n\n  var FUNC_STATEMENT = 1, FUNC_HANGING_STATEMENT = 2, FUNC_NULLABLE_ID = 4;\n\n  // Parse a function declaration or literal (depending on the\n  // `statement & FUNC_STATEMENT`).\n\n  // Remove `allowExpressionBody` for 7.0.0, as it is only called with false\n  pp$8.parseFunction = function(node, statement, allowExpressionBody, isAsync, forInit) {\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {\n      if (this.type === types$1.star && (statement & FUNC_HANGING_STATEMENT))\n        { this.unexpected(); }\n      node.generator = this.eat(types$1.star);\n    }\n    if (this.options.ecmaVersion >= 8)\n      { node.async = !!isAsync; }\n\n    if (statement & FUNC_STATEMENT) {\n      node.id = (statement & FUNC_NULLABLE_ID) && this.type !== types$1.name ? null : this.parseIdent();\n      if (node.id && !(statement & FUNC_HANGING_STATEMENT))\n        // If it is a regular function declaration in sloppy mode, then it is\n        // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n        // mode depends on properties of the current scope (see\n        // treatFunctionsAsVar).\n        { this.checkLValSimple(node.id, (this.strict || node.generator || node.async) ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION); }\n    }\n\n    var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    this.enterScope(functionFlags(node.async, node.generator));\n\n    if (!(statement & FUNC_STATEMENT))\n      { node.id = this.type === types$1.name ? this.parseIdent() : null; }\n\n    this.parseFunctionParams(node);\n    this.parseFunctionBody(node, allowExpressionBody, false, forInit);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, (statement & FUNC_STATEMENT) ? \"FunctionDeclaration\" : \"FunctionExpression\")\n  };\n\n  pp$8.parseFunctionParams = function(node) {\n    this.expect(types$1.parenL);\n    node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);\n    this.checkYieldAwaitInDefaultParams();\n  };\n\n  // Parse a class declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  pp$8.parseClass = function(node, isStatement) {\n    this.next();\n\n    // ecma-262 14.6 Class Definitions\n    // A class definition is always strict mode code.\n    var oldStrict = this.strict;\n    this.strict = true;\n\n    this.parseClassId(node, isStatement);\n    this.parseClassSuper(node);\n    var privateNameMap = this.enterClassBody();\n    var classBody = this.startNode();\n    var hadConstructor = false;\n    classBody.body = [];\n    this.expect(types$1.braceL);\n    while (this.type !== types$1.braceR) {\n      var element = this.parseClassElement(node.superClass !== null);\n      if (element) {\n        classBody.body.push(element);\n        if (element.type === \"MethodDefinition\" && element.kind === \"constructor\") {\n          if (hadConstructor) { this.raiseRecoverable(element.start, \"Duplicate constructor in the same class\"); }\n          hadConstructor = true;\n        } else if (element.key && element.key.type === \"PrivateIdentifier\" && isPrivateNameConflicted(privateNameMap, element)) {\n          this.raiseRecoverable(element.key.start, (\"Identifier '#\" + (element.key.name) + \"' has already been declared\"));\n        }\n      }\n    }\n    this.strict = oldStrict;\n    this.next();\n    node.body = this.finishNode(classBody, \"ClassBody\");\n    this.exitClassBody();\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n  };\n\n  pp$8.parseClassElement = function(constructorAllowsSuper) {\n    if (this.eat(types$1.semi)) { return null }\n\n    var ecmaVersion = this.options.ecmaVersion;\n    var node = this.startNode();\n    var keyName = \"\";\n    var isGenerator = false;\n    var isAsync = false;\n    var kind = \"method\";\n    var isStatic = false;\n\n    if (this.eatContextual(\"static\")) {\n      // Parse static init block\n      if (ecmaVersion >= 13 && this.eat(types$1.braceL)) {\n        this.parseClassStaticBlock(node);\n        return node\n      }\n      if (this.isClassElementNameStart() || this.type === types$1.star) {\n        isStatic = true;\n      } else {\n        keyName = \"static\";\n      }\n    }\n    node.static = isStatic;\n    if (!keyName && ecmaVersion >= 8 && this.eatContextual(\"async\")) {\n      if ((this.isClassElementNameStart() || this.type === types$1.star) && !this.canInsertSemicolon()) {\n        isAsync = true;\n      } else {\n        keyName = \"async\";\n      }\n    }\n    if (!keyName && (ecmaVersion >= 9 || !isAsync) && this.eat(types$1.star)) {\n      isGenerator = true;\n    }\n    if (!keyName && !isAsync && !isGenerator) {\n      var lastValue = this.value;\n      if (this.eatContextual(\"get\") || this.eatContextual(\"set\")) {\n        if (this.isClassElementNameStart()) {\n          kind = lastValue;\n        } else {\n          keyName = lastValue;\n        }\n      }\n    }\n\n    // Parse element name\n    if (keyName) {\n      // 'async', 'get', 'set', or 'static' were not a keyword contextually.\n      // The last token is any of those. Make it the element name.\n      node.computed = false;\n      node.key = this.startNodeAt(this.lastTokStart, this.lastTokStartLoc);\n      node.key.name = keyName;\n      this.finishNode(node.key, \"Identifier\");\n    } else {\n      this.parseClassElementName(node);\n    }\n\n    // Parse element value\n    if (ecmaVersion < 13 || this.type === types$1.parenL || kind !== \"method\" || isGenerator || isAsync) {\n      var isConstructor = !node.static && checkKeyName(node, \"constructor\");\n      var allowsDirectSuper = isConstructor && constructorAllowsSuper;\n      // Couldn't move this check into the 'parseClassMethod' method for backward compatibility.\n      if (isConstructor && kind !== \"method\") { this.raise(node.key.start, \"Constructor can't have get/set modifier\"); }\n      node.kind = isConstructor ? \"constructor\" : kind;\n      this.parseClassMethod(node, isGenerator, isAsync, allowsDirectSuper);\n    } else {\n      this.parseClassField(node);\n    }\n\n    return node\n  };\n\n  pp$8.isClassElementNameStart = function() {\n    return (\n      this.type === types$1.name ||\n      this.type === types$1.privateId ||\n      this.type === types$1.num ||\n      this.type === types$1.string ||\n      this.type === types$1.bracketL ||\n      this.type.keyword\n    )\n  };\n\n  pp$8.parseClassElementName = function(element) {\n    if (this.type === types$1.privateId) {\n      if (this.value === \"constructor\") {\n        this.raise(this.start, \"Classes can't have an element named '#constructor'\");\n      }\n      element.computed = false;\n      element.key = this.parsePrivateIdent();\n    } else {\n      this.parsePropertyName(element);\n    }\n  };\n\n  pp$8.parseClassMethod = function(method, isGenerator, isAsync, allowsDirectSuper) {\n    // Check key and flags\n    var key = method.key;\n    if (method.kind === \"constructor\") {\n      if (isGenerator) { this.raise(key.start, \"Constructor can't be a generator\"); }\n      if (isAsync) { this.raise(key.start, \"Constructor can't be an async method\"); }\n    } else if (method.static && checkKeyName(method, \"prototype\")) {\n      this.raise(key.start, \"Classes may not have a static property named prototype\");\n    }\n\n    // Parse value\n    var value = method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);\n\n    // Check value\n    if (method.kind === \"get\" && value.params.length !== 0)\n      { this.raiseRecoverable(value.start, \"getter should have no params\"); }\n    if (method.kind === \"set\" && value.params.length !== 1)\n      { this.raiseRecoverable(value.start, \"setter should have exactly one param\"); }\n    if (method.kind === \"set\" && value.params[0].type === \"RestElement\")\n      { this.raiseRecoverable(value.params[0].start, \"Setter cannot use rest params\"); }\n\n    return this.finishNode(method, \"MethodDefinition\")\n  };\n\n  pp$8.parseClassField = function(field) {\n    if (checkKeyName(field, \"constructor\")) {\n      this.raise(field.key.start, \"Classes can't have a field named 'constructor'\");\n    } else if (field.static && checkKeyName(field, \"prototype\")) {\n      this.raise(field.key.start, \"Classes can't have a static field named 'prototype'\");\n    }\n\n    if (this.eat(types$1.eq)) {\n      // To raise SyntaxError if 'arguments' exists in the initializer.\n      var scope = this.currentThisScope();\n      var inClassFieldInit = scope.inClassFieldInit;\n      scope.inClassFieldInit = true;\n      field.value = this.parseMaybeAssign();\n      scope.inClassFieldInit = inClassFieldInit;\n    } else {\n      field.value = null;\n    }\n    this.semicolon();\n\n    return this.finishNode(field, \"PropertyDefinition\")\n  };\n\n  pp$8.parseClassStaticBlock = function(node) {\n    node.body = [];\n\n    var oldLabels = this.labels;\n    this.labels = [];\n    this.enterScope(SCOPE_CLASS_STATIC_BLOCK | SCOPE_SUPER);\n    while (this.type !== types$1.braceR) {\n      var stmt = this.parseStatement(null);\n      node.body.push(stmt);\n    }\n    this.next();\n    this.exitScope();\n    this.labels = oldLabels;\n\n    return this.finishNode(node, \"StaticBlock\")\n  };\n\n  pp$8.parseClassId = function(node, isStatement) {\n    if (this.type === types$1.name) {\n      node.id = this.parseIdent();\n      if (isStatement)\n        { this.checkLValSimple(node.id, BIND_LEXICAL, false); }\n    } else {\n      if (isStatement === true)\n        { this.unexpected(); }\n      node.id = null;\n    }\n  };\n\n  pp$8.parseClassSuper = function(node) {\n    node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts(null, false) : null;\n  };\n\n  pp$8.enterClassBody = function() {\n    var element = {declared: Object.create(null), used: []};\n    this.privateNameStack.push(element);\n    return element.declared\n  };\n\n  pp$8.exitClassBody = function() {\n    var ref = this.privateNameStack.pop();\n    var declared = ref.declared;\n    var used = ref.used;\n    if (!this.options.checkPrivateFields) { return }\n    var len = this.privateNameStack.length;\n    var parent = len === 0 ? null : this.privateNameStack[len - 1];\n    for (var i = 0; i < used.length; ++i) {\n      var id = used[i];\n      if (!hasOwn(declared, id.name)) {\n        if (parent) {\n          parent.used.push(id);\n        } else {\n          this.raiseRecoverable(id.start, (\"Private field '#\" + (id.name) + \"' must be declared in an enclosing class\"));\n        }\n      }\n    }\n  };\n\n  function isPrivateNameConflicted(privateNameMap, element) {\n    var name = element.key.name;\n    var curr = privateNameMap[name];\n\n    var next = \"true\";\n    if (element.type === \"MethodDefinition\" && (element.kind === \"get\" || element.kind === \"set\")) {\n      next = (element.static ? \"s\" : \"i\") + element.kind;\n    }\n\n    // `class { get #a(){}; static set #a(_){} }` is also conflict.\n    if (\n      curr === \"iget\" && next === \"iset\" ||\n      curr === \"iset\" && next === \"iget\" ||\n      curr === \"sget\" && next === \"sset\" ||\n      curr === \"sset\" && next === \"sget\"\n    ) {\n      privateNameMap[name] = \"true\";\n      return false\n    } else if (!curr) {\n      privateNameMap[name] = next;\n      return false\n    } else {\n      return true\n    }\n  }\n\n  function checkKeyName(node, name) {\n    var computed = node.computed;\n    var key = node.key;\n    return !computed && (\n      key.type === \"Identifier\" && key.name === name ||\n      key.type === \"Literal\" && key.value === name\n    )\n  }\n\n  // Parses module export declaration.\n\n  pp$8.parseExportAllDeclaration = function(node, exports) {\n    if (this.options.ecmaVersion >= 11) {\n      if (this.eatContextual(\"as\")) {\n        node.exported = this.parseModuleExportName();\n        this.checkExport(exports, node.exported, this.lastTokStart);\n      } else {\n        node.exported = null;\n      }\n    }\n    this.expectContextual(\"from\");\n    if (this.type !== types$1.string) { this.unexpected(); }\n    node.source = this.parseExprAtom();\n    this.semicolon();\n    return this.finishNode(node, \"ExportAllDeclaration\")\n  };\n\n  pp$8.parseExport = function(node, exports) {\n    this.next();\n    // export * from '...'\n    if (this.eat(types$1.star)) {\n      return this.parseExportAllDeclaration(node, exports)\n    }\n    if (this.eat(types$1._default)) { // export default ...\n      this.checkExport(exports, \"default\", this.lastTokStart);\n      node.declaration = this.parseExportDefaultDeclaration();\n      return this.finishNode(node, \"ExportDefaultDeclaration\")\n    }\n    // export var|const|let|function|class ...\n    if (this.shouldParseExportStatement()) {\n      node.declaration = this.parseExportDeclaration(node);\n      if (node.declaration.type === \"VariableDeclaration\")\n        { this.checkVariableExport(exports, node.declaration.declarations); }\n      else\n        { this.checkExport(exports, node.declaration.id, node.declaration.id.start); }\n      node.specifiers = [];\n      node.source = null;\n    } else { // export { x, y as z } [from '...']\n      node.declaration = null;\n      node.specifiers = this.parseExportSpecifiers(exports);\n      if (this.eatContextual(\"from\")) {\n        if (this.type !== types$1.string) { this.unexpected(); }\n        node.source = this.parseExprAtom();\n      } else {\n        for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n          // check for keywords used as local names\n          var spec = list[i];\n\n          this.checkUnreserved(spec.local);\n          // check if export is defined\n          this.checkLocalExport(spec.local);\n\n          if (spec.local.type === \"Literal\") {\n            this.raise(spec.local.start, \"A string literal cannot be used as an exported binding without `from`.\");\n          }\n        }\n\n        node.source = null;\n      }\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportNamedDeclaration\")\n  };\n\n  pp$8.parseExportDeclaration = function(node) {\n    return this.parseStatement(null)\n  };\n\n  pp$8.parseExportDefaultDeclaration = function() {\n    var isAsync;\n    if (this.type === types$1._function || (isAsync = this.isAsyncFunction())) {\n      var fNode = this.startNode();\n      this.next();\n      if (isAsync) { this.next(); }\n      return this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync)\n    } else if (this.type === types$1._class) {\n      var cNode = this.startNode();\n      return this.parseClass(cNode, \"nullableID\")\n    } else {\n      var declaration = this.parseMaybeAssign();\n      this.semicolon();\n      return declaration\n    }\n  };\n\n  pp$8.checkExport = function(exports, name, pos) {\n    if (!exports) { return }\n    if (typeof name !== \"string\")\n      { name = name.type === \"Identifier\" ? name.name : name.value; }\n    if (hasOwn(exports, name))\n      { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n    exports[name] = true;\n  };\n\n  pp$8.checkPatternExport = function(exports, pat) {\n    var type = pat.type;\n    if (type === \"Identifier\")\n      { this.checkExport(exports, pat, pat.start); }\n    else if (type === \"ObjectPattern\")\n      { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n        {\n          var prop = list[i];\n\n          this.checkPatternExport(exports, prop);\n        } }\n    else if (type === \"ArrayPattern\")\n      { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n        var elt = list$1[i$1];\n\n          if (elt) { this.checkPatternExport(exports, elt); }\n      } }\n    else if (type === \"Property\")\n      { this.checkPatternExport(exports, pat.value); }\n    else if (type === \"AssignmentPattern\")\n      { this.checkPatternExport(exports, pat.left); }\n    else if (type === \"RestElement\")\n      { this.checkPatternExport(exports, pat.argument); }\n  };\n\n  pp$8.checkVariableExport = function(exports, decls) {\n    if (!exports) { return }\n    for (var i = 0, list = decls; i < list.length; i += 1)\n      {\n      var decl = list[i];\n\n      this.checkPatternExport(exports, decl.id);\n    }\n  };\n\n  pp$8.shouldParseExportStatement = function() {\n    return this.type.keyword === \"var\" ||\n      this.type.keyword === \"const\" ||\n      this.type.keyword === \"class\" ||\n      this.type.keyword === \"function\" ||\n      this.isLet() ||\n      this.isAsyncFunction()\n  };\n\n  // Parses a comma-separated list of module exports.\n\n  pp$8.parseExportSpecifier = function(exports) {\n    var node = this.startNode();\n    node.local = this.parseModuleExportName();\n\n    node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local;\n    this.checkExport(\n      exports,\n      node.exported,\n      node.exported.start\n    );\n\n    return this.finishNode(node, \"ExportSpecifier\")\n  };\n\n  pp$8.parseExportSpecifiers = function(exports) {\n    var nodes = [], first = true;\n    // export { x, y as z } [from '...']\n    this.expect(types$1.braceL);\n    while (!this.eat(types$1.braceR)) {\n      if (!first) {\n        this.expect(types$1.comma);\n        if (this.afterTrailingComma(types$1.braceR)) { break }\n      } else { first = false; }\n\n      nodes.push(this.parseExportSpecifier(exports));\n    }\n    return nodes\n  };\n\n  // Parses import declaration.\n\n  pp$8.parseImport = function(node) {\n    this.next();\n\n    // import '...'\n    if (this.type === types$1.string) {\n      node.specifiers = empty$1;\n      node.source = this.parseExprAtom();\n    } else {\n      node.specifiers = this.parseImportSpecifiers();\n      this.expectContextual(\"from\");\n      node.source = this.type === types$1.string ? this.parseExprAtom() : this.unexpected();\n    }\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\")\n  };\n\n  // Parses a comma-separated list of module imports.\n\n  pp$8.parseImportSpecifier = function() {\n    var node = this.startNode();\n    node.imported = this.parseModuleExportName();\n\n    if (this.eatContextual(\"as\")) {\n      node.local = this.parseIdent();\n    } else {\n      this.checkUnreserved(node.imported);\n      node.local = node.imported;\n    }\n    this.checkLValSimple(node.local, BIND_LEXICAL);\n\n    return this.finishNode(node, \"ImportSpecifier\")\n  };\n\n  pp$8.parseImportDefaultSpecifier = function() {\n    // import defaultObj, { x, y as z } from '...'\n    var node = this.startNode();\n    node.local = this.parseIdent();\n    this.checkLValSimple(node.local, BIND_LEXICAL);\n    return this.finishNode(node, \"ImportDefaultSpecifier\")\n  };\n\n  pp$8.parseImportNamespaceSpecifier = function() {\n    var node = this.startNode();\n    this.next();\n    this.expectContextual(\"as\");\n    node.local = this.parseIdent();\n    this.checkLValSimple(node.local, BIND_LEXICAL);\n    return this.finishNode(node, \"ImportNamespaceSpecifier\")\n  };\n\n  pp$8.parseImportSpecifiers = function() {\n    var nodes = [], first = true;\n    if (this.type === types$1.name) {\n      nodes.push(this.parseImportDefaultSpecifier());\n      if (!this.eat(types$1.comma)) { return nodes }\n    }\n    if (this.type === types$1.star) {\n      nodes.push(this.parseImportNamespaceSpecifier());\n      return nodes\n    }\n    this.expect(types$1.braceL);\n    while (!this.eat(types$1.braceR)) {\n      if (!first) {\n        this.expect(types$1.comma);\n        if (this.afterTrailingComma(types$1.braceR)) { break }\n      } else { first = false; }\n\n      nodes.push(this.parseImportSpecifier());\n    }\n    return nodes\n  };\n\n  pp$8.parseModuleExportName = function() {\n    if (this.options.ecmaVersion >= 13 && this.type === types$1.string) {\n      var stringLiteral = this.parseLiteral(this.value);\n      if (loneSurrogate.test(stringLiteral.value)) {\n        this.raise(stringLiteral.start, \"An export name cannot include a lone surrogate.\");\n      }\n      return stringLiteral\n    }\n    return this.parseIdent(true)\n  };\n\n  // Set `ExpressionStatement#directive` property for directive prologues.\n  pp$8.adaptDirectivePrologue = function(statements) {\n    for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n      statements[i].directive = statements[i].expression.raw.slice(1, -1);\n    }\n  };\n  pp$8.isDirectiveCandidate = function(statement) {\n    return (\n      this.options.ecmaVersion >= 5 &&\n      statement.type === \"ExpressionStatement\" &&\n      statement.expression.type === \"Literal\" &&\n      typeof statement.expression.value === \"string\" &&\n      // Reject parenthesized strings.\n      (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\")\n    )\n  };\n\n  var pp$7 = Parser.prototype;\n\n  // Convert existing expression atom to assignable pattern\n  // if possible.\n\n  pp$7.toAssignable = function(node, isBinding, refDestructuringErrors) {\n    if (this.options.ecmaVersion >= 6 && node) {\n      switch (node.type) {\n      case \"Identifier\":\n        if (this.inAsync && node.name === \"await\")\n          { this.raise(node.start, \"Cannot use 'await' as identifier inside an async function\"); }\n        break\n\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n        for (var i = 0, list = node.properties; i < list.length; i += 1) {\n          var prop = list[i];\n\n        this.toAssignable(prop, isBinding);\n          // Early error:\n          //   AssignmentRestProperty[Yield, Await] :\n          //     `...` DestructuringAssignmentTarget[Yield, Await]\n          //\n          //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.\n          if (\n            prop.type === \"RestElement\" &&\n            (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")\n          ) {\n            this.raise(prop.argument.start, \"Unexpected token\");\n          }\n        }\n        break\n\n      case \"Property\":\n        // AssignmentProperty has type === \"Property\"\n        if (node.kind !== \"init\") { this.raise(node.key.start, \"Object pattern can't contain getter or setter\"); }\n        this.toAssignable(node.value, isBinding);\n        break\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n        this.toAssignableList(node.elements, isBinding);\n        break\n\n      case \"SpreadElement\":\n        node.type = \"RestElement\";\n        this.toAssignable(node.argument, isBinding);\n        if (node.argument.type === \"AssignmentPattern\")\n          { this.raise(node.argument.start, \"Rest elements cannot have a default value\"); }\n        break\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") { this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\"); }\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isBinding);\n        break\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(node.expression, isBinding, refDestructuringErrors);\n        break\n\n      case \"ChainExpression\":\n        this.raiseRecoverable(node.start, \"Optional chaining cannot appear in left-hand side\");\n        break\n\n      case \"MemberExpression\":\n        if (!isBinding) { break }\n\n      default:\n        this.raise(node.start, \"Assigning to rvalue\");\n      }\n    } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n    return node\n  };\n\n  // Convert list of expression atoms to binding list.\n\n  pp$7.toAssignableList = function(exprList, isBinding) {\n    var end = exprList.length;\n    for (var i = 0; i < end; i++) {\n      var elt = exprList[i];\n      if (elt) { this.toAssignable(elt, isBinding); }\n    }\n    if (end) {\n      var last = exprList[end - 1];\n      if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n        { this.unexpected(last.argument.start); }\n    }\n    return exprList\n  };\n\n  // Parses spread element.\n\n  pp$7.parseSpread = function(refDestructuringErrors) {\n    var node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    return this.finishNode(node, \"SpreadElement\")\n  };\n\n  pp$7.parseRestBinding = function() {\n    var node = this.startNode();\n    this.next();\n\n    // RestElement inside of a function parameter must be an identifier\n    if (this.options.ecmaVersion === 6 && this.type !== types$1.name)\n      { this.unexpected(); }\n\n    node.argument = this.parseBindingAtom();\n\n    return this.finishNode(node, \"RestElement\")\n  };\n\n  // Parses lvalue (assignable) atom.\n\n  pp$7.parseBindingAtom = function() {\n    if (this.options.ecmaVersion >= 6) {\n      switch (this.type) {\n      case types$1.bracketL:\n        var node = this.startNode();\n        this.next();\n        node.elements = this.parseBindingList(types$1.bracketR, true, true);\n        return this.finishNode(node, \"ArrayPattern\")\n\n      case types$1.braceL:\n        return this.parseObj(true)\n      }\n    }\n    return this.parseIdent()\n  };\n\n  pp$7.parseBindingList = function(close, allowEmpty, allowTrailingComma, allowModifiers) {\n    var elts = [], first = true;\n    while (!this.eat(close)) {\n      if (first) { first = false; }\n      else { this.expect(types$1.comma); }\n      if (allowEmpty && this.type === types$1.comma) {\n        elts.push(null);\n      } else if (allowTrailingComma && this.afterTrailingComma(close)) {\n        break\n      } else if (this.type === types$1.ellipsis) {\n        var rest = this.parseRestBinding();\n        this.parseBindingListItem(rest);\n        elts.push(rest);\n        if (this.type === types$1.comma) { this.raiseRecoverable(this.start, \"Comma is not permitted after the rest element\"); }\n        this.expect(close);\n        break\n      } else {\n        elts.push(this.parseAssignableListItem(allowModifiers));\n      }\n    }\n    return elts\n  };\n\n  pp$7.parseAssignableListItem = function(allowModifiers) {\n    var elem = this.parseMaybeDefault(this.start, this.startLoc);\n    this.parseBindingListItem(elem);\n    return elem\n  };\n\n  pp$7.parseBindingListItem = function(param) {\n    return param\n  };\n\n  // Parses assignment pattern around given atom if possible.\n\n  pp$7.parseMaybeDefault = function(startPos, startLoc, left) {\n    left = left || this.parseBindingAtom();\n    if (this.options.ecmaVersion < 6 || !this.eat(types$1.eq)) { return left }\n    var node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssign();\n    return this.finishNode(node, \"AssignmentPattern\")\n  };\n\n  // The following three functions all verify that a node is an lvalue —\n  // something that can be bound, or assigned to. In order to do so, they perform\n  // a variety of checks:\n  //\n  // - Check that none of the bound/assigned-to identifiers are reserved words.\n  // - Record name declarations for bindings in the appropriate scope.\n  // - Check duplicate argument names, if checkClashes is set.\n  //\n  // If a complex binding pattern is encountered (e.g., object and array\n  // destructuring), the entire pattern is recursively checked.\n  //\n  // There are three versions of checkLVal*() appropriate for different\n  // circumstances:\n  //\n  // - checkLValSimple() shall be used if the syntactic construct supports\n  //   nothing other than identifiers and member expressions. Parenthesized\n  //   expressions are also correctly handled. This is generally appropriate for\n  //   constructs for which the spec says\n  //\n  //   > It is a Syntax Error if AssignmentTargetType of [the production] is not\n  //   > simple.\n  //\n  //   It is also appropriate for checking if an identifier is valid and not\n  //   defined elsewhere, like import declarations or function/class identifiers.\n  //\n  //   Examples where this is used include:\n  //     a += …;\n  //     import a from '…';\n  //   where a is the node to be checked.\n  //\n  // - checkLValPattern() shall be used if the syntactic construct supports\n  //   anything checkLValSimple() supports, as well as object and array\n  //   destructuring patterns. This is generally appropriate for constructs for\n  //   which the spec says\n  //\n  //   > It is a Syntax Error if [the production] is neither an ObjectLiteral nor\n  //   > an ArrayLiteral and AssignmentTargetType of [the production] is not\n  //   > simple.\n  //\n  //   Examples where this is used include:\n  //     (a = …);\n  //     const a = …;\n  //     try { … } catch (a) { … }\n  //   where a is the node to be checked.\n  //\n  // - checkLValInnerPattern() shall be used if the syntactic construct supports\n  //   anything checkLValPattern() supports, as well as default assignment\n  //   patterns, rest elements, and other constructs that may appear within an\n  //   object or array destructuring pattern.\n  //\n  //   As a special case, function parameters also use checkLValInnerPattern(),\n  //   as they also support defaults and rest constructs.\n  //\n  // These functions deliberately support both assignment and binding constructs,\n  // as the logic for both is exceedingly similar. If the node is the target of\n  // an assignment, then bindingType should be set to BIND_NONE. Otherwise, it\n  // should be set to the appropriate BIND_* constant, like BIND_VAR or\n  // BIND_LEXICAL.\n  //\n  // If the function is called with a non-BIND_NONE bindingType, then\n  // additionally a checkClashes object may be specified to allow checking for\n  // duplicate argument names. checkClashes is ignored if the provided construct\n  // is an assignment (i.e., bindingType is BIND_NONE).\n\n  pp$7.checkLValSimple = function(expr, bindingType, checkClashes) {\n    if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n    var isBind = bindingType !== BIND_NONE;\n\n    switch (expr.type) {\n    case \"Identifier\":\n      if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n        { this.raiseRecoverable(expr.start, (isBind ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n      if (isBind) {\n        if (bindingType === BIND_LEXICAL && expr.name === \"let\")\n          { this.raiseRecoverable(expr.start, \"let is disallowed as a lexically bound name\"); }\n        if (checkClashes) {\n          if (hasOwn(checkClashes, expr.name))\n            { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n          checkClashes[expr.name] = true;\n        }\n        if (bindingType !== BIND_OUTSIDE) { this.declareName(expr.name, bindingType, expr.start); }\n      }\n      break\n\n    case \"ChainExpression\":\n      this.raiseRecoverable(expr.start, \"Optional chaining cannot appear in left-hand side\");\n      break\n\n    case \"MemberExpression\":\n      if (isBind) { this.raiseRecoverable(expr.start, \"Binding member expression\"); }\n      break\n\n    case \"ParenthesizedExpression\":\n      if (isBind) { this.raiseRecoverable(expr.start, \"Binding parenthesized expression\"); }\n      return this.checkLValSimple(expr.expression, bindingType, checkClashes)\n\n    default:\n      this.raise(expr.start, (isBind ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n    }\n  };\n\n  pp$7.checkLValPattern = function(expr, bindingType, checkClashes) {\n    if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n    switch (expr.type) {\n    case \"ObjectPattern\":\n      for (var i = 0, list = expr.properties; i < list.length; i += 1) {\n        var prop = list[i];\n\n      this.checkLValInnerPattern(prop, bindingType, checkClashes);\n      }\n      break\n\n    case \"ArrayPattern\":\n      for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n        var elem = list$1[i$1];\n\n      if (elem) { this.checkLValInnerPattern(elem, bindingType, checkClashes); }\n      }\n      break\n\n    default:\n      this.checkLValSimple(expr, bindingType, checkClashes);\n    }\n  };\n\n  pp$7.checkLValInnerPattern = function(expr, bindingType, checkClashes) {\n    if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n    switch (expr.type) {\n    case \"Property\":\n      // AssignmentProperty has type === \"Property\"\n      this.checkLValInnerPattern(expr.value, bindingType, checkClashes);\n      break\n\n    case \"AssignmentPattern\":\n      this.checkLValPattern(expr.left, bindingType, checkClashes);\n      break\n\n    case \"RestElement\":\n      this.checkLValPattern(expr.argument, bindingType, checkClashes);\n      break\n\n    default:\n      this.checkLValPattern(expr, bindingType, checkClashes);\n    }\n  };\n\n  // The algorithm used to determine whether a regexp can appear at a\n  // given point in the program is loosely based on sweet.js' approach.\n  // See https://github.com/mozilla/sweet.js/wiki/design\n\n\n  var TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n    this.generator = !!generator;\n  };\n\n  var types = {\n    b_stat: new TokContext(\"{\", false),\n    b_expr: new TokContext(\"{\", true),\n    b_tmpl: new TokContext(\"${\", false),\n    p_stat: new TokContext(\"(\", false),\n    p_expr: new TokContext(\"(\", true),\n    q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n    f_stat: new TokContext(\"function\", false),\n    f_expr: new TokContext(\"function\", true),\n    f_expr_gen: new TokContext(\"function\", true, false, null, true),\n    f_gen: new TokContext(\"function\", false, false, null, true)\n  };\n\n  var pp$6 = Parser.prototype;\n\n  pp$6.initialContext = function() {\n    return [types.b_stat]\n  };\n\n  pp$6.curContext = function() {\n    return this.context[this.context.length - 1]\n  };\n\n  pp$6.braceIsBlock = function(prevType) {\n    var parent = this.curContext();\n    if (parent === types.f_expr || parent === types.f_stat)\n      { return true }\n    if (prevType === types$1.colon && (parent === types.b_stat || parent === types.b_expr))\n      { return !parent.isExpr }\n\n    // The check for `tt.name && exprAllowed` detects whether we are\n    // after a `yield` or `of` construct. See the `updateContext` for\n    // `tt.name`.\n    if (prevType === types$1._return || prevType === types$1.name && this.exprAllowed)\n      { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n    if (prevType === types$1._else || prevType === types$1.semi || prevType === types$1.eof || prevType === types$1.parenR || prevType === types$1.arrow)\n      { return true }\n    if (prevType === types$1.braceL)\n      { return parent === types.b_stat }\n    if (prevType === types$1._var || prevType === types$1._const || prevType === types$1.name)\n      { return false }\n    return !this.exprAllowed\n  };\n\n  pp$6.inGeneratorContext = function() {\n    for (var i = this.context.length - 1; i >= 1; i--) {\n      var context = this.context[i];\n      if (context.token === \"function\")\n        { return context.generator }\n    }\n    return false\n  };\n\n  pp$6.updateContext = function(prevType) {\n    var update, type = this.type;\n    if (type.keyword && prevType === types$1.dot)\n      { this.exprAllowed = false; }\n    else if (update = type.updateContext)\n      { update.call(this, prevType); }\n    else\n      { this.exprAllowed = type.beforeExpr; }\n  };\n\n  // Used to handle edge cases when token context could not be inferred correctly during tokenization phase\n\n  pp$6.overrideContext = function(tokenCtx) {\n    if (this.curContext() !== tokenCtx) {\n      this.context[this.context.length - 1] = tokenCtx;\n    }\n  };\n\n  // Token-specific context update code\n\n  types$1.parenR.updateContext = types$1.braceR.updateContext = function() {\n    if (this.context.length === 1) {\n      this.exprAllowed = true;\n      return\n    }\n    var out = this.context.pop();\n    if (out === types.b_stat && this.curContext().token === \"function\") {\n      out = this.context.pop();\n    }\n    this.exprAllowed = !out.isExpr;\n  };\n\n  types$1.braceL.updateContext = function(prevType) {\n    this.context.push(this.braceIsBlock(prevType) ? types.b_stat : types.b_expr);\n    this.exprAllowed = true;\n  };\n\n  types$1.dollarBraceL.updateContext = function() {\n    this.context.push(types.b_tmpl);\n    this.exprAllowed = true;\n  };\n\n  types$1.parenL.updateContext = function(prevType) {\n    var statementParens = prevType === types$1._if || prevType === types$1._for || prevType === types$1._with || prevType === types$1._while;\n    this.context.push(statementParens ? types.p_stat : types.p_expr);\n    this.exprAllowed = true;\n  };\n\n  types$1.incDec.updateContext = function() {\n    // tokExprAllowed stays unchanged\n  };\n\n  types$1._function.updateContext = types$1._class.updateContext = function(prevType) {\n    if (prevType.beforeExpr && prevType !== types$1._else &&\n        !(prevType === types$1.semi && this.curContext() !== types.p_stat) &&\n        !(prevType === types$1._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) &&\n        !((prevType === types$1.colon || prevType === types$1.braceL) && this.curContext() === types.b_stat))\n      { this.context.push(types.f_expr); }\n    else\n      { this.context.push(types.f_stat); }\n    this.exprAllowed = false;\n  };\n\n  types$1.colon.updateContext = function() {\n    if (this.curContext().token === \"function\") { this.context.pop(); }\n    this.exprAllowed = true;\n  };\n\n  types$1.backQuote.updateContext = function() {\n    if (this.curContext() === types.q_tmpl)\n      { this.context.pop(); }\n    else\n      { this.context.push(types.q_tmpl); }\n    this.exprAllowed = false;\n  };\n\n  types$1.star.updateContext = function(prevType) {\n    if (prevType === types$1._function) {\n      var index = this.context.length - 1;\n      if (this.context[index] === types.f_expr)\n        { this.context[index] = types.f_expr_gen; }\n      else\n        { this.context[index] = types.f_gen; }\n    }\n    this.exprAllowed = true;\n  };\n\n  types$1.name.updateContext = function(prevType) {\n    var allowed = false;\n    if (this.options.ecmaVersion >= 6 && prevType !== types$1.dot) {\n      if (this.value === \"of\" && !this.exprAllowed ||\n          this.value === \"yield\" && this.inGeneratorContext())\n        { allowed = true; }\n    }\n    this.exprAllowed = allowed;\n  };\n\n  // A recursive descent parser operates by defining functions for all\n  // syntactic elements, and recursively calling those, each function\n  // advancing the input stream and returning an AST node. Precedence\n  // of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n  // instead of `(!x)[1]` is handled by the fact that the parser\n  // function that parses unary prefix operators is called first, and\n  // in turn calls the function that parses `[]` subscripts — that\n  // way, it'll receive the node for `x[1]` already parsed, and wraps\n  // *that* in the unary operator node.\n  //\n  // Acorn uses an [operator precedence parser][opp] to handle binary\n  // operator precedence, because it is much more compact than using\n  // the technique outlined above, which uses different, nesting\n  // functions to specify precedence, for all of the ten binary\n  // precedence levels that JavaScript defines.\n  //\n  // [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\n\n  var pp$5 = Parser.prototype;\n\n  // Check if property name clashes with already added.\n  // Object/class getters and setters are not allowed to clash —\n  // either with each other or with an init property — and in\n  // strict mode, init properties are also not allowed to be repeated.\n\n  pp$5.checkPropClash = function(prop, propHash, refDestructuringErrors) {\n    if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\")\n      { return }\n    if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n      { return }\n    var key = prop.key;\n    var name;\n    switch (key.type) {\n    case \"Identifier\": name = key.name; break\n    case \"Literal\": name = String(key.value); break\n    default: return\n    }\n    var kind = prop.kind;\n    if (this.options.ecmaVersion >= 6) {\n      if (name === \"__proto__\" && kind === \"init\") {\n        if (propHash.proto) {\n          if (refDestructuringErrors) {\n            if (refDestructuringErrors.doubleProto < 0) {\n              refDestructuringErrors.doubleProto = key.start;\n            }\n          } else {\n            this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\");\n          }\n        }\n        propHash.proto = true;\n      }\n      return\n    }\n    name = \"$\" + name;\n    var other = propHash[name];\n    if (other) {\n      var redefinition;\n      if (kind === \"init\") {\n        redefinition = this.strict && other.init || other.get || other.set;\n      } else {\n        redefinition = other.init || other[kind];\n      }\n      if (redefinition)\n        { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n    } else {\n      other = propHash[name] = {\n        init: false,\n        get: false,\n        set: false\n      };\n    }\n    other[kind] = true;\n  };\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function(s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  // Parse a full expression. The optional arguments are used to\n  // forbid the `in` operator (in for loops initalization expressions)\n  // and provide reference for storing '=' operator inside shorthand\n  // property assignment in contexts where both object expression\n  // and object pattern might appear (so it's possible to raise\n  // delayed syntax error at correct position).\n\n  pp$5.parseExpression = function(forInit, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseMaybeAssign(forInit, refDestructuringErrors);\n    if (this.type === types$1.comma) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(types$1.comma)) { node.expressions.push(this.parseMaybeAssign(forInit, refDestructuringErrors)); }\n      return this.finishNode(node, \"SequenceExpression\")\n    }\n    return expr\n  };\n\n  // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n\n  pp$5.parseMaybeAssign = function(forInit, refDestructuringErrors, afterLeftParse) {\n    if (this.isContextual(\"yield\")) {\n      if (this.inGenerator) { return this.parseYield(forInit) }\n      // The tokenizer will assume an expression is allowed after\n      // `yield`, but this isn't that kind of yield\n      else { this.exprAllowed = false; }\n    }\n\n    var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1, oldDoubleProto = -1;\n    if (refDestructuringErrors) {\n      oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n      oldTrailingComma = refDestructuringErrors.trailingComma;\n      oldDoubleProto = refDestructuringErrors.doubleProto;\n      refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n    } else {\n      refDestructuringErrors = new DestructuringErrors;\n      ownDestructuringErrors = true;\n    }\n\n    var startPos = this.start, startLoc = this.startLoc;\n    if (this.type === types$1.parenL || this.type === types$1.name) {\n      this.potentialArrowAt = this.start;\n      this.potentialArrowInForAwait = forInit === \"await\";\n    }\n    var left = this.parseMaybeConditional(forInit, refDestructuringErrors);\n    if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n    if (this.type.isAssign) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.value;\n      if (this.type === types$1.eq)\n        { left = this.toAssignable(left, false, refDestructuringErrors); }\n      if (!ownDestructuringErrors) {\n        refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.doubleProto = -1;\n      }\n      if (refDestructuringErrors.shorthandAssign >= left.start)\n        { refDestructuringErrors.shorthandAssign = -1; } // reset because shorthand default was used correctly\n      if (this.type === types$1.eq)\n        { this.checkLValPattern(left); }\n      else\n        { this.checkLValSimple(left); }\n      node.left = left;\n      this.next();\n      node.right = this.parseMaybeAssign(forInit);\n      if (oldDoubleProto > -1) { refDestructuringErrors.doubleProto = oldDoubleProto; }\n      return this.finishNode(node, \"AssignmentExpression\")\n    } else {\n      if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n    }\n    if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n    if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n    return left\n  };\n\n  // Parse a ternary conditional (`?:`) operator.\n\n  pp$5.parseMaybeConditional = function(forInit, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseExprOps(forInit, refDestructuringErrors);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    if (this.eat(types$1.question)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssign();\n      this.expect(types$1.colon);\n      node.alternate = this.parseMaybeAssign(forInit);\n      return this.finishNode(node, \"ConditionalExpression\")\n    }\n    return expr\n  };\n\n  // Start the precedence parser.\n\n  pp$5.parseExprOps = function(forInit, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseMaybeUnary(refDestructuringErrors, false, false, forInit);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, forInit)\n  };\n\n  // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n  pp$5.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, forInit) {\n    var prec = this.type.binop;\n    if (prec != null && (!forInit || this.type !== types$1._in)) {\n      if (prec > minPrec) {\n        var logical = this.type === types$1.logicalOR || this.type === types$1.logicalAND;\n        var coalesce = this.type === types$1.coalesce;\n        if (coalesce) {\n          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n          // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n          prec = types$1.logicalAND.binop;\n        }\n        var op = this.value;\n        this.next();\n        var startPos = this.start, startLoc = this.startLoc;\n        var right = this.parseExprOp(this.parseMaybeUnary(null, false, false, forInit), startPos, startLoc, prec, forInit);\n        var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical || coalesce);\n        if ((logical && this.type === types$1.coalesce) || (coalesce && (this.type === types$1.logicalOR || this.type === types$1.logicalAND))) {\n          this.raiseRecoverable(this.start, \"Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses\");\n        }\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, forInit)\n      }\n    }\n    return left\n  };\n\n  pp$5.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n    if (right.type === \"PrivateIdentifier\") { this.raise(right.start, \"Private identifier can only be left side of binary expression\"); }\n    var node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.operator = op;\n    node.right = right;\n    return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n  };\n\n  // Parse unary operators, both prefix and postfix.\n\n  pp$5.parseMaybeUnary = function(refDestructuringErrors, sawUnary, incDec, forInit) {\n    var startPos = this.start, startLoc = this.startLoc, expr;\n    if (this.isContextual(\"await\") && this.canAwait) {\n      expr = this.parseAwait(forInit);\n      sawUnary = true;\n    } else if (this.type.prefix) {\n      var node = this.startNode(), update = this.type === types$1.incDec;\n      node.operator = this.value;\n      node.prefix = true;\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true, update, forInit);\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      if (update) { this.checkLValSimple(node.argument); }\n      else if (this.strict && node.operator === \"delete\" &&\n               node.argument.type === \"Identifier\")\n        { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n      else if (node.operator === \"delete\" && isPrivateFieldAccess(node.argument))\n        { this.raiseRecoverable(node.start, \"Private fields can not be deleted\"); }\n      else { sawUnary = true; }\n      expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n    } else if (!sawUnary && this.type === types$1.privateId) {\n      if ((forInit || this.privateNameStack.length === 0) && this.options.checkPrivateFields) { this.unexpected(); }\n      expr = this.parsePrivateIdent();\n      // only could be private fields in 'in', such as #x in obj\n      if (this.type !== types$1._in) { this.unexpected(); }\n    } else {\n      expr = this.parseExprSubscripts(refDestructuringErrors, forInit);\n      if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n      while (this.type.postfix && !this.canInsertSemicolon()) {\n        var node$1 = this.startNodeAt(startPos, startLoc);\n        node$1.operator = this.value;\n        node$1.prefix = false;\n        node$1.argument = expr;\n        this.checkLValSimple(expr);\n        this.next();\n        expr = this.finishNode(node$1, \"UpdateExpression\");\n      }\n    }\n\n    if (!incDec && this.eat(types$1.starstar)) {\n      if (sawUnary)\n        { this.unexpected(this.lastTokStart); }\n      else\n        { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false, false, forInit), \"**\", false) }\n    } else {\n      return expr\n    }\n  };\n\n  function isPrivateFieldAccess(node) {\n    return (\n      node.type === \"MemberExpression\" && node.property.type === \"PrivateIdentifier\" ||\n      node.type === \"ChainExpression\" && isPrivateFieldAccess(node.expression)\n    )\n  }\n\n  // Parse call, dot, and `[]`-subscript expressions.\n\n  pp$5.parseExprSubscripts = function(refDestructuringErrors, forInit) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseExprAtom(refDestructuringErrors, forInit);\n    if (expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\")\n      { return expr }\n    var result = this.parseSubscripts(expr, startPos, startLoc, false, forInit);\n    if (refDestructuringErrors && result.type === \"MemberExpression\") {\n      if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n      if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n      if (refDestructuringErrors.trailingComma >= result.start) { refDestructuringErrors.trailingComma = -1; }\n    }\n    return result\n  };\n\n  pp$5.parseSubscripts = function(base, startPos, startLoc, noCalls, forInit) {\n    var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n        this.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 &&\n        this.potentialArrowAt === base.start;\n    var optionalChained = false;\n\n    while (true) {\n      var element = this.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit);\n\n      if (element.optional) { optionalChained = true; }\n      if (element === base || element.type === \"ArrowFunctionExpression\") {\n        if (optionalChained) {\n          var chainNode = this.startNodeAt(startPos, startLoc);\n          chainNode.expression = element;\n          element = this.finishNode(chainNode, \"ChainExpression\");\n        }\n        return element\n      }\n\n      base = element;\n    }\n  };\n\n  pp$5.shouldParseAsyncArrow = function() {\n    return !this.canInsertSemicolon() && this.eat(types$1.arrow)\n  };\n\n  pp$5.parseSubscriptAsyncArrow = function(startPos, startLoc, exprList, forInit) {\n    return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true, forInit)\n  };\n\n  pp$5.parseSubscript = function(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit) {\n    var optionalSupported = this.options.ecmaVersion >= 11;\n    var optional = optionalSupported && this.eat(types$1.questionDot);\n    if (noCalls && optional) { this.raise(this.lastTokStart, \"Optional chaining cannot appear in the callee of new expressions\"); }\n\n    var computed = this.eat(types$1.bracketL);\n    if (computed || (optional && this.type !== types$1.parenL && this.type !== types$1.backQuote) || this.eat(types$1.dot)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.object = base;\n      if (computed) {\n        node.property = this.parseExpression();\n        this.expect(types$1.bracketR);\n      } else if (this.type === types$1.privateId && base.type !== \"Super\") {\n        node.property = this.parsePrivateIdent();\n      } else {\n        node.property = this.parseIdent(this.options.allowReserved !== \"never\");\n      }\n      node.computed = !!computed;\n      if (optionalSupported) {\n        node.optional = optional;\n      }\n      base = this.finishNode(node, \"MemberExpression\");\n    } else if (!noCalls && this.eat(types$1.parenL)) {\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n      this.yieldPos = 0;\n      this.awaitPos = 0;\n      this.awaitIdentPos = 0;\n      var exprList = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);\n      if (maybeAsyncArrow && !optional && this.shouldParseAsyncArrow()) {\n        this.checkPatternErrors(refDestructuringErrors, false);\n        this.checkYieldAwaitInDefaultParams();\n        if (this.awaitIdentPos > 0)\n          { this.raise(this.awaitIdentPos, \"Cannot use 'await' as identifier inside an async function\"); }\n        this.yieldPos = oldYieldPos;\n        this.awaitPos = oldAwaitPos;\n        this.awaitIdentPos = oldAwaitIdentPos;\n        return this.parseSubscriptAsyncArrow(startPos, startLoc, exprList, forInit)\n      }\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      this.yieldPos = oldYieldPos || this.yieldPos;\n      this.awaitPos = oldAwaitPos || this.awaitPos;\n      this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;\n      var node$1 = this.startNodeAt(startPos, startLoc);\n      node$1.callee = base;\n      node$1.arguments = exprList;\n      if (optionalSupported) {\n        node$1.optional = optional;\n      }\n      base = this.finishNode(node$1, \"CallExpression\");\n    } else if (this.type === types$1.backQuote) {\n      if (optional || optionalChained) {\n        this.raise(this.start, \"Optional chaining cannot appear in the tag of tagged template expressions\");\n      }\n      var node$2 = this.startNodeAt(startPos, startLoc);\n      node$2.tag = base;\n      node$2.quasi = this.parseTemplate({isTagged: true});\n      base = this.finishNode(node$2, \"TaggedTemplateExpression\");\n    }\n    return base\n  };\n\n  // Parse an atomic expression — either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n  pp$5.parseExprAtom = function(refDestructuringErrors, forInit, forNew) {\n    // If a division operator appears in an expression position, the\n    // tokenizer got confused, and we force it to read a regexp instead.\n    if (this.type === types$1.slash) { this.readRegexp(); }\n\n    var node, canBeArrow = this.potentialArrowAt === this.start;\n    switch (this.type) {\n    case types$1._super:\n      if (!this.allowSuper)\n        { this.raise(this.start, \"'super' keyword outside a method\"); }\n      node = this.startNode();\n      this.next();\n      if (this.type === types$1.parenL && !this.allowDirectSuper)\n        { this.raise(node.start, \"super() call outside constructor of a subclass\"); }\n      // The `super` keyword can appear at below:\n      // SuperProperty:\n      //     super [ Expression ]\n      //     super . IdentifierName\n      // SuperCall:\n      //     super ( Arguments )\n      if (this.type !== types$1.dot && this.type !== types$1.bracketL && this.type !== types$1.parenL)\n        { this.unexpected(); }\n      return this.finishNode(node, \"Super\")\n\n    case types$1._this:\n      node = this.startNode();\n      this.next();\n      return this.finishNode(node, \"ThisExpression\")\n\n    case types$1.name:\n      var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;\n      var id = this.parseIdent(false);\n      if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types$1._function)) {\n        this.overrideContext(types.f_expr);\n        return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true, forInit)\n      }\n      if (canBeArrow && !this.canInsertSemicolon()) {\n        if (this.eat(types$1.arrow))\n          { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false, forInit) }\n        if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types$1.name && !containsEsc &&\n            (!this.potentialArrowInForAwait || this.value !== \"of\" || this.containsEsc)) {\n          id = this.parseIdent(false);\n          if (this.canInsertSemicolon() || !this.eat(types$1.arrow))\n            { this.unexpected(); }\n          return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true, forInit)\n        }\n      }\n      return id\n\n    case types$1.regexp:\n      var value = this.value;\n      node = this.parseLiteral(value.value);\n      node.regex = {pattern: value.pattern, flags: value.flags};\n      return node\n\n    case types$1.num: case types$1.string:\n      return this.parseLiteral(this.value)\n\n    case types$1._null: case types$1._true: case types$1._false:\n      node = this.startNode();\n      node.value = this.type === types$1._null ? null : this.type === types$1._true;\n      node.raw = this.type.keyword;\n      this.next();\n      return this.finishNode(node, \"Literal\")\n\n    case types$1.parenL:\n      var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow, forInit);\n      if (refDestructuringErrors) {\n        if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n          { refDestructuringErrors.parenthesizedAssign = start; }\n        if (refDestructuringErrors.parenthesizedBind < 0)\n          { refDestructuringErrors.parenthesizedBind = start; }\n      }\n      return expr\n\n    case types$1.bracketL:\n      node = this.startNode();\n      this.next();\n      node.elements = this.parseExprList(types$1.bracketR, true, true, refDestructuringErrors);\n      return this.finishNode(node, \"ArrayExpression\")\n\n    case types$1.braceL:\n      this.overrideContext(types.b_expr);\n      return this.parseObj(false, refDestructuringErrors)\n\n    case types$1._function:\n      node = this.startNode();\n      this.next();\n      return this.parseFunction(node, 0)\n\n    case types$1._class:\n      return this.parseClass(this.startNode(), false)\n\n    case types$1._new:\n      return this.parseNew()\n\n    case types$1.backQuote:\n      return this.parseTemplate()\n\n    case types$1._import:\n      if (this.options.ecmaVersion >= 11) {\n        return this.parseExprImport(forNew)\n      } else {\n        return this.unexpected()\n      }\n\n    default:\n      return this.parseExprAtomDefault()\n    }\n  };\n\n  pp$5.parseExprAtomDefault = function() {\n    this.unexpected();\n  };\n\n  pp$5.parseExprImport = function(forNew) {\n    var node = this.startNode();\n\n    // Consume `import` as an identifier for `import.meta`.\n    // Because `this.parseIdent(true)` doesn't check escape sequences, it needs the check of `this.containsEsc`.\n    if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword import\"); }\n    this.next();\n\n    if (this.type === types$1.parenL && !forNew) {\n      return this.parseDynamicImport(node)\n    } else if (this.type === types$1.dot) {\n      var meta = this.startNodeAt(node.start, node.loc && node.loc.start);\n      meta.name = \"import\";\n      node.meta = this.finishNode(meta, \"Identifier\");\n      return this.parseImportMeta(node)\n    } else {\n      this.unexpected();\n    }\n  };\n\n  pp$5.parseDynamicImport = function(node) {\n    this.next(); // skip `(`\n\n    // Parse node.source.\n    node.source = this.parseMaybeAssign();\n\n    // Verify ending.\n    if (!this.eat(types$1.parenR)) {\n      var errorPos = this.start;\n      if (this.eat(types$1.comma) && this.eat(types$1.parenR)) {\n        this.raiseRecoverable(errorPos, \"Trailing comma is not allowed in import()\");\n      } else {\n        this.unexpected(errorPos);\n      }\n    }\n\n    return this.finishNode(node, \"ImportExpression\")\n  };\n\n  pp$5.parseImportMeta = function(node) {\n    this.next(); // skip `.`\n\n    var containsEsc = this.containsEsc;\n    node.property = this.parseIdent(true);\n\n    if (node.property.name !== \"meta\")\n      { this.raiseRecoverable(node.property.start, \"The only valid meta property for import is 'import.meta'\"); }\n    if (containsEsc)\n      { this.raiseRecoverable(node.start, \"'import.meta' must not contain escaped characters\"); }\n    if (this.options.sourceType !== \"module\" && !this.options.allowImportExportEverywhere)\n      { this.raiseRecoverable(node.start, \"Cannot use 'import.meta' outside a module\"); }\n\n    return this.finishNode(node, \"MetaProperty\")\n  };\n\n  pp$5.parseLiteral = function(value) {\n    var node = this.startNode();\n    node.value = value;\n    node.raw = this.input.slice(this.start, this.end);\n    if (node.raw.charCodeAt(node.raw.length - 1) === 110) { node.bigint = node.raw.slice(0, -1).replace(/_/g, \"\"); }\n    this.next();\n    return this.finishNode(node, \"Literal\")\n  };\n\n  pp$5.parseParenExpression = function() {\n    this.expect(types$1.parenL);\n    var val = this.parseExpression();\n    this.expect(types$1.parenR);\n    return val\n  };\n\n  pp$5.shouldParseArrow = function(exprList) {\n    return !this.canInsertSemicolon()\n  };\n\n  pp$5.parseParenAndDistinguishExpression = function(canBeArrow, forInit) {\n    var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n    if (this.options.ecmaVersion >= 6) {\n      this.next();\n\n      var innerStartPos = this.start, innerStartLoc = this.startLoc;\n      var exprList = [], first = true, lastIsComma = false;\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;\n      this.yieldPos = 0;\n      this.awaitPos = 0;\n      // Do not save awaitIdentPos to allow checking awaits nested in parameters\n      while (this.type !== types$1.parenR) {\n        first ? first = false : this.expect(types$1.comma);\n        if (allowTrailingComma && this.afterTrailingComma(types$1.parenR, true)) {\n          lastIsComma = true;\n          break\n        } else if (this.type === types$1.ellipsis) {\n          spreadStart = this.start;\n          exprList.push(this.parseParenItem(this.parseRestBinding()));\n          if (this.type === types$1.comma) {\n            this.raiseRecoverable(\n              this.start,\n              \"Comma is not permitted after the rest element\"\n            );\n          }\n          break\n        } else {\n          exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));\n        }\n      }\n      var innerEndPos = this.lastTokEnd, innerEndLoc = this.lastTokEndLoc;\n      this.expect(types$1.parenR);\n\n      if (canBeArrow && this.shouldParseArrow(exprList) && this.eat(types$1.arrow)) {\n        this.checkPatternErrors(refDestructuringErrors, false);\n        this.checkYieldAwaitInDefaultParams();\n        this.yieldPos = oldYieldPos;\n        this.awaitPos = oldAwaitPos;\n        return this.parseParenArrowList(startPos, startLoc, exprList, forInit)\n      }\n\n      if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n      if (spreadStart) { this.unexpected(spreadStart); }\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      this.yieldPos = oldYieldPos || this.yieldPos;\n      this.awaitPos = oldAwaitPos || this.awaitPos;\n\n      if (exprList.length > 1) {\n        val = this.startNodeAt(innerStartPos, innerStartLoc);\n        val.expressions = exprList;\n        this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n      } else {\n        val = exprList[0];\n      }\n    } else {\n      val = this.parseParenExpression();\n    }\n\n    if (this.options.preserveParens) {\n      var par = this.startNodeAt(startPos, startLoc);\n      par.expression = val;\n      return this.finishNode(par, \"ParenthesizedExpression\")\n    } else {\n      return val\n    }\n  };\n\n  pp$5.parseParenItem = function(item) {\n    return item\n  };\n\n  pp$5.parseParenArrowList = function(startPos, startLoc, exprList, forInit) {\n    return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, false, forInit)\n  };\n\n  // New's precedence is slightly tricky. It must allow its argument to\n  // be a `[]` or dot subscript expression, but not a call — at least,\n  // not without wrapping it in parentheses. Thus, it uses the noCalls\n  // argument to parseSubscripts to prevent it from consuming the\n  // argument list.\n\n  var empty = [];\n\n  pp$5.parseNew = function() {\n    if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword new\"); }\n    var node = this.startNode();\n    this.next();\n    if (this.options.ecmaVersion >= 6 && this.type === types$1.dot) {\n      var meta = this.startNodeAt(node.start, node.loc && node.loc.start);\n      meta.name = \"new\";\n      node.meta = this.finishNode(meta, \"Identifier\");\n      this.next();\n      var containsEsc = this.containsEsc;\n      node.property = this.parseIdent(true);\n      if (node.property.name !== \"target\")\n        { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is 'new.target'\"); }\n      if (containsEsc)\n        { this.raiseRecoverable(node.start, \"'new.target' must not contain escaped characters\"); }\n      if (!this.allowNewDotTarget)\n        { this.raiseRecoverable(node.start, \"'new.target' can only be used in functions and class static block\"); }\n      return this.finishNode(node, \"MetaProperty\")\n    }\n    var startPos = this.start, startLoc = this.startLoc;\n    node.callee = this.parseSubscripts(this.parseExprAtom(null, false, true), startPos, startLoc, true, false);\n    if (this.eat(types$1.parenL)) { node.arguments = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false); }\n    else { node.arguments = empty; }\n    return this.finishNode(node, \"NewExpression\")\n  };\n\n  // Parse template expression.\n\n  pp$5.parseTemplateElement = function(ref) {\n    var isTagged = ref.isTagged;\n\n    var elem = this.startNode();\n    if (this.type === types$1.invalidTemplate) {\n      if (!isTagged) {\n        this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n      }\n      elem.value = {\n        raw: this.value,\n        cooked: null\n      };\n    } else {\n      elem.value = {\n        raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n        cooked: this.value\n      };\n    }\n    this.next();\n    elem.tail = this.type === types$1.backQuote;\n    return this.finishNode(elem, \"TemplateElement\")\n  };\n\n  pp$5.parseTemplate = function(ref) {\n    if ( ref === void 0 ) ref = {};\n    var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n    var node = this.startNode();\n    this.next();\n    node.expressions = [];\n    var curElt = this.parseTemplateElement({isTagged: isTagged});\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      if (this.type === types$1.eof) { this.raise(this.pos, \"Unterminated template literal\"); }\n      this.expect(types$1.dollarBraceL);\n      node.expressions.push(this.parseExpression());\n      this.expect(types$1.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement({isTagged: isTagged}));\n    }\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\")\n  };\n\n  pp$5.isAsyncProp = function(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n      (this.type === types$1.name || this.type === types$1.num || this.type === types$1.string || this.type === types$1.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types$1.star)) &&\n      !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  };\n\n  // Parse an object literal or binding pattern.\n\n  pp$5.parseObj = function(isPattern, refDestructuringErrors) {\n    var node = this.startNode(), first = true, propHash = {};\n    node.properties = [];\n    this.next();\n    while (!this.eat(types$1.braceR)) {\n      if (!first) {\n        this.expect(types$1.comma);\n        if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types$1.braceR)) { break }\n      } else { first = false; }\n\n      var prop = this.parseProperty(isPattern, refDestructuringErrors);\n      if (!isPattern) { this.checkPropClash(prop, propHash, refDestructuringErrors); }\n      node.properties.push(prop);\n    }\n    return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n  };\n\n  pp$5.parseProperty = function(isPattern, refDestructuringErrors) {\n    var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n    if (this.options.ecmaVersion >= 9 && this.eat(types$1.ellipsis)) {\n      if (isPattern) {\n        prop.argument = this.parseIdent(false);\n        if (this.type === types$1.comma) {\n          this.raiseRecoverable(this.start, \"Comma is not permitted after the rest element\");\n        }\n        return this.finishNode(prop, \"RestElement\")\n      }\n      // Parse argument.\n      prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n      // To disallow trailing comma via `this.toAssignable()`.\n      if (this.type === types$1.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n        refDestructuringErrors.trailingComma = this.start;\n      }\n      // Finish\n      return this.finishNode(prop, \"SpreadElement\")\n    }\n    if (this.options.ecmaVersion >= 6) {\n      prop.method = false;\n      prop.shorthand = false;\n      if (isPattern || refDestructuringErrors) {\n        startPos = this.start;\n        startLoc = this.startLoc;\n      }\n      if (!isPattern)\n        { isGenerator = this.eat(types$1.star); }\n    }\n    var containsEsc = this.containsEsc;\n    this.parsePropertyName(prop);\n    if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n      isAsync = true;\n      isGenerator = this.options.ecmaVersion >= 9 && this.eat(types$1.star);\n      this.parsePropertyName(prop);\n    } else {\n      isAsync = false;\n    }\n    this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n    return this.finishNode(prop, \"Property\")\n  };\n\n  pp$5.parseGetterSetter = function(prop) {\n    prop.kind = prop.key.name;\n    this.parsePropertyName(prop);\n    prop.value = this.parseMethod(false);\n    var paramCount = prop.kind === \"get\" ? 0 : 1;\n    if (prop.value.params.length !== paramCount) {\n      var start = prop.value.start;\n      if (prop.kind === \"get\")\n        { this.raiseRecoverable(start, \"getter should have no params\"); }\n      else\n        { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n    } else {\n      if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n        { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n    }\n  };\n\n  pp$5.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n    if ((isGenerator || isAsync) && this.type === types$1.colon)\n      { this.unexpected(); }\n\n    if (this.eat(types$1.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n      prop.kind = \"init\";\n    } else if (this.options.ecmaVersion >= 6 && this.type === types$1.parenL) {\n      if (isPattern) { this.unexpected(); }\n      prop.kind = \"init\";\n      prop.method = true;\n      prop.value = this.parseMethod(isGenerator, isAsync);\n    } else if (!isPattern && !containsEsc &&\n               this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n               (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n               (this.type !== types$1.comma && this.type !== types$1.braceR && this.type !== types$1.eq)) {\n      if (isGenerator || isAsync) { this.unexpected(); }\n      this.parseGetterSetter(prop);\n    } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n      if (isGenerator || isAsync) { this.unexpected(); }\n      this.checkUnreserved(prop.key);\n      if (prop.key.name === \"await\" && !this.awaitIdentPos)\n        { this.awaitIdentPos = startPos; }\n      prop.kind = \"init\";\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));\n      } else if (this.type === types$1.eq && refDestructuringErrors) {\n        if (refDestructuringErrors.shorthandAssign < 0)\n          { refDestructuringErrors.shorthandAssign = this.start; }\n        prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));\n      } else {\n        prop.value = this.copyNode(prop.key);\n      }\n      prop.shorthand = true;\n    } else { this.unexpected(); }\n  };\n\n  pp$5.parsePropertyName = function(prop) {\n    if (this.options.ecmaVersion >= 6) {\n      if (this.eat(types$1.bracketL)) {\n        prop.computed = true;\n        prop.key = this.parseMaybeAssign();\n        this.expect(types$1.bracketR);\n        return prop.key\n      } else {\n        prop.computed = false;\n      }\n    }\n    return prop.key = this.type === types$1.num || this.type === types$1.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== \"never\")\n  };\n\n  // Initialize empty function node.\n\n  pp$5.initFunction = function(node) {\n    node.id = null;\n    if (this.options.ecmaVersion >= 6) { node.generator = node.expression = false; }\n    if (this.options.ecmaVersion >= 8) { node.async = false; }\n  };\n\n  // Parse object or class method.\n\n  pp$5.parseMethod = function(isGenerator, isAsync, allowDirectSuper) {\n    var node = this.startNode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 6)\n      { node.generator = isGenerator; }\n    if (this.options.ecmaVersion >= 8)\n      { node.async = !!isAsync; }\n\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n\n    this.expect(types$1.parenL);\n    node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);\n    this.checkYieldAwaitInDefaultParams();\n    this.parseFunctionBody(node, false, true, false);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, \"FunctionExpression\")\n  };\n\n  // Parse arrow function expression with given parameters.\n\n  pp$5.parseArrowExpression = function(node, params, isAsync, forInit) {\n    var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n    this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 8) { node.async = !!isAsync; }\n\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n\n    node.params = this.toAssignableList(params, true);\n    this.parseFunctionBody(node, true, false, forInit);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, \"ArrowFunctionExpression\")\n  };\n\n  // Parse function body and check parameters.\n\n  pp$5.parseFunctionBody = function(node, isArrowFunction, isMethod, forInit) {\n    var isExpression = isArrowFunction && this.type !== types$1.braceL;\n    var oldStrict = this.strict, useStrict = false;\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign(forInit);\n      node.expression = true;\n      this.checkParams(node, false);\n    } else {\n      var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n      if (!oldStrict || nonSimple) {\n        useStrict = this.strictDirective(this.end);\n        // If this is a strict mode function, verify that argument names\n        // are not repeated, and it does not try to bind the words `eval`\n        // or `arguments`.\n        if (useStrict && nonSimple)\n          { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n      }\n      // Start a new scope with regard to labels and the `inFunction`\n      // flag (restore them to their old value afterwards).\n      var oldLabels = this.labels;\n      this.labels = [];\n      if (useStrict) { this.strict = true; }\n\n      // Add the params to varDeclaredNames to ensure that an error is thrown\n      // if a let/const declaration in the function clashes with one of the params.\n      this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));\n      // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n      if (this.strict && node.id) { this.checkLValSimple(node.id, BIND_OUTSIDE); }\n      node.body = this.parseBlock(false, undefined, useStrict && !oldStrict);\n      node.expression = false;\n      this.adaptDirectivePrologue(node.body.body);\n      this.labels = oldLabels;\n    }\n    this.exitScope();\n  };\n\n  pp$5.isSimpleParamList = function(params) {\n    for (var i = 0, list = params; i < list.length; i += 1)\n      {\n      var param = list[i];\n\n      if (param.type !== \"Identifier\") { return false\n    } }\n    return true\n  };\n\n  // Checks function params for various disallowed patterns such as using \"eval\"\n  // or \"arguments\" and duplicate parameters.\n\n  pp$5.checkParams = function(node, allowDuplicates) {\n    var nameHash = Object.create(null);\n    for (var i = 0, list = node.params; i < list.length; i += 1)\n      {\n      var param = list[i];\n\n      this.checkLValInnerPattern(param, BIND_VAR, allowDuplicates ? null : nameHash);\n    }\n  };\n\n  // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n  pp$5.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n    var elts = [], first = true;\n    while (!this.eat(close)) {\n      if (!first) {\n        this.expect(types$1.comma);\n        if (allowTrailingComma && this.afterTrailingComma(close)) { break }\n      } else { first = false; }\n\n      var elt = (void 0);\n      if (allowEmpty && this.type === types$1.comma)\n        { elt = null; }\n      else if (this.type === types$1.ellipsis) {\n        elt = this.parseSpread(refDestructuringErrors);\n        if (refDestructuringErrors && this.type === types$1.comma && refDestructuringErrors.trailingComma < 0)\n          { refDestructuringErrors.trailingComma = this.start; }\n      } else {\n        elt = this.parseMaybeAssign(false, refDestructuringErrors);\n      }\n      elts.push(elt);\n    }\n    return elts\n  };\n\n  pp$5.checkUnreserved = function(ref) {\n    var start = ref.start;\n    var end = ref.end;\n    var name = ref.name;\n\n    if (this.inGenerator && name === \"yield\")\n      { this.raiseRecoverable(start, \"Cannot use 'yield' as identifier inside a generator\"); }\n    if (this.inAsync && name === \"await\")\n      { this.raiseRecoverable(start, \"Cannot use 'await' as identifier inside an async function\"); }\n    if (this.currentThisScope().inClassFieldInit && name === \"arguments\")\n      { this.raiseRecoverable(start, \"Cannot use 'arguments' in class field initializer\"); }\n    if (this.inClassStaticBlock && (name === \"arguments\" || name === \"await\"))\n      { this.raise(start, (\"Cannot use \" + name + \" in class static initialization block\")); }\n    if (this.keywords.test(name))\n      { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n    if (this.options.ecmaVersion < 6 &&\n      this.input.slice(start, end).indexOf(\"\\\\\") !== -1) { return }\n    var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n    if (re.test(name)) {\n      if (!this.inAsync && name === \"await\")\n        { this.raiseRecoverable(start, \"Cannot use keyword 'await' outside an async function\"); }\n      this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\"));\n    }\n  };\n\n  // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n\n  pp$5.parseIdent = function(liberal) {\n    var node = this.parseIdentNode();\n    this.next(!!liberal);\n    this.finishNode(node, \"Identifier\");\n    if (!liberal) {\n      this.checkUnreserved(node);\n      if (node.name === \"await\" && !this.awaitIdentPos)\n        { this.awaitIdentPos = node.start; }\n    }\n    return node\n  };\n\n  pp$5.parseIdentNode = function() {\n    var node = this.startNode();\n    if (this.type === types$1.name) {\n      node.name = this.value;\n    } else if (this.type.keyword) {\n      node.name = this.type.keyword;\n\n      // To fix https://github.com/acornjs/acorn/issues/575\n      // `class` and `function` keywords push new context into this.context.\n      // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.\n      // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword\n      if ((node.name === \"class\" || node.name === \"function\") &&\n        (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n        this.context.pop();\n      }\n      this.type = types$1.name;\n    } else {\n      this.unexpected();\n    }\n    return node\n  };\n\n  pp$5.parsePrivateIdent = function() {\n    var node = this.startNode();\n    if (this.type === types$1.privateId) {\n      node.name = this.value;\n    } else {\n      this.unexpected();\n    }\n    this.next();\n    this.finishNode(node, \"PrivateIdentifier\");\n\n    // For validating existence\n    if (this.options.checkPrivateFields) {\n      if (this.privateNameStack.length === 0) {\n        this.raise(node.start, (\"Private field '#\" + (node.name) + \"' must be declared in an enclosing class\"));\n      } else {\n        this.privateNameStack[this.privateNameStack.length - 1].used.push(node);\n      }\n    }\n\n    return node\n  };\n\n  // Parses yield expression inside generator.\n\n  pp$5.parseYield = function(forInit) {\n    if (!this.yieldPos) { this.yieldPos = this.start; }\n\n    var node = this.startNode();\n    this.next();\n    if (this.type === types$1.semi || this.canInsertSemicolon() || (this.type !== types$1.star && !this.type.startsExpr)) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types$1.star);\n      node.argument = this.parseMaybeAssign(forInit);\n    }\n    return this.finishNode(node, \"YieldExpression\")\n  };\n\n  pp$5.parseAwait = function(forInit) {\n    if (!this.awaitPos) { this.awaitPos = this.start; }\n\n    var node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeUnary(null, true, false, forInit);\n    return this.finishNode(node, \"AwaitExpression\")\n  };\n\n  var pp$4 = Parser.prototype;\n\n  // This function is used to raise exceptions on parse errors. It\n  // takes an offset integer (into the current `input`) to indicate\n  // the location of the error, attaches the position to the end\n  // of the error message, and then raises a `SyntaxError` with that\n  // message.\n\n  pp$4.raise = function(pos, message) {\n    var loc = getLineInfo(this.input, pos);\n    message += \" (\" + loc.line + \":\" + loc.column + \")\";\n    var err = new SyntaxError(message);\n    err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n    throw err\n  };\n\n  pp$4.raiseRecoverable = pp$4.raise;\n\n  pp$4.curPosition = function() {\n    if (this.options.locations) {\n      return new Position(this.curLine, this.pos - this.lineStart)\n    }\n  };\n\n  var pp$3 = Parser.prototype;\n\n  var Scope = function Scope(flags) {\n    this.flags = flags;\n    // A list of var-declared names in the current lexical scope\n    this.var = [];\n    // A list of lexically-declared names in the current lexical scope\n    this.lexical = [];\n    // A list of lexically-declared FunctionDeclaration names in the current lexical scope\n    this.functions = [];\n    // A switch to disallow the identifier reference 'arguments'\n    this.inClassFieldInit = false;\n  };\n\n  // The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\n\n  pp$3.enterScope = function(flags) {\n    this.scopeStack.push(new Scope(flags));\n  };\n\n  pp$3.exitScope = function() {\n    this.scopeStack.pop();\n  };\n\n  // The spec says:\n  // > At the top level of a function, or script, function declarations are\n  // > treated like var declarations rather than like lexical declarations.\n  pp$3.treatFunctionsAsVarInScope = function(scope) {\n    return (scope.flags & SCOPE_FUNCTION) || !this.inModule && (scope.flags & SCOPE_TOP)\n  };\n\n  pp$3.declareName = function(name, bindingType, pos) {\n    var redeclared = false;\n    if (bindingType === BIND_LEXICAL) {\n      var scope = this.currentScope();\n      redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n      scope.lexical.push(name);\n      if (this.inModule && (scope.flags & SCOPE_TOP))\n        { delete this.undefinedExports[name]; }\n    } else if (bindingType === BIND_SIMPLE_CATCH) {\n      var scope$1 = this.currentScope();\n      scope$1.lexical.push(name);\n    } else if (bindingType === BIND_FUNCTION) {\n      var scope$2 = this.currentScope();\n      if (this.treatFunctionsAsVar)\n        { redeclared = scope$2.lexical.indexOf(name) > -1; }\n      else\n        { redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1; }\n      scope$2.functions.push(name);\n    } else {\n      for (var i = this.scopeStack.length - 1; i >= 0; --i) {\n        var scope$3 = this.scopeStack[i];\n        if (scope$3.lexical.indexOf(name) > -1 && !((scope$3.flags & SCOPE_SIMPLE_CATCH) && scope$3.lexical[0] === name) ||\n            !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {\n          redeclared = true;\n          break\n        }\n        scope$3.var.push(name);\n        if (this.inModule && (scope$3.flags & SCOPE_TOP))\n          { delete this.undefinedExports[name]; }\n        if (scope$3.flags & SCOPE_VAR) { break }\n      }\n    }\n    if (redeclared) { this.raiseRecoverable(pos, (\"Identifier '\" + name + \"' has already been declared\")); }\n  };\n\n  pp$3.checkLocalExport = function(id) {\n    // scope.functions must be empty as Module code is always strict.\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n        this.scopeStack[0].var.indexOf(id.name) === -1) {\n      this.undefinedExports[id.name] = id;\n    }\n  };\n\n  pp$3.currentScope = function() {\n    return this.scopeStack[this.scopeStack.length - 1]\n  };\n\n  pp$3.currentVarScope = function() {\n    for (var i = this.scopeStack.length - 1;; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR) { return scope }\n    }\n  };\n\n  // Could be useful for `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n  pp$3.currentThisScope = function() {\n    for (var i = this.scopeStack.length - 1;; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR && !(scope.flags & SCOPE_ARROW)) { return scope }\n    }\n  };\n\n  var Node = function Node(parser, pos, loc) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    if (parser.options.locations)\n      { this.loc = new SourceLocation(parser, loc); }\n    if (parser.options.directSourceFile)\n      { this.sourceFile = parser.options.directSourceFile; }\n    if (parser.options.ranges)\n      { this.range = [pos, 0]; }\n  };\n\n  // Start an AST node, attaching a start offset.\n\n  var pp$2 = Parser.prototype;\n\n  pp$2.startNode = function() {\n    return new Node(this, this.start, this.startLoc)\n  };\n\n  pp$2.startNodeAt = function(pos, loc) {\n    return new Node(this, pos, loc)\n  };\n\n  // Finish an AST node, adding `type` and `end` properties.\n\n  function finishNodeAt(node, type, pos, loc) {\n    node.type = type;\n    node.end = pos;\n    if (this.options.locations)\n      { node.loc.end = loc; }\n    if (this.options.ranges)\n      { node.range[1] = pos; }\n    return node\n  }\n\n  pp$2.finishNode = function(node, type) {\n    return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n  };\n\n  // Finish node at given position\n\n  pp$2.finishNodeAt = function(node, type, pos, loc) {\n    return finishNodeAt.call(this, node, type, pos, loc)\n  };\n\n  pp$2.copyNode = function(node) {\n    var newNode = new Node(this, node.start, this.startLoc);\n    for (var prop in node) { newNode[prop] = node[prop]; }\n    return newNode\n  };\n\n  // This file contains Unicode properties extracted from the ECMAScript specification.\n  // The lists are extracted like so:\n  // $$('#table-binary-unicode-properties > figure > table > tbody > tr > td:nth-child(1) code').map(el => el.innerText)\n\n  // #table-binary-unicode-properties\n  var ecma9BinaryProperties = \"ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS\";\n  var ecma10BinaryProperties = ecma9BinaryProperties + \" Extended_Pictographic\";\n  var ecma11BinaryProperties = ecma10BinaryProperties;\n  var ecma12BinaryProperties = ecma11BinaryProperties + \" EBase EComp EMod EPres ExtPict\";\n  var ecma13BinaryProperties = ecma12BinaryProperties;\n  var ecma14BinaryProperties = ecma13BinaryProperties;\n\n  var unicodeBinaryProperties = {\n    9: ecma9BinaryProperties,\n    10: ecma10BinaryProperties,\n    11: ecma11BinaryProperties,\n    12: ecma12BinaryProperties,\n    13: ecma13BinaryProperties,\n    14: ecma14BinaryProperties\n  };\n\n  // #table-binary-unicode-properties-of-strings\n  var ecma14BinaryPropertiesOfStrings = \"Basic_Emoji Emoji_Keycap_Sequence RGI_Emoji_Modifier_Sequence RGI_Emoji_Flag_Sequence RGI_Emoji_Tag_Sequence RGI_Emoji_ZWJ_Sequence RGI_Emoji\";\n\n  var unicodeBinaryPropertiesOfStrings = {\n    9: \"\",\n    10: \"\",\n    11: \"\",\n    12: \"\",\n    13: \"\",\n    14: ecma14BinaryPropertiesOfStrings\n  };\n\n  // #table-unicode-general-category-values\n  var unicodeGeneralCategoryValues = \"Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu\";\n\n  // #table-unicode-script-values\n  var ecma9ScriptValues = \"Adlam Adlm Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb\";\n  var ecma10ScriptValues = ecma9ScriptValues + \" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd\";\n  var ecma11ScriptValues = ecma10ScriptValues + \" Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho\";\n  var ecma12ScriptValues = ecma11ScriptValues + \" Chorasmian Chrs Diak Dives_Akuru Khitan_Small_Script Kits Yezi Yezidi\";\n  var ecma13ScriptValues = ecma12ScriptValues + \" Cypro_Minoan Cpmn Old_Uyghur Ougr Tangsa Tnsa Toto Vithkuqi Vith\";\n  var ecma14ScriptValues = ecma13ScriptValues + \" Hrkt Katakana_Or_Hiragana Kawi Nag_Mundari Nagm Unknown Zzzz\";\n\n  var unicodeScriptValues = {\n    9: ecma9ScriptValues,\n    10: ecma10ScriptValues,\n    11: ecma11ScriptValues,\n    12: ecma12ScriptValues,\n    13: ecma13ScriptValues,\n    14: ecma14ScriptValues\n  };\n\n  var data = {};\n  function buildUnicodeData(ecmaVersion) {\n    var d = data[ecmaVersion] = {\n      binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + \" \" + unicodeGeneralCategoryValues),\n      binaryOfStrings: wordsRegexp(unicodeBinaryPropertiesOfStrings[ecmaVersion]),\n      nonBinary: {\n        General_Category: wordsRegexp(unicodeGeneralCategoryValues),\n        Script: wordsRegexp(unicodeScriptValues[ecmaVersion])\n      }\n    };\n    d.nonBinary.Script_Extensions = d.nonBinary.Script;\n\n    d.nonBinary.gc = d.nonBinary.General_Category;\n    d.nonBinary.sc = d.nonBinary.Script;\n    d.nonBinary.scx = d.nonBinary.Script_Extensions;\n  }\n\n  for (var i = 0, list = [9, 10, 11, 12, 13, 14]; i < list.length; i += 1) {\n    var ecmaVersion = list[i];\n\n    buildUnicodeData(ecmaVersion);\n  }\n\n  var pp$1 = Parser.prototype;\n\n  var RegExpValidationState = function RegExpValidationState(parser) {\n    this.parser = parser;\n    this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\") + (parser.options.ecmaVersion >= 13 ? \"d\" : \"\") + (parser.options.ecmaVersion >= 15 ? \"v\" : \"\");\n    this.unicodeProperties = data[parser.options.ecmaVersion >= 14 ? 14 : parser.options.ecmaVersion];\n    this.source = \"\";\n    this.flags = \"\";\n    this.start = 0;\n    this.switchU = false;\n    this.switchV = false;\n    this.switchN = false;\n    this.pos = 0;\n    this.lastIntValue = 0;\n    this.lastStringValue = \"\";\n    this.lastAssertionIsQuantifiable = false;\n    this.numCapturingParens = 0;\n    this.maxBackReference = 0;\n    this.groupNames = [];\n    this.backReferenceNames = [];\n  };\n\n  RegExpValidationState.prototype.reset = function reset (start, pattern, flags) {\n    var unicodeSets = flags.indexOf(\"v\") !== -1;\n    var unicode = flags.indexOf(\"u\") !== -1;\n    this.start = start | 0;\n    this.source = pattern + \"\";\n    this.flags = flags;\n    if (unicodeSets && this.parser.options.ecmaVersion >= 15) {\n      this.switchU = true;\n      this.switchV = true;\n      this.switchN = true;\n    } else {\n      this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n      this.switchV = false;\n      this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n    }\n  };\n\n  RegExpValidationState.prototype.raise = function raise (message) {\n    this.parser.raiseRecoverable(this.start, (\"Invalid regular expression: /\" + (this.source) + \"/: \" + message));\n  };\n\n  // If u flag is given, this returns the code point at the index (it combines a surrogate pair).\n  // Otherwise, this returns the code unit of the index (can be a part of a surrogate pair).\n  RegExpValidationState.prototype.at = function at (i, forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    var s = this.source;\n    var l = s.length;\n    if (i >= l) {\n      return -1\n    }\n    var c = s.charCodeAt(i);\n    if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n      return c\n    }\n    var next = s.charCodeAt(i + 1);\n    return next >= 0xDC00 && next <= 0xDFFF ? (c << 10) + next - 0x35FDC00 : c\n  };\n\n  RegExpValidationState.prototype.nextIndex = function nextIndex (i, forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    var s = this.source;\n    var l = s.length;\n    if (i >= l) {\n      return l\n    }\n    var c = s.charCodeAt(i), next;\n    if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l ||\n        (next = s.charCodeAt(i + 1)) < 0xDC00 || next > 0xDFFF) {\n      return i + 1\n    }\n    return i + 2\n  };\n\n  RegExpValidationState.prototype.current = function current (forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    return this.at(this.pos, forceU)\n  };\n\n  RegExpValidationState.prototype.lookahead = function lookahead (forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    return this.at(this.nextIndex(this.pos, forceU), forceU)\n  };\n\n  RegExpValidationState.prototype.advance = function advance (forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    this.pos = this.nextIndex(this.pos, forceU);\n  };\n\n  RegExpValidationState.prototype.eat = function eat (ch, forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    if (this.current(forceU) === ch) {\n      this.advance(forceU);\n      return true\n    }\n    return false\n  };\n\n  RegExpValidationState.prototype.eatChars = function eatChars (chs, forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    var pos = this.pos;\n    for (var i = 0, list = chs; i < list.length; i += 1) {\n      var ch = list[i];\n\n        var current = this.at(pos, forceU);\n      if (current === -1 || current !== ch) {\n        return false\n      }\n      pos = this.nextIndex(pos, forceU);\n    }\n    this.pos = pos;\n    return true\n  };\n\n  /**\n   * Validate the flags part of a given RegExpLiteral.\n   *\n   * @param {RegExpValidationState} state The state to validate RegExp.\n   * @returns {void}\n   */\n  pp$1.validateRegExpFlags = function(state) {\n    var validFlags = state.validFlags;\n    var flags = state.flags;\n\n    var u = false;\n    var v = false;\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags.charAt(i);\n      if (validFlags.indexOf(flag) === -1) {\n        this.raise(state.start, \"Invalid regular expression flag\");\n      }\n      if (flags.indexOf(flag, i + 1) > -1) {\n        this.raise(state.start, \"Duplicate regular expression flag\");\n      }\n      if (flag === \"u\") { u = true; }\n      if (flag === \"v\") { v = true; }\n    }\n    if (this.options.ecmaVersion >= 15 && u && v) {\n      this.raise(state.start, \"Invalid regular expression flag\");\n    }\n  };\n\n  /**\n   * Validate the pattern part of a given RegExpLiteral.\n   *\n   * @param {RegExpValidationState} state The state to validate RegExp.\n   * @returns {void}\n   */\n  pp$1.validateRegExpPattern = function(state) {\n    this.regexp_pattern(state);\n\n    // The goal symbol for the parse is |Pattern[~U, ~N]|. If the result of\n    // parsing contains a |GroupName|, reparse with the goal symbol\n    // |Pattern[~U, +N]| and use this result instead. Throw a *SyntaxError*\n    // exception if _P_ did not conform to the grammar, if any elements of _P_\n    // were not matched by the parse, or if any Early Error conditions exist.\n    if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\n      state.switchN = true;\n      this.regexp_pattern(state);\n    }\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern\n  pp$1.regexp_pattern = function(state) {\n    state.pos = 0;\n    state.lastIntValue = 0;\n    state.lastStringValue = \"\";\n    state.lastAssertionIsQuantifiable = false;\n    state.numCapturingParens = 0;\n    state.maxBackReference = 0;\n    state.groupNames.length = 0;\n    state.backReferenceNames.length = 0;\n\n    this.regexp_disjunction(state);\n\n    if (state.pos !== state.source.length) {\n      // Make the same messages as V8.\n      if (state.eat(0x29 /* ) */)) {\n        state.raise(\"Unmatched ')'\");\n      }\n      if (state.eat(0x5D /* ] */) || state.eat(0x7D /* } */)) {\n        state.raise(\"Lone quantifier brackets\");\n      }\n    }\n    if (state.maxBackReference > state.numCapturingParens) {\n      state.raise(\"Invalid escape\");\n    }\n    for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n      var name = list[i];\n\n      if (state.groupNames.indexOf(name) === -1) {\n        state.raise(\"Invalid named capture referenced\");\n      }\n    }\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction\n  pp$1.regexp_disjunction = function(state) {\n    this.regexp_alternative(state);\n    while (state.eat(0x7C /* | */)) {\n      this.regexp_alternative(state);\n    }\n\n    // Make the same message as V8.\n    if (this.regexp_eatQuantifier(state, true)) {\n      state.raise(\"Nothing to repeat\");\n    }\n    if (state.eat(0x7B /* { */)) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative\n  pp$1.regexp_alternative = function(state) {\n    while (state.pos < state.source.length && this.regexp_eatTerm(state))\n      { }\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term\n  pp$1.regexp_eatTerm = function(state) {\n    if (this.regexp_eatAssertion(state)) {\n      // Handle `QuantifiableAssertion Quantifier` alternative.\n      // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion\n      // is a QuantifiableAssertion.\n      if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n        // Make the same message as V8.\n        if (state.switchU) {\n          state.raise(\"Invalid quantifier\");\n        }\n      }\n      return true\n    }\n\n    if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n      this.regexp_eatQuantifier(state);\n      return true\n    }\n\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion\n  pp$1.regexp_eatAssertion = function(state) {\n    var start = state.pos;\n    state.lastAssertionIsQuantifiable = false;\n\n    // ^, $\n    if (state.eat(0x5E /* ^ */) || state.eat(0x24 /* $ */)) {\n      return true\n    }\n\n    // \\b \\B\n    if (state.eat(0x5C /* \\ */)) {\n      if (state.eat(0x42 /* B */) || state.eat(0x62 /* b */)) {\n        return true\n      }\n      state.pos = start;\n    }\n\n    // Lookahead / Lookbehind\n    if (state.eat(0x28 /* ( */) && state.eat(0x3F /* ? */)) {\n      var lookbehind = false;\n      if (this.options.ecmaVersion >= 9) {\n        lookbehind = state.eat(0x3C /* < */);\n      }\n      if (state.eat(0x3D /* = */) || state.eat(0x21 /* ! */)) {\n        this.regexp_disjunction(state);\n        if (!state.eat(0x29 /* ) */)) {\n          state.raise(\"Unterminated group\");\n        }\n        state.lastAssertionIsQuantifiable = !lookbehind;\n        return true\n      }\n    }\n\n    state.pos = start;\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier\n  pp$1.regexp_eatQuantifier = function(state, noError) {\n    if ( noError === void 0 ) noError = false;\n\n    if (this.regexp_eatQuantifierPrefix(state, noError)) {\n      state.eat(0x3F /* ? */);\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix\n  pp$1.regexp_eatQuantifierPrefix = function(state, noError) {\n    return (\n      state.eat(0x2A /* * */) ||\n      state.eat(0x2B /* + */) ||\n      state.eat(0x3F /* ? */) ||\n      this.regexp_eatBracedQuantifier(state, noError)\n    )\n  };\n  pp$1.regexp_eatBracedQuantifier = function(state, noError) {\n    var start = state.pos;\n    if (state.eat(0x7B /* { */)) {\n      var min = 0, max = -1;\n      if (this.regexp_eatDecimalDigits(state)) {\n        min = state.lastIntValue;\n        if (state.eat(0x2C /* , */) && this.regexp_eatDecimalDigits(state)) {\n          max = state.lastIntValue;\n        }\n        if (state.eat(0x7D /* } */)) {\n          // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term\n          if (max !== -1 && max < min && !noError) {\n            state.raise(\"numbers out of order in {} quantifier\");\n          }\n          return true\n        }\n      }\n      if (state.switchU && !noError) {\n        state.raise(\"Incomplete quantifier\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Atom\n  pp$1.regexp_eatAtom = function(state) {\n    return (\n      this.regexp_eatPatternCharacters(state) ||\n      state.eat(0x2E /* . */) ||\n      this.regexp_eatReverseSolidusAtomEscape(state) ||\n      this.regexp_eatCharacterClass(state) ||\n      this.regexp_eatUncapturingGroup(state) ||\n      this.regexp_eatCapturingGroup(state)\n    )\n  };\n  pp$1.regexp_eatReverseSolidusAtomEscape = function(state) {\n    var start = state.pos;\n    if (state.eat(0x5C /* \\ */)) {\n      if (this.regexp_eatAtomEscape(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$1.regexp_eatUncapturingGroup = function(state) {\n    var start = state.pos;\n    if (state.eat(0x28 /* ( */)) {\n      if (state.eat(0x3F /* ? */) && state.eat(0x3A /* : */)) {\n        this.regexp_disjunction(state);\n        if (state.eat(0x29 /* ) */)) {\n          return true\n        }\n        state.raise(\"Unterminated group\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$1.regexp_eatCapturingGroup = function(state) {\n    if (state.eat(0x28 /* ( */)) {\n      if (this.options.ecmaVersion >= 9) {\n        this.regexp_groupSpecifier(state);\n      } else if (state.current() === 0x3F /* ? */) {\n        state.raise(\"Invalid group\");\n      }\n      this.regexp_disjunction(state);\n      if (state.eat(0x29 /* ) */)) {\n        state.numCapturingParens += 1;\n        return true\n      }\n      state.raise(\"Unterminated group\");\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom\n  pp$1.regexp_eatExtendedAtom = function(state) {\n    return (\n      state.eat(0x2E /* . */) ||\n      this.regexp_eatReverseSolidusAtomEscape(state) ||\n      this.regexp_eatCharacterClass(state) ||\n      this.regexp_eatUncapturingGroup(state) ||\n      this.regexp_eatCapturingGroup(state) ||\n      this.regexp_eatInvalidBracedQuantifier(state) ||\n      this.regexp_eatExtendedPatternCharacter(state)\n    )\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier\n  pp$1.regexp_eatInvalidBracedQuantifier = function(state) {\n    if (this.regexp_eatBracedQuantifier(state, true)) {\n      state.raise(\"Nothing to repeat\");\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter\n  pp$1.regexp_eatSyntaxCharacter = function(state) {\n    var ch = state.current();\n    if (isSyntaxCharacter(ch)) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n    return false\n  };\n  function isSyntaxCharacter(ch) {\n    return (\n      ch === 0x24 /* $ */ ||\n      ch >= 0x28 /* ( */ && ch <= 0x2B /* + */ ||\n      ch === 0x2E /* . */ ||\n      ch === 0x3F /* ? */ ||\n      ch >= 0x5B /* [ */ && ch <= 0x5E /* ^ */ ||\n      ch >= 0x7B /* { */ && ch <= 0x7D /* } */\n    )\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter\n  // But eat eager.\n  pp$1.regexp_eatPatternCharacters = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n      state.advance();\n    }\n    return state.pos !== start\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter\n  pp$1.regexp_eatExtendedPatternCharacter = function(state) {\n    var ch = state.current();\n    if (\n      ch !== -1 &&\n      ch !== 0x24 /* $ */ &&\n      !(ch >= 0x28 /* ( */ && ch <= 0x2B /* + */) &&\n      ch !== 0x2E /* . */ &&\n      ch !== 0x3F /* ? */ &&\n      ch !== 0x5B /* [ */ &&\n      ch !== 0x5E /* ^ */ &&\n      ch !== 0x7C /* | */\n    ) {\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  // GroupSpecifier ::\n  //   [empty]\n  //   `?` GroupName\n  pp$1.regexp_groupSpecifier = function(state) {\n    if (state.eat(0x3F /* ? */)) {\n      if (this.regexp_eatGroupName(state)) {\n        if (state.groupNames.indexOf(state.lastStringValue) !== -1) {\n          state.raise(\"Duplicate capture group name\");\n        }\n        state.groupNames.push(state.lastStringValue);\n        return\n      }\n      state.raise(\"Invalid group\");\n    }\n  };\n\n  // GroupName ::\n  //   `<` RegExpIdentifierName `>`\n  // Note: this updates `state.lastStringValue` property with the eaten name.\n  pp$1.regexp_eatGroupName = function(state) {\n    state.lastStringValue = \"\";\n    if (state.eat(0x3C /* < */)) {\n      if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E /* > */)) {\n        return true\n      }\n      state.raise(\"Invalid capture group name\");\n    }\n    return false\n  };\n\n  // RegExpIdentifierName ::\n  //   RegExpIdentifierStart\n  //   RegExpIdentifierName RegExpIdentifierPart\n  // Note: this updates `state.lastStringValue` property with the eaten name.\n  pp$1.regexp_eatRegExpIdentifierName = function(state) {\n    state.lastStringValue = \"\";\n    if (this.regexp_eatRegExpIdentifierStart(state)) {\n      state.lastStringValue += codePointToString(state.lastIntValue);\n      while (this.regexp_eatRegExpIdentifierPart(state)) {\n        state.lastStringValue += codePointToString(state.lastIntValue);\n      }\n      return true\n    }\n    return false\n  };\n\n  // RegExpIdentifierStart ::\n  //   UnicodeIDStart\n  //   `$`\n  //   `_`\n  //   `\\` RegExpUnicodeEscapeSequence[+U]\n  pp$1.regexp_eatRegExpIdentifierStart = function(state) {\n    var start = state.pos;\n    var forceU = this.options.ecmaVersion >= 11;\n    var ch = state.current(forceU);\n    state.advance(forceU);\n\n    if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n      ch = state.lastIntValue;\n    }\n    if (isRegExpIdentifierStart(ch)) {\n      state.lastIntValue = ch;\n      return true\n    }\n\n    state.pos = start;\n    return false\n  };\n  function isRegExpIdentifierStart(ch) {\n    return isIdentifierStart(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */\n  }\n\n  // RegExpIdentifierPart ::\n  //   UnicodeIDContinue\n  //   `$`\n  //   `_`\n  //   `\\` RegExpUnicodeEscapeSequence[+U]\n  //   <ZWNJ>\n  //   <ZWJ>\n  pp$1.regexp_eatRegExpIdentifierPart = function(state) {\n    var start = state.pos;\n    var forceU = this.options.ecmaVersion >= 11;\n    var ch = state.current(forceU);\n    state.advance(forceU);\n\n    if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n      ch = state.lastIntValue;\n    }\n    if (isRegExpIdentifierPart(ch)) {\n      state.lastIntValue = ch;\n      return true\n    }\n\n    state.pos = start;\n    return false\n  };\n  function isRegExpIdentifierPart(ch) {\n    return isIdentifierChar(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */ || ch === 0x200C /* <ZWNJ> */ || ch === 0x200D /* <ZWJ> */\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape\n  pp$1.regexp_eatAtomEscape = function(state) {\n    if (\n      this.regexp_eatBackReference(state) ||\n      this.regexp_eatCharacterClassEscape(state) ||\n      this.regexp_eatCharacterEscape(state) ||\n      (state.switchN && this.regexp_eatKGroupName(state))\n    ) {\n      return true\n    }\n    if (state.switchU) {\n      // Make the same message as V8.\n      if (state.current() === 0x63 /* c */) {\n        state.raise(\"Invalid unicode escape\");\n      }\n      state.raise(\"Invalid escape\");\n    }\n    return false\n  };\n  pp$1.regexp_eatBackReference = function(state) {\n    var start = state.pos;\n    if (this.regexp_eatDecimalEscape(state)) {\n      var n = state.lastIntValue;\n      if (state.switchU) {\n        // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape\n        if (n > state.maxBackReference) {\n          state.maxBackReference = n;\n        }\n        return true\n      }\n      if (n <= state.numCapturingParens) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$1.regexp_eatKGroupName = function(state) {\n    if (state.eat(0x6B /* k */)) {\n      if (this.regexp_eatGroupName(state)) {\n        state.backReferenceNames.push(state.lastStringValue);\n        return true\n      }\n      state.raise(\"Invalid named reference\");\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape\n  pp$1.regexp_eatCharacterEscape = function(state) {\n    return (\n      this.regexp_eatControlEscape(state) ||\n      this.regexp_eatCControlLetter(state) ||\n      this.regexp_eatZero(state) ||\n      this.regexp_eatHexEscapeSequence(state) ||\n      this.regexp_eatRegExpUnicodeEscapeSequence(state, false) ||\n      (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||\n      this.regexp_eatIdentityEscape(state)\n    )\n  };\n  pp$1.regexp_eatCControlLetter = function(state) {\n    var start = state.pos;\n    if (state.eat(0x63 /* c */)) {\n      if (this.regexp_eatControlLetter(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$1.regexp_eatZero = function(state) {\n    if (state.current() === 0x30 /* 0 */ && !isDecimalDigit(state.lookahead())) {\n      state.lastIntValue = 0;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape\n  pp$1.regexp_eatControlEscape = function(state) {\n    var ch = state.current();\n    if (ch === 0x74 /* t */) {\n      state.lastIntValue = 0x09; /* \\t */\n      state.advance();\n      return true\n    }\n    if (ch === 0x6E /* n */) {\n      state.lastIntValue = 0x0A; /* \\n */\n      state.advance();\n      return true\n    }\n    if (ch === 0x76 /* v */) {\n      state.lastIntValue = 0x0B; /* \\v */\n      state.advance();\n      return true\n    }\n    if (ch === 0x66 /* f */) {\n      state.lastIntValue = 0x0C; /* \\f */\n      state.advance();\n      return true\n    }\n    if (ch === 0x72 /* r */) {\n      state.lastIntValue = 0x0D; /* \\r */\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter\n  pp$1.regexp_eatControlLetter = function(state) {\n    var ch = state.current();\n    if (isControlLetter(ch)) {\n      state.lastIntValue = ch % 0x20;\n      state.advance();\n      return true\n    }\n    return false\n  };\n  function isControlLetter(ch) {\n    return (\n      (ch >= 0x41 /* A */ && ch <= 0x5A /* Z */) ||\n      (ch >= 0x61 /* a */ && ch <= 0x7A /* z */)\n    )\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence\n  pp$1.regexp_eatRegExpUnicodeEscapeSequence = function(state, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n    var start = state.pos;\n    var switchU = forceU || state.switchU;\n\n    if (state.eat(0x75 /* u */)) {\n      if (this.regexp_eatFixedHexDigits(state, 4)) {\n        var lead = state.lastIntValue;\n        if (switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n          var leadSurrogateEnd = state.pos;\n          if (state.eat(0x5C /* \\ */) && state.eat(0x75 /* u */) && this.regexp_eatFixedHexDigits(state, 4)) {\n            var trail = state.lastIntValue;\n            if (trail >= 0xDC00 && trail <= 0xDFFF) {\n              state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n              return true\n            }\n          }\n          state.pos = leadSurrogateEnd;\n          state.lastIntValue = lead;\n        }\n        return true\n      }\n      if (\n        switchU &&\n        state.eat(0x7B /* { */) &&\n        this.regexp_eatHexDigits(state) &&\n        state.eat(0x7D /* } */) &&\n        isValidUnicode(state.lastIntValue)\n      ) {\n        return true\n      }\n      if (switchU) {\n        state.raise(\"Invalid unicode escape\");\n      }\n      state.pos = start;\n    }\n\n    return false\n  };\n  function isValidUnicode(ch) {\n    return ch >= 0 && ch <= 0x10FFFF\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape\n  pp$1.regexp_eatIdentityEscape = function(state) {\n    if (state.switchU) {\n      if (this.regexp_eatSyntaxCharacter(state)) {\n        return true\n      }\n      if (state.eat(0x2F /* / */)) {\n        state.lastIntValue = 0x2F; /* / */\n        return true\n      }\n      return false\n    }\n\n    var ch = state.current();\n    if (ch !== 0x63 /* c */ && (!state.switchN || ch !== 0x6B /* k */)) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape\n  pp$1.regexp_eatDecimalEscape = function(state) {\n    state.lastIntValue = 0;\n    var ch = state.current();\n    if (ch >= 0x31 /* 1 */ && ch <= 0x39 /* 9 */) {\n      do {\n        state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n        state.advance();\n      } while ((ch = state.current()) >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */)\n      return true\n    }\n    return false\n  };\n\n  // Return values used by character set parsing methods, needed to\n  // forbid negation of sets that can match strings.\n  var CharSetNone = 0; // Nothing parsed\n  var CharSetOk = 1; // Construct parsed, cannot contain strings\n  var CharSetString = 2; // Construct parsed, can contain strings\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape\n  pp$1.regexp_eatCharacterClassEscape = function(state) {\n    var ch = state.current();\n\n    if (isCharacterClassEscape(ch)) {\n      state.lastIntValue = -1;\n      state.advance();\n      return CharSetOk\n    }\n\n    var negate = false;\n    if (\n      state.switchU &&\n      this.options.ecmaVersion >= 9 &&\n      ((negate = ch === 0x50 /* P */) || ch === 0x70 /* p */)\n    ) {\n      state.lastIntValue = -1;\n      state.advance();\n      var result;\n      if (\n        state.eat(0x7B /* { */) &&\n        (result = this.regexp_eatUnicodePropertyValueExpression(state)) &&\n        state.eat(0x7D /* } */)\n      ) {\n        if (negate && result === CharSetString) { state.raise(\"Invalid property name\"); }\n        return result\n      }\n      state.raise(\"Invalid property name\");\n    }\n\n    return CharSetNone\n  };\n\n  function isCharacterClassEscape(ch) {\n    return (\n      ch === 0x64 /* d */ ||\n      ch === 0x44 /* D */ ||\n      ch === 0x73 /* s */ ||\n      ch === 0x53 /* S */ ||\n      ch === 0x77 /* w */ ||\n      ch === 0x57 /* W */\n    )\n  }\n\n  // UnicodePropertyValueExpression ::\n  //   UnicodePropertyName `=` UnicodePropertyValue\n  //   LoneUnicodePropertyNameOrValue\n  pp$1.regexp_eatUnicodePropertyValueExpression = function(state) {\n    var start = state.pos;\n\n    // UnicodePropertyName `=` UnicodePropertyValue\n    if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D /* = */)) {\n      var name = state.lastStringValue;\n      if (this.regexp_eatUnicodePropertyValue(state)) {\n        var value = state.lastStringValue;\n        this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n        return CharSetOk\n      }\n    }\n    state.pos = start;\n\n    // LoneUnicodePropertyNameOrValue\n    if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n      var nameOrValue = state.lastStringValue;\n      return this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue)\n    }\n    return CharSetNone\n  };\n\n  pp$1.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {\n    if (!hasOwn(state.unicodeProperties.nonBinary, name))\n      { state.raise(\"Invalid property name\"); }\n    if (!state.unicodeProperties.nonBinary[name].test(value))\n      { state.raise(\"Invalid property value\"); }\n  };\n\n  pp$1.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {\n    if (state.unicodeProperties.binary.test(nameOrValue)) { return CharSetOk }\n    if (state.switchV && state.unicodeProperties.binaryOfStrings.test(nameOrValue)) { return CharSetString }\n    state.raise(\"Invalid property name\");\n  };\n\n  // UnicodePropertyName ::\n  //   UnicodePropertyNameCharacters\n  pp$1.regexp_eatUnicodePropertyName = function(state) {\n    var ch = 0;\n    state.lastStringValue = \"\";\n    while (isUnicodePropertyNameCharacter(ch = state.current())) {\n      state.lastStringValue += codePointToString(ch);\n      state.advance();\n    }\n    return state.lastStringValue !== \"\"\n  };\n\n  function isUnicodePropertyNameCharacter(ch) {\n    return isControlLetter(ch) || ch === 0x5F /* _ */\n  }\n\n  // UnicodePropertyValue ::\n  //   UnicodePropertyValueCharacters\n  pp$1.regexp_eatUnicodePropertyValue = function(state) {\n    var ch = 0;\n    state.lastStringValue = \"\";\n    while (isUnicodePropertyValueCharacter(ch = state.current())) {\n      state.lastStringValue += codePointToString(ch);\n      state.advance();\n    }\n    return state.lastStringValue !== \"\"\n  };\n  function isUnicodePropertyValueCharacter(ch) {\n    return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)\n  }\n\n  // LoneUnicodePropertyNameOrValue ::\n  //   UnicodePropertyValueCharacters\n  pp$1.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\n    return this.regexp_eatUnicodePropertyValue(state)\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass\n  pp$1.regexp_eatCharacterClass = function(state) {\n    if (state.eat(0x5B /* [ */)) {\n      var negate = state.eat(0x5E /* ^ */);\n      var result = this.regexp_classContents(state);\n      if (!state.eat(0x5D /* ] */))\n        { state.raise(\"Unterminated character class\"); }\n      if (negate && result === CharSetString)\n        { state.raise(\"Negated character class may contain strings\"); }\n      return true\n    }\n    return false\n  };\n\n  // https://tc39.es/ecma262/#prod-ClassContents\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges\n  pp$1.regexp_classContents = function(state) {\n    if (state.current() === 0x5D /* ] */) { return CharSetOk }\n    if (state.switchV) { return this.regexp_classSetExpression(state) }\n    this.regexp_nonEmptyClassRanges(state);\n    return CharSetOk\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash\n  pp$1.regexp_nonEmptyClassRanges = function(state) {\n    while (this.regexp_eatClassAtom(state)) {\n      var left = state.lastIntValue;\n      if (state.eat(0x2D /* - */) && this.regexp_eatClassAtom(state)) {\n        var right = state.lastIntValue;\n        if (state.switchU && (left === -1 || right === -1)) {\n          state.raise(\"Invalid character class\");\n        }\n        if (left !== -1 && right !== -1 && left > right) {\n          state.raise(\"Range out of order in character class\");\n        }\n      }\n    }\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash\n  pp$1.regexp_eatClassAtom = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x5C /* \\ */)) {\n      if (this.regexp_eatClassEscape(state)) {\n        return true\n      }\n      if (state.switchU) {\n        // Make the same message as V8.\n        var ch$1 = state.current();\n        if (ch$1 === 0x63 /* c */ || isOctalDigit(ch$1)) {\n          state.raise(\"Invalid class escape\");\n        }\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n\n    var ch = state.current();\n    if (ch !== 0x5D /* ] */) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape\n  pp$1.regexp_eatClassEscape = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x62 /* b */)) {\n      state.lastIntValue = 0x08; /* <BS> */\n      return true\n    }\n\n    if (state.switchU && state.eat(0x2D /* - */)) {\n      state.lastIntValue = 0x2D; /* - */\n      return true\n    }\n\n    if (!state.switchU && state.eat(0x63 /* c */)) {\n      if (this.regexp_eatClassControlLetter(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n\n    return (\n      this.regexp_eatCharacterClassEscape(state) ||\n      this.regexp_eatCharacterEscape(state)\n    )\n  };\n\n  // https://tc39.es/ecma262/#prod-ClassSetExpression\n  // https://tc39.es/ecma262/#prod-ClassUnion\n  // https://tc39.es/ecma262/#prod-ClassIntersection\n  // https://tc39.es/ecma262/#prod-ClassSubtraction\n  pp$1.regexp_classSetExpression = function(state) {\n    var result = CharSetOk, subResult;\n    if (this.regexp_eatClassSetRange(state)) ; else if (subResult = this.regexp_eatClassSetOperand(state)) {\n      if (subResult === CharSetString) { result = CharSetString; }\n      // https://tc39.es/ecma262/#prod-ClassIntersection\n      var start = state.pos;\n      while (state.eatChars([0x26, 0x26] /* && */)) {\n        if (\n          state.current() !== 0x26 /* & */ &&\n          (subResult = this.regexp_eatClassSetOperand(state))\n        ) {\n          if (subResult !== CharSetString) { result = CharSetOk; }\n          continue\n        }\n        state.raise(\"Invalid character in character class\");\n      }\n      if (start !== state.pos) { return result }\n      // https://tc39.es/ecma262/#prod-ClassSubtraction\n      while (state.eatChars([0x2D, 0x2D] /* -- */)) {\n        if (this.regexp_eatClassSetOperand(state)) { continue }\n        state.raise(\"Invalid character in character class\");\n      }\n      if (start !== state.pos) { return result }\n    } else {\n      state.raise(\"Invalid character in character class\");\n    }\n    // https://tc39.es/ecma262/#prod-ClassUnion\n    for (;;) {\n      if (this.regexp_eatClassSetRange(state)) { continue }\n      subResult = this.regexp_eatClassSetOperand(state);\n      if (!subResult) { return result }\n      if (subResult === CharSetString) { result = CharSetString; }\n    }\n  };\n\n  // https://tc39.es/ecma262/#prod-ClassSetRange\n  pp$1.regexp_eatClassSetRange = function(state) {\n    var start = state.pos;\n    if (this.regexp_eatClassSetCharacter(state)) {\n      var left = state.lastIntValue;\n      if (state.eat(0x2D /* - */) && this.regexp_eatClassSetCharacter(state)) {\n        var right = state.lastIntValue;\n        if (left !== -1 && right !== -1 && left > right) {\n          state.raise(\"Range out of order in character class\");\n        }\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  // https://tc39.es/ecma262/#prod-ClassSetOperand\n  pp$1.regexp_eatClassSetOperand = function(state) {\n    if (this.regexp_eatClassSetCharacter(state)) { return CharSetOk }\n    return this.regexp_eatClassStringDisjunction(state) || this.regexp_eatNestedClass(state)\n  };\n\n  // https://tc39.es/ecma262/#prod-NestedClass\n  pp$1.regexp_eatNestedClass = function(state) {\n    var start = state.pos;\n    if (state.eat(0x5B /* [ */)) {\n      var negate = state.eat(0x5E /* ^ */);\n      var result = this.regexp_classContents(state);\n      if (state.eat(0x5D /* ] */)) {\n        if (negate && result === CharSetString) {\n          state.raise(\"Negated character class may contain strings\");\n        }\n        return result\n      }\n      state.pos = start;\n    }\n    if (state.eat(0x5C /* \\ */)) {\n      var result$1 = this.regexp_eatCharacterClassEscape(state);\n      if (result$1) {\n        return result$1\n      }\n      state.pos = start;\n    }\n    return null\n  };\n\n  // https://tc39.es/ecma262/#prod-ClassStringDisjunction\n  pp$1.regexp_eatClassStringDisjunction = function(state) {\n    var start = state.pos;\n    if (state.eatChars([0x5C, 0x71] /* \\q */)) {\n      if (state.eat(0x7B /* { */)) {\n        var result = this.regexp_classStringDisjunctionContents(state);\n        if (state.eat(0x7D /* } */)) {\n          return result\n        }\n      } else {\n        // Make the same message as V8.\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n    return null\n  };\n\n  // https://tc39.es/ecma262/#prod-ClassStringDisjunctionContents\n  pp$1.regexp_classStringDisjunctionContents = function(state) {\n    var result = this.regexp_classString(state);\n    while (state.eat(0x7C /* | */)) {\n      if (this.regexp_classString(state) === CharSetString) { result = CharSetString; }\n    }\n    return result\n  };\n\n  // https://tc39.es/ecma262/#prod-ClassString\n  // https://tc39.es/ecma262/#prod-NonEmptyClassString\n  pp$1.regexp_classString = function(state) {\n    var count = 0;\n    while (this.regexp_eatClassSetCharacter(state)) { count++; }\n    return count === 1 ? CharSetOk : CharSetString\n  };\n\n  // https://tc39.es/ecma262/#prod-ClassSetCharacter\n  pp$1.regexp_eatClassSetCharacter = function(state) {\n    var start = state.pos;\n    if (state.eat(0x5C /* \\ */)) {\n      if (\n        this.regexp_eatCharacterEscape(state) ||\n        this.regexp_eatClassSetReservedPunctuator(state)\n      ) {\n        return true\n      }\n      if (state.eat(0x62 /* b */)) {\n        state.lastIntValue = 0x08; /* <BS> */\n        return true\n      }\n      state.pos = start;\n      return false\n    }\n    var ch = state.current();\n    if (ch < 0 || ch === state.lookahead() && isClassSetReservedDoublePunctuatorCharacter(ch)) { return false }\n    if (isClassSetSyntaxCharacter(ch)) { return false }\n    state.advance();\n    state.lastIntValue = ch;\n    return true\n  };\n\n  // https://tc39.es/ecma262/#prod-ClassSetReservedDoublePunctuator\n  function isClassSetReservedDoublePunctuatorCharacter(ch) {\n    return (\n      ch === 0x21 /* ! */ ||\n      ch >= 0x23 /* # */ && ch <= 0x26 /* & */ ||\n      ch >= 0x2A /* * */ && ch <= 0x2C /* , */ ||\n      ch === 0x2E /* . */ ||\n      ch >= 0x3A /* : */ && ch <= 0x40 /* @ */ ||\n      ch === 0x5E /* ^ */ ||\n      ch === 0x60 /* ` */ ||\n      ch === 0x7E /* ~ */\n    )\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassSetSyntaxCharacter\n  function isClassSetSyntaxCharacter(ch) {\n    return (\n      ch === 0x28 /* ( */ ||\n      ch === 0x29 /* ) */ ||\n      ch === 0x2D /* - */ ||\n      ch === 0x2F /* / */ ||\n      ch >= 0x5B /* [ */ && ch <= 0x5D /* ] */ ||\n      ch >= 0x7B /* { */ && ch <= 0x7D /* } */\n    )\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassSetReservedPunctuator\n  pp$1.regexp_eatClassSetReservedPunctuator = function(state) {\n    var ch = state.current();\n    if (isClassSetReservedPunctuator(ch)) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  // https://tc39.es/ecma262/#prod-ClassSetReservedPunctuator\n  function isClassSetReservedPunctuator(ch) {\n    return (\n      ch === 0x21 /* ! */ ||\n      ch === 0x23 /* # */ ||\n      ch === 0x25 /* % */ ||\n      ch === 0x26 /* & */ ||\n      ch === 0x2C /* , */ ||\n      ch === 0x2D /* - */ ||\n      ch >= 0x3A /* : */ && ch <= 0x3E /* > */ ||\n      ch === 0x40 /* @ */ ||\n      ch === 0x60 /* ` */ ||\n      ch === 0x7E /* ~ */\n    )\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter\n  pp$1.regexp_eatClassControlLetter = function(state) {\n    var ch = state.current();\n    if (isDecimalDigit(ch) || ch === 0x5F /* _ */) {\n      state.lastIntValue = ch % 0x20;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\n  pp$1.regexp_eatHexEscapeSequence = function(state) {\n    var start = state.pos;\n    if (state.eat(0x78 /* x */)) {\n      if (this.regexp_eatFixedHexDigits(state, 2)) {\n        return true\n      }\n      if (state.switchU) {\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits\n  pp$1.regexp_eatDecimalDigits = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    state.lastIntValue = 0;\n    while (isDecimalDigit(ch = state.current())) {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n      state.advance();\n    }\n    return state.pos !== start\n  };\n  function isDecimalDigit(ch) {\n    return ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits\n  pp$1.regexp_eatHexDigits = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    state.lastIntValue = 0;\n    while (isHexDigit(ch = state.current())) {\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n      state.advance();\n    }\n    return state.pos !== start\n  };\n  function isHexDigit(ch) {\n    return (\n      (ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */) ||\n      (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) ||\n      (ch >= 0x61 /* a */ && ch <= 0x66 /* f */)\n    )\n  }\n  function hexToInt(ch) {\n    if (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) {\n      return 10 + (ch - 0x41 /* A */)\n    }\n    if (ch >= 0x61 /* a */ && ch <= 0x66 /* f */) {\n      return 10 + (ch - 0x61 /* a */)\n    }\n    return ch - 0x30 /* 0 */\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence\n  // Allows only 0-377(octal) i.e. 0-255(decimal).\n  pp$1.regexp_eatLegacyOctalEscapeSequence = function(state) {\n    if (this.regexp_eatOctalDigit(state)) {\n      var n1 = state.lastIntValue;\n      if (this.regexp_eatOctalDigit(state)) {\n        var n2 = state.lastIntValue;\n        if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n          state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n        } else {\n          state.lastIntValue = n1 * 8 + n2;\n        }\n      } else {\n        state.lastIntValue = n1;\n      }\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit\n  pp$1.regexp_eatOctalDigit = function(state) {\n    var ch = state.current();\n    if (isOctalDigit(ch)) {\n      state.lastIntValue = ch - 0x30; /* 0 */\n      state.advance();\n      return true\n    }\n    state.lastIntValue = 0;\n    return false\n  };\n  function isOctalDigit(ch) {\n    return ch >= 0x30 /* 0 */ && ch <= 0x37 /* 7 */\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit\n  // And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\n  pp$1.regexp_eatFixedHexDigits = function(state, length) {\n    var start = state.pos;\n    state.lastIntValue = 0;\n    for (var i = 0; i < length; ++i) {\n      var ch = state.current();\n      if (!isHexDigit(ch)) {\n        state.pos = start;\n        return false\n      }\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n      state.advance();\n    }\n    return true\n  };\n\n  // Object type used to represent tokens. Note that normally, tokens\n  // simply exist as properties on the parser object. This is only\n  // used for the onToken callback and the external tokenizer.\n\n  var Token = function Token(p) {\n    this.type = p.type;\n    this.value = p.value;\n    this.start = p.start;\n    this.end = p.end;\n    if (p.options.locations)\n      { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n    if (p.options.ranges)\n      { this.range = [p.start, p.end]; }\n  };\n\n  // ## Tokenizer\n\n  var pp = Parser.prototype;\n\n  // Move to the next token\n\n  pp.next = function(ignoreEscapeSequenceInKeyword) {\n    if (!ignoreEscapeSequenceInKeyword && this.type.keyword && this.containsEsc)\n      { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + this.type.keyword); }\n    if (this.options.onToken)\n      { this.options.onToken(new Token(this)); }\n\n    this.lastTokEnd = this.end;\n    this.lastTokStart = this.start;\n    this.lastTokEndLoc = this.endLoc;\n    this.lastTokStartLoc = this.startLoc;\n    this.nextToken();\n  };\n\n  pp.getToken = function() {\n    this.next();\n    return new Token(this)\n  };\n\n  // If we're in an ES6 environment, make parsers iterable\n  if (typeof Symbol !== \"undefined\")\n    { pp[Symbol.iterator] = function() {\n      var this$1$1 = this;\n\n      return {\n        next: function () {\n          var token = this$1$1.getToken();\n          return {\n            done: token.type === types$1.eof,\n            value: token\n          }\n        }\n      }\n    }; }\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n  // Read a single token, updating the parser object's token-related\n  // properties.\n\n  pp.nextToken = function() {\n    var curContext = this.curContext();\n    if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n    this.start = this.pos;\n    if (this.options.locations) { this.startLoc = this.curPosition(); }\n    if (this.pos >= this.input.length) { return this.finishToken(types$1.eof) }\n\n    if (curContext.override) { return curContext.override(this) }\n    else { this.readToken(this.fullCharCodeAtPos()); }\n  };\n\n  pp.readToken = function(code) {\n    // Identifier or keyword. '\\uXXXX' sequences are allowed in\n    // identifiers, so '\\' also dispatches to that.\n    if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */)\n      { return this.readWord() }\n\n    return this.getTokenFromCode(code)\n  };\n\n  pp.fullCharCodeAtPos = function() {\n    var code = this.input.charCodeAt(this.pos);\n    if (code <= 0xd7ff || code >= 0xdc00) { return code }\n    var next = this.input.charCodeAt(this.pos + 1);\n    return next <= 0xdbff || next >= 0xe000 ? code : (code << 10) + next - 0x35fdc00\n  };\n\n  pp.skipBlockComment = function() {\n    var startLoc = this.options.onComment && this.curPosition();\n    var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n    if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n    this.pos = end + 2;\n    if (this.options.locations) {\n      for (var nextBreak = (void 0), pos = start; (nextBreak = nextLineBreak(this.input, pos, this.pos)) > -1;) {\n        ++this.curLine;\n        pos = this.lineStart = nextBreak;\n      }\n    }\n    if (this.options.onComment)\n      { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                             startLoc, this.curPosition()); }\n  };\n\n  pp.skipLineComment = function(startSkip) {\n    var start = this.pos;\n    var startLoc = this.options.onComment && this.curPosition();\n    var ch = this.input.charCodeAt(this.pos += startSkip);\n    while (this.pos < this.input.length && !isNewLine(ch)) {\n      ch = this.input.charCodeAt(++this.pos);\n    }\n    if (this.options.onComment)\n      { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                             startLoc, this.curPosition()); }\n  };\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  pp.skipSpace = function() {\n    loop: while (this.pos < this.input.length) {\n      var ch = this.input.charCodeAt(this.pos);\n      switch (ch) {\n      case 32: case 160: // ' '\n        ++this.pos;\n        break\n      case 13:\n        if (this.input.charCodeAt(this.pos + 1) === 10) {\n          ++this.pos;\n        }\n      case 10: case 8232: case 8233:\n        ++this.pos;\n        if (this.options.locations) {\n          ++this.curLine;\n          this.lineStart = this.pos;\n        }\n        break\n      case 47: // '/'\n        switch (this.input.charCodeAt(this.pos + 1)) {\n        case 42: // '*'\n          this.skipBlockComment();\n          break\n        case 47:\n          this.skipLineComment(2);\n          break\n        default:\n          break loop\n        }\n        break\n      default:\n        if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n          ++this.pos;\n        } else {\n          break loop\n        }\n      }\n    }\n  };\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `exprAllowed`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n  pp.finishToken = function(type, val) {\n    this.end = this.pos;\n    if (this.options.locations) { this.endLoc = this.curPosition(); }\n    var prevType = this.type;\n    this.type = type;\n    this.value = val;\n\n    this.updateContext(prevType);\n  };\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n  //\n  pp.readToken_dot = function() {\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next >= 48 && next <= 57) { return this.readNumber(true) }\n    var next2 = this.input.charCodeAt(this.pos + 2);\n    if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\n      this.pos += 3;\n      return this.finishToken(types$1.ellipsis)\n    } else {\n      ++this.pos;\n      return this.finishToken(types$1.dot)\n    }\n  };\n\n  pp.readToken_slash = function() { // '/'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n    if (next === 61) { return this.finishOp(types$1.assign, 2) }\n    return this.finishOp(types$1.slash, 1)\n  };\n\n  pp.readToken_mult_modulo_exp = function(code) { // '%*'\n    var next = this.input.charCodeAt(this.pos + 1);\n    var size = 1;\n    var tokentype = code === 42 ? types$1.star : types$1.modulo;\n\n    // exponentiation operator ** and **=\n    if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n      ++size;\n      tokentype = types$1.starstar;\n      next = this.input.charCodeAt(this.pos + 2);\n    }\n\n    if (next === 61) { return this.finishOp(types$1.assign, size + 1) }\n    return this.finishOp(tokentype, size)\n  };\n\n  pp.readToken_pipe_amp = function(code) { // '|&'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === code) {\n      if (this.options.ecmaVersion >= 12) {\n        var next2 = this.input.charCodeAt(this.pos + 2);\n        if (next2 === 61) { return this.finishOp(types$1.assign, 3) }\n      }\n      return this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND, 2)\n    }\n    if (next === 61) { return this.finishOp(types$1.assign, 2) }\n    return this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1)\n  };\n\n  pp.readToken_caret = function() { // '^'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 61) { return this.finishOp(types$1.assign, 2) }\n    return this.finishOp(types$1.bitwiseXOR, 1)\n  };\n\n  pp.readToken_plus_min = function(code) { // '+-'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&\n          (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n        // A `-->` line comment\n        this.skipLineComment(3);\n        this.skipSpace();\n        return this.nextToken()\n      }\n      return this.finishOp(types$1.incDec, 2)\n    }\n    if (next === 61) { return this.finishOp(types$1.assign, 2) }\n    return this.finishOp(types$1.plusMin, 1)\n  };\n\n  pp.readToken_lt_gt = function(code) { // '<>'\n    var next = this.input.charCodeAt(this.pos + 1);\n    var size = 1;\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n      if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types$1.assign, size + 1) }\n      return this.finishOp(types$1.bitShift, size)\n    }\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&\n        this.input.charCodeAt(this.pos + 3) === 45) {\n      // `<!--`, an XML-style comment that should be interpreted as a line comment\n      this.skipLineComment(4);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    if (next === 61) { size = 2; }\n    return this.finishOp(types$1.relational, size)\n  };\n\n  pp.readToken_eq_excl = function(code) { // '=!'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 61) { return this.finishOp(types$1.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n    if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'\n      this.pos += 2;\n      return this.finishToken(types$1.arrow)\n    }\n    return this.finishOp(code === 61 ? types$1.eq : types$1.prefix, 1)\n  };\n\n  pp.readToken_question = function() { // '?'\n    var ecmaVersion = this.options.ecmaVersion;\n    if (ecmaVersion >= 11) {\n      var next = this.input.charCodeAt(this.pos + 1);\n      if (next === 46) {\n        var next2 = this.input.charCodeAt(this.pos + 2);\n        if (next2 < 48 || next2 > 57) { return this.finishOp(types$1.questionDot, 2) }\n      }\n      if (next === 63) {\n        if (ecmaVersion >= 12) {\n          var next2$1 = this.input.charCodeAt(this.pos + 2);\n          if (next2$1 === 61) { return this.finishOp(types$1.assign, 3) }\n        }\n        return this.finishOp(types$1.coalesce, 2)\n      }\n    }\n    return this.finishOp(types$1.question, 1)\n  };\n\n  pp.readToken_numberSign = function() { // '#'\n    var ecmaVersion = this.options.ecmaVersion;\n    var code = 35; // '#'\n    if (ecmaVersion >= 13) {\n      ++this.pos;\n      code = this.fullCharCodeAtPos();\n      if (isIdentifierStart(code, true) || code === 92 /* '\\' */) {\n        return this.finishToken(types$1.privateId, this.readWord1())\n      }\n    }\n\n    this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n  };\n\n  pp.getTokenFromCode = function(code) {\n    switch (code) {\n    // The interpretation of a dot depends on whether it is followed\n    // by a digit or another two dots.\n    case 46: // '.'\n      return this.readToken_dot()\n\n    // Punctuation tokens.\n    case 40: ++this.pos; return this.finishToken(types$1.parenL)\n    case 41: ++this.pos; return this.finishToken(types$1.parenR)\n    case 59: ++this.pos; return this.finishToken(types$1.semi)\n    case 44: ++this.pos; return this.finishToken(types$1.comma)\n    case 91: ++this.pos; return this.finishToken(types$1.bracketL)\n    case 93: ++this.pos; return this.finishToken(types$1.bracketR)\n    case 123: ++this.pos; return this.finishToken(types$1.braceL)\n    case 125: ++this.pos; return this.finishToken(types$1.braceR)\n    case 58: ++this.pos; return this.finishToken(types$1.colon)\n\n    case 96: // '`'\n      if (this.options.ecmaVersion < 6) { break }\n      ++this.pos;\n      return this.finishToken(types$1.backQuote)\n\n    case 48: // '0'\n      var next = this.input.charCodeAt(this.pos + 1);\n      if (next === 120 || next === 88) { return this.readRadixNumber(16) } // '0x', '0X' - hex number\n      if (this.options.ecmaVersion >= 6) {\n        if (next === 111 || next === 79) { return this.readRadixNumber(8) } // '0o', '0O' - octal number\n        if (next === 98 || next === 66) { return this.readRadixNumber(2) } // '0b', '0B' - binary number\n      }\n\n    // Anything else beginning with a digit is an integer, octal\n    // number, or float.\n    case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\n      return this.readNumber(false)\n\n    // Quotes produce strings.\n    case 34: case 39: // '\"', \"'\"\n      return this.readString(code)\n\n    // Operators are parsed inline in tiny state machines. '=' (61) is\n    // often referred to. `finishOp` simply skips the amount of\n    // characters it is given as second argument, and returns a token\n    // of the type given by its first argument.\n    case 47: // '/'\n      return this.readToken_slash()\n\n    case 37: case 42: // '%*'\n      return this.readToken_mult_modulo_exp(code)\n\n    case 124: case 38: // '|&'\n      return this.readToken_pipe_amp(code)\n\n    case 94: // '^'\n      return this.readToken_caret()\n\n    case 43: case 45: // '+-'\n      return this.readToken_plus_min(code)\n\n    case 60: case 62: // '<>'\n      return this.readToken_lt_gt(code)\n\n    case 61: case 33: // '=!'\n      return this.readToken_eq_excl(code)\n\n    case 63: // '?'\n      return this.readToken_question()\n\n    case 126: // '~'\n      return this.finishOp(types$1.prefix, 1)\n\n    case 35: // '#'\n      return this.readToken_numberSign()\n    }\n\n    this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n  };\n\n  pp.finishOp = function(type, size) {\n    var str = this.input.slice(this.pos, this.pos + size);\n    this.pos += size;\n    return this.finishToken(type, str)\n  };\n\n  pp.readRegexp = function() {\n    var escaped, inClass, start = this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(start, \"Unterminated regular expression\"); }\n      var ch = this.input.charAt(this.pos);\n      if (lineBreak.test(ch)) { this.raise(start, \"Unterminated regular expression\"); }\n      if (!escaped) {\n        if (ch === \"[\") { inClass = true; }\n        else if (ch === \"]\" && inClass) { inClass = false; }\n        else if (ch === \"/\" && !inClass) { break }\n        escaped = ch === \"\\\\\";\n      } else { escaped = false; }\n      ++this.pos;\n    }\n    var pattern = this.input.slice(start, this.pos);\n    ++this.pos;\n    var flagsStart = this.pos;\n    var flags = this.readWord1();\n    if (this.containsEsc) { this.unexpected(flagsStart); }\n\n    // Validate pattern\n    var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n    state.reset(start, pattern, flags);\n    this.validateRegExpFlags(state);\n    this.validateRegExpPattern(state);\n\n    // Create Literal#value property value.\n    var value = null;\n    try {\n      value = new RegExp(pattern, flags);\n    } catch (e) {\n      // ESTree requires null if it failed to instantiate RegExp object.\n      // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral\n    }\n\n    return this.finishToken(types$1.regexp, {pattern: pattern, flags: flags, value: value})\n  };\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n\n  pp.readInt = function(radix, len, maybeLegacyOctalNumericLiteral) {\n    // `len` is used for character escape sequences. In that case, disallow separators.\n    var allowSeparators = this.options.ecmaVersion >= 12 && len === undefined;\n\n    // `maybeLegacyOctalNumericLiteral` is true if it doesn't have prefix (0x,0o,0b)\n    // and isn't fraction part nor exponent part. In that case, if the first digit\n    // is zero then disallow separators.\n    var isLegacyOctalNumericLiteral = maybeLegacyOctalNumericLiteral && this.input.charCodeAt(this.pos) === 48;\n\n    var start = this.pos, total = 0, lastCode = 0;\n    for (var i = 0, e = len == null ? Infinity : len; i < e; ++i, ++this.pos) {\n      var code = this.input.charCodeAt(this.pos), val = (void 0);\n\n      if (allowSeparators && code === 95) {\n        if (isLegacyOctalNumericLiteral) { this.raiseRecoverable(this.pos, \"Numeric separator is not allowed in legacy octal numeric literals\"); }\n        if (lastCode === 95) { this.raiseRecoverable(this.pos, \"Numeric separator must be exactly one underscore\"); }\n        if (i === 0) { this.raiseRecoverable(this.pos, \"Numeric separator is not allowed at the first of digits\"); }\n        lastCode = code;\n        continue\n      }\n\n      if (code >= 97) { val = code - 97 + 10; } // a\n      else if (code >= 65) { val = code - 65 + 10; } // A\n      else if (code >= 48 && code <= 57) { val = code - 48; } // 0-9\n      else { val = Infinity; }\n      if (val >= radix) { break }\n      lastCode = code;\n      total = total * radix + val;\n    }\n\n    if (allowSeparators && lastCode === 95) { this.raiseRecoverable(this.pos - 1, \"Numeric separator is not allowed at the last of digits\"); }\n    if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n    return total\n  };\n\n  function stringToNumber(str, isLegacyOctalNumericLiteral) {\n    if (isLegacyOctalNumericLiteral) {\n      return parseInt(str, 8)\n    }\n\n    // `parseFloat(value)` stops parsing at the first numeric separator then returns a wrong value.\n    return parseFloat(str.replace(/_/g, \"\"))\n  }\n\n  function stringToBigInt(str) {\n    if (typeof BigInt !== \"function\") {\n      return null\n    }\n\n    // `BigInt(value)` throws syntax error if the string contains numeric separators.\n    return BigInt(str.replace(/_/g, \"\"))\n  }\n\n  pp.readRadixNumber = function(radix) {\n    var start = this.pos;\n    this.pos += 2; // 0x\n    var val = this.readInt(radix);\n    if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n    if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {\n      val = stringToBigInt(this.input.slice(start, this.pos));\n      ++this.pos;\n    } else if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n    return this.finishToken(types$1.num, val)\n  };\n\n  // Read an integer, octal integer, or floating-point number.\n\n  pp.readNumber = function(startsWithDot) {\n    var start = this.pos;\n    if (!startsWithDot && this.readInt(10, undefined, true) === null) { this.raise(start, \"Invalid number\"); }\n    var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n    if (octal && this.strict) { this.raise(start, \"Invalid number\"); }\n    var next = this.input.charCodeAt(this.pos);\n    if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {\n      var val$1 = stringToBigInt(this.input.slice(start, this.pos));\n      ++this.pos;\n      if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n      return this.finishToken(types$1.num, val$1)\n    }\n    if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }\n    if (next === 46 && !octal) { // '.'\n      ++this.pos;\n      this.readInt(10);\n      next = this.input.charCodeAt(this.pos);\n    }\n    if ((next === 69 || next === 101) && !octal) { // 'eE'\n      next = this.input.charCodeAt(++this.pos);\n      if (next === 43 || next === 45) { ++this.pos; } // '+-'\n      if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n    }\n    if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n    var val = stringToNumber(this.input.slice(start, this.pos), octal);\n    return this.finishToken(types$1.num, val)\n  };\n\n  // Read a string value, interpreting backslash-escapes.\n\n  pp.readCodePoint = function() {\n    var ch = this.input.charCodeAt(this.pos), code;\n\n    if (ch === 123) { // '{'\n      if (this.options.ecmaVersion < 6) { this.unexpected(); }\n      var codePos = ++this.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n      ++this.pos;\n      if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n    } else {\n      code = this.readHexChar(4);\n    }\n    return code\n  };\n\n  pp.readString = function(quote) {\n    var out = \"\", chunkStart = ++this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated string constant\"); }\n      var ch = this.input.charCodeAt(this.pos);\n      if (ch === quote) { break }\n      if (ch === 92) { // '\\'\n        out += this.input.slice(chunkStart, this.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.pos;\n      } else if (ch === 0x2028 || ch === 0x2029) {\n        if (this.options.ecmaVersion < 10) { this.raise(this.start, \"Unterminated string constant\"); }\n        ++this.pos;\n        if (this.options.locations) {\n          this.curLine++;\n          this.lineStart = this.pos;\n        }\n      } else {\n        if (isNewLine(ch)) { this.raise(this.start, \"Unterminated string constant\"); }\n        ++this.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.pos++);\n    return this.finishToken(types$1.string, out)\n  };\n\n  // Reads template string tokens.\n\n  var INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\n  pp.tryReadTemplateToken = function() {\n    this.inTemplateElement = true;\n    try {\n      this.readTmplToken();\n    } catch (err) {\n      if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n        this.readInvalidTemplateToken();\n      } else {\n        throw err\n      }\n    }\n\n    this.inTemplateElement = false;\n  };\n\n  pp.invalidStringToken = function(position, message) {\n    if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n      throw INVALID_TEMPLATE_ESCAPE_ERROR\n    } else {\n      this.raise(position, message);\n    }\n  };\n\n  pp.readTmplToken = function() {\n    var out = \"\", chunkStart = this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated template\"); }\n      var ch = this.input.charCodeAt(this.pos);\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) { // '`', '${'\n        if (this.pos === this.start && (this.type === types$1.template || this.type === types$1.invalidTemplate)) {\n          if (ch === 36) {\n            this.pos += 2;\n            return this.finishToken(types$1.dollarBraceL)\n          } else {\n            ++this.pos;\n            return this.finishToken(types$1.backQuote)\n          }\n        }\n        out += this.input.slice(chunkStart, this.pos);\n        return this.finishToken(types$1.template, out)\n      }\n      if (ch === 92) { // '\\'\n        out += this.input.slice(chunkStart, this.pos);\n        out += this.readEscapedChar(true);\n        chunkStart = this.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.pos);\n        ++this.pos;\n        switch (ch) {\n        case 13:\n          if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; }\n        case 10:\n          out += \"\\n\";\n          break\n        default:\n          out += String.fromCharCode(ch);\n          break\n        }\n        if (this.options.locations) {\n          ++this.curLine;\n          this.lineStart = this.pos;\n        }\n        chunkStart = this.pos;\n      } else {\n        ++this.pos;\n      }\n    }\n  };\n\n  // Reads a template token to search for the end, without validating any escape sequences\n  pp.readInvalidTemplateToken = function() {\n    for (; this.pos < this.input.length; this.pos++) {\n      switch (this.input[this.pos]) {\n      case \"\\\\\":\n        ++this.pos;\n        break\n\n      case \"$\":\n        if (this.input[this.pos + 1] !== \"{\") {\n          break\n        }\n\n      // falls through\n      case \"`\":\n        return this.finishToken(types$1.invalidTemplate, this.input.slice(this.start, this.pos))\n\n      // no default\n      }\n    }\n    this.raise(this.start, \"Unterminated template\");\n  };\n\n  // Used to read escaped characters\n\n  pp.readEscapedChar = function(inTemplate) {\n    var ch = this.input.charCodeAt(++this.pos);\n    ++this.pos;\n    switch (ch) {\n    case 110: return \"\\n\" // 'n' -> '\\n'\n    case 114: return \"\\r\" // 'r' -> '\\r'\n    case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'\n    case 117: return codePointToString(this.readCodePoint()) // 'u'\n    case 116: return \"\\t\" // 't' -> '\\t'\n    case 98: return \"\\b\" // 'b' -> '\\b'\n    case 118: return \"\\u000b\" // 'v' -> '\\u000b'\n    case 102: return \"\\f\" // 'f' -> '\\f'\n    case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } // '\\r\\n'\n    case 10: // ' \\n'\n      if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n      return \"\"\n    case 56:\n    case 57:\n      if (this.strict) {\n        this.invalidStringToken(\n          this.pos - 1,\n          \"Invalid escape sequence\"\n        );\n      }\n      if (inTemplate) {\n        var codePos = this.pos - 1;\n\n        this.invalidStringToken(\n          codePos,\n          \"Invalid escape sequence in template string\"\n        );\n      }\n    default:\n      if (ch >= 48 && ch <= 55) {\n        var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n        var octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        this.pos += octalStr.length - 1;\n        ch = this.input.charCodeAt(this.pos);\n        if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n          this.invalidStringToken(\n            this.pos - 1 - octalStr.length,\n            inTemplate\n              ? \"Octal literal in template string\"\n              : \"Octal literal in strict mode\"\n          );\n        }\n        return String.fromCharCode(octal)\n      }\n      if (isNewLine(ch)) {\n        // Unicode new line characters after \\ get removed from output in both\n        // template literals and strings\n        return \"\"\n      }\n      return String.fromCharCode(ch)\n    }\n  };\n\n  // Used to read character escape sequences ('\\x', '\\u', '\\U').\n\n  pp.readHexChar = function(len) {\n    var codePos = this.pos;\n    var n = this.readInt(16, len);\n    if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n    return n\n  };\n\n  // Read an identifier, and return it as a string. Sets `this.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n\n  pp.readWord1 = function() {\n    this.containsEsc = false;\n    var word = \"\", first = true, chunkStart = this.pos;\n    var astral = this.options.ecmaVersion >= 6;\n    while (this.pos < this.input.length) {\n      var ch = this.fullCharCodeAtPos();\n      if (isIdentifierChar(ch, astral)) {\n        this.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) { // \"\\\"\n        this.containsEsc = true;\n        word += this.input.slice(chunkStart, this.pos);\n        var escStart = this.pos;\n        if (this.input.charCodeAt(++this.pos) !== 117) // \"u\"\n          { this.invalidStringToken(this.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n        ++this.pos;\n        var esc = this.readCodePoint();\n        if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n          { this.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n        word += codePointToString(esc);\n        chunkStart = this.pos;\n      } else {\n        break\n      }\n      first = false;\n    }\n    return word + this.input.slice(chunkStart, this.pos)\n  };\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  pp.readWord = function() {\n    var word = this.readWord1();\n    var type = types$1.name;\n    if (this.keywords.test(word)) {\n      type = keywords[word];\n    }\n    return this.finishToken(type, word)\n  };\n\n  // Acorn is a tiny, fast JavaScript parser written in JavaScript.\n  //\n  // Acorn was written by Marijn Haverbeke, Ingvar Stepanyan, and\n  // various contributors and released under an MIT license.\n  //\n  // Git repositories for Acorn are available at\n  //\n  //     http://marijnhaverbeke.nl/git/acorn\n  //     https://github.com/acornjs/acorn.git\n  //\n  // Please use the [github bug tracker][ghbt] to report issues.\n  //\n  // [ghbt]: https://github.com/acornjs/acorn/issues\n  //\n  // [walk]: util/walk.js\n\n\n  var version = \"8.11.3\";\n\n  Parser.acorn = {\n    Parser: Parser,\n    version: version,\n    defaultOptions: defaultOptions,\n    Position: Position,\n    SourceLocation: SourceLocation,\n    getLineInfo: getLineInfo,\n    Node: Node,\n    TokenType: TokenType,\n    tokTypes: types$1,\n    keywordTypes: keywords,\n    TokContext: TokContext,\n    tokContexts: types,\n    isIdentifierChar: isIdentifierChar,\n    isIdentifierStart: isIdentifierStart,\n    Token: Token,\n    isNewLine: isNewLine,\n    lineBreak: lineBreak,\n    lineBreakG: lineBreakG,\n    nonASCIIwhitespace: nonASCIIwhitespace\n  };\n\n  // The main exported interface (under `self.acorn` when in the\n  // browser) is a `parse` function that takes a code string and returns\n  // an abstract syntax tree as specified by the [ESTree spec][estree].\n  //\n  // [estree]: https://github.com/estree/estree\n\n  function parse(input, options) {\n    return Parser.parse(input, options)\n  }\n\n  // This function tries to parse a single expression at a given\n  // offset in a string. Useful for parsing mixed-language formats\n  // that embed JavaScript expressions.\n\n  function parseExpressionAt(input, pos, options) {\n    return Parser.parseExpressionAt(input, pos, options)\n  }\n\n  // Acorn is organized as a tokenizer and a recursive-descent parser.\n  // The `tokenizer` export provides an interface to the tokenizer.\n\n  function tokenizer(input, options) {\n    return Parser.tokenizer(input, options)\n  }\n\n  exports.Node = Node;\n  exports.Parser = Parser;\n  exports.Position = Position;\n  exports.SourceLocation = SourceLocation;\n  exports.TokContext = TokContext;\n  exports.Token = Token;\n  exports.TokenType = TokenType;\n  exports.defaultOptions = defaultOptions;\n  exports.getLineInfo = getLineInfo;\n  exports.isIdentifierChar = isIdentifierChar;\n  exports.isIdentifierStart = isIdentifierStart;\n  exports.isNewLine = isNewLine;\n  exports.keywordTypes = keywords;\n  exports.lineBreak = lineBreak;\n  exports.lineBreakG = lineBreakG;\n  exports.nonASCIIwhitespace = nonASCIIwhitespace;\n  exports.parse = parse;\n  exports.parseExpressionAt = parseExpressionAt;\n  exports.tokContexts = types;\n  exports.tokTypes = types$1;\n  exports.tokenizer = tokenizer;\n  exports.version = version;\n\n}));\n", "(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@jridgewell/source-map')) :\ntypeof define === 'function' && define.amd ? define(['exports', '@jridgewell/source-map'], factory) :\n(global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.Terser = {}, global.sourceMap));\n})(this, (function (exports, sourceMap) { 'use strict';\n\n/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\nfunction characters(str) {\n    return str.split(\"\");\n}\n\nfunction member(name, array) {\n    return array.includes(name);\n}\n\nclass DefaultsError extends Error {\n    constructor(msg, defs) {\n        super();\n\n        this.name = \"DefaultsError\";\n        this.message = msg;\n        this.defs = defs;\n    }\n}\n\nfunction defaults(args, defs, croak) {\n    if (args === true) {\n        args = {};\n    } else if (args != null && typeof args === \"object\") {\n        args = {...args};\n    }\n\n    const ret = args || {};\n\n    if (croak) for (const i in ret) if (HOP(ret, i) && !HOP(defs, i)) {\n        throw new DefaultsError(\"`\" + i + \"` is not a supported option\", defs);\n    }\n\n    for (const i in defs) if (HOP(defs, i)) {\n        if (!args || !HOP(args, i)) {\n            ret[i] = defs[i];\n        } else if (i === \"ecma\") {\n            let ecma = args[i] | 0;\n            if (ecma > 5 && ecma < 2015) ecma += 2009;\n            ret[i] = ecma;\n        } else {\n            ret[i] = (args && HOP(args, i)) ? args[i] : defs[i];\n        }\n    }\n\n    return ret;\n}\n\nfunction noop() {}\nfunction return_false() { return false; }\nfunction return_true() { return true; }\nfunction return_this() { return this; }\nfunction return_null() { return null; }\n\nvar MAP = (function() {\n    function MAP(a, tw, allow_splicing = true) {\n        const new_a = [];\n\n        for (let i = 0; i < a.length; ++i) {\n            let item = a[i];\n            let ret = item.transform(tw, allow_splicing);\n\n            if (ret instanceof AST_Node) {\n                new_a.push(ret);\n            } else if (ret instanceof Splice) {\n                new_a.push(...ret.v);\n            }\n        }\n\n        return new_a;\n    }\n\n    MAP.splice = function(val) { return new Splice(val); };\n    MAP.skip = {};\n    function Splice(val) { this.v = val; }\n    return MAP;\n})();\n\nfunction make_node(ctor, orig, props) {\n    if (!props) props = {};\n    if (orig) {\n        if (!props.start) props.start = orig.start;\n        if (!props.end) props.end = orig.end;\n    }\n    return new ctor(props);\n}\n\nfunction push_uniq(array, el) {\n    if (!array.includes(el))\n        array.push(el);\n}\n\nfunction string_template(text, props) {\n    return text.replace(/{(.+?)}/g, function(str, p) {\n        return props && props[p];\n    });\n}\n\nfunction remove(array, el) {\n    for (var i = array.length; --i >= 0;) {\n        if (array[i] === el) array.splice(i, 1);\n    }\n}\n\nfunction mergeSort(array, cmp) {\n    if (array.length < 2) return array.slice();\n    function merge(a, b) {\n        var r = [], ai = 0, bi = 0, i = 0;\n        while (ai < a.length && bi < b.length) {\n            cmp(a[ai], b[bi]) <= 0\n                ? r[i++] = a[ai++]\n                : r[i++] = b[bi++];\n        }\n        if (ai < a.length) r.push.apply(r, a.slice(ai));\n        if (bi < b.length) r.push.apply(r, b.slice(bi));\n        return r;\n    }\n    function _ms(a) {\n        if (a.length <= 1)\n            return a;\n        var m = Math.floor(a.length / 2), left = a.slice(0, m), right = a.slice(m);\n        left = _ms(left);\n        right = _ms(right);\n        return merge(left, right);\n    }\n    return _ms(array);\n}\n\nfunction makePredicate(words) {\n    if (!Array.isArray(words)) words = words.split(\" \");\n\n    return new Set(words.sort());\n}\n\nfunction map_add(map, key, value) {\n    if (map.has(key)) {\n        map.get(key).push(value);\n    } else {\n        map.set(key, [ value ]);\n    }\n}\n\nfunction map_from_object(obj) {\n    var map = new Map();\n    for (var key in obj) {\n        if (HOP(obj, key) && key.charAt(0) === \"$\") {\n            map.set(key.substr(1), obj[key]);\n        }\n    }\n    return map;\n}\n\nfunction map_to_object(map) {\n    var obj = Object.create(null);\n    map.forEach(function (value, key) {\n        obj[\"$\" + key] = value;\n    });\n    return obj;\n}\n\nfunction HOP(obj, prop) {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nfunction keep_name(keep_setting, name) {\n    return keep_setting === true\n        || (keep_setting instanceof RegExp && keep_setting.test(name));\n}\n\nvar lineTerminatorEscape = {\n    \"\\0\": \"0\",\n    \"\\n\": \"n\",\n    \"\\r\": \"r\",\n    \"\\u2028\": \"u2028\",\n    \"\\u2029\": \"u2029\",\n};\nfunction regexp_source_fix(source) {\n    // V8 does not escape line terminators in regexp patterns in node 12\n    // We'll also remove literal \\0\n    return source.replace(/[\\0\\n\\r\\u2028\\u2029]/g, function (match, offset) {\n        var escaped = source[offset - 1] == \"\\\\\"\n            && (source[offset - 2] != \"\\\\\"\n            || /(?:^|[^\\\\])(?:\\\\{2})*$/.test(source.slice(0, offset - 1)));\n        return (escaped ? \"\" : \"\\\\\") + lineTerminatorEscape[match];\n    });\n}\n\n// Subset of regexps that is not going to cause regexp based DDOS\n// https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS\nconst re_safe_regexp = /^[\\\\/|\\0\\s\\w^$.[\\]()]*$/;\n\n/** Check if the regexp is safe for Terser to create without risking a RegExp DOS */\nconst regexp_is_safe = (source) => re_safe_regexp.test(source);\n\nconst all_flags = \"dgimsuyv\";\nfunction sort_regexp_flags(flags) {\n    const existing_flags = new Set(flags.split(\"\"));\n    let out = \"\";\n    for (const flag of all_flags) {\n        if (existing_flags.has(flag)) {\n            out += flag;\n            existing_flags.delete(flag);\n        }\n    }\n    if (existing_flags.size) {\n        // Flags Terser doesn't know about\n        existing_flags.forEach(flag => { out += flag; });\n    }\n    return out;\n}\n\nfunction has_annotation(node, annotation) {\n    return node._annotations & annotation;\n}\n\nfunction set_annotation(node, annotation) {\n    node._annotations |= annotation;\n}\n\nfunction clear_annotation(node, annotation) {\n    node._annotations &= ~annotation;\n}\n\n/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n    Parser based on parse-js (http://marijn.haverbeke.nl/parse-js/).\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\nvar LATEST_RAW = \"\";  // Only used for numbers and template strings\nvar TEMPLATE_RAWS = new Map();  // Raw template strings\n\nvar KEYWORDS = \"break case catch class const continue debugger default delete do else export extends finally for function if in instanceof let new return switch throw try typeof var void while with\";\nvar KEYWORDS_ATOM = \"false null true\";\nvar RESERVED_WORDS = \"enum import super this \" + KEYWORDS_ATOM + \" \" + KEYWORDS;\nvar ALL_RESERVED_WORDS = \"implements interface package private protected public static \" + RESERVED_WORDS;\nvar KEYWORDS_BEFORE_EXPRESSION = \"return new delete throw else case yield await\";\n\nKEYWORDS = makePredicate(KEYWORDS);\nRESERVED_WORDS = makePredicate(RESERVED_WORDS);\nKEYWORDS_BEFORE_EXPRESSION = makePredicate(KEYWORDS_BEFORE_EXPRESSION);\nKEYWORDS_ATOM = makePredicate(KEYWORDS_ATOM);\nALL_RESERVED_WORDS = makePredicate(ALL_RESERVED_WORDS);\n\nvar OPERATOR_CHARS = makePredicate(characters(\"+-*&%=<>!?|~^\"));\n\nvar RE_NUM_LITERAL = /[0-9a-f]/i;\nvar RE_HEX_NUMBER = /^0x[0-9a-f]+$/i;\nvar RE_OCT_NUMBER = /^0[0-7]+$/;\nvar RE_ES6_OCT_NUMBER = /^0o[0-7]+$/i;\nvar RE_BIN_NUMBER = /^0b[01]+$/i;\nvar RE_DEC_NUMBER = /^\\d*\\.?\\d*(?:e[+-]?\\d*(?:\\d\\.?|\\.?\\d)\\d*)?$/i;\nvar RE_BIG_INT = /^(0[xob])?[0-9a-f]+n$/i;\n\nvar OPERATORS = makePredicate([\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"new\",\n    \"void\",\n    \"delete\",\n    \"++\",\n    \"--\",\n    \"+\",\n    \"-\",\n    \"!\",\n    \"~\",\n    \"&\",\n    \"|\",\n    \"^\",\n    \"*\",\n    \"**\",\n    \"/\",\n    \"%\",\n    \">>\",\n    \"<<\",\n    \">>>\",\n    \"<\",\n    \">\",\n    \"<=\",\n    \">=\",\n    \"==\",\n    \"===\",\n    \"!=\",\n    \"!==\",\n    \"?\",\n    \"=\",\n    \"+=\",\n    \"-=\",\n    \"||=\",\n    \"&&=\",\n    \"??=\",\n    \"/=\",\n    \"*=\",\n    \"**=\",\n    \"%=\",\n    \">>=\",\n    \"<<=\",\n    \">>>=\",\n    \"|=\",\n    \"^=\",\n    \"&=\",\n    \"&&\",\n    \"??\",\n    \"||\",\n]);\n\nvar WHITESPACE_CHARS = makePredicate(characters(\" \\u00a0\\n\\r\\t\\f\\u000b\\u200b\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\uFEFF\"));\n\nvar NEWLINE_CHARS = makePredicate(characters(\"\\n\\r\\u2028\\u2029\"));\n\nvar PUNC_AFTER_EXPRESSION = makePredicate(characters(\";]),:\"));\n\nvar PUNC_BEFORE_EXPRESSION = makePredicate(characters(\"[{(,;:\"));\n\nvar PUNC_CHARS = makePredicate(characters(\"[]{}(),;:\"));\n\n/* -----[ Tokenizer ]----- */\n\n// surrogate safe regexps adapted from https://github.com/mathiasbynens/unicode-8.0.0/tree/89b412d8a71ecca9ed593d9e9fa073ab64acfebe/Binary_Property\nvar UNICODE = {\n    ID_Start: /[$A-Z_a-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]/,\n    ID_Continue: /(?:[$0-9A-Z_a-z\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDEC0-\\uDEF8]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF])+/,\n};\n\ntry {\n    UNICODE = {\n        // https://262.ecma-international.org/13.0/#prod-IdentifierStartChar\n        // $, _, ID_Start\n        ID_Start: new RegExp(\"[_$\\\\p{ID_Start}]\", \"u\"),\n        // https://262.ecma-international.org/13.0/#prod-IdentifierPartChar\n        // $, zero-width-joiner, zero-width-non-joiner, ID_Continue\n        ID_Continue: new RegExp(\"[$\\\\u200C\\\\u200D\\\\p{ID_Continue}]+\", \"u\"),\n    };\n} catch(e) {\n    // Could not use modern JS \\p{...}. UNICODE is already defined above so let's continue\n}\n\nfunction get_full_char(str, pos) {\n    if (is_surrogate_pair_head(str.charCodeAt(pos))) {\n        if (is_surrogate_pair_tail(str.charCodeAt(pos + 1))) {\n            return str.charAt(pos) + str.charAt(pos + 1);\n        }\n    } else if (is_surrogate_pair_tail(str.charCodeAt(pos))) {\n        if (is_surrogate_pair_head(str.charCodeAt(pos - 1))) {\n            return str.charAt(pos - 1) + str.charAt(pos);\n        }\n    }\n    return str.charAt(pos);\n}\n\nfunction get_full_char_code(str, pos) {\n    // https://en.wikipedia.org/wiki/Universal_Character_Set_characters#Surrogates\n    if (is_surrogate_pair_head(str.charCodeAt(pos))) {\n        return 0x10000 + (str.charCodeAt(pos) - 0xd800 << 10) + str.charCodeAt(pos + 1) - 0xdc00;\n    }\n    return str.charCodeAt(pos);\n}\n\nfunction get_full_char_length(str) {\n    var surrogates = 0;\n\n    for (var i = 0; i < str.length; i++) {\n        if (is_surrogate_pair_head(str.charCodeAt(i)) && is_surrogate_pair_tail(str.charCodeAt(i + 1))) {\n            surrogates++;\n            i++;\n        }\n    }\n\n    return str.length - surrogates;\n}\n\nfunction from_char_code(code) {\n    // Based on https://github.com/mathiasbynens/String.fromCodePoint/blob/master/fromcodepoint.js\n    if (code > 0xFFFF) {\n        code -= 0x10000;\n        return (String.fromCharCode((code >> 10) + 0xD800) +\n            String.fromCharCode((code % 0x400) + 0xDC00));\n    }\n    return String.fromCharCode(code);\n}\n\nfunction is_surrogate_pair_head(code) {\n    return code >= 0xd800 && code <= 0xdbff;\n}\n\nfunction is_surrogate_pair_tail(code) {\n    return code >= 0xdc00 && code <= 0xdfff;\n}\n\nfunction is_digit(code) {\n    return code >= 48 && code <= 57;\n}\n\nfunction is_identifier_start(ch) {\n    return UNICODE.ID_Start.test(ch);\n}\n\nfunction is_identifier_char(ch) {\n    return UNICODE.ID_Continue.test(ch);\n}\n\nconst BASIC_IDENT = /^[a-z_$][a-z0-9_$]*$/i;\n\nfunction is_basic_identifier_string(str) {\n    return BASIC_IDENT.test(str);\n}\n\nfunction is_identifier_string(str, allow_surrogates) {\n    if (BASIC_IDENT.test(str)) {\n        return true;\n    }\n    if (!allow_surrogates && /[\\ud800-\\udfff]/.test(str)) {\n        return false;\n    }\n    var match = UNICODE.ID_Start.exec(str);\n    if (!match || match.index !== 0) {\n        return false;\n    }\n\n    str = str.slice(match[0].length);\n    if (!str) {\n        return true;\n    }\n\n    match = UNICODE.ID_Continue.exec(str);\n    return !!match && match[0].length === str.length;\n}\n\nfunction parse_js_number(num, allow_e = true) {\n    if (!allow_e && num.includes(\"e\")) {\n        return NaN;\n    }\n    if (RE_HEX_NUMBER.test(num)) {\n        return parseInt(num.substr(2), 16);\n    } else if (RE_OCT_NUMBER.test(num)) {\n        return parseInt(num.substr(1), 8);\n    } else if (RE_ES6_OCT_NUMBER.test(num)) {\n        return parseInt(num.substr(2), 8);\n    } else if (RE_BIN_NUMBER.test(num)) {\n        return parseInt(num.substr(2), 2);\n    } else if (RE_DEC_NUMBER.test(num)) {\n        return parseFloat(num);\n    } else {\n        var val = parseFloat(num);\n        if (val == num) return val;\n    }\n}\n\nclass JS_Parse_Error extends Error {\n    constructor(message, filename, line, col, pos) {\n        super();\n\n        this.name = \"SyntaxError\";\n        this.message = message;\n        this.filename = filename;\n        this.line = line;\n        this.col = col;\n        this.pos = pos;\n    }\n}\n\nfunction js_error(message, filename, line, col, pos) {\n    throw new JS_Parse_Error(message, filename, line, col, pos);\n}\n\nfunction is_token(token, type, val) {\n    return token.type == type && (val == null || token.value == val);\n}\n\nvar EX_EOF = {};\n\nfunction tokenizer($TEXT, filename, html5_comments, shebang) {\n    var S = {\n        text            : $TEXT,\n        filename        : filename,\n        pos             : 0,\n        tokpos          : 0,\n        line            : 1,\n        tokline         : 0,\n        col             : 0,\n        tokcol          : 0,\n        newline_before  : false,\n        regex_allowed   : false,\n        brace_counter   : 0,\n        template_braces : [],\n        comments_before : [],\n        directives      : {},\n        directive_stack : []\n    };\n\n    function peek() { return get_full_char(S.text, S.pos); }\n\n    // Used because parsing ?. involves a lookahead for a digit\n    function is_option_chain_op() {\n        const must_be_dot = S.text.charCodeAt(S.pos + 1) === 46;\n        if (!must_be_dot) return false;\n\n        const cannot_be_digit = S.text.charCodeAt(S.pos + 2);\n        return cannot_be_digit < 48 || cannot_be_digit > 57;\n    }\n\n    function next(signal_eof, in_string) {\n        var ch = get_full_char(S.text, S.pos++);\n        if (signal_eof && !ch)\n            throw EX_EOF;\n        if (NEWLINE_CHARS.has(ch)) {\n            S.newline_before = S.newline_before || !in_string;\n            ++S.line;\n            S.col = 0;\n            if (ch == \"\\r\" && peek() == \"\\n\") {\n                // treat a \\r\\n sequence as a single \\n\n                ++S.pos;\n                ch = \"\\n\";\n            }\n        } else {\n            if (ch.length > 1) {\n                ++S.pos;\n                ++S.col;\n            }\n            ++S.col;\n        }\n        return ch;\n    }\n\n    function forward(i) {\n        while (i--) next();\n    }\n\n    function looking_at(str) {\n        return S.text.substr(S.pos, str.length) == str;\n    }\n\n    function find_eol() {\n        var text = S.text;\n        for (var i = S.pos, n = S.text.length; i < n; ++i) {\n            var ch = text[i];\n            if (NEWLINE_CHARS.has(ch))\n                return i;\n        }\n        return -1;\n    }\n\n    function find(what, signal_eof) {\n        var pos = S.text.indexOf(what, S.pos);\n        if (signal_eof && pos == -1) throw EX_EOF;\n        return pos;\n    }\n\n    function start_token() {\n        S.tokline = S.line;\n        S.tokcol = S.col;\n        S.tokpos = S.pos;\n    }\n\n    var prev_was_dot = false;\n    var previous_token = null;\n    function token(type, value, is_comment) {\n        S.regex_allowed = ((type == \"operator\" && !UNARY_POSTFIX.has(value)) ||\n                           (type == \"keyword\" && KEYWORDS_BEFORE_EXPRESSION.has(value)) ||\n                           (type == \"punc\" && PUNC_BEFORE_EXPRESSION.has(value))) ||\n                           (type == \"arrow\");\n        if (type == \"punc\" && (value == \".\" || value == \"?.\")) {\n            prev_was_dot = true;\n        } else if (!is_comment) {\n            prev_was_dot = false;\n        }\n        const line     = S.tokline;\n        const col      = S.tokcol;\n        const pos      = S.tokpos;\n        const nlb      = S.newline_before;\n        const file     = filename;\n        let comments_before = [];\n        let comments_after  = [];\n\n        if (!is_comment) {\n            comments_before = S.comments_before;\n            comments_after = S.comments_before = [];\n        }\n        S.newline_before = false;\n        const tok = new AST_Token(type, value, line, col, pos, nlb, comments_before, comments_after, file);\n\n        if (!is_comment) previous_token = tok;\n        return tok;\n    }\n\n    function skip_whitespace() {\n        while (WHITESPACE_CHARS.has(peek()))\n            next();\n    }\n\n    function read_while(pred) {\n        var ret = \"\", ch, i = 0;\n        while ((ch = peek()) && pred(ch, i++))\n            ret += next();\n        return ret;\n    }\n\n    function parse_error(err) {\n        js_error(err, filename, S.tokline, S.tokcol, S.tokpos);\n    }\n\n    function read_num(prefix) {\n        var has_e = false, after_e = false, has_x = false, has_dot = prefix == \".\", is_big_int = false, numeric_separator = false;\n        var num = read_while(function(ch, i) {\n            if (is_big_int) return false;\n\n            var code = ch.charCodeAt(0);\n            switch (code) {\n              case 95: // _\n                return (numeric_separator = true);\n              case 98: case 66: // bB\n                return (has_x = true); // Can occur in hex sequence, don't return false yet\n              case 111: case 79: // oO\n              case 120: case 88: // xX\n                return has_x ? false : (has_x = true);\n              case 101: case 69: // eE\n                return has_x ? true : has_e ? false : (has_e = after_e = true);\n              case 45: // -\n                return after_e || (i == 0 && !prefix);\n              case 43: // +\n                return after_e;\n              case (after_e = false, 46): // .\n                return (!has_dot && !has_x && !has_e) ? (has_dot = true) : false;\n            }\n\n            if (ch === \"n\") {\n                is_big_int = true;\n\n                return true;\n            }\n\n            return RE_NUM_LITERAL.test(ch);\n        });\n        if (prefix) num = prefix + num;\n\n        LATEST_RAW = num;\n\n        if (RE_OCT_NUMBER.test(num) && next_token.has_directive(\"use strict\")) {\n            parse_error(\"Legacy octal literals are not allowed in strict mode\");\n        }\n        if (numeric_separator) {\n            if (num.endsWith(\"_\")) {\n                parse_error(\"Numeric separators are not allowed at the end of numeric literals\");\n            } else if (num.includes(\"__\")) {\n                parse_error(\"Only one underscore is allowed as numeric separator\");\n            }\n            num = num.replace(/_/g, \"\");\n        }\n        if (num.endsWith(\"n\")) {\n            const without_n = num.slice(0, -1);\n            const allow_e = RE_HEX_NUMBER.test(without_n);\n            const valid = parse_js_number(without_n, allow_e);\n            if (!has_dot && RE_BIG_INT.test(num) && !isNaN(valid))\n                return token(\"big_int\", without_n);\n            parse_error(\"Invalid or unexpected token\");\n        }\n        var valid = parse_js_number(num);\n        if (!isNaN(valid)) {\n            return token(\"num\", valid);\n        } else {\n            parse_error(\"Invalid syntax: \" + num);\n        }\n    }\n\n    function is_octal(ch) {\n        return ch >= \"0\" && ch <= \"7\";\n    }\n\n    function read_escaped_char(in_string, strict_hex, template_string) {\n        var ch = next(true, in_string);\n        switch (ch.charCodeAt(0)) {\n          case 110 : return \"\\n\";\n          case 114 : return \"\\r\";\n          case 116 : return \"\\t\";\n          case 98  : return \"\\b\";\n          case 118 : return \"\\u000b\"; // \\v\n          case 102 : return \"\\f\";\n          case 120 : return String.fromCharCode(hex_bytes(2, strict_hex)); // \\x\n          case 117 : // \\u\n            if (peek() == \"{\") {\n                next(true);\n                if (peek() === \"}\")\n                    parse_error(\"Expecting hex-character between {}\");\n                while (peek() == \"0\") next(true); // No significance\n                var result, length = find(\"}\", true) - S.pos;\n                // Avoid 32 bit integer overflow (1 << 32 === 1)\n                // We know first character isn't 0 and thus out of range anyway\n                if (length > 6 || (result = hex_bytes(length, strict_hex)) > 0x10FFFF) {\n                    parse_error(\"Unicode reference out of bounds\");\n                }\n                next(true);\n                return from_char_code(result);\n            }\n            return String.fromCharCode(hex_bytes(4, strict_hex));\n          case 10  : return \"\"; // newline\n          case 13  :            // \\r\n            if (peek() == \"\\n\") { // DOS newline\n                next(true, in_string);\n                return \"\";\n            }\n        }\n        if (is_octal(ch)) {\n            if (template_string && strict_hex) {\n                const represents_null_character = ch === \"0\" && !is_octal(peek());\n                if (!represents_null_character) {\n                    parse_error(\"Octal escape sequences are not allowed in template strings\");\n                }\n            }\n            return read_octal_escape_sequence(ch, strict_hex);\n        }\n        return ch;\n    }\n\n    function read_octal_escape_sequence(ch, strict_octal) {\n        // Read\n        var p = peek();\n        if (p >= \"0\" && p <= \"7\") {\n            ch += next(true);\n            if (ch[0] <= \"3\" && (p = peek()) >= \"0\" && p <= \"7\")\n                ch += next(true);\n        }\n\n        // Parse\n        if (ch === \"0\") return \"\\0\";\n        if (ch.length > 0 && next_token.has_directive(\"use strict\") && strict_octal)\n            parse_error(\"Legacy octal escape sequences are not allowed in strict mode\");\n        return String.fromCharCode(parseInt(ch, 8));\n    }\n\n    function hex_bytes(n, strict_hex) {\n        var num = 0;\n        for (; n > 0; --n) {\n            if (!strict_hex && isNaN(parseInt(peek(), 16))) {\n                return parseInt(num, 16) || \"\";\n            }\n            var digit = next(true);\n            if (isNaN(parseInt(digit, 16)))\n                parse_error(\"Invalid hex-character pattern in string\");\n            num += digit;\n        }\n        return parseInt(num, 16);\n    }\n\n    var read_string = with_eof_error(\"Unterminated string constant\", function() {\n        const start_pos = S.pos;\n        var quote = next(), ret = [];\n        for (;;) {\n            var ch = next(true, true);\n            if (ch == \"\\\\\") ch = read_escaped_char(true, true);\n            else if (ch == \"\\r\" || ch == \"\\n\") parse_error(\"Unterminated string constant\");\n            else if (ch == quote) break;\n            ret.push(ch);\n        }\n        var tok = token(\"string\", ret.join(\"\"));\n        LATEST_RAW = S.text.slice(start_pos, S.pos);\n        tok.quote = quote;\n        return tok;\n    });\n\n    var read_template_characters = with_eof_error(\"Unterminated template\", function(begin) {\n        if (begin) {\n            S.template_braces.push(S.brace_counter);\n        }\n        var content = \"\", raw = \"\", ch, tok;\n        next(true, true);\n        while ((ch = next(true, true)) != \"`\") {\n            if (ch == \"\\r\") {\n                if (peek() == \"\\n\") ++S.pos;\n                ch = \"\\n\";\n            } else if (ch == \"$\" && peek() == \"{\") {\n                next(true, true);\n                S.brace_counter++;\n                tok = token(begin ? \"template_head\" : \"template_substitution\", content);\n                TEMPLATE_RAWS.set(tok, raw);\n                tok.template_end = false;\n                return tok;\n            }\n\n            raw += ch;\n            if (ch == \"\\\\\") {\n                var tmp = S.pos;\n                var prev_is_tag = previous_token && (previous_token.type === \"name\" || previous_token.type === \"punc\" && (previous_token.value === \")\" || previous_token.value === \"]\"));\n                ch = read_escaped_char(true, !prev_is_tag, true);\n                raw += S.text.substr(tmp, S.pos - tmp);\n            }\n\n            content += ch;\n        }\n        S.template_braces.pop();\n        tok = token(begin ? \"template_head\" : \"template_substitution\", content);\n        TEMPLATE_RAWS.set(tok, raw);\n        tok.template_end = true;\n        return tok;\n    });\n\n    function skip_line_comment(type) {\n        var regex_allowed = S.regex_allowed;\n        var i = find_eol(), ret;\n        if (i == -1) {\n            ret = S.text.substr(S.pos);\n            S.pos = S.text.length;\n        } else {\n            ret = S.text.substring(S.pos, i);\n            S.pos = i;\n        }\n        S.col = S.tokcol + (S.pos - S.tokpos);\n        S.comments_before.push(token(type, ret, true));\n        S.regex_allowed = regex_allowed;\n        return next_token;\n    }\n\n    var skip_multiline_comment = with_eof_error(\"Unterminated multiline comment\", function() {\n        var regex_allowed = S.regex_allowed;\n        var i = find(\"*/\", true);\n        var text = S.text.substring(S.pos, i).replace(/\\r\\n|\\r|\\u2028|\\u2029/g, \"\\n\");\n        // update stream position\n        forward(get_full_char_length(text) /* text length doesn't count \\r\\n as 2 char while S.pos - i does */ + 2);\n        S.comments_before.push(token(\"comment2\", text, true));\n        S.newline_before = S.newline_before || text.includes(\"\\n\");\n        S.regex_allowed = regex_allowed;\n        return next_token;\n    });\n\n    var read_name = with_eof_error(\"Unterminated identifier name\", function() {\n        var name = [], ch, escaped = false;\n        var read_escaped_identifier_char = function() {\n            escaped = true;\n            next();\n            if (peek() !== \"u\") {\n                parse_error(\"Expecting UnicodeEscapeSequence -- uXXXX or u{XXXX}\");\n            }\n            return read_escaped_char(false, true);\n        };\n\n        // Read first character (ID_Start)\n        if ((ch = peek()) === \"\\\\\") {\n            ch = read_escaped_identifier_char();\n            if (!is_identifier_start(ch)) {\n                parse_error(\"First identifier char is an invalid identifier char\");\n            }\n        } else if (is_identifier_start(ch)) {\n            next();\n        } else {\n            return \"\";\n        }\n\n        name.push(ch);\n\n        // Read ID_Continue\n        while ((ch = peek()) != null) {\n            if ((ch = peek()) === \"\\\\\") {\n                ch = read_escaped_identifier_char();\n                if (!is_identifier_char(ch)) {\n                    parse_error(\"Invalid escaped identifier char\");\n                }\n            } else {\n                if (!is_identifier_char(ch)) {\n                    break;\n                }\n                next();\n            }\n            name.push(ch);\n        }\n        const name_str = name.join(\"\");\n        if (RESERVED_WORDS.has(name_str) && escaped) {\n            parse_error(\"Escaped characters are not allowed in keywords\");\n        }\n        return name_str;\n    });\n\n    var read_regexp = with_eof_error(\"Unterminated regular expression\", function(source) {\n        var prev_backslash = false, ch, in_class = false;\n        while ((ch = next(true))) if (NEWLINE_CHARS.has(ch)) {\n            parse_error(\"Unexpected line terminator\");\n        } else if (prev_backslash) {\n            source += \"\\\\\" + ch;\n            prev_backslash = false;\n        } else if (ch == \"[\") {\n            in_class = true;\n            source += ch;\n        } else if (ch == \"]\" && in_class) {\n            in_class = false;\n            source += ch;\n        } else if (ch == \"/\" && !in_class) {\n            break;\n        } else if (ch == \"\\\\\") {\n            prev_backslash = true;\n        } else {\n            source += ch;\n        }\n        const flags = read_name();\n        return token(\"regexp\", \"/\" + source + \"/\" + flags);\n    });\n\n    function read_operator(prefix) {\n        function grow(op) {\n            if (!peek()) return op;\n            var bigger = op + peek();\n            if (OPERATORS.has(bigger)) {\n                next();\n                return grow(bigger);\n            } else {\n                return op;\n            }\n        }\n        return token(\"operator\", grow(prefix || next()));\n    }\n\n    function handle_slash() {\n        next();\n        switch (peek()) {\n          case \"/\":\n            next();\n            return skip_line_comment(\"comment1\");\n          case \"*\":\n            next();\n            return skip_multiline_comment();\n        }\n        return S.regex_allowed ? read_regexp(\"\") : read_operator(\"/\");\n    }\n\n    function handle_eq_sign() {\n        next();\n        if (peek() === \">\") {\n            next();\n            return token(\"arrow\", \"=>\");\n        } else {\n            return read_operator(\"=\");\n        }\n    }\n\n    function handle_dot() {\n        next();\n        if (is_digit(peek().charCodeAt(0))) {\n            return read_num(\".\");\n        }\n        if (peek() === \".\") {\n            next();  // Consume second dot\n            next();  // Consume third dot\n            return token(\"expand\", \"...\");\n        }\n\n        return token(\"punc\", \".\");\n    }\n\n    function read_word() {\n        var word = read_name();\n        if (prev_was_dot) return token(\"name\", word);\n        return KEYWORDS_ATOM.has(word) ? token(\"atom\", word)\n            : !KEYWORDS.has(word) ? token(\"name\", word)\n            : OPERATORS.has(word) ? token(\"operator\", word)\n            : token(\"keyword\", word);\n    }\n\n    function read_private_word() {\n        next();\n        return token(\"privatename\", read_name());\n    }\n\n    function with_eof_error(eof_error, cont) {\n        return function(x) {\n            try {\n                return cont(x);\n            } catch(ex) {\n                if (ex === EX_EOF) parse_error(eof_error);\n                else throw ex;\n            }\n        };\n    }\n\n    function next_token(force_regexp) {\n        if (force_regexp != null)\n            return read_regexp(force_regexp);\n        if (shebang && S.pos == 0 && looking_at(\"#!\")) {\n            start_token();\n            forward(2);\n            skip_line_comment(\"comment5\");\n        }\n        for (;;) {\n            skip_whitespace();\n            start_token();\n            if (html5_comments) {\n                if (looking_at(\"<!--\")) {\n                    forward(4);\n                    skip_line_comment(\"comment3\");\n                    continue;\n                }\n                if (looking_at(\"-->\") && S.newline_before) {\n                    forward(3);\n                    skip_line_comment(\"comment4\");\n                    continue;\n                }\n            }\n            var ch = peek();\n            if (!ch) return token(\"eof\");\n            var code = ch.charCodeAt(0);\n            switch (code) {\n              case 34: case 39: return read_string();\n              case 46: return handle_dot();\n              case 47: {\n                  var tok = handle_slash();\n                  if (tok === next_token) continue;\n                  return tok;\n              }\n              case 61: return handle_eq_sign();\n              case 63: {\n                  if (!is_option_chain_op()) break;  // Handled below\n\n                  next(); // ?\n                  next(); // .\n\n                  return token(\"punc\", \"?.\");\n              }\n              case 96: return read_template_characters(true);\n              case 123:\n                S.brace_counter++;\n                break;\n              case 125:\n                S.brace_counter--;\n                if (S.template_braces.length > 0\n                    && S.template_braces[S.template_braces.length - 1] === S.brace_counter)\n                    return read_template_characters(false);\n                break;\n            }\n            if (is_digit(code)) return read_num();\n            if (PUNC_CHARS.has(ch)) return token(\"punc\", next());\n            if (OPERATOR_CHARS.has(ch)) return read_operator();\n            if (code == 92 || is_identifier_start(ch)) return read_word();\n            if (code == 35) return read_private_word();\n            break;\n        }\n        parse_error(\"Unexpected character '\" + ch + \"'\");\n    }\n\n    next_token.next = next;\n    next_token.peek = peek;\n\n    next_token.context = function(nc) {\n        if (nc) S = nc;\n        return S;\n    };\n\n    next_token.add_directive = function(directive) {\n        S.directive_stack[S.directive_stack.length - 1].push(directive);\n\n        if (S.directives[directive] === undefined) {\n            S.directives[directive] = 1;\n        } else {\n            S.directives[directive]++;\n        }\n    };\n\n    next_token.push_directives_stack = function() {\n        S.directive_stack.push([]);\n    };\n\n    next_token.pop_directives_stack = function() {\n        var directives = S.directive_stack[S.directive_stack.length - 1];\n\n        for (var i = 0; i < directives.length; i++) {\n            S.directives[directives[i]]--;\n        }\n\n        S.directive_stack.pop();\n    };\n\n    next_token.has_directive = function(directive) {\n        return S.directives[directive] > 0;\n    };\n\n    return next_token;\n\n}\n\n/* -----[ Parser (constants) ]----- */\n\nvar UNARY_PREFIX = makePredicate([\n    \"typeof\",\n    \"void\",\n    \"delete\",\n    \"--\",\n    \"++\",\n    \"!\",\n    \"~\",\n    \"-\",\n    \"+\"\n]);\n\nvar UNARY_POSTFIX = makePredicate([ \"--\", \"++\" ]);\n\nvar ASSIGNMENT = makePredicate([ \"=\", \"+=\", \"-=\", \"??=\", \"&&=\", \"||=\", \"/=\", \"*=\", \"**=\", \"%=\", \">>=\", \"<<=\", \">>>=\", \"|=\", \"^=\", \"&=\" ]);\n\nvar LOGICAL_ASSIGNMENT = makePredicate([ \"??=\", \"&&=\", \"||=\" ]);\n\nvar PRECEDENCE = (function(a, ret) {\n    for (var i = 0; i < a.length; ++i) {\n        var b = a[i];\n        for (var j = 0; j < b.length; ++j) {\n            ret[b[j]] = i + 1;\n        }\n    }\n    return ret;\n})(\n    [\n        [\"||\"],\n        [\"??\"],\n        [\"&&\"],\n        [\"|\"],\n        [\"^\"],\n        [\"&\"],\n        [\"==\", \"===\", \"!=\", \"!==\"],\n        [\"<\", \">\", \"<=\", \">=\", \"in\", \"instanceof\"],\n        [\">>\", \"<<\", \">>>\"],\n        [\"+\", \"-\"],\n        [\"*\", \"/\", \"%\"],\n        [\"**\"]\n    ],\n    {}\n);\n\nvar ATOMIC_START_TOKEN = makePredicate([ \"atom\", \"num\", \"big_int\", \"string\", \"regexp\", \"name\"]);\n\n/* -----[ Parser ]----- */\n\nfunction parse($TEXT, options) {\n    // maps start tokens to count of comments found outside of their parens\n    // Example: /* I count */ ( /* I don't */ foo() )\n    // Useful because comments_before property of call with parens outside\n    // contains both comments inside and outside these parens. Used to find the\n    \n    const outer_comments_before_counts = new WeakMap();\n\n    options = defaults(options, {\n        bare_returns   : false,\n        ecma           : null,  // Legacy\n        expression     : false,\n        filename       : null,\n        html5_comments : true,\n        module         : false,\n        shebang        : true,\n        strict         : false,\n        toplevel       : null,\n    }, true);\n\n    var S = {\n        input         : (typeof $TEXT == \"string\"\n                         ? tokenizer($TEXT, options.filename,\n                                     options.html5_comments, options.shebang)\n                         : $TEXT),\n        token         : null,\n        prev          : null,\n        peeked        : null,\n        in_function   : 0,\n        in_async      : -1,\n        in_generator  : -1,\n        in_directives : true,\n        in_loop       : 0,\n        labels        : []\n    };\n\n    S.token = next();\n\n    function is(type, value) {\n        return is_token(S.token, type, value);\n    }\n\n    function peek() { return S.peeked || (S.peeked = S.input()); }\n\n    function next() {\n        S.prev = S.token;\n\n        if (!S.peeked) peek();\n        S.token = S.peeked;\n        S.peeked = null;\n        S.in_directives = S.in_directives && (\n            S.token.type == \"string\" || is(\"punc\", \";\")\n        );\n        return S.token;\n    }\n\n    function prev() {\n        return S.prev;\n    }\n\n    function croak(msg, line, col, pos) {\n        var ctx = S.input.context();\n        js_error(msg,\n                 ctx.filename,\n                 line != null ? line : ctx.tokline,\n                 col != null ? col : ctx.tokcol,\n                 pos != null ? pos : ctx.tokpos);\n    }\n\n    function token_error(token, msg) {\n        croak(msg, token.line, token.col);\n    }\n\n    function unexpected(token) {\n        if (token == null)\n            token = S.token;\n        token_error(token, \"Unexpected token: \" + token.type + \" (\" + token.value + \")\");\n    }\n\n    function expect_token(type, val) {\n        if (is(type, val)) {\n            return next();\n        }\n        token_error(S.token, \"Unexpected token \" + S.token.type + \" «\" + S.token.value + \"»\" + \", expected \" + type + \" «\" + val + \"»\");\n    }\n\n    function expect(punc) { return expect_token(\"punc\", punc); }\n\n    function has_newline_before(token) {\n        return token.nlb || !token.comments_before.every((comment) => !comment.nlb);\n    }\n\n    function can_insert_semicolon() {\n        return !options.strict\n            && (is(\"eof\") || is(\"punc\", \"}\") || has_newline_before(S.token));\n    }\n\n    function is_in_generator() {\n        return S.in_generator === S.in_function;\n    }\n\n    function is_in_async() {\n        return S.in_async === S.in_function;\n    }\n\n    function can_await() {\n        return (\n            S.in_async === S.in_function\n            || S.in_function === 0 && S.input.has_directive(\"use strict\")\n        );\n    }\n\n    function semicolon(optional) {\n        if (is(\"punc\", \";\")) next();\n        else if (!optional && !can_insert_semicolon()) unexpected();\n    }\n\n    function parenthesised() {\n        expect(\"(\");\n        var exp = expression(true);\n        expect(\")\");\n        return exp;\n    }\n\n    function embed_tokens(parser) {\n        return function _embed_tokens_wrapper(...args) {\n            const start = S.token;\n            const expr = parser(...args);\n            expr.start = start;\n            expr.end = prev();\n            return expr;\n        };\n    }\n\n    function handle_regexp() {\n        if (is(\"operator\", \"/\") || is(\"operator\", \"/=\")) {\n            S.peeked = null;\n            S.token = S.input(S.token.value.substr(1)); // force regexp\n        }\n    }\n\n    var statement = embed_tokens(function statement(is_export_default, is_for_body, is_if_body) {\n        handle_regexp();\n        switch (S.token.type) {\n          case \"string\":\n            if (S.in_directives) {\n                var token = peek();\n                if (!LATEST_RAW.includes(\"\\\\\")\n                    && (is_token(token, \"punc\", \";\")\n                        || is_token(token, \"punc\", \"}\")\n                        || has_newline_before(token)\n                        || is_token(token, \"eof\"))) {\n                    S.input.add_directive(S.token.value);\n                } else {\n                    S.in_directives = false;\n                }\n            }\n            var dir = S.in_directives, stat = simple_statement();\n            return dir && stat.body instanceof AST_String ? new AST_Directive(stat.body) : stat;\n          case \"template_head\":\n          case \"num\":\n          case \"big_int\":\n          case \"regexp\":\n          case \"operator\":\n          case \"atom\":\n            return simple_statement();\n\n          case \"name\":\n          case \"privatename\":\n            if(is(\"privatename\") && !S.in_class)\n                croak(\"Private field must be used in an enclosing class\");\n\n            if (S.token.value == \"async\" && is_token(peek(), \"keyword\", \"function\")) {\n                next();\n                next();\n                if (is_for_body) {\n                    croak(\"functions are not allowed as the body of a loop\");\n                }\n                return function_(AST_Defun, false, true, is_export_default);\n            }\n            if (S.token.value == \"import\" && !is_token(peek(), \"punc\", \"(\") && !is_token(peek(), \"punc\", \".\")) {\n                next();\n                var node = import_statement();\n                semicolon();\n                return node;\n            }\n            return is_token(peek(), \"punc\", \":\")\n                ? labeled_statement()\n                : simple_statement();\n\n          case \"punc\":\n            switch (S.token.value) {\n              case \"{\":\n                return new AST_BlockStatement({\n                    start : S.token,\n                    body  : block_(),\n                    end   : prev()\n                });\n              case \"[\":\n              case \"(\":\n                return simple_statement();\n              case \";\":\n                S.in_directives = false;\n                next();\n                return new AST_EmptyStatement();\n              default:\n                unexpected();\n            }\n\n          case \"keyword\":\n            switch (S.token.value) {\n              case \"break\":\n                next();\n                return break_cont(AST_Break);\n\n              case \"continue\":\n                next();\n                return break_cont(AST_Continue);\n\n              case \"debugger\":\n                next();\n                semicolon();\n                return new AST_Debugger();\n\n              case \"do\":\n                next();\n                var body = in_loop(statement);\n                expect_token(\"keyword\", \"while\");\n                var condition = parenthesised();\n                semicolon(true);\n                return new AST_Do({\n                    body      : body,\n                    condition : condition\n                });\n\n              case \"while\":\n                next();\n                return new AST_While({\n                    condition : parenthesised(),\n                    body      : in_loop(function() { return statement(false, true); })\n                });\n\n              case \"for\":\n                next();\n                return for_();\n\n              case \"class\":\n                next();\n                if (is_for_body) {\n                    croak(\"classes are not allowed as the body of a loop\");\n                }\n                if (is_if_body) {\n                    croak(\"classes are not allowed as the body of an if\");\n                }\n                return class_(AST_DefClass, is_export_default);\n\n              case \"function\":\n                next();\n                if (is_for_body) {\n                    croak(\"functions are not allowed as the body of a loop\");\n                }\n                return function_(AST_Defun, false, false, is_export_default);\n\n              case \"if\":\n                next();\n                return if_();\n\n              case \"return\":\n                if (S.in_function == 0 && !options.bare_returns)\n                    croak(\"'return' outside of function\");\n                next();\n                var value = null;\n                if (is(\"punc\", \";\")) {\n                    next();\n                } else if (!can_insert_semicolon()) {\n                    value = expression(true);\n                    semicolon();\n                }\n                return new AST_Return({\n                    value: value\n                });\n\n              case \"switch\":\n                next();\n                return new AST_Switch({\n                    expression : parenthesised(),\n                    body       : in_loop(switch_body_)\n                });\n\n              case \"throw\":\n                next();\n                if (has_newline_before(S.token))\n                    croak(\"Illegal newline after 'throw'\");\n                var value = expression(true);\n                semicolon();\n                return new AST_Throw({\n                    value: value\n                });\n\n              case \"try\":\n                next();\n                return try_();\n\n              case \"var\":\n                next();\n                var node = var_();\n                semicolon();\n                return node;\n\n              case \"let\":\n                next();\n                var node = let_();\n                semicolon();\n                return node;\n\n              case \"const\":\n                next();\n                var node = const_();\n                semicolon();\n                return node;\n\n              case \"with\":\n                if (S.input.has_directive(\"use strict\")) {\n                    croak(\"Strict mode may not include a with statement\");\n                }\n                next();\n                return new AST_With({\n                    expression : parenthesised(),\n                    body       : statement()\n                });\n\n              case \"export\":\n                if (!is_token(peek(), \"punc\", \"(\")) {\n                    next();\n                    var node = export_statement();\n                    if (is(\"punc\", \";\")) semicolon();\n                    return node;\n                }\n            }\n        }\n        unexpected();\n    });\n\n    function labeled_statement() {\n        var label = as_symbol(AST_Label);\n        if (label.name === \"await\" && is_in_async()) {\n            token_error(S.prev, \"await cannot be used as label inside async function\");\n        }\n        if (S.labels.some((l) => l.name === label.name)) {\n            // ECMA-262, 12.12: An ECMAScript program is considered\n            // syntactically incorrect if it contains a\n            // LabelledStatement that is enclosed by a\n            // LabelledStatement with the same Identifier as label.\n            croak(\"Label \" + label.name + \" defined twice\");\n        }\n        expect(\":\");\n        S.labels.push(label);\n        var stat = statement();\n        S.labels.pop();\n        if (!(stat instanceof AST_IterationStatement)) {\n            // check for `continue` that refers to this label.\n            // those should be reported as syntax errors.\n            // https://github.com/mishoo/UglifyJS2/issues/287\n            label.references.forEach(function(ref) {\n                if (ref instanceof AST_Continue) {\n                    ref = ref.label.start;\n                    croak(\"Continue label `\" + label.name + \"` refers to non-IterationStatement.\",\n                          ref.line, ref.col, ref.pos);\n                }\n            });\n        }\n        return new AST_LabeledStatement({ body: stat, label: label });\n    }\n\n    function simple_statement(tmp) {\n        return new AST_SimpleStatement({ body: (tmp = expression(true), semicolon(), tmp) });\n    }\n\n    function break_cont(type) {\n        var label = null, ldef;\n        if (!can_insert_semicolon()) {\n            label = as_symbol(AST_LabelRef, true);\n        }\n        if (label != null) {\n            ldef = S.labels.find((l) => l.name === label.name);\n            if (!ldef)\n                croak(\"Undefined label \" + label.name);\n            label.thedef = ldef;\n        } else if (S.in_loop == 0)\n            croak(type.TYPE + \" not inside a loop or switch\");\n        semicolon();\n        var stat = new type({ label: label });\n        if (ldef) ldef.references.push(stat);\n        return stat;\n    }\n\n    function for_() {\n        var for_await_error = \"`for await` invalid in this context\";\n        var await_tok = S.token;\n        if (await_tok.type == \"name\" && await_tok.value == \"await\") {\n            if (!can_await()) {\n                token_error(await_tok, for_await_error);\n            }\n            next();\n        } else {\n            await_tok = false;\n        }\n        expect(\"(\");\n        var init = null;\n        if (!is(\"punc\", \";\")) {\n            init =\n                is(\"keyword\", \"var\") ? (next(), var_(true)) :\n                is(\"keyword\", \"let\") ? (next(), let_(true)) :\n                is(\"keyword\", \"const\") ? (next(), const_(true)) :\n                                       expression(true, true);\n            var is_in = is(\"operator\", \"in\");\n            var is_of = is(\"name\", \"of\");\n            if (await_tok && !is_of) {\n                token_error(await_tok, for_await_error);\n            }\n            if (is_in || is_of) {\n                if (init instanceof AST_Definitions) {\n                    if (init.definitions.length > 1)\n                        token_error(init.start, \"Only one variable declaration allowed in for..in loop\");\n                } else if (!(is_assignable(init) || (init = to_destructuring(init)) instanceof AST_Destructuring)) {\n                    token_error(init.start, \"Invalid left-hand side in for..in loop\");\n                }\n                next();\n                if (is_in) {\n                    return for_in(init);\n                } else {\n                    return for_of(init, !!await_tok);\n                }\n            }\n        } else if (await_tok) {\n            token_error(await_tok, for_await_error);\n        }\n        return regular_for(init);\n    }\n\n    function regular_for(init) {\n        expect(\";\");\n        var test = is(\"punc\", \";\") ? null : expression(true);\n        expect(\";\");\n        var step = is(\"punc\", \")\") ? null : expression(true);\n        expect(\")\");\n        return new AST_For({\n            init      : init,\n            condition : test,\n            step      : step,\n            body      : in_loop(function() { return statement(false, true); })\n        });\n    }\n\n    function for_of(init, is_await) {\n        var lhs = init instanceof AST_Definitions ? init.definitions[0].name : null;\n        var obj = expression(true);\n        expect(\")\");\n        return new AST_ForOf({\n            await  : is_await,\n            init   : init,\n            name   : lhs,\n            object : obj,\n            body   : in_loop(function() { return statement(false, true); })\n        });\n    }\n\n    function for_in(init) {\n        var obj = expression(true);\n        expect(\")\");\n        return new AST_ForIn({\n            init   : init,\n            object : obj,\n            body   : in_loop(function() { return statement(false, true); })\n        });\n    }\n\n    var arrow_function = function(start, argnames, is_async) {\n        if (has_newline_before(S.token)) {\n            croak(\"Unexpected newline before arrow (=>)\");\n        }\n\n        expect_token(\"arrow\", \"=>\");\n\n        var body = _function_body(is(\"punc\", \"{\"), false, is_async);\n\n        var end =\n            body instanceof Array && body.length ? body[body.length - 1].end :\n            body instanceof Array ? start :\n                body.end;\n\n        return new AST_Arrow({\n            start    : start,\n            end      : end,\n            async    : is_async,\n            argnames : argnames,\n            body     : body\n        });\n    };\n\n    var function_ = function(ctor, is_generator_property, is_async, is_export_default) {\n        var in_statement = ctor === AST_Defun;\n        var is_generator = is(\"operator\", \"*\");\n        if (is_generator) {\n            next();\n        }\n\n        var name = is(\"name\") ? as_symbol(in_statement ? AST_SymbolDefun : AST_SymbolLambda) : null;\n        if (in_statement && !name) {\n            if (is_export_default) {\n                ctor = AST_Function;\n            } else {\n                unexpected();\n            }\n        }\n\n        if (name && ctor !== AST_Accessor && !(name instanceof AST_SymbolDeclaration))\n            unexpected(prev());\n\n        var args = [];\n        var body = _function_body(true, is_generator || is_generator_property, is_async, name, args);\n        return new ctor({\n            start : args.start,\n            end   : body.end,\n            is_generator: is_generator,\n            async : is_async,\n            name  : name,\n            argnames: args,\n            body  : body\n        });\n    };\n\n    class UsedParametersTracker {\n        constructor(is_parameter, strict, duplicates_ok = false) {\n            this.is_parameter = is_parameter;\n            this.duplicates_ok = duplicates_ok;\n            this.parameters = new Set();\n            this.duplicate = null;\n            this.default_assignment = false;\n            this.spread = false;\n            this.strict_mode = !!strict;\n        }\n        add_parameter(token) {\n            if (this.parameters.has(token.value)) {\n                if (this.duplicate === null) {\n                    this.duplicate = token;\n                }\n                this.check_strict();\n            } else {\n                this.parameters.add(token.value);\n                if (this.is_parameter) {\n                    switch (token.value) {\n                      case \"arguments\":\n                      case \"eval\":\n                      case \"yield\":\n                        if (this.strict_mode) {\n                            token_error(token, \"Unexpected \" + token.value + \" identifier as parameter inside strict mode\");\n                        }\n                        break;\n                      default:\n                        if (RESERVED_WORDS.has(token.value)) {\n                            unexpected();\n                        }\n                    }\n                }\n            }\n        }\n        mark_default_assignment(token) {\n            if (this.default_assignment === false) {\n                this.default_assignment = token;\n            }\n        }\n        mark_spread(token) {\n            if (this.spread === false) {\n                this.spread = token;\n            }\n        }\n        mark_strict_mode() {\n            this.strict_mode = true;\n        }\n        is_strict() {\n            return this.default_assignment !== false || this.spread !== false || this.strict_mode;\n        }\n        check_strict() {\n            if (this.is_strict() && this.duplicate !== null && !this.duplicates_ok) {\n                token_error(this.duplicate, \"Parameter \" + this.duplicate.value + \" was used already\");\n            }\n        }\n    }\n\n    function parameters(params) {\n        var used_parameters = new UsedParametersTracker(true, S.input.has_directive(\"use strict\"));\n\n        expect(\"(\");\n\n        while (!is(\"punc\", \")\")) {\n            var param = parameter(used_parameters);\n            params.push(param);\n\n            if (!is(\"punc\", \")\")) {\n                expect(\",\");\n            }\n\n            if (param instanceof AST_Expansion) {\n                break;\n            }\n        }\n\n        next();\n    }\n\n    function parameter(used_parameters, symbol_type) {\n        var param;\n        var expand = false;\n        if (used_parameters === undefined) {\n            used_parameters = new UsedParametersTracker(true, S.input.has_directive(\"use strict\"));\n        }\n        if (is(\"expand\", \"...\")) {\n            expand = S.token;\n            used_parameters.mark_spread(S.token);\n            next();\n        }\n        param = binding_element(used_parameters, symbol_type);\n\n        if (is(\"operator\", \"=\") && expand === false) {\n            used_parameters.mark_default_assignment(S.token);\n            next();\n            param = new AST_DefaultAssign({\n                start: param.start,\n                left: param,\n                operator: \"=\",\n                right: expression(false),\n                end: S.token\n            });\n        }\n\n        if (expand !== false) {\n            if (!is(\"punc\", \")\")) {\n                unexpected();\n            }\n            param = new AST_Expansion({\n                start: expand,\n                expression: param,\n                end: expand\n            });\n        }\n        used_parameters.check_strict();\n\n        return param;\n    }\n\n    function binding_element(used_parameters, symbol_type) {\n        var elements = [];\n        var first = true;\n        var is_expand = false;\n        var expand_token;\n        var first_token = S.token;\n        if (used_parameters === undefined) {\n            const strict = S.input.has_directive(\"use strict\");\n            const duplicates_ok = symbol_type === AST_SymbolVar;\n            used_parameters = new UsedParametersTracker(false, strict, duplicates_ok);\n        }\n        symbol_type = symbol_type === undefined ? AST_SymbolFunarg : symbol_type;\n        if (is(\"punc\", \"[\")) {\n            next();\n            while (!is(\"punc\", \"]\")) {\n                if (first) {\n                    first = false;\n                } else {\n                    expect(\",\");\n                }\n\n                if (is(\"expand\", \"...\")) {\n                    is_expand = true;\n                    expand_token = S.token;\n                    used_parameters.mark_spread(S.token);\n                    next();\n                }\n                if (is(\"punc\")) {\n                    switch (S.token.value) {\n                      case \",\":\n                        elements.push(new AST_Hole({\n                            start: S.token,\n                            end: S.token\n                        }));\n                        continue;\n                      case \"]\": // Trailing comma after last element\n                        break;\n                      case \"[\":\n                      case \"{\":\n                        elements.push(binding_element(used_parameters, symbol_type));\n                        break;\n                      default:\n                        unexpected();\n                    }\n                } else if (is(\"name\")) {\n                    used_parameters.add_parameter(S.token);\n                    elements.push(as_symbol(symbol_type));\n                } else {\n                    croak(\"Invalid function parameter\");\n                }\n                if (is(\"operator\", \"=\") && is_expand === false) {\n                    used_parameters.mark_default_assignment(S.token);\n                    next();\n                    elements[elements.length - 1] = new AST_DefaultAssign({\n                        start: elements[elements.length - 1].start,\n                        left: elements[elements.length - 1],\n                        operator: \"=\",\n                        right: expression(false),\n                        end: S.token\n                    });\n                }\n                if (is_expand) {\n                    if (!is(\"punc\", \"]\")) {\n                        croak(\"Rest element must be last element\");\n                    }\n                    elements[elements.length - 1] = new AST_Expansion({\n                        start: expand_token,\n                        expression: elements[elements.length - 1],\n                        end: expand_token\n                    });\n                }\n            }\n            expect(\"]\");\n            used_parameters.check_strict();\n            return new AST_Destructuring({\n                start: first_token,\n                names: elements,\n                is_array: true,\n                end: prev()\n            });\n        } else if (is(\"punc\", \"{\")) {\n            next();\n            while (!is(\"punc\", \"}\")) {\n                if (first) {\n                    first = false;\n                } else {\n                    expect(\",\");\n                }\n                if (is(\"expand\", \"...\")) {\n                    is_expand = true;\n                    expand_token = S.token;\n                    used_parameters.mark_spread(S.token);\n                    next();\n                }\n                if (is(\"name\") && (is_token(peek(), \"punc\") || is_token(peek(), \"operator\")) && [\",\", \"}\", \"=\"].includes(peek().value)) {\n                    used_parameters.add_parameter(S.token);\n                    var start = prev();\n                    var value = as_symbol(symbol_type);\n                    if (is_expand) {\n                        elements.push(new AST_Expansion({\n                            start: expand_token,\n                            expression: value,\n                            end: value.end,\n                        }));\n                    } else {\n                        elements.push(new AST_ObjectKeyVal({\n                            start: start,\n                            key: value.name,\n                            value: value,\n                            end: value.end,\n                        }));\n                    }\n                } else if (is(\"punc\", \"}\")) {\n                    continue; // Allow trailing hole\n                } else {\n                    var property_token = S.token;\n                    var property = as_property_name();\n                    if (property === null) {\n                        unexpected(prev());\n                    } else if (prev().type === \"name\" && !is(\"punc\", \":\")) {\n                        elements.push(new AST_ObjectKeyVal({\n                            start: prev(),\n                            key: property,\n                            value: new symbol_type({\n                                start: prev(),\n                                name: property,\n                                end: prev()\n                            }),\n                            end: prev()\n                        }));\n                    } else {\n                        expect(\":\");\n                        elements.push(new AST_ObjectKeyVal({\n                            start: property_token,\n                            quote: property_token.quote,\n                            key: property,\n                            value: binding_element(used_parameters, symbol_type),\n                            end: prev()\n                        }));\n                    }\n                }\n                if (is_expand) {\n                    if (!is(\"punc\", \"}\")) {\n                        croak(\"Rest element must be last element\");\n                    }\n                } else if (is(\"operator\", \"=\")) {\n                    used_parameters.mark_default_assignment(S.token);\n                    next();\n                    elements[elements.length - 1].value = new AST_DefaultAssign({\n                        start: elements[elements.length - 1].value.start,\n                        left: elements[elements.length - 1].value,\n                        operator: \"=\",\n                        right: expression(false),\n                        end: S.token\n                    });\n                }\n            }\n            expect(\"}\");\n            used_parameters.check_strict();\n            return new AST_Destructuring({\n                start: first_token,\n                names: elements,\n                is_array: false,\n                end: prev()\n            });\n        } else if (is(\"name\")) {\n            used_parameters.add_parameter(S.token);\n            return as_symbol(symbol_type);\n        } else {\n            croak(\"Invalid function parameter\");\n        }\n    }\n\n    function params_or_seq_(allow_arrows, maybe_sequence) {\n        var spread_token;\n        var invalid_sequence;\n        var trailing_comma;\n        var a = [];\n        expect(\"(\");\n        while (!is(\"punc\", \")\")) {\n            if (spread_token) unexpected(spread_token);\n            if (is(\"expand\", \"...\")) {\n                spread_token = S.token;\n                if (maybe_sequence) invalid_sequence = S.token;\n                next();\n                a.push(new AST_Expansion({\n                    start: prev(),\n                    expression: expression(),\n                    end: S.token,\n                }));\n            } else {\n                a.push(expression());\n            }\n            if (!is(\"punc\", \")\")) {\n                expect(\",\");\n                if (is(\"punc\", \")\")) {\n                    trailing_comma = prev();\n                    if (maybe_sequence) invalid_sequence = trailing_comma;\n                }\n            }\n        }\n        expect(\")\");\n        if (allow_arrows && is(\"arrow\", \"=>\")) {\n            if (spread_token && trailing_comma) unexpected(trailing_comma);\n        } else if (invalid_sequence) {\n            unexpected(invalid_sequence);\n        }\n        return a;\n    }\n\n    function _function_body(block, generator, is_async, name, args) {\n        var loop = S.in_loop;\n        var labels = S.labels;\n        var current_generator = S.in_generator;\n        var current_async = S.in_async;\n        ++S.in_function;\n        if (generator)\n            S.in_generator = S.in_function;\n        if (is_async)\n            S.in_async = S.in_function;\n        if (args) parameters(args);\n        if (block)\n            S.in_directives = true;\n        S.in_loop = 0;\n        S.labels = [];\n        if (block) {\n            S.input.push_directives_stack();\n            var a = block_();\n            if (name) _verify_symbol(name);\n            if (args) args.forEach(_verify_symbol);\n            S.input.pop_directives_stack();\n        } else {\n            var a = [new AST_Return({\n                start: S.token,\n                value: expression(false),\n                end: S.token\n            })];\n        }\n        --S.in_function;\n        S.in_loop = loop;\n        S.labels = labels;\n        S.in_generator = current_generator;\n        S.in_async = current_async;\n        return a;\n    }\n\n    function _await_expression() {\n        // Previous token must be \"await\" and not be interpreted as an identifier\n        if (!can_await()) {\n            croak(\"Unexpected await expression outside async function\",\n                S.prev.line, S.prev.col, S.prev.pos);\n        }\n        // the await expression is parsed as a unary expression in Babel\n        return new AST_Await({\n            start: prev(),\n            end: S.token,\n            expression : maybe_unary(true),\n        });\n    }\n\n    function _yield_expression() {\n        // Previous token must be keyword yield and not be interpret as an identifier\n        if (!is_in_generator()) {\n            croak(\"Unexpected yield expression outside generator function\",\n                S.prev.line, S.prev.col, S.prev.pos);\n        }\n        var start = S.token;\n        var star = false;\n        var has_expression = true;\n\n        // Attempt to get expression or star (and then the mandatory expression)\n        // behind yield on the same line.\n        //\n        // If nothing follows on the same line of the yieldExpression,\n        // it should default to the value `undefined` for yield to return.\n        // In that case, the `undefined` stored as `null` in ast.\n        //\n        // Note 1: It isn't allowed for yield* to close without an expression\n        // Note 2: If there is a nlb between yield and star, it is interpret as\n        //         yield <explicit undefined> <inserted automatic semicolon> *\n        if (can_insert_semicolon() ||\n            (is(\"punc\") && PUNC_AFTER_EXPRESSION.has(S.token.value))) {\n            has_expression = false;\n\n        } else if (is(\"operator\", \"*\")) {\n            star = true;\n            next();\n        }\n\n        return new AST_Yield({\n            start      : start,\n            is_star    : star,\n            expression : has_expression ? expression() : null,\n            end        : prev()\n        });\n    }\n\n    function if_() {\n        var cond = parenthesised(), body = statement(false, false, true), belse = null;\n        if (is(\"keyword\", \"else\")) {\n            next();\n            belse = statement(false, false, true);\n        }\n        return new AST_If({\n            condition   : cond,\n            body        : body,\n            alternative : belse\n        });\n    }\n\n    function block_() {\n        expect(\"{\");\n        var a = [];\n        while (!is(\"punc\", \"}\")) {\n            if (is(\"eof\")) unexpected();\n            a.push(statement());\n        }\n        next();\n        return a;\n    }\n\n    function switch_body_() {\n        expect(\"{\");\n        var a = [], cur = null, branch = null, tmp;\n        while (!is(\"punc\", \"}\")) {\n            if (is(\"eof\")) unexpected();\n            if (is(\"keyword\", \"case\")) {\n                if (branch) branch.end = prev();\n                cur = [];\n                branch = new AST_Case({\n                    start      : (tmp = S.token, next(), tmp),\n                    expression : expression(true),\n                    body       : cur\n                });\n                a.push(branch);\n                expect(\":\");\n            } else if (is(\"keyword\", \"default\")) {\n                if (branch) branch.end = prev();\n                cur = [];\n                branch = new AST_Default({\n                    start : (tmp = S.token, next(), expect(\":\"), tmp),\n                    body  : cur\n                });\n                a.push(branch);\n            } else {\n                if (!cur) unexpected();\n                cur.push(statement());\n            }\n        }\n        if (branch) branch.end = prev();\n        next();\n        return a;\n    }\n\n    function try_() {\n        var body, bcatch = null, bfinally = null;\n        body = new AST_TryBlock({\n            start : S.token,\n            body  : block_(),\n            end   : prev(),\n        });\n        if (is(\"keyword\", \"catch\")) {\n            var start = S.token;\n            next();\n            if (is(\"punc\", \"{\")) {\n                var name = null;\n            } else {\n                expect(\"(\");\n                var name = parameter(undefined, AST_SymbolCatch);\n                expect(\")\");\n            }\n            bcatch = new AST_Catch({\n                start   : start,\n                argname : name,\n                body    : block_(),\n                end     : prev()\n            });\n        }\n        if (is(\"keyword\", \"finally\")) {\n            var start = S.token;\n            next();\n            bfinally = new AST_Finally({\n                start : start,\n                body  : block_(),\n                end   : prev()\n            });\n        }\n        if (!bcatch && !bfinally)\n            croak(\"Missing catch/finally blocks\");\n        return new AST_Try({\n            body     : body,\n            bcatch   : bcatch,\n            bfinally : bfinally\n        });\n    }\n\n    /**\n     * var\n     *   vardef1 = 2,\n     *   vardef2 = 3;\n     */\n    function vardefs(no_in, kind) {\n        var var_defs = [];\n        var def;\n        for (;;) {\n            var sym_type =\n                kind === \"var\" ? AST_SymbolVar :\n                kind === \"const\" ? AST_SymbolConst :\n                kind === \"let\" ? AST_SymbolLet : null;\n            // var { a } = b\n            if (is(\"punc\", \"{\") || is(\"punc\", \"[\")) {\n                def = new AST_VarDef({\n                    start: S.token,\n                    name: binding_element(undefined, sym_type),\n                    value: is(\"operator\", \"=\") ? (expect_token(\"operator\", \"=\"), expression(false, no_in)) : null,\n                    end: prev()\n                });\n            } else {\n                def = new AST_VarDef({\n                    start : S.token,\n                    name  : as_symbol(sym_type),\n                    value : is(\"operator\", \"=\")\n                        ? (next(), expression(false, no_in))\n                        : !no_in && kind === \"const\"\n                            ? croak(\"Missing initializer in const declaration\") : null,\n                    end   : prev()\n                });\n                if (def.name.name == \"import\") croak(\"Unexpected token: import\");\n            }\n            var_defs.push(def);\n            if (!is(\"punc\", \",\"))\n                break;\n            next();\n        }\n        return var_defs;\n    }\n\n    var var_ = function(no_in) {\n        return new AST_Var({\n            start       : prev(),\n            definitions : vardefs(no_in, \"var\"),\n            end         : prev()\n        });\n    };\n\n    var let_ = function(no_in) {\n        return new AST_Let({\n            start       : prev(),\n            definitions : vardefs(no_in, \"let\"),\n            end         : prev()\n        });\n    };\n\n    var const_ = function(no_in) {\n        return new AST_Const({\n            start       : prev(),\n            definitions : vardefs(no_in, \"const\"),\n            end         : prev()\n        });\n    };\n\n    var new_ = function(allow_calls) {\n        var start = S.token;\n        expect_token(\"operator\", \"new\");\n        if (is(\"punc\", \".\")) {\n            next();\n            expect_token(\"name\", \"target\");\n            return subscripts(new AST_NewTarget({\n                start : start,\n                end   : prev()\n            }), allow_calls);\n        }\n        var newexp = expr_atom(false), args;\n        if (is(\"punc\", \"(\")) {\n            next();\n            args = expr_list(\")\", true);\n        } else {\n            args = [];\n        }\n        var call = new AST_New({\n            start      : start,\n            expression : newexp,\n            args       : args,\n            end        : prev()\n        });\n        annotate(call);\n        return subscripts(call, allow_calls);\n    };\n\n    function as_atom_node() {\n        var tok = S.token, ret;\n        switch (tok.type) {\n          case \"name\":\n            ret = _make_symbol(AST_SymbolRef);\n            break;\n          case \"num\":\n            ret = new AST_Number({\n                start: tok,\n                end: tok,\n                value: tok.value,\n                raw: LATEST_RAW\n            });\n            break;\n          case \"big_int\":\n            ret = new AST_BigInt({ start: tok, end: tok, value: tok.value });\n            break;\n          case \"string\":\n            ret = new AST_String({\n                start : tok,\n                end   : tok,\n                value : tok.value,\n                quote : tok.quote\n            });\n            annotate(ret);\n            break;\n          case \"regexp\":\n            const [_, source, flags] = tok.value.match(/^\\/(.*)\\/(\\w*)$/);\n\n            ret = new AST_RegExp({ start: tok, end: tok, value: { source, flags } });\n            break;\n          case \"atom\":\n            switch (tok.value) {\n              case \"false\":\n                ret = new AST_False({ start: tok, end: tok });\n                break;\n              case \"true\":\n                ret = new AST_True({ start: tok, end: tok });\n                break;\n              case \"null\":\n                ret = new AST_Null({ start: tok, end: tok });\n                break;\n            }\n            break;\n        }\n        next();\n        return ret;\n    }\n\n    function to_fun_args(ex, default_seen_above) {\n        var insert_default = function(ex, default_value) {\n            if (default_value) {\n                return new AST_DefaultAssign({\n                    start: ex.start,\n                    left: ex,\n                    operator: \"=\",\n                    right: default_value,\n                    end: default_value.end\n                });\n            }\n            return ex;\n        };\n        if (ex instanceof AST_Object) {\n            return insert_default(new AST_Destructuring({\n                start: ex.start,\n                end: ex.end,\n                is_array: false,\n                names: ex.properties.map(prop => to_fun_args(prop))\n            }), default_seen_above);\n        } else if (ex instanceof AST_ObjectKeyVal) {\n            ex.value = to_fun_args(ex.value);\n            return insert_default(ex, default_seen_above);\n        } else if (ex instanceof AST_Hole) {\n            return ex;\n        } else if (ex instanceof AST_Destructuring) {\n            ex.names = ex.names.map(name => to_fun_args(name));\n            return insert_default(ex, default_seen_above);\n        } else if (ex instanceof AST_SymbolRef) {\n            return insert_default(new AST_SymbolFunarg({\n                name: ex.name,\n                start: ex.start,\n                end: ex.end\n            }), default_seen_above);\n        } else if (ex instanceof AST_Expansion) {\n            ex.expression = to_fun_args(ex.expression);\n            return insert_default(ex, default_seen_above);\n        } else if (ex instanceof AST_Array) {\n            return insert_default(new AST_Destructuring({\n                start: ex.start,\n                end: ex.end,\n                is_array: true,\n                names: ex.elements.map(elm => to_fun_args(elm))\n            }), default_seen_above);\n        } else if (ex instanceof AST_Assign) {\n            return insert_default(to_fun_args(ex.left, ex.right), default_seen_above);\n        } else if (ex instanceof AST_DefaultAssign) {\n            ex.left = to_fun_args(ex.left);\n            return ex;\n        } else {\n            croak(\"Invalid function parameter\", ex.start.line, ex.start.col);\n        }\n    }\n\n    var expr_atom = function(allow_calls, allow_arrows) {\n        if (is(\"operator\", \"new\")) {\n            return new_(allow_calls);\n        }\n        if (is(\"name\", \"import\") && is_token(peek(), \"punc\", \".\")) {\n            return import_meta(allow_calls);\n        }\n        var start = S.token;\n        var peeked;\n        var async = is(\"name\", \"async\")\n            && (peeked = peek()).value != \"[\"\n            && peeked.type != \"arrow\"\n            && as_atom_node();\n        if (is(\"punc\")) {\n            switch (S.token.value) {\n              case \"(\":\n                if (async && !allow_calls) break;\n                var exprs = params_or_seq_(allow_arrows, !async);\n                if (allow_arrows && is(\"arrow\", \"=>\")) {\n                    return arrow_function(start, exprs.map(e => to_fun_args(e)), !!async);\n                }\n                var ex = async ? new AST_Call({\n                    expression: async,\n                    args: exprs\n                }) : to_expr_or_sequence(start, exprs);\n                if (ex.start) {\n                    const outer_comments_before = start.comments_before.length;\n                    outer_comments_before_counts.set(start, outer_comments_before);\n                    ex.start.comments_before.unshift(...start.comments_before);\n                    start.comments_before = ex.start.comments_before;\n                    if (outer_comments_before == 0 && start.comments_before.length > 0) {\n                        var comment = start.comments_before[0];\n                        if (!comment.nlb) {\n                            comment.nlb = start.nlb;\n                            start.nlb = false;\n                        }\n                    }\n                    start.comments_after = ex.start.comments_after;\n                }\n                ex.start = start;\n                var end = prev();\n                if (ex.end) {\n                    end.comments_before = ex.end.comments_before;\n                    ex.end.comments_after.push(...end.comments_after);\n                    end.comments_after = ex.end.comments_after;\n                }\n                ex.end = end;\n                if (ex instanceof AST_Call) annotate(ex);\n                return subscripts(ex, allow_calls);\n              case \"[\":\n                return subscripts(array_(), allow_calls);\n              case \"{\":\n                return subscripts(object_or_destructuring_(), allow_calls);\n            }\n            if (!async) unexpected();\n        }\n        if (allow_arrows && is(\"name\") && is_token(peek(), \"arrow\")) {\n            var param = new AST_SymbolFunarg({\n                name: S.token.value,\n                start: start,\n                end: start,\n            });\n            next();\n            return arrow_function(start, [param], !!async);\n        }\n        if (is(\"keyword\", \"function\")) {\n            next();\n            var func = function_(AST_Function, false, !!async);\n            func.start = start;\n            func.end = prev();\n            return subscripts(func, allow_calls);\n        }\n        if (async) return subscripts(async, allow_calls);\n        if (is(\"keyword\", \"class\")) {\n            next();\n            var cls = class_(AST_ClassExpression);\n            cls.start = start;\n            cls.end = prev();\n            return subscripts(cls, allow_calls);\n        }\n        if (is(\"template_head\")) {\n            return subscripts(template_string(), allow_calls);\n        }\n        if (is(\"privatename\")) {\n            if(!S.in_class) {\n                croak(\"Private field must be used in an enclosing class\");\n            }\n\n            const start = S.token;\n            const key = new AST_SymbolPrivateProperty({\n                start,\n                name: start.value,\n                end: start\n            });\n            next();\n            expect_token(\"operator\", \"in\");\n\n            const private_in = new AST_PrivateIn({\n                start,\n                key,\n                value: subscripts(as_atom_node(), allow_calls),\n                end: prev()\n            });\n\n            return subscripts(private_in, allow_calls);\n        }\n        if (ATOMIC_START_TOKEN.has(S.token.type)) {\n            return subscripts(as_atom_node(), allow_calls);\n        }\n        unexpected();\n    };\n\n    function template_string() {\n        var segments = [], start = S.token;\n\n        segments.push(new AST_TemplateSegment({\n            start: S.token,\n            raw: TEMPLATE_RAWS.get(S.token),\n            value: S.token.value,\n            end: S.token\n        }));\n\n        while (!S.token.template_end) {\n            next();\n            handle_regexp();\n            segments.push(expression(true));\n\n            segments.push(new AST_TemplateSegment({\n                start: S.token,\n                raw: TEMPLATE_RAWS.get(S.token),\n                value: S.token.value,\n                end: S.token\n            }));\n        }\n        next();\n\n        return new AST_TemplateString({\n            start: start,\n            segments: segments,\n            end: S.token\n        });\n    }\n\n    function expr_list(closing, allow_trailing_comma, allow_empty) {\n        var first = true, a = [];\n        while (!is(\"punc\", closing)) {\n            if (first) first = false; else expect(\",\");\n            if (allow_trailing_comma && is(\"punc\", closing)) break;\n            if (is(\"punc\", \",\") && allow_empty) {\n                a.push(new AST_Hole({ start: S.token, end: S.token }));\n            } else if (is(\"expand\", \"...\")) {\n                next();\n                a.push(new AST_Expansion({start: prev(), expression: expression(),end: S.token}));\n            } else {\n                a.push(expression(false));\n            }\n        }\n        next();\n        return a;\n    }\n\n    var array_ = embed_tokens(function() {\n        expect(\"[\");\n        return new AST_Array({\n            elements: expr_list(\"]\", !options.strict, true)\n        });\n    });\n\n    var create_accessor = embed_tokens((is_generator, is_async) => {\n        return function_(AST_Accessor, is_generator, is_async);\n    });\n\n    var object_or_destructuring_ = embed_tokens(function object_or_destructuring_() {\n        var start = S.token, first = true, a = [];\n        expect(\"{\");\n        while (!is(\"punc\", \"}\")) {\n            if (first) first = false; else expect(\",\");\n            if (!options.strict && is(\"punc\", \"}\"))\n                // allow trailing comma\n                break;\n\n            start = S.token;\n            if (start.type == \"expand\") {\n                next();\n                a.push(new AST_Expansion({\n                    start: start,\n                    expression: expression(false),\n                    end: prev(),\n                }));\n                continue;\n            }\n            if(is(\"privatename\")) {\n                croak(\"private fields are not allowed in an object\");\n            }\n            var name = as_property_name();\n            var value;\n\n            // Check property and fetch value\n            if (!is(\"punc\", \":\")) {\n                var concise = concise_method_or_getset(name, start);\n                if (concise) {\n                    a.push(concise);\n                    continue;\n                }\n\n                value = new AST_SymbolRef({\n                    start: prev(),\n                    name: name,\n                    end: prev()\n                });\n            } else if (name === null) {\n                unexpected(prev());\n            } else {\n                next(); // `:` - see first condition\n                value = expression(false);\n            }\n\n            // Check for default value and alter value accordingly if necessary\n            if (is(\"operator\", \"=\")) {\n                next();\n                value = new AST_Assign({\n                    start: start,\n                    left: value,\n                    operator: \"=\",\n                    right: expression(false),\n                    logical: false,\n                    end: prev()\n                });\n            }\n\n            // Create property\n            const kv = new AST_ObjectKeyVal({\n                start: start,\n                quote: start.quote,\n                key: name instanceof AST_Node ? name : \"\" + name,\n                value: value,\n                end: prev()\n            });\n            a.push(annotate(kv));\n        }\n        next();\n        return new AST_Object({ properties: a });\n    });\n\n    function class_(KindOfClass, is_export_default) {\n        var start, method, class_name, extends_, a = [];\n\n        S.input.push_directives_stack(); // Push directive stack, but not scope stack\n        S.input.add_directive(\"use strict\");\n\n        if (S.token.type == \"name\" && S.token.value != \"extends\") {\n            class_name = as_symbol(KindOfClass === AST_DefClass ? AST_SymbolDefClass : AST_SymbolClass);\n        }\n\n        if (KindOfClass === AST_DefClass && !class_name) {\n            if (is_export_default) {\n                KindOfClass = AST_ClassExpression;\n            } else {\n                unexpected();\n            }\n        }\n\n        if (S.token.value == \"extends\") {\n            next();\n            extends_ = expression(true);\n        }\n\n        expect(\"{\");\n        // mark in class feild,\n        const save_in_class = S.in_class;\n        S.in_class = true;\n        while (is(\"punc\", \";\")) { next(); }  // Leading semicolons are okay in class bodies.\n        while (!is(\"punc\", \"}\")) {\n            start = S.token;\n            method = concise_method_or_getset(as_property_name(), start, true);\n            if (!method) { unexpected(); }\n            a.push(method);\n            while (is(\"punc\", \";\")) { next(); }\n        }\n        // mark in class feild,\n        S.in_class = save_in_class;\n\n        S.input.pop_directives_stack();\n\n        next();\n\n        return new KindOfClass({\n            start: start,\n            name: class_name,\n            extends: extends_,\n            properties: a,\n            end: prev(),\n        });\n    }\n\n    function concise_method_or_getset(name, start, is_class) {\n        const get_symbol_ast = (name, SymbolClass = AST_SymbolMethod) => {\n            if (typeof name === \"string\" || typeof name === \"number\") {\n                return new SymbolClass({\n                    start,\n                    name: \"\" + name,\n                    end: prev()\n                });\n            } else if (name === null) {\n                unexpected();\n            }\n            return name;\n        };\n\n        const is_not_method_start = () =>\n            !is(\"punc\", \"(\") && !is(\"punc\", \",\") && !is(\"punc\", \"}\") && !is(\"punc\", \";\") && !is(\"operator\", \"=\");\n\n        var is_async = false;\n        var is_static = false;\n        var is_generator = false;\n        var is_private = false;\n        var accessor_type = null;\n\n        if (is_class && name === \"static\" && is_not_method_start()) {\n            const static_block = class_static_block();\n            if (static_block != null) {\n                return static_block;\n            }\n            is_static = true;\n            name = as_property_name();\n        }\n        if (name === \"async\" && is_not_method_start()) {\n            is_async = true;\n            name = as_property_name();\n        }\n        if (prev().type === \"operator\" && prev().value === \"*\") {\n            is_generator = true;\n            name = as_property_name();\n        }\n        if ((name === \"get\" || name === \"set\") && is_not_method_start()) {\n            accessor_type = name;\n            name = as_property_name();\n        }\n        if (prev().type === \"privatename\") {\n            is_private = true;\n        }\n\n        const property_token = prev();\n\n        if (accessor_type != null) {\n            if (!is_private) {\n                const AccessorClass = accessor_type === \"get\"\n                    ? AST_ObjectGetter\n                    : AST_ObjectSetter;\n\n                name = get_symbol_ast(name);\n                return annotate(new AccessorClass({\n                    start,\n                    static: is_static,\n                    key: name,\n                    quote: name instanceof AST_SymbolMethod ? property_token.quote : undefined,\n                    value: create_accessor(),\n                    end: prev()\n                }));\n            } else {\n                const AccessorClass = accessor_type === \"get\"\n                    ? AST_PrivateGetter\n                    : AST_PrivateSetter;\n\n                return annotate(new AccessorClass({\n                    start,\n                    static: is_static,\n                    key: get_symbol_ast(name),\n                    value: create_accessor(),\n                    end: prev(),\n                }));\n            }\n        }\n\n        if (is(\"punc\", \"(\")) {\n            name = get_symbol_ast(name);\n            const AST_MethodVariant = is_private\n                ? AST_PrivateMethod\n                : AST_ConciseMethod;\n            var node = new AST_MethodVariant({\n                start       : start,\n                static      : is_static,\n                is_generator: is_generator,\n                async       : is_async,\n                key         : name,\n                quote       : name instanceof AST_SymbolMethod ?\n                              property_token.quote : undefined,\n                value       : create_accessor(is_generator, is_async),\n                end         : prev()\n            });\n            return annotate(node);\n        }\n\n        if (is_class) {\n            const key = get_symbol_ast(name, AST_SymbolClassProperty);\n            const quote = key instanceof AST_SymbolClassProperty\n                ? property_token.quote\n                : undefined;\n            const AST_ClassPropertyVariant = is_private\n                ? AST_ClassPrivateProperty\n                : AST_ClassProperty;\n            if (is(\"operator\", \"=\")) {\n                next();\n                return annotate(\n                    new AST_ClassPropertyVariant({\n                        start,\n                        static: is_static,\n                        quote,\n                        key,\n                        value: expression(false),\n                        end: prev()\n                    })\n                );\n            } else if (\n                is(\"name\")\n                || is(\"privatename\")\n                || is(\"operator\", \"*\")\n                || is(\"punc\", \";\")\n                || is(\"punc\", \"}\")\n            ) {\n                return annotate(\n                    new AST_ClassPropertyVariant({\n                        start,\n                        static: is_static,\n                        quote,\n                        key,\n                        end: prev()\n                    })\n                );\n            }\n        }\n    }\n\n    function class_static_block() {\n        if (!is(\"punc\", \"{\")) {\n            return null;\n        }\n\n        const start = S.token;\n        const body = [];\n\n        next();\n\n        while (!is(\"punc\", \"}\")) {\n            body.push(statement());\n        }\n\n        next();\n\n        return new AST_ClassStaticBlock({ start, body, end: prev() });\n    }\n\n    function maybe_import_assertion() {\n        if (is(\"name\", \"assert\") && !has_newline_before(S.token)) {\n            next();\n            return object_or_destructuring_();\n        }\n        return null;\n    }\n\n    function import_statement() {\n        var start = prev();\n\n        var imported_name;\n        var imported_names;\n        if (is(\"name\")) {\n            imported_name = as_symbol(AST_SymbolImport);\n        }\n\n        if (is(\"punc\", \",\")) {\n            next();\n        }\n\n        imported_names = map_names(true);\n\n        if (imported_names || imported_name) {\n            expect_token(\"name\", \"from\");\n        }\n        var mod_str = S.token;\n        if (mod_str.type !== \"string\") {\n            unexpected();\n        }\n        next();\n\n        const assert_clause = maybe_import_assertion();\n\n        return new AST_Import({\n            start,\n            imported_name,\n            imported_names,\n            module_name: new AST_String({\n                start: mod_str,\n                value: mod_str.value,\n                quote: mod_str.quote,\n                end: mod_str,\n            }),\n            assert_clause,\n            end: S.token,\n        });\n    }\n\n    function import_meta(allow_calls) {\n        var start = S.token;\n        expect_token(\"name\", \"import\");\n        expect_token(\"punc\", \".\");\n        expect_token(\"name\", \"meta\");\n        return subscripts(new AST_ImportMeta({\n            start: start,\n            end: prev()\n        }), allow_calls);\n    }\n\n    function map_name(is_import) {\n        function make_symbol(type, quote) {\n            return new type({\n                name: as_property_name(),\n                quote: quote || undefined,\n                start: prev(),\n                end: prev()\n            });\n        }\n\n        var foreign_type = is_import ? AST_SymbolImportForeign : AST_SymbolExportForeign;\n        var type = is_import ? AST_SymbolImport : AST_SymbolExport;\n        var start = S.token;\n        var foreign_name;\n        var name;\n\n        if (is_import) {\n            foreign_name = make_symbol(foreign_type, start.quote);\n        } else {\n            name = make_symbol(type, start.quote);\n        }\n        if (is(\"name\", \"as\")) {\n            next();  // The \"as\" word\n            if (is_import) {\n                name = make_symbol(type);\n            } else {\n                foreign_name = make_symbol(foreign_type, S.token.quote);\n            }\n        } else if (is_import) {\n            name = new type(foreign_name);\n        } else {\n            foreign_name = new foreign_type(name);\n        }\n\n        return new AST_NameMapping({\n            start: start,\n            foreign_name: foreign_name,\n            name: name,\n            end: prev(),\n        });\n    }\n\n    function map_nameAsterisk(is_import, import_or_export_foreign_name) {\n        var foreign_type = is_import ? AST_SymbolImportForeign : AST_SymbolExportForeign;\n        var type = is_import ? AST_SymbolImport : AST_SymbolExport;\n        var start = S.token;\n        var name, foreign_name;\n        var end = prev();\n\n        if (is_import) {\n            name = import_or_export_foreign_name;\n        } else {\n            foreign_name = import_or_export_foreign_name;\n        }\n\n        name = name || new type({\n            start: start,\n            name: \"*\",\n            end: end,\n        });\n\n        foreign_name = foreign_name || new foreign_type({\n            start: start,\n            name: \"*\",\n            end: end,\n        });\n\n        return new AST_NameMapping({\n            start: start,\n            foreign_name: foreign_name,\n            name: name,\n            end: end,\n        });\n    }\n\n    function map_names(is_import) {\n        var names;\n        if (is(\"punc\", \"{\")) {\n            next();\n            names = [];\n            while (!is(\"punc\", \"}\")) {\n                names.push(map_name(is_import));\n                if (is(\"punc\", \",\")) {\n                    next();\n                }\n            }\n            next();\n        } else if (is(\"operator\", \"*\")) {\n            var name;\n            next();\n            if (is(\"name\", \"as\")) {\n                next();  // The \"as\" word\n                name = is_import ? as_symbol(AST_SymbolImport) : as_symbol_or_string(AST_SymbolExportForeign);\n            }\n            names = [map_nameAsterisk(is_import, name)];\n        }\n        return names;\n    }\n\n    function export_statement() {\n        var start = S.token;\n        var is_default;\n        var exported_names;\n\n        if (is(\"keyword\", \"default\")) {\n            is_default = true;\n            next();\n        } else if (exported_names = map_names(false)) {\n            if (is(\"name\", \"from\")) {\n                next();\n\n                var mod_str = S.token;\n                if (mod_str.type !== \"string\") {\n                    unexpected();\n                }\n                next();\n\n                const assert_clause = maybe_import_assertion();\n\n                return new AST_Export({\n                    start: start,\n                    is_default: is_default,\n                    exported_names: exported_names,\n                    module_name: new AST_String({\n                        start: mod_str,\n                        value: mod_str.value,\n                        quote: mod_str.quote,\n                        end: mod_str,\n                    }),\n                    end: prev(),\n                    assert_clause\n                });\n            } else {\n                return new AST_Export({\n                    start: start,\n                    is_default: is_default,\n                    exported_names: exported_names,\n                    end: prev(),\n                });\n            }\n        }\n\n        var node;\n        var exported_value;\n        var exported_definition;\n        if (is(\"punc\", \"{\")\n            || is_default\n                && (is(\"keyword\", \"class\") || is(\"keyword\", \"function\"))\n                && is_token(peek(), \"punc\")) {\n            exported_value = expression(false);\n            semicolon();\n        } else if ((node = statement(is_default)) instanceof AST_Definitions && is_default) {\n            unexpected(node.start);\n        } else if (\n            node instanceof AST_Definitions\n            || node instanceof AST_Defun\n            || node instanceof AST_DefClass\n        ) {\n            exported_definition = node;\n        } else if (\n            node instanceof AST_ClassExpression\n            || node instanceof AST_Function\n        ) {\n            exported_value = node;\n        } else if (node instanceof AST_SimpleStatement) {\n            exported_value = node.body;\n        } else {\n            unexpected(node.start);\n        }\n\n        return new AST_Export({\n            start: start,\n            is_default: is_default,\n            exported_value: exported_value,\n            exported_definition: exported_definition,\n            end: prev(),\n            assert_clause: null\n        });\n    }\n\n    function as_property_name() {\n        var tmp = S.token;\n        switch (tmp.type) {\n          case \"punc\":\n            if (tmp.value === \"[\") {\n                next();\n                var ex = expression(false);\n                expect(\"]\");\n                return ex;\n            } else unexpected(tmp);\n          case \"operator\":\n            if (tmp.value === \"*\") {\n                next();\n                return null;\n            }\n            if (![\"delete\", \"in\", \"instanceof\", \"new\", \"typeof\", \"void\"].includes(tmp.value)) {\n                unexpected(tmp);\n            }\n            /* falls through */\n          case \"name\":\n          case \"privatename\":\n          case \"string\":\n          case \"num\":\n          case \"big_int\":\n          case \"keyword\":\n          case \"atom\":\n            next();\n            return tmp.value;\n          default:\n            unexpected(tmp);\n        }\n    }\n\n    function as_name() {\n        var tmp = S.token;\n        if (tmp.type != \"name\" && tmp.type != \"privatename\") unexpected();\n        next();\n        return tmp.value;\n    }\n\n    function _make_symbol(type) {\n        var name = S.token.value;\n        return new (name == \"this\" ? AST_This :\n                    name == \"super\" ? AST_Super :\n                    type)({\n            name  : String(name),\n            start : S.token,\n            end   : S.token\n        });\n    }\n\n    function _verify_symbol(sym) {\n        var name = sym.name;\n        if (is_in_generator() && name == \"yield\") {\n            token_error(sym.start, \"Yield cannot be used as identifier inside generators\");\n        }\n        if (S.input.has_directive(\"use strict\")) {\n            if (name == \"yield\") {\n                token_error(sym.start, \"Unexpected yield identifier inside strict mode\");\n            }\n            if (sym instanceof AST_SymbolDeclaration && (name == \"arguments\" || name == \"eval\")) {\n                token_error(sym.start, \"Unexpected \" + name + \" in strict mode\");\n            }\n        }\n    }\n\n    function as_symbol(type, noerror) {\n        if (!is(\"name\")) {\n            if (!noerror) croak(\"Name expected\");\n            return null;\n        }\n        var sym = _make_symbol(type);\n        _verify_symbol(sym);\n        next();\n        return sym;\n    }\n\n    function as_symbol_or_string(type) {\n        if (!is(\"name\")) {\n            if (!is(\"string\")) {\n                croak(\"Name or string expected\");\n            }\n            var tok = S.token;\n            var ret = new type({\n                start : tok,\n                end   : tok,\n                name : tok.value,\n                quote : tok.quote\n            });\n            next();\n            return ret;\n        }\n        var sym = _make_symbol(type);\n        _verify_symbol(sym);\n        next();\n        return sym;\n    }\n\n    // Annotate AST_Call, AST_Lambda or AST_New with the special comments\n    function annotate(node, before_token = node.start) {\n        var comments = before_token.comments_before;\n        const comments_outside_parens = outer_comments_before_counts.get(before_token);\n        var i = comments_outside_parens != null ? comments_outside_parens : comments.length;\n        while (--i >= 0) {\n            var comment = comments[i];\n            if (/[@#]__/.test(comment.value)) {\n                if (/[@#]__PURE__/.test(comment.value)) {\n                    set_annotation(node, _PURE);\n                    break;\n                }\n                if (/[@#]__INLINE__/.test(comment.value)) {\n                    set_annotation(node, _INLINE);\n                    break;\n                }\n                if (/[@#]__NOINLINE__/.test(comment.value)) {\n                    set_annotation(node, _NOINLINE);\n                    break;\n                }\n                if (/[@#]__KEY__/.test(comment.value)) {\n                    set_annotation(node, _KEY);\n                    break;\n                }\n                if (/[@#]__MANGLE_PROP__/.test(comment.value)) {\n                    set_annotation(node, _MANGLEPROP);\n                    break;\n                }\n            }\n        }\n        return node;\n    }\n\n    var subscripts = function(expr, allow_calls, is_chain) {\n        var start = expr.start;\n        if (is(\"punc\", \".\")) {\n            next();\n            if(is(\"privatename\") && !S.in_class) \n                croak(\"Private field must be used in an enclosing class\");\n            const AST_DotVariant = is(\"privatename\") ? AST_DotHash : AST_Dot;\n            return annotate(subscripts(new AST_DotVariant({\n                start      : start,\n                expression : expr,\n                optional   : false,\n                property   : as_name(),\n                end        : prev()\n            }), allow_calls, is_chain));\n        }\n        if (is(\"punc\", \"[\")) {\n            next();\n            var prop = expression(true);\n            expect(\"]\");\n            return annotate(subscripts(new AST_Sub({\n                start      : start,\n                expression : expr,\n                optional   : false,\n                property   : prop,\n                end        : prev()\n            }), allow_calls, is_chain));\n        }\n        if (allow_calls && is(\"punc\", \"(\")) {\n            next();\n            var call = new AST_Call({\n                start      : start,\n                expression : expr,\n                optional   : false,\n                args       : call_args(),\n                end        : prev()\n            });\n            annotate(call);\n            return subscripts(call, true, is_chain);\n        }\n\n        if (is(\"punc\", \"?.\")) {\n            next();\n\n            let chain_contents;\n\n            if (allow_calls && is(\"punc\", \"(\")) {\n                next();\n\n                const call = new AST_Call({\n                    start,\n                    optional: true,\n                    expression: expr,\n                    args: call_args(),\n                    end: prev()\n                });\n                annotate(call);\n\n                chain_contents = subscripts(call, true, true);\n            } else if (is(\"name\") || is(\"privatename\")) {\n                if(is(\"privatename\") && !S.in_class) \n                    croak(\"Private field must be used in an enclosing class\");\n                const AST_DotVariant = is(\"privatename\") ? AST_DotHash : AST_Dot;\n                chain_contents = annotate(subscripts(new AST_DotVariant({\n                    start,\n                    expression: expr,\n                    optional: true,\n                    property: as_name(),\n                    end: prev()\n                }), allow_calls, true));\n            } else if (is(\"punc\", \"[\")) {\n                next();\n                const property = expression(true);\n                expect(\"]\");\n                chain_contents = annotate(subscripts(new AST_Sub({\n                    start,\n                    expression: expr,\n                    optional: true,\n                    property,\n                    end: prev()\n                }), allow_calls, true));\n            }\n\n            if (!chain_contents) unexpected();\n\n            if (chain_contents instanceof AST_Chain) return chain_contents;\n\n            return new AST_Chain({\n                start,\n                expression: chain_contents,\n                end: prev()\n            });\n        }\n\n        if (is(\"template_head\")) {\n            if (is_chain) {\n                // a?.b`c` is a syntax error\n                unexpected();\n            }\n\n            return subscripts(new AST_PrefixedTemplateString({\n                start: start,\n                prefix: expr,\n                template_string: template_string(),\n                end: prev()\n            }), allow_calls);\n        }\n        return expr;\n    };\n\n    function call_args() {\n        var args = [];\n        while (!is(\"punc\", \")\")) {\n            if (is(\"expand\", \"...\")) {\n                next();\n                args.push(new AST_Expansion({\n                    start: prev(),\n                    expression: expression(false),\n                    end: prev()\n                }));\n            } else {\n                args.push(expression(false));\n            }\n            if (!is(\"punc\", \")\")) {\n                expect(\",\");\n            }\n        }\n        next();\n        return args;\n    }\n\n    var maybe_unary = function(allow_calls, allow_arrows) {\n        var start = S.token;\n        if (start.type == \"name\" && start.value == \"await\" && can_await()) {\n            next();\n            return _await_expression();\n        }\n        if (is(\"operator\") && UNARY_PREFIX.has(start.value)) {\n            next();\n            handle_regexp();\n            var ex = make_unary(AST_UnaryPrefix, start, maybe_unary(allow_calls));\n            ex.start = start;\n            ex.end = prev();\n            return ex;\n        }\n        var val = expr_atom(allow_calls, allow_arrows);\n        while (is(\"operator\") && UNARY_POSTFIX.has(S.token.value) && !has_newline_before(S.token)) {\n            if (val instanceof AST_Arrow) unexpected();\n            val = make_unary(AST_UnaryPostfix, S.token, val);\n            val.start = start;\n            val.end = S.token;\n            next();\n        }\n        return val;\n    };\n\n    function make_unary(ctor, token, expr) {\n        var op = token.value;\n        switch (op) {\n          case \"++\":\n          case \"--\":\n            if (!is_assignable(expr))\n                croak(\"Invalid use of \" + op + \" operator\", token.line, token.col, token.pos);\n            break;\n          case \"delete\":\n            if (expr instanceof AST_SymbolRef && S.input.has_directive(\"use strict\"))\n                croak(\"Calling delete on expression not allowed in strict mode\", expr.start.line, expr.start.col, expr.start.pos);\n            break;\n        }\n        return new ctor({ operator: op, expression: expr });\n    }\n\n    var expr_op = function(left, min_prec, no_in) {\n        var op = is(\"operator\") ? S.token.value : null;\n        if (op == \"in\" && no_in) op = null;\n        if (op == \"**\" && left instanceof AST_UnaryPrefix\n            /* unary token in front not allowed - parenthesis required */\n            && !is_token(left.start, \"punc\", \"(\")\n            && left.operator !== \"--\" && left.operator !== \"++\")\n                unexpected(left.start);\n        var prec = op != null ? PRECEDENCE[op] : null;\n        if (prec != null && (prec > min_prec || (op === \"**\" && min_prec === prec))) {\n            next();\n            var right = expr_op(maybe_unary(true), prec, no_in);\n            return expr_op(new AST_Binary({\n                start    : left.start,\n                left     : left,\n                operator : op,\n                right    : right,\n                end      : right.end\n            }), min_prec, no_in);\n        }\n        return left;\n    };\n\n    function expr_ops(no_in) {\n        return expr_op(maybe_unary(true, true), 0, no_in);\n    }\n\n    var maybe_conditional = function(no_in) {\n        var start = S.token;\n        var expr = expr_ops(no_in);\n        if (is(\"operator\", \"?\")) {\n            next();\n            var yes = expression(false);\n            expect(\":\");\n            return new AST_Conditional({\n                start       : start,\n                condition   : expr,\n                consequent  : yes,\n                alternative : expression(false, no_in),\n                end         : prev()\n            });\n        }\n        return expr;\n    };\n\n    function is_assignable(expr) {\n        return expr instanceof AST_PropAccess || expr instanceof AST_SymbolRef;\n    }\n\n    function to_destructuring(node) {\n        if (node instanceof AST_Object) {\n            node = new AST_Destructuring({\n                start: node.start,\n                names: node.properties.map(to_destructuring),\n                is_array: false,\n                end: node.end\n            });\n        } else if (node instanceof AST_Array) {\n            var names = [];\n\n            for (var i = 0; i < node.elements.length; i++) {\n                // Only allow expansion as last element\n                if (node.elements[i] instanceof AST_Expansion) {\n                    if (i + 1 !== node.elements.length) {\n                        token_error(node.elements[i].start, \"Spread must the be last element in destructuring array\");\n                    }\n                    node.elements[i].expression = to_destructuring(node.elements[i].expression);\n                }\n\n                names.push(to_destructuring(node.elements[i]));\n            }\n\n            node = new AST_Destructuring({\n                start: node.start,\n                names: names,\n                is_array: true,\n                end: node.end\n            });\n        } else if (node instanceof AST_ObjectProperty) {\n            node.value = to_destructuring(node.value);\n        } else if (node instanceof AST_Assign) {\n            node = new AST_DefaultAssign({\n                start: node.start,\n                left: node.left,\n                operator: \"=\",\n                right: node.right,\n                end: node.end\n            });\n        }\n        return node;\n    }\n\n    // In ES6, AssignmentExpression can also be an ArrowFunction\n    var maybe_assign = function(no_in) {\n        handle_regexp();\n        var start = S.token;\n\n        if (start.type == \"name\" && start.value == \"yield\") {\n            if (is_in_generator()) {\n                next();\n                return _yield_expression();\n            } else if (S.input.has_directive(\"use strict\")) {\n                token_error(S.token, \"Unexpected yield identifier inside strict mode\");\n            }\n        }\n\n        var left = maybe_conditional(no_in);\n        var val = S.token.value;\n\n        if (is(\"operator\") && ASSIGNMENT.has(val)) {\n            if (is_assignable(left) || (left = to_destructuring(left)) instanceof AST_Destructuring) {\n                next();\n\n                return new AST_Assign({\n                    start    : start,\n                    left     : left,\n                    operator : val,\n                    right    : maybe_assign(no_in),\n                    logical  : LOGICAL_ASSIGNMENT.has(val),\n                    end      : prev()\n                });\n            }\n            croak(\"Invalid assignment\");\n        }\n        return left;\n    };\n\n    var to_expr_or_sequence = function(start, exprs) {\n        if (exprs.length === 1) {\n            return exprs[0];\n        } else if (exprs.length > 1) {\n            return new AST_Sequence({ start, expressions: exprs, end: peek() });\n        } else {\n            croak(\"Invalid parenthesized expression\");\n        }\n    };\n\n    var expression = function(commas, no_in) {\n        var start = S.token;\n        var exprs = [];\n        while (true) {\n            exprs.push(maybe_assign(no_in));\n            if (!commas || !is(\"punc\", \",\")) break;\n            next();\n            commas = true;\n        }\n        return to_expr_or_sequence(start, exprs);\n    };\n\n    function in_loop(cont) {\n        ++S.in_loop;\n        var ret = cont();\n        --S.in_loop;\n        return ret;\n    }\n\n    if (options.expression) {\n        return expression(true);\n    }\n\n    return (function parse_toplevel() {\n        var start = S.token;\n        var body = [];\n        S.input.push_directives_stack();\n        if (options.module) S.input.add_directive(\"use strict\");\n        while (!is(\"eof\")) {\n            body.push(statement());\n        }\n        S.input.pop_directives_stack();\n        var end = prev();\n        var toplevel = options.toplevel;\n        if (toplevel) {\n            toplevel.body = toplevel.body.concat(body);\n            toplevel.end = end;\n        } else {\n            toplevel = new AST_Toplevel({ start: start, body: body, end: end });\n        }\n        TEMPLATE_RAWS = new Map();\n        return toplevel;\n    })();\n\n}\n\n/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\nfunction DEFNODE(type, props, ctor, methods, base = AST_Node) {\n    if (!props) props = [];\n    else props = props.split(/\\s+/);\n    var self_props = props;\n    if (base && base.PROPS)\n        props = props.concat(base.PROPS);\n    const proto = base && Object.create(base.prototype);\n    if (proto) {\n        ctor.prototype = proto;\n        ctor.BASE = base;\n    }\n    if (base) base.SUBCLASSES.push(ctor);\n    ctor.prototype.CTOR = ctor;\n    ctor.prototype.constructor = ctor;\n    ctor.PROPS = props || null;\n    ctor.SELF_PROPS = self_props;\n    ctor.SUBCLASSES = [];\n    if (type) {\n        ctor.prototype.TYPE = ctor.TYPE = type;\n    }\n    if (methods) for (let i in methods) if (HOP(methods, i)) {\n        if (i[0] === \"$\") {\n            ctor[i.substr(1)] = methods[i];\n        } else {\n            ctor.prototype[i] = methods[i];\n        }\n    }\n    ctor.DEFMETHOD = function(name, method) {\n        this.prototype[name] = method;\n    };\n    return ctor;\n}\n\nconst has_tok_flag = (tok, flag) => Boolean(tok.flags & flag);\nconst set_tok_flag = (tok, flag, truth) => {\n    if (truth) {\n        tok.flags |= flag;\n    } else {\n        tok.flags &= ~flag;\n    }\n};\n\nconst TOK_FLAG_NLB          = 0b0001;\nconst TOK_FLAG_QUOTE_SINGLE = 0b0010;\nconst TOK_FLAG_QUOTE_EXISTS = 0b0100;\nconst TOK_FLAG_TEMPLATE_END = 0b1000;\n\nclass AST_Token {\n    constructor(type, value, line, col, pos, nlb, comments_before, comments_after, file) {\n        this.flags = (nlb ? 1 : 0);\n\n        this.type = type;\n        this.value = value;\n        this.line = line;\n        this.col = col;\n        this.pos = pos;\n        this.comments_before = comments_before;\n        this.comments_after = comments_after;\n        this.file = file;\n\n        Object.seal(this);\n    }\n\n    // Return a string summary of the token for node.js console.log\n    [Symbol.for(\"nodejs.util.inspect.custom\")](_depth, options) {\n        const special = str => options.stylize(str, \"special\");\n        const quote = typeof this.value === \"string\" && this.value.includes(\"`\") ? \"'\" : \"`\";\n        const value = `${quote}${this.value}${quote}`;\n        return `${special(\"[AST_Token\")} ${value} at ${this.line}:${this.col}${special(\"]\")}`;\n    }\n\n    get nlb() {\n        return has_tok_flag(this, TOK_FLAG_NLB);\n    }\n\n    set nlb(new_nlb) {\n        set_tok_flag(this, TOK_FLAG_NLB, new_nlb);\n    }\n\n    get quote() {\n        return !has_tok_flag(this, TOK_FLAG_QUOTE_EXISTS)\n            ? \"\"\n            : (has_tok_flag(this, TOK_FLAG_QUOTE_SINGLE) ? \"'\" : '\"');\n    }\n\n    set quote(quote_type) {\n        set_tok_flag(this, TOK_FLAG_QUOTE_SINGLE, quote_type === \"'\");\n        set_tok_flag(this, TOK_FLAG_QUOTE_EXISTS, !!quote_type);\n    }\n\n    get template_end() {\n        return has_tok_flag(this, TOK_FLAG_TEMPLATE_END);\n    }\n\n    set template_end(new_template_end) {\n        set_tok_flag(this, TOK_FLAG_TEMPLATE_END, new_template_end);\n    }\n}\n\nvar AST_Node = DEFNODE(\"Node\", \"start end\", function AST_Node(props) {\n    if (props) {\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    _clone: function(deep) {\n        if (deep) {\n            var self = this.clone();\n            return self.transform(new TreeTransformer(function(node) {\n                if (node !== self) {\n                    return node.clone(true);\n                }\n            }));\n        }\n        return new this.CTOR(this);\n    },\n    clone: function(deep) {\n        return this._clone(deep);\n    },\n    $documentation: \"Base class of all AST nodes\",\n    $propdoc: {\n        start: \"[AST_Token] The first token of this node\",\n        end: \"[AST_Token] The last token of this node\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this);\n    },\n    walk: function(visitor) {\n        return this._walk(visitor); // not sure the indirection will be any help\n    },\n    _children_backwards: () => {}\n}, null);\n\n/* -----[ statements ]----- */\n\nvar AST_Statement = DEFNODE(\"Statement\", null, function AST_Statement(props) {\n    if (props) {\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"Base class of all statements\",\n});\n\nvar AST_Debugger = DEFNODE(\"Debugger\", null, function AST_Debugger(props) {\n    if (props) {\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"Represents a debugger statement\",\n}, AST_Statement);\n\nvar AST_Directive = DEFNODE(\"Directive\", \"value quote\", function AST_Directive(props) {\n    if (props) {\n        this.value = props.value;\n        this.quote = props.quote;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"Represents a directive, like \\\"use strict\\\";\",\n    $propdoc: {\n        value: \"[string] The value of this directive as a plain string (it's not an AST_String!)\",\n        quote: \"[string] the original quote character\"\n    },\n}, AST_Statement);\n\nvar AST_SimpleStatement = DEFNODE(\"SimpleStatement\", \"body\", function AST_SimpleStatement(props) {\n    if (props) {\n        this.body = props.body;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A statement consisting of an expression, i.e. a = 1 + 2\",\n    $propdoc: {\n        body: \"[AST_Node] an expression node (should not be instanceof AST_Statement)\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.body._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        push(this.body);\n    }\n}, AST_Statement);\n\nfunction walk_body(node, visitor) {\n    const body = node.body;\n    for (var i = 0, len = body.length; i < len; i++) {\n        body[i]._walk(visitor);\n    }\n}\n\nfunction clone_block_scope(deep) {\n    var clone = this._clone(deep);\n    if (this.block_scope) {\n        clone.block_scope = this.block_scope.clone();\n    }\n    return clone;\n}\n\nvar AST_Block = DEFNODE(\"Block\", \"body block_scope\", function AST_Block(props) {\n    if (props) {\n        this.body = props.body;\n        this.block_scope = props.block_scope;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A body of statements (usually braced)\",\n    $propdoc: {\n        body: \"[AST_Statement*] an array of statements\",\n        block_scope: \"[AST_Scope] the block scope\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            walk_body(this, visitor);\n        });\n    },\n    _children_backwards(push) {\n        let i = this.body.length;\n        while (i--) push(this.body[i]);\n    },\n    clone: clone_block_scope\n}, AST_Statement);\n\nvar AST_BlockStatement = DEFNODE(\"BlockStatement\", null, function AST_BlockStatement(props) {\n    if (props) {\n        this.body = props.body;\n        this.block_scope = props.block_scope;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A block statement\",\n}, AST_Block);\n\nvar AST_EmptyStatement = DEFNODE(\"EmptyStatement\", null, function AST_EmptyStatement(props) {\n    if (props) {\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"The empty statement (empty block or simply a semicolon)\"\n}, AST_Statement);\n\nvar AST_StatementWithBody = DEFNODE(\"StatementWithBody\", \"body\", function AST_StatementWithBody(props) {\n    if (props) {\n        this.body = props.body;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"Base class for all statements that contain one nested body: `For`, `ForIn`, `Do`, `While`, `With`\",\n    $propdoc: {\n        body: \"[AST_Statement] the body; this should always be present, even if it's an AST_EmptyStatement\"\n    }\n}, AST_Statement);\n\nvar AST_LabeledStatement = DEFNODE(\"LabeledStatement\", \"label\", function AST_LabeledStatement(props) {\n    if (props) {\n        this.label = props.label;\n        this.body = props.body;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"Statement with a label\",\n    $propdoc: {\n        label: \"[AST_Label] a label definition\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.label._walk(visitor);\n            this.body._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        push(this.body);\n        push(this.label);\n    },\n    clone: function(deep) {\n        var node = this._clone(deep);\n        if (deep) {\n            var label = node.label;\n            var def = this.label;\n            node.walk(new TreeWalker(function(node) {\n                if (node instanceof AST_LoopControl\n                    && node.label && node.label.thedef === def) {\n                    node.label.thedef = label;\n                    label.references.push(node);\n                }\n            }));\n        }\n        return node;\n    }\n}, AST_StatementWithBody);\n\nvar AST_IterationStatement = DEFNODE(\n    \"IterationStatement\",\n    \"block_scope\",\n    function AST_IterationStatement(props) {\n        if (props) {\n            this.block_scope = props.block_scope;\n            this.body = props.body;\n            this.start = props.start;\n            this.end = props.end;\n        }\n\n        this.flags = 0;\n    },\n    {\n        $documentation: \"Internal class.  All loops inherit from it.\",\n        $propdoc: {\n            block_scope: \"[AST_Scope] the block scope for this iteration statement.\"\n        },\n        clone: clone_block_scope\n    },\n    AST_StatementWithBody\n);\n\nvar AST_DWLoop = DEFNODE(\"DWLoop\", \"condition\", function AST_DWLoop(props) {\n    if (props) {\n        this.condition = props.condition;\n        this.block_scope = props.block_scope;\n        this.body = props.body;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"Base class for do/while statements\",\n    $propdoc: {\n        condition: \"[AST_Node] the loop condition.  Should not be instanceof AST_Statement\"\n    }\n}, AST_IterationStatement);\n\nvar AST_Do = DEFNODE(\"Do\", null, function AST_Do(props) {\n    if (props) {\n        this.condition = props.condition;\n        this.block_scope = props.block_scope;\n        this.body = props.body;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A `do` statement\",\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.body._walk(visitor);\n            this.condition._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        push(this.condition);\n        push(this.body);\n    }\n}, AST_DWLoop);\n\nvar AST_While = DEFNODE(\"While\", null, function AST_While(props) {\n    if (props) {\n        this.condition = props.condition;\n        this.block_scope = props.block_scope;\n        this.body = props.body;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A `while` statement\",\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.condition._walk(visitor);\n            this.body._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        push(this.body);\n        push(this.condition);\n    },\n}, AST_DWLoop);\n\nvar AST_For = DEFNODE(\"For\", \"init condition step\", function AST_For(props) {\n    if (props) {\n        this.init = props.init;\n        this.condition = props.condition;\n        this.step = props.step;\n        this.block_scope = props.block_scope;\n        this.body = props.body;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A `for` statement\",\n    $propdoc: {\n        init: \"[AST_Node?] the `for` initialization code, or null if empty\",\n        condition: \"[AST_Node?] the `for` termination clause, or null if empty\",\n        step: \"[AST_Node?] the `for` update clause, or null if empty\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            if (this.init) this.init._walk(visitor);\n            if (this.condition) this.condition._walk(visitor);\n            if (this.step) this.step._walk(visitor);\n            this.body._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        push(this.body);\n        if (this.step) push(this.step);\n        if (this.condition) push(this.condition);\n        if (this.init) push(this.init);\n    },\n}, AST_IterationStatement);\n\nvar AST_ForIn = DEFNODE(\"ForIn\", \"init object\", function AST_ForIn(props) {\n    if (props) {\n        this.init = props.init;\n        this.object = props.object;\n        this.block_scope = props.block_scope;\n        this.body = props.body;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A `for ... in` statement\",\n    $propdoc: {\n        init: \"[AST_Node] the `for/in` initialization code\",\n        object: \"[AST_Node] the object that we're looping through\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.init._walk(visitor);\n            this.object._walk(visitor);\n            this.body._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        push(this.body);\n        if (this.object) push(this.object);\n        if (this.init) push(this.init);\n    },\n}, AST_IterationStatement);\n\nvar AST_ForOf = DEFNODE(\"ForOf\", \"await\", function AST_ForOf(props) {\n    if (props) {\n        this.await = props.await;\n        this.init = props.init;\n        this.object = props.object;\n        this.block_scope = props.block_scope;\n        this.body = props.body;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A `for ... of` statement\",\n}, AST_ForIn);\n\nvar AST_With = DEFNODE(\"With\", \"expression\", function AST_With(props) {\n    if (props) {\n        this.expression = props.expression;\n        this.body = props.body;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A `with` statement\",\n    $propdoc: {\n        expression: \"[AST_Node] the `with` expression\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.expression._walk(visitor);\n            this.body._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        push(this.body);\n        push(this.expression);\n    },\n}, AST_StatementWithBody);\n\n/* -----[ scope and functions ]----- */\n\nvar AST_Scope = DEFNODE(\n    \"Scope\",\n    \"variables uses_with uses_eval parent_scope enclosed cname\",\n    function AST_Scope(props) {\n        if (props) {\n            this.variables = props.variables;\n            this.uses_with = props.uses_with;\n            this.uses_eval = props.uses_eval;\n            this.parent_scope = props.parent_scope;\n            this.enclosed = props.enclosed;\n            this.cname = props.cname;\n            this.body = props.body;\n            this.block_scope = props.block_scope;\n            this.start = props.start;\n            this.end = props.end;\n        }\n\n        this.flags = 0;\n    },\n    {\n        $documentation: \"Base class for all statements introducing a lexical scope\",\n        $propdoc: {\n            variables: \"[Map/S] a map of name -> SymbolDef for all variables/functions defined in this scope\",\n            uses_with: \"[boolean/S] tells whether this scope uses the `with` statement\",\n            uses_eval: \"[boolean/S] tells whether this scope contains a direct call to the global `eval`\",\n            parent_scope: \"[AST_Scope?/S] link to the parent scope\",\n            enclosed: \"[SymbolDef*/S] a list of all symbol definitions that are accessed from this scope or any subscopes\",\n            cname: \"[integer/S] current index for mangling variables (used internally by the mangler)\",\n        },\n        get_defun_scope: function() {\n            var self = this;\n            while (self.is_block_scope()) {\n                self = self.parent_scope;\n            }\n            return self;\n        },\n        clone: function(deep, toplevel) {\n            var node = this._clone(deep);\n            if (deep && this.variables && toplevel && !this._block_scope) {\n                node.figure_out_scope({}, {\n                    toplevel: toplevel,\n                    parent_scope: this.parent_scope\n                });\n            } else {\n                if (this.variables) node.variables = new Map(this.variables);\n                if (this.enclosed) node.enclosed = this.enclosed.slice();\n                if (this._block_scope) node._block_scope = this._block_scope;\n            }\n            return node;\n        },\n        pinned: function() {\n            return this.uses_eval || this.uses_with;\n        }\n    },\n    AST_Block\n);\n\nvar AST_Toplevel = DEFNODE(\"Toplevel\", \"globals\", function AST_Toplevel(props) {\n    if (props) {\n        this.globals = props.globals;\n        this.variables = props.variables;\n        this.uses_with = props.uses_with;\n        this.uses_eval = props.uses_eval;\n        this.parent_scope = props.parent_scope;\n        this.enclosed = props.enclosed;\n        this.cname = props.cname;\n        this.body = props.body;\n        this.block_scope = props.block_scope;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"The toplevel scope\",\n    $propdoc: {\n        globals: \"[Map/S] a map of name -> SymbolDef for all undeclared names\",\n    },\n    wrap_commonjs: function(name) {\n        var body = this.body;\n        var wrapped_tl = \"(function(exports){'$ORIG';})(typeof \" + name + \"=='undefined'?(\" + name + \"={}):\" + name + \");\";\n        wrapped_tl = parse(wrapped_tl);\n        wrapped_tl = wrapped_tl.transform(new TreeTransformer(function(node) {\n            if (node instanceof AST_Directive && node.value == \"$ORIG\") {\n                return MAP.splice(body);\n            }\n        }));\n        return wrapped_tl;\n    },\n    wrap_enclose: function(args_values) {\n        if (typeof args_values != \"string\") args_values = \"\";\n        var index = args_values.indexOf(\":\");\n        if (index < 0) index = args_values.length;\n        var body = this.body;\n        return parse([\n            \"(function(\",\n            args_values.slice(0, index),\n            '){\"$ORIG\"})(',\n            args_values.slice(index + 1),\n            \")\"\n        ].join(\"\")).transform(new TreeTransformer(function(node) {\n            if (node instanceof AST_Directive && node.value == \"$ORIG\") {\n                return MAP.splice(body);\n            }\n        }));\n    }\n}, AST_Scope);\n\nvar AST_Expansion = DEFNODE(\"Expansion\", \"expression\", function AST_Expansion(props) {\n    if (props) {\n        this.expression = props.expression;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"An expandible argument, such as ...rest, a splat, such as [1,2,...all], or an expansion in a variable declaration, such as var [first, ...rest] = list\",\n    $propdoc: {\n        expression: \"[AST_Node] the thing to be expanded\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.expression.walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        push(this.expression);\n    },\n});\n\nvar AST_Lambda = DEFNODE(\n    \"Lambda\",\n    \"name argnames uses_arguments is_generator async\",\n    function AST_Lambda(props) {\n        if (props) {\n            this.name = props.name;\n            this.argnames = props.argnames;\n            this.uses_arguments = props.uses_arguments;\n            this.is_generator = props.is_generator;\n            this.async = props.async;\n            this.variables = props.variables;\n            this.uses_with = props.uses_with;\n            this.uses_eval = props.uses_eval;\n            this.parent_scope = props.parent_scope;\n            this.enclosed = props.enclosed;\n            this.cname = props.cname;\n            this.body = props.body;\n            this.block_scope = props.block_scope;\n            this.start = props.start;\n            this.end = props.end;\n        }\n\n        this.flags = 0;\n    },\n    {\n        $documentation: \"Base class for functions\",\n        $propdoc: {\n            name: \"[AST_SymbolDeclaration?] the name of this function\",\n            argnames: \"[AST_SymbolFunarg|AST_Destructuring|AST_Expansion|AST_DefaultAssign*] array of function arguments, destructurings, or expanding arguments\",\n            uses_arguments: \"[boolean/S] tells whether this function accesses the arguments array\",\n            is_generator: \"[boolean] is this a generator method\",\n            async: \"[boolean] is this method async\",\n        },\n        args_as_names: function () {\n            var out = [];\n            for (var i = 0; i < this.argnames.length; i++) {\n                if (this.argnames[i] instanceof AST_Destructuring) {\n                    out.push(...this.argnames[i].all_symbols());\n                } else {\n                    out.push(this.argnames[i]);\n                }\n            }\n            return out;\n        },\n        _walk: function(visitor) {\n            return visitor._visit(this, function() {\n                if (this.name) this.name._walk(visitor);\n                var argnames = this.argnames;\n                for (var i = 0, len = argnames.length; i < len; i++) {\n                    argnames[i]._walk(visitor);\n                }\n                walk_body(this, visitor);\n            });\n        },\n        _children_backwards(push) {\n            let i = this.body.length;\n            while (i--) push(this.body[i]);\n\n            i = this.argnames.length;\n            while (i--) push(this.argnames[i]);\n\n            if (this.name) push(this.name);\n        },\n        is_braceless() {\n            return this.body[0] instanceof AST_Return && this.body[0].value;\n        },\n        // Default args and expansion don't count, so .argnames.length doesn't cut it\n        length_property() {\n            let length = 0;\n\n            for (const arg of this.argnames) {\n                if (arg instanceof AST_SymbolFunarg || arg instanceof AST_Destructuring) {\n                    length++;\n                }\n            }\n\n            return length;\n        }\n    },\n    AST_Scope\n);\n\nvar AST_Accessor = DEFNODE(\"Accessor\", null, function AST_Accessor(props) {\n    if (props) {\n        this.name = props.name;\n        this.argnames = props.argnames;\n        this.uses_arguments = props.uses_arguments;\n        this.is_generator = props.is_generator;\n        this.async = props.async;\n        this.variables = props.variables;\n        this.uses_with = props.uses_with;\n        this.uses_eval = props.uses_eval;\n        this.parent_scope = props.parent_scope;\n        this.enclosed = props.enclosed;\n        this.cname = props.cname;\n        this.body = props.body;\n        this.block_scope = props.block_scope;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A setter/getter function.  The `name` property is always null.\"\n}, AST_Lambda);\n\nvar AST_Function = DEFNODE(\"Function\", null, function AST_Function(props) {\n    if (props) {\n        this.name = props.name;\n        this.argnames = props.argnames;\n        this.uses_arguments = props.uses_arguments;\n        this.is_generator = props.is_generator;\n        this.async = props.async;\n        this.variables = props.variables;\n        this.uses_with = props.uses_with;\n        this.uses_eval = props.uses_eval;\n        this.parent_scope = props.parent_scope;\n        this.enclosed = props.enclosed;\n        this.cname = props.cname;\n        this.body = props.body;\n        this.block_scope = props.block_scope;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A function expression\"\n}, AST_Lambda);\n\nvar AST_Arrow = DEFNODE(\"Arrow\", null, function AST_Arrow(props) {\n    if (props) {\n        this.name = props.name;\n        this.argnames = props.argnames;\n        this.uses_arguments = props.uses_arguments;\n        this.is_generator = props.is_generator;\n        this.async = props.async;\n        this.variables = props.variables;\n        this.uses_with = props.uses_with;\n        this.uses_eval = props.uses_eval;\n        this.parent_scope = props.parent_scope;\n        this.enclosed = props.enclosed;\n        this.cname = props.cname;\n        this.body = props.body;\n        this.block_scope = props.block_scope;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"An ES6 Arrow function ((a) => b)\"\n}, AST_Lambda);\n\nvar AST_Defun = DEFNODE(\"Defun\", null, function AST_Defun(props) {\n    if (props) {\n        this.name = props.name;\n        this.argnames = props.argnames;\n        this.uses_arguments = props.uses_arguments;\n        this.is_generator = props.is_generator;\n        this.async = props.async;\n        this.variables = props.variables;\n        this.uses_with = props.uses_with;\n        this.uses_eval = props.uses_eval;\n        this.parent_scope = props.parent_scope;\n        this.enclosed = props.enclosed;\n        this.cname = props.cname;\n        this.body = props.body;\n        this.block_scope = props.block_scope;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A function definition\"\n}, AST_Lambda);\n\n/* -----[ DESTRUCTURING ]----- */\nvar AST_Destructuring = DEFNODE(\"Destructuring\", \"names is_array\", function AST_Destructuring(props) {\n    if (props) {\n        this.names = props.names;\n        this.is_array = props.is_array;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A destructuring of several names. Used in destructuring assignment and with destructuring function argument names\",\n    $propdoc: {\n        \"names\": \"[AST_Node*] Array of properties or elements\",\n        \"is_array\": \"[Boolean] Whether the destructuring represents an object or array\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.names.forEach(function(name) {\n                name._walk(visitor);\n            });\n        });\n    },\n    _children_backwards(push) {\n        let i = this.names.length;\n        while (i--) push(this.names[i]);\n    },\n    all_symbols: function() {\n        var out = [];\n        walk(this, node => {\n            if (node instanceof AST_SymbolDeclaration) {\n                out.push(node);\n            }\n            if (node instanceof AST_Lambda) {\n                return true;\n            }\n        });\n        return out;\n    }\n});\n\nvar AST_PrefixedTemplateString = DEFNODE(\n    \"PrefixedTemplateString\",\n    \"template_string prefix\",\n    function AST_PrefixedTemplateString(props) {\n        if (props) {\n            this.template_string = props.template_string;\n            this.prefix = props.prefix;\n            this.start = props.start;\n            this.end = props.end;\n        }\n\n        this.flags = 0;\n    },\n    {\n        $documentation: \"A templatestring with a prefix, such as String.raw`foobarbaz`\",\n        $propdoc: {\n            template_string: \"[AST_TemplateString] The template string\",\n            prefix: \"[AST_Node] The prefix, which will get called.\"\n        },\n        _walk: function(visitor) {\n            return visitor._visit(this, function () {\n                this.prefix._walk(visitor);\n                this.template_string._walk(visitor);\n            });\n        },\n        _children_backwards(push) {\n            push(this.template_string);\n            push(this.prefix);\n        },\n    }\n);\n\nvar AST_TemplateString = DEFNODE(\"TemplateString\", \"segments\", function AST_TemplateString(props) {\n    if (props) {\n        this.segments = props.segments;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A template string literal\",\n    $propdoc: {\n        segments: \"[AST_Node*] One or more segments, starting with AST_TemplateSegment. AST_Node may follow AST_TemplateSegment, but each AST_Node must be followed by AST_TemplateSegment.\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.segments.forEach(function(seg) {\n                seg._walk(visitor);\n            });\n        });\n    },\n    _children_backwards(push) {\n        let i = this.segments.length;\n        while (i--) push(this.segments[i]);\n    }\n});\n\nvar AST_TemplateSegment = DEFNODE(\"TemplateSegment\", \"value raw\", function AST_TemplateSegment(props) {\n    if (props) {\n        this.value = props.value;\n        this.raw = props.raw;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A segment of a template string literal\",\n    $propdoc: {\n        value: \"Content of the segment\",\n        raw: \"Raw source of the segment\",\n    }\n});\n\n/* -----[ JUMPS ]----- */\n\nvar AST_Jump = DEFNODE(\"Jump\", null, function AST_Jump(props) {\n    if (props) {\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"Base class for “jumps” (for now that's `return`, `throw`, `break` and `continue`)\"\n}, AST_Statement);\n\n/** Base class for “exits” (`return` and `throw`) */\nvar AST_Exit = DEFNODE(\"Exit\", \"value\", function AST_Exit(props) {\n    if (props) {\n        this.value = props.value;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"Base class for “exits” (`return` and `throw`)\",\n    $propdoc: {\n        value: \"[AST_Node?] the value returned or thrown by this statement; could be null for AST_Return\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, this.value && function() {\n            this.value._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        if (this.value) push(this.value);\n    },\n}, AST_Jump);\n\nvar AST_Return = DEFNODE(\"Return\", null, function AST_Return(props) {\n    if (props) {\n        this.value = props.value;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A `return` statement\"\n}, AST_Exit);\n\nvar AST_Throw = DEFNODE(\"Throw\", null, function AST_Throw(props) {\n    if (props) {\n        this.value = props.value;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A `throw` statement\"\n}, AST_Exit);\n\nvar AST_LoopControl = DEFNODE(\"LoopControl\", \"label\", function AST_LoopControl(props) {\n    if (props) {\n        this.label = props.label;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"Base class for loop control statements (`break` and `continue`)\",\n    $propdoc: {\n        label: \"[AST_LabelRef?] the label, or null if none\",\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, this.label && function() {\n            this.label._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        if (this.label) push(this.label);\n    },\n}, AST_Jump);\n\nvar AST_Break = DEFNODE(\"Break\", null, function AST_Break(props) {\n    if (props) {\n        this.label = props.label;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A `break` statement\"\n}, AST_LoopControl);\n\nvar AST_Continue = DEFNODE(\"Continue\", null, function AST_Continue(props) {\n    if (props) {\n        this.label = props.label;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A `continue` statement\"\n}, AST_LoopControl);\n\nvar AST_Await = DEFNODE(\"Await\", \"expression\", function AST_Await(props) {\n    if (props) {\n        this.expression = props.expression;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"An `await` statement\",\n    $propdoc: {\n        expression: \"[AST_Node] the mandatory expression being awaited\",\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.expression._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        push(this.expression);\n    },\n});\n\nvar AST_Yield = DEFNODE(\"Yield\", \"expression is_star\", function AST_Yield(props) {\n    if (props) {\n        this.expression = props.expression;\n        this.is_star = props.is_star;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A `yield` statement\",\n    $propdoc: {\n        expression: \"[AST_Node?] the value returned or thrown by this statement; could be null (representing undefined) but only when is_star is set to false\",\n        is_star: \"[Boolean] Whether this is a yield or yield* statement\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, this.expression && function() {\n            this.expression._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        if (this.expression) push(this.expression);\n    }\n});\n\n/* -----[ IF ]----- */\n\nvar AST_If = DEFNODE(\"If\", \"condition alternative\", function AST_If(props) {\n    if (props) {\n        this.condition = props.condition;\n        this.alternative = props.alternative;\n        this.body = props.body;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A `if` statement\",\n    $propdoc: {\n        condition: \"[AST_Node] the `if` condition\",\n        alternative: \"[AST_Statement?] the `else` part, or null if not present\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.condition._walk(visitor);\n            this.body._walk(visitor);\n            if (this.alternative) this.alternative._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        if (this.alternative) {\n            push(this.alternative);\n        }\n        push(this.body);\n        push(this.condition);\n    }\n}, AST_StatementWithBody);\n\n/* -----[ SWITCH ]----- */\n\nvar AST_Switch = DEFNODE(\"Switch\", \"expression\", function AST_Switch(props) {\n    if (props) {\n        this.expression = props.expression;\n        this.body = props.body;\n        this.block_scope = props.block_scope;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A `switch` statement\",\n    $propdoc: {\n        expression: \"[AST_Node] the `switch` “discriminant”\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.expression._walk(visitor);\n            walk_body(this, visitor);\n        });\n    },\n    _children_backwards(push) {\n        let i = this.body.length;\n        while (i--) push(this.body[i]);\n        push(this.expression);\n    }\n}, AST_Block);\n\nvar AST_SwitchBranch = DEFNODE(\"SwitchBranch\", null, function AST_SwitchBranch(props) {\n    if (props) {\n        this.body = props.body;\n        this.block_scope = props.block_scope;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"Base class for `switch` branches\",\n}, AST_Block);\n\nvar AST_Default = DEFNODE(\"Default\", null, function AST_Default(props) {\n    if (props) {\n        this.body = props.body;\n        this.block_scope = props.block_scope;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A `default` switch branch\",\n}, AST_SwitchBranch);\n\nvar AST_Case = DEFNODE(\"Case\", \"expression\", function AST_Case(props) {\n    if (props) {\n        this.expression = props.expression;\n        this.body = props.body;\n        this.block_scope = props.block_scope;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A `case` switch branch\",\n    $propdoc: {\n        expression: \"[AST_Node] the `case` expression\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.expression._walk(visitor);\n            walk_body(this, visitor);\n        });\n    },\n    _children_backwards(push) {\n        let i = this.body.length;\n        while (i--) push(this.body[i]);\n        push(this.expression);\n    },\n}, AST_SwitchBranch);\n\n/* -----[ EXCEPTIONS ]----- */\n\nvar AST_Try = DEFNODE(\"Try\", \"body bcatch bfinally\", function AST_Try(props) {\n    if (props) {\n        this.body = props.body;\n        this.bcatch = props.bcatch;\n        this.bfinally = props.bfinally;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A `try` statement\",\n    $propdoc: {\n        body: \"[AST_TryBlock] the try block\",\n        bcatch: \"[AST_Catch?] the catch block, or null if not present\",\n        bfinally: \"[AST_Finally?] the finally block, or null if not present\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.body._walk(visitor);\n            if (this.bcatch) this.bcatch._walk(visitor);\n            if (this.bfinally) this.bfinally._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        if (this.bfinally) push(this.bfinally);\n        if (this.bcatch) push(this.bcatch);\n        push(this.body);\n    },\n}, AST_Statement);\n\nvar AST_TryBlock = DEFNODE(\"TryBlock\", null, function AST_TryBlock(props) {\n    if (props) {\n        this.body = props.body;\n        this.block_scope = props.block_scope;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"The `try` block of a try statement\"\n}, AST_Block);\n\nvar AST_Catch = DEFNODE(\"Catch\", \"argname\", function AST_Catch(props) {\n    if (props) {\n        this.argname = props.argname;\n        this.body = props.body;\n        this.block_scope = props.block_scope;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A `catch` node; only makes sense as part of a `try` statement\",\n    $propdoc: {\n        argname: \"[AST_SymbolCatch|AST_Destructuring|AST_Expansion|AST_DefaultAssign] symbol for the exception\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            if (this.argname) this.argname._walk(visitor);\n            walk_body(this, visitor);\n        });\n    },\n    _children_backwards(push) {\n        let i = this.body.length;\n        while (i--) push(this.body[i]);\n        if (this.argname) push(this.argname);\n    },\n}, AST_Block);\n\nvar AST_Finally = DEFNODE(\"Finally\", null, function AST_Finally(props) {\n    if (props) {\n        this.body = props.body;\n        this.block_scope = props.block_scope;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A `finally` node; only makes sense as part of a `try` statement\"\n}, AST_Block);\n\n/* -----[ VAR/CONST ]----- */\n\nvar AST_Definitions = DEFNODE(\"Definitions\", \"definitions\", function AST_Definitions(props) {\n    if (props) {\n        this.definitions = props.definitions;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"Base class for `var` or `const` nodes (variable declarations/initializations)\",\n    $propdoc: {\n        definitions: \"[AST_VarDef*] array of variable definitions\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            var definitions = this.definitions;\n            for (var i = 0, len = definitions.length; i < len; i++) {\n                definitions[i]._walk(visitor);\n            }\n        });\n    },\n    _children_backwards(push) {\n        let i = this.definitions.length;\n        while (i--) push(this.definitions[i]);\n    },\n}, AST_Statement);\n\nvar AST_Var = DEFNODE(\"Var\", null, function AST_Var(props) {\n    if (props) {\n        this.definitions = props.definitions;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A `var` statement\"\n}, AST_Definitions);\n\nvar AST_Let = DEFNODE(\"Let\", null, function AST_Let(props) {\n    if (props) {\n        this.definitions = props.definitions;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A `let` statement\"\n}, AST_Definitions);\n\nvar AST_Const = DEFNODE(\"Const\", null, function AST_Const(props) {\n    if (props) {\n        this.definitions = props.definitions;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A `const` statement\"\n}, AST_Definitions);\n\nvar AST_VarDef = DEFNODE(\"VarDef\", \"name value\", function AST_VarDef(props) {\n    if (props) {\n        this.name = props.name;\n        this.value = props.value;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A variable declaration; only appears in a AST_Definitions node\",\n    $propdoc: {\n        name: \"[AST_Destructuring|AST_SymbolConst|AST_SymbolLet|AST_SymbolVar] name of the variable\",\n        value: \"[AST_Node?] initializer, or null of there's no initializer\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.name._walk(visitor);\n            if (this.value) this.value._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        if (this.value) push(this.value);\n        push(this.name);\n    },\n    declarations_as_names() {\n        if (this.name instanceof AST_SymbolDeclaration) {\n            return [this];\n        } else {\n            return this.name.all_symbols();\n        }\n    }\n});\n\nvar AST_NameMapping = DEFNODE(\"NameMapping\", \"foreign_name name\", function AST_NameMapping(props) {\n    if (props) {\n        this.foreign_name = props.foreign_name;\n        this.name = props.name;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"The part of the export/import statement that declare names from a module.\",\n    $propdoc: {\n        foreign_name: \"[AST_SymbolExportForeign|AST_SymbolImportForeign] The name being exported/imported (as specified in the module)\",\n        name: \"[AST_SymbolExport|AST_SymbolImport] The name as it is visible to this module.\"\n    },\n    _walk: function (visitor) {\n        return visitor._visit(this, function() {\n            this.foreign_name._walk(visitor);\n            this.name._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        push(this.name);\n        push(this.foreign_name);\n    },\n});\n\nvar AST_Import = DEFNODE(\n    \"Import\",\n    \"imported_name imported_names module_name assert_clause\",\n    function AST_Import(props) {\n        if (props) {\n            this.imported_name = props.imported_name;\n            this.imported_names = props.imported_names;\n            this.module_name = props.module_name;\n            this.assert_clause = props.assert_clause;\n            this.start = props.start;\n            this.end = props.end;\n        }\n\n        this.flags = 0;\n    },\n    {\n        $documentation: \"An `import` statement\",\n        $propdoc: {\n            imported_name: \"[AST_SymbolImport] The name of the variable holding the module's default export.\",\n            imported_names: \"[AST_NameMapping*] The names of non-default imported variables\",\n            module_name: \"[AST_String] String literal describing where this module came from\",\n            assert_clause: \"[AST_Object?] The import assertion\"\n        },\n        _walk: function(visitor) {\n            return visitor._visit(this, function() {\n                if (this.imported_name) {\n                    this.imported_name._walk(visitor);\n                }\n                if (this.imported_names) {\n                    this.imported_names.forEach(function(name_import) {\n                        name_import._walk(visitor);\n                    });\n                }\n                this.module_name._walk(visitor);\n            });\n        },\n        _children_backwards(push) {\n            push(this.module_name);\n            if (this.imported_names) {\n                let i = this.imported_names.length;\n                while (i--) push(this.imported_names[i]);\n            }\n            if (this.imported_name) push(this.imported_name);\n        },\n    }\n);\n\nvar AST_ImportMeta = DEFNODE(\"ImportMeta\", null, function AST_ImportMeta(props) {\n    if (props) {\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A reference to import.meta\",\n});\n\nvar AST_Export = DEFNODE(\n    \"Export\",\n    \"exported_definition exported_value is_default exported_names module_name assert_clause\",\n    function AST_Export(props) {\n        if (props) {\n            this.exported_definition = props.exported_definition;\n            this.exported_value = props.exported_value;\n            this.is_default = props.is_default;\n            this.exported_names = props.exported_names;\n            this.module_name = props.module_name;\n            this.assert_clause = props.assert_clause;\n            this.start = props.start;\n            this.end = props.end;\n        }\n\n        this.flags = 0;\n    },\n    {\n        $documentation: \"An `export` statement\",\n        $propdoc: {\n            exported_definition: \"[AST_Defun|AST_Definitions|AST_DefClass?] An exported definition\",\n            exported_value: \"[AST_Node?] An exported value\",\n            exported_names: \"[AST_NameMapping*?] List of exported names\",\n            module_name: \"[AST_String?] Name of the file to load exports from\",\n            is_default: \"[Boolean] Whether this is the default exported value of this module\",\n            assert_clause: \"[AST_Object?] The import assertion\"\n        },\n        _walk: function (visitor) {\n            return visitor._visit(this, function () {\n                if (this.exported_definition) {\n                    this.exported_definition._walk(visitor);\n                }\n                if (this.exported_value) {\n                    this.exported_value._walk(visitor);\n                }\n                if (this.exported_names) {\n                    this.exported_names.forEach(function(name_export) {\n                        name_export._walk(visitor);\n                    });\n                }\n                if (this.module_name) {\n                    this.module_name._walk(visitor);\n                }\n            });\n        },\n        _children_backwards(push) {\n            if (this.module_name) push(this.module_name);\n            if (this.exported_names) {\n                let i = this.exported_names.length;\n                while (i--) push(this.exported_names[i]);\n            }\n            if (this.exported_value) push(this.exported_value);\n            if (this.exported_definition) push(this.exported_definition);\n        }\n    },\n    AST_Statement\n);\n\n/* -----[ OTHER ]----- */\n\nvar AST_Call = DEFNODE(\n    \"Call\",\n    \"expression args optional _annotations\",\n    function AST_Call(props) {\n        if (props) {\n            this.expression = props.expression;\n            this.args = props.args;\n            this.optional = props.optional;\n            this._annotations = props._annotations;\n            this.start = props.start;\n            this.end = props.end;\n            this.initialize();\n        }\n\n        this.flags = 0;\n    },\n    {\n        $documentation: \"A function call expression\",\n        $propdoc: {\n            expression: \"[AST_Node] expression to invoke as function\",\n            args: \"[AST_Node*] array of arguments\",\n            optional: \"[boolean] whether this is an optional call (IE ?.() )\",\n            _annotations: \"[number] bitfield containing information about the call\"\n        },\n        initialize() {\n            if (this._annotations == null) this._annotations = 0;\n        },\n        _walk(visitor) {\n            return visitor._visit(this, function() {\n                var args = this.args;\n                for (var i = 0, len = args.length; i < len; i++) {\n                    args[i]._walk(visitor);\n                }\n                this.expression._walk(visitor);  // TODO why do we need to crawl this last?\n            });\n        },\n        _children_backwards(push) {\n            let i = this.args.length;\n            while (i--) push(this.args[i]);\n            push(this.expression);\n        },\n    }\n);\n\nvar AST_New = DEFNODE(\"New\", null, function AST_New(props) {\n    if (props) {\n        this.expression = props.expression;\n        this.args = props.args;\n        this.optional = props.optional;\n        this._annotations = props._annotations;\n        this.start = props.start;\n        this.end = props.end;\n        this.initialize();\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"An object instantiation.  Derives from a function call since it has exactly the same properties\"\n}, AST_Call);\n\nvar AST_Sequence = DEFNODE(\"Sequence\", \"expressions\", function AST_Sequence(props) {\n    if (props) {\n        this.expressions = props.expressions;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A sequence expression (comma-separated expressions)\",\n    $propdoc: {\n        expressions: \"[AST_Node*] array of expressions (at least two)\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.expressions.forEach(function(node) {\n                node._walk(visitor);\n            });\n        });\n    },\n    _children_backwards(push) {\n        let i = this.expressions.length;\n        while (i--) push(this.expressions[i]);\n    },\n});\n\nvar AST_PropAccess = DEFNODE(\n    \"PropAccess\",\n    \"expression property optional\",\n    function AST_PropAccess(props) {\n        if (props) {\n            this.expression = props.expression;\n            this.property = props.property;\n            this.optional = props.optional;\n            this.start = props.start;\n            this.end = props.end;\n        }\n\n        this.flags = 0;\n    },\n    {\n        $documentation: \"Base class for property access expressions, i.e. `a.foo` or `a[\\\"foo\\\"]`\",\n        $propdoc: {\n            expression: \"[AST_Node] the “container” expression\",\n            property: \"[AST_Node|string] the property to access.  For AST_Dot & AST_DotHash this is always a plain string, while for AST_Sub it's an arbitrary AST_Node\",\n\n            optional: \"[boolean] whether this is an optional property access (IE ?.)\"\n        }\n    }\n);\n\nvar AST_Dot = DEFNODE(\"Dot\", \"quote\", function AST_Dot(props) {\n    if (props) {\n        this.quote = props.quote;\n        this.expression = props.expression;\n        this.property = props.property;\n        this.optional = props.optional;\n        this._annotations = props._annotations;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A dotted property access expression\",\n    $propdoc: {\n        quote: \"[string] the original quote character when transformed from AST_Sub\",\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.expression._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        push(this.expression);\n    },\n}, AST_PropAccess);\n\nvar AST_DotHash = DEFNODE(\"DotHash\", \"\", function AST_DotHash(props) {\n    if (props) {\n        this.expression = props.expression;\n        this.property = props.property;\n        this.optional = props.optional;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A dotted property access to a private property\",\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.expression._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        push(this.expression);\n    },\n}, AST_PropAccess);\n\nvar AST_Sub = DEFNODE(\"Sub\", null, function AST_Sub(props) {\n    if (props) {\n        this.expression = props.expression;\n        this.property = props.property;\n        this.optional = props.optional;\n        this._annotations = props._annotations;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"Index-style property access, i.e. `a[\\\"foo\\\"]`\",\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.expression._walk(visitor);\n            this.property._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        push(this.property);\n        push(this.expression);\n    },\n}, AST_PropAccess);\n\nvar AST_Chain = DEFNODE(\"Chain\", \"expression\", function AST_Chain(props) {\n    if (props) {\n        this.expression = props.expression;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A chain expression like a?.b?.(c)?.[d]\",\n    $propdoc: {\n        expression: \"[AST_Call|AST_Dot|AST_DotHash|AST_Sub] chain element.\"\n    },\n    _walk: function (visitor) {\n        return visitor._visit(this, function() {\n            this.expression._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        push(this.expression);\n    },\n});\n\nvar AST_Unary = DEFNODE(\"Unary\", \"operator expression\", function AST_Unary(props) {\n    if (props) {\n        this.operator = props.operator;\n        this.expression = props.expression;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"Base class for unary expressions\",\n    $propdoc: {\n        operator: \"[string] the operator\",\n        expression: \"[AST_Node] expression that this unary operator applies to\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.expression._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        push(this.expression);\n    },\n});\n\nvar AST_UnaryPrefix = DEFNODE(\"UnaryPrefix\", null, function AST_UnaryPrefix(props) {\n    if (props) {\n        this.operator = props.operator;\n        this.expression = props.expression;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"Unary prefix expression, i.e. `typeof i` or `++i`\"\n}, AST_Unary);\n\nvar AST_UnaryPostfix = DEFNODE(\"UnaryPostfix\", null, function AST_UnaryPostfix(props) {\n    if (props) {\n        this.operator = props.operator;\n        this.expression = props.expression;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"Unary postfix expression, i.e. `i++`\"\n}, AST_Unary);\n\nvar AST_Binary = DEFNODE(\"Binary\", \"operator left right\", function AST_Binary(props) {\n    if (props) {\n        this.operator = props.operator;\n        this.left = props.left;\n        this.right = props.right;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"Binary expression, i.e. `a + b`\",\n    $propdoc: {\n        left: \"[AST_Node] left-hand side expression\",\n        operator: \"[string] the operator\",\n        right: \"[AST_Node] right-hand side expression\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.left._walk(visitor);\n            this.right._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        push(this.right);\n        push(this.left);\n    },\n});\n\nvar AST_Conditional = DEFNODE(\n    \"Conditional\",\n    \"condition consequent alternative\",\n    function AST_Conditional(props) {\n        if (props) {\n            this.condition = props.condition;\n            this.consequent = props.consequent;\n            this.alternative = props.alternative;\n            this.start = props.start;\n            this.end = props.end;\n        }\n\n        this.flags = 0;\n    },\n    {\n        $documentation: \"Conditional expression using the ternary operator, i.e. `a ? b : c`\",\n        $propdoc: {\n            condition: \"[AST_Node]\",\n            consequent: \"[AST_Node]\",\n            alternative: \"[AST_Node]\"\n        },\n        _walk: function(visitor) {\n            return visitor._visit(this, function() {\n                this.condition._walk(visitor);\n                this.consequent._walk(visitor);\n                this.alternative._walk(visitor);\n            });\n        },\n        _children_backwards(push) {\n            push(this.alternative);\n            push(this.consequent);\n            push(this.condition);\n        },\n    }\n);\n\nvar AST_Assign = DEFNODE(\"Assign\", \"logical\", function AST_Assign(props) {\n    if (props) {\n        this.logical = props.logical;\n        this.operator = props.operator;\n        this.left = props.left;\n        this.right = props.right;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"An assignment expression — `a = b + 5`\",\n    $propdoc: {\n        logical: \"Whether it's a logical assignment\"\n    }\n}, AST_Binary);\n\nvar AST_DefaultAssign = DEFNODE(\"DefaultAssign\", null, function AST_DefaultAssign(props) {\n    if (props) {\n        this.operator = props.operator;\n        this.left = props.left;\n        this.right = props.right;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A default assignment expression like in `(a = 3) => a`\"\n}, AST_Binary);\n\n/* -----[ LITERALS ]----- */\n\nvar AST_Array = DEFNODE(\"Array\", \"elements\", function AST_Array(props) {\n    if (props) {\n        this.elements = props.elements;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"An array literal\",\n    $propdoc: {\n        elements: \"[AST_Node*] array of elements\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            var elements = this.elements;\n            for (var i = 0, len = elements.length; i < len; i++) {\n                elements[i]._walk(visitor);\n            }\n        });\n    },\n    _children_backwards(push) {\n        let i = this.elements.length;\n        while (i--) push(this.elements[i]);\n    },\n});\n\nvar AST_Object = DEFNODE(\"Object\", \"properties\", function AST_Object(props) {\n    if (props) {\n        this.properties = props.properties;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"An object literal\",\n    $propdoc: {\n        properties: \"[AST_ObjectProperty*] array of properties\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            var properties = this.properties;\n            for (var i = 0, len = properties.length; i < len; i++) {\n                properties[i]._walk(visitor);\n            }\n        });\n    },\n    _children_backwards(push) {\n        let i = this.properties.length;\n        while (i--) push(this.properties[i]);\n    },\n});\n\nvar AST_ObjectProperty = DEFNODE(\"ObjectProperty\", \"key value\", function AST_ObjectProperty(props) {\n    if (props) {\n        this.key = props.key;\n        this.value = props.value;\n        this.start = props.start;\n        this.end = props.end;\n        this._annotations = props._annotations;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"Base class for literal object properties\",\n    $propdoc: {\n        key: \"[string|AST_Node] property name. For ObjectKeyVal this is a string. For getters, setters and computed property this is an AST_Node.\",\n        value: \"[AST_Node] property value.  For getters and setters this is an AST_Accessor.\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            if (this.key instanceof AST_Node)\n                this.key._walk(visitor);\n            this.value._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        push(this.value);\n        if (this.key instanceof AST_Node) push(this.key);\n    }\n});\n\nvar AST_ObjectKeyVal = DEFNODE(\"ObjectKeyVal\", \"quote\", function AST_ObjectKeyVal(props) {\n    if (props) {\n        this.quote = props.quote;\n        this.key = props.key;\n        this.value = props.value;\n        this.start = props.start;\n        this.end = props.end;\n        this._annotations = props._annotations;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A key: value object property\",\n    $propdoc: {\n        quote: \"[string] the original quote character\"\n    },\n    computed_key() {\n        return this.key instanceof AST_Node;\n    }\n}, AST_ObjectProperty);\n\nvar AST_PrivateSetter = DEFNODE(\"PrivateSetter\", \"static\", function AST_PrivateSetter(props) {\n    if (props) {\n        this.static = props.static;\n        this.key = props.key;\n        this.value = props.value;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $propdoc: {\n        static: \"[boolean] whether this is a static private setter\"\n    },\n    $documentation: \"A private setter property\",\n    computed_key() {\n        return false;\n    }\n}, AST_ObjectProperty);\n\nvar AST_PrivateGetter = DEFNODE(\"PrivateGetter\", \"static\", function AST_PrivateGetter(props) {\n    if (props) {\n        this.static = props.static;\n        this.key = props.key;\n        this.value = props.value;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $propdoc: {\n        static: \"[boolean] whether this is a static private getter\"\n    },\n    $documentation: \"A private getter property\",\n    computed_key() {\n        return false;\n    }\n}, AST_ObjectProperty);\n\nvar AST_ObjectSetter = DEFNODE(\"ObjectSetter\", \"quote static\", function AST_ObjectSetter(props) {\n    if (props) {\n        this.quote = props.quote;\n        this.static = props.static;\n        this.key = props.key;\n        this.value = props.value;\n        this.start = props.start;\n        this.end = props.end;\n        this._annotations = props._annotations;\n    }\n\n    this.flags = 0;\n}, {\n    $propdoc: {\n        quote: \"[string|undefined] the original quote character, if any\",\n        static: \"[boolean] whether this is a static setter (classes only)\"\n    },\n    $documentation: \"An object setter property\",\n    computed_key() {\n        return !(this.key instanceof AST_SymbolMethod);\n    }\n}, AST_ObjectProperty);\n\nvar AST_ObjectGetter = DEFNODE(\"ObjectGetter\", \"quote static\", function AST_ObjectGetter(props) {\n    if (props) {\n        this.quote = props.quote;\n        this.static = props.static;\n        this.key = props.key;\n        this.value = props.value;\n        this.start = props.start;\n        this.end = props.end;\n        this._annotations = props._annotations;\n    }\n\n    this.flags = 0;\n}, {\n    $propdoc: {\n        quote: \"[string|undefined] the original quote character, if any\",\n        static: \"[boolean] whether this is a static getter (classes only)\"\n    },\n    $documentation: \"An object getter property\",\n    computed_key() {\n        return !(this.key instanceof AST_SymbolMethod);\n    }\n}, AST_ObjectProperty);\n\nvar AST_ConciseMethod = DEFNODE(\n    \"ConciseMethod\",\n    \"quote static is_generator async\",\n    function AST_ConciseMethod(props) {\n        if (props) {\n            this.quote = props.quote;\n            this.static = props.static;\n            this.is_generator = props.is_generator;\n            this.async = props.async;\n            this.key = props.key;\n            this.value = props.value;\n            this.start = props.start;\n            this.end = props.end;\n            this._annotations = props._annotations;\n        }\n\n        this.flags = 0;\n    },\n    {\n        $propdoc: {\n            quote: \"[string|undefined] the original quote character, if any\",\n            static: \"[boolean] is this method static (classes only)\",\n            is_generator: \"[boolean] is this a generator method\",\n            async: \"[boolean] is this method async\",\n        },\n        $documentation: \"An ES6 concise method inside an object or class\",\n        computed_key() {\n            return !(this.key instanceof AST_SymbolMethod);\n        }\n    },\n    AST_ObjectProperty\n);\n\nvar AST_PrivateMethod = DEFNODE(\"PrivateMethod\", \"\", function AST_PrivateMethod(props) {\n    if (props) {\n        this.quote = props.quote;\n        this.static = props.static;\n        this.is_generator = props.is_generator;\n        this.async = props.async;\n        this.key = props.key;\n        this.value = props.value;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A private class method inside a class\",\n}, AST_ConciseMethod);\n\nvar AST_Class = DEFNODE(\"Class\", \"name extends properties\", function AST_Class(props) {\n    if (props) {\n        this.name = props.name;\n        this.extends = props.extends;\n        this.properties = props.properties;\n        this.variables = props.variables;\n        this.uses_with = props.uses_with;\n        this.uses_eval = props.uses_eval;\n        this.parent_scope = props.parent_scope;\n        this.enclosed = props.enclosed;\n        this.cname = props.cname;\n        this.body = props.body;\n        this.block_scope = props.block_scope;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $propdoc: {\n        name: \"[AST_SymbolClass|AST_SymbolDefClass?] optional class name.\",\n        extends: \"[AST_Node]? optional parent class\",\n        properties: \"[AST_ObjectProperty*] array of properties\"\n    },\n    $documentation: \"An ES6 class\",\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            if (this.name) {\n                this.name._walk(visitor);\n            }\n            if (this.extends) {\n                this.extends._walk(visitor);\n            }\n            this.properties.forEach((prop) => prop._walk(visitor));\n        });\n    },\n    _children_backwards(push) {\n        let i = this.properties.length;\n        while (i--) push(this.properties[i]);\n        if (this.extends) push(this.extends);\n        if (this.name) push(this.name);\n    },\n    /** go through the bits that are executed instantly, not when the class is `new`'d. Doesn't walk the name. */\n    visit_nondeferred_class_parts(visitor) {\n        if (this.extends) {\n            this.extends._walk(visitor);\n        }\n        this.properties.forEach((prop) => {\n            if (prop instanceof AST_ClassStaticBlock) {\n                prop._walk(visitor);\n                return;\n            }\n            if (prop.computed_key()) {\n                visitor.push(prop);\n                prop.key._walk(visitor);\n                visitor.pop();\n            }\n            if ((prop instanceof AST_ClassPrivateProperty || prop instanceof AST_ClassProperty) && prop.static && prop.value) {\n                visitor.push(prop);\n                prop.value._walk(visitor);\n                visitor.pop();\n            }\n        });\n    },\n    /** go through the bits that are executed later, when the class is `new`'d or a static method is called */\n    visit_deferred_class_parts(visitor) {\n        this.properties.forEach((prop) => {\n            if (prop instanceof AST_ConciseMethod) {\n                prop.walk(visitor);\n            } else if (prop instanceof AST_ClassProperty && !prop.static && prop.value) {\n                visitor.push(prop);\n                prop.value._walk(visitor);\n                visitor.pop();\n            }\n        });\n    },\n}, AST_Scope /* TODO a class might have a scope but it's not a scope */);\n\nvar AST_ClassProperty = DEFNODE(\"ClassProperty\", \"static quote\", function AST_ClassProperty(props) {\n    if (props) {\n        this.static = props.static;\n        this.quote = props.quote;\n        this.key = props.key;\n        this.value = props.value;\n        this.start = props.start;\n        this.end = props.end;\n        this._annotations = props._annotations;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A class property\",\n    $propdoc: {\n        static: \"[boolean] whether this is a static key\",\n        quote: \"[string] which quote is being used\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            if (this.key instanceof AST_Node)\n                this.key._walk(visitor);\n            if (this.value instanceof AST_Node)\n                this.value._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        if (this.value instanceof AST_Node) push(this.value);\n        if (this.key instanceof AST_Node) push(this.key);\n    },\n    computed_key() {\n        return !(this.key instanceof AST_SymbolClassProperty);\n    }\n}, AST_ObjectProperty);\n\nvar AST_ClassPrivateProperty = DEFNODE(\"ClassPrivateProperty\", \"\", function AST_ClassPrivateProperty(props) {\n    if (props) {\n        this.static = props.static;\n        this.quote = props.quote;\n        this.key = props.key;\n        this.value = props.value;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A class property for a private property\",\n}, AST_ClassProperty);\n\nvar AST_PrivateIn = DEFNODE(\"PrivateIn\", \"key value\", function AST_PrivateIn(props) {\n    if (props) {\n        this.key = props.key;\n        this.value = props.value;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"An `in` binop when the key is private, eg #x in this\",\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.key._walk(visitor);\n            this.value._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        push(this.value);\n        push(this.key);\n    },\n});\n\nvar AST_DefClass = DEFNODE(\"DefClass\", null, function AST_DefClass(props) {\n    if (props) {\n        this.name = props.name;\n        this.extends = props.extends;\n        this.properties = props.properties;\n        this.variables = props.variables;\n        this.uses_with = props.uses_with;\n        this.uses_eval = props.uses_eval;\n        this.parent_scope = props.parent_scope;\n        this.enclosed = props.enclosed;\n        this.cname = props.cname;\n        this.body = props.body;\n        this.block_scope = props.block_scope;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A class definition\",\n}, AST_Class);\n\nvar AST_ClassStaticBlock = DEFNODE(\"ClassStaticBlock\", \"body block_scope\", function AST_ClassStaticBlock (props) {\n    this.body = props.body;\n    this.block_scope = props.block_scope;\n    this.start = props.start;\n    this.end = props.end;\n}, {\n    $documentation: \"A block containing statements to be executed in the context of the class\",\n    $propdoc: {\n        body: \"[AST_Statement*] an array of statements\",\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            walk_body(this, visitor);\n        });\n    },\n    _children_backwards(push) {\n        let i = this.body.length;\n        while (i--) push(this.body[i]);\n    },\n    clone: clone_block_scope,\n    computed_key: () => false\n}, AST_Scope);\n\nvar AST_ClassExpression = DEFNODE(\"ClassExpression\", null, function AST_ClassExpression(props) {\n    if (props) {\n        this.name = props.name;\n        this.extends = props.extends;\n        this.properties = props.properties;\n        this.variables = props.variables;\n        this.uses_with = props.uses_with;\n        this.uses_eval = props.uses_eval;\n        this.parent_scope = props.parent_scope;\n        this.enclosed = props.enclosed;\n        this.cname = props.cname;\n        this.body = props.body;\n        this.block_scope = props.block_scope;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A class expression.\"\n}, AST_Class);\n\nvar AST_Symbol = DEFNODE(\"Symbol\", \"scope name thedef\", function AST_Symbol(props) {\n    if (props) {\n        this.scope = props.scope;\n        this.name = props.name;\n        this.thedef = props.thedef;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $propdoc: {\n        name: \"[string] name of this symbol\",\n        scope: \"[AST_Scope/S] the current scope (not necessarily the definition scope)\",\n        thedef: \"[SymbolDef/S] the definition of this symbol\"\n    },\n    $documentation: \"Base class for all symbols\"\n});\n\nvar AST_NewTarget = DEFNODE(\"NewTarget\", null, function AST_NewTarget(props) {\n    if (props) {\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A reference to new.target\"\n});\n\nvar AST_SymbolDeclaration = DEFNODE(\"SymbolDeclaration\", \"init\", function AST_SymbolDeclaration(props) {\n    if (props) {\n        this.init = props.init;\n        this.scope = props.scope;\n        this.name = props.name;\n        this.thedef = props.thedef;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A declaration symbol (symbol in var/const, function name or argument, symbol in catch)\",\n}, AST_Symbol);\n\nvar AST_SymbolVar = DEFNODE(\"SymbolVar\", null, function AST_SymbolVar(props) {\n    if (props) {\n        this.init = props.init;\n        this.scope = props.scope;\n        this.name = props.name;\n        this.thedef = props.thedef;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"Symbol defining a variable\",\n}, AST_SymbolDeclaration);\n\nvar AST_SymbolBlockDeclaration = DEFNODE(\n    \"SymbolBlockDeclaration\",\n    null,\n    function AST_SymbolBlockDeclaration(props) {\n        if (props) {\n            this.init = props.init;\n            this.scope = props.scope;\n            this.name = props.name;\n            this.thedef = props.thedef;\n            this.start = props.start;\n            this.end = props.end;\n        }\n\n        this.flags = 0;\n    },\n    {\n        $documentation: \"Base class for block-scoped declaration symbols\"\n    },\n    AST_SymbolDeclaration\n);\n\nvar AST_SymbolConst = DEFNODE(\"SymbolConst\", null, function AST_SymbolConst(props) {\n    if (props) {\n        this.init = props.init;\n        this.scope = props.scope;\n        this.name = props.name;\n        this.thedef = props.thedef;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A constant declaration\"\n}, AST_SymbolBlockDeclaration);\n\nvar AST_SymbolLet = DEFNODE(\"SymbolLet\", null, function AST_SymbolLet(props) {\n    if (props) {\n        this.init = props.init;\n        this.scope = props.scope;\n        this.name = props.name;\n        this.thedef = props.thedef;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A block-scoped `let` declaration\"\n}, AST_SymbolBlockDeclaration);\n\nvar AST_SymbolFunarg = DEFNODE(\"SymbolFunarg\", null, function AST_SymbolFunarg(props) {\n    if (props) {\n        this.init = props.init;\n        this.scope = props.scope;\n        this.name = props.name;\n        this.thedef = props.thedef;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"Symbol naming a function argument\",\n}, AST_SymbolVar);\n\nvar AST_SymbolDefun = DEFNODE(\"SymbolDefun\", null, function AST_SymbolDefun(props) {\n    if (props) {\n        this.init = props.init;\n        this.scope = props.scope;\n        this.name = props.name;\n        this.thedef = props.thedef;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"Symbol defining a function\",\n}, AST_SymbolDeclaration);\n\nvar AST_SymbolMethod = DEFNODE(\"SymbolMethod\", null, function AST_SymbolMethod(props) {\n    if (props) {\n        this.scope = props.scope;\n        this.name = props.name;\n        this.thedef = props.thedef;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"Symbol in an object defining a method\",\n}, AST_Symbol);\n\nvar AST_SymbolClassProperty = DEFNODE(\"SymbolClassProperty\", null, function AST_SymbolClassProperty(props) {\n    if (props) {\n        this.scope = props.scope;\n        this.name = props.name;\n        this.thedef = props.thedef;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"Symbol for a class property\",\n}, AST_Symbol);\n\nvar AST_SymbolLambda = DEFNODE(\"SymbolLambda\", null, function AST_SymbolLambda(props) {\n    if (props) {\n        this.init = props.init;\n        this.scope = props.scope;\n        this.name = props.name;\n        this.thedef = props.thedef;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"Symbol naming a function expression\",\n}, AST_SymbolDeclaration);\n\nvar AST_SymbolDefClass = DEFNODE(\"SymbolDefClass\", null, function AST_SymbolDefClass(props) {\n    if (props) {\n        this.init = props.init;\n        this.scope = props.scope;\n        this.name = props.name;\n        this.thedef = props.thedef;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"Symbol naming a class's name in a class declaration. Lexically scoped to its containing scope, and accessible within the class.\"\n}, AST_SymbolBlockDeclaration);\n\nvar AST_SymbolClass = DEFNODE(\"SymbolClass\", null, function AST_SymbolClass(props) {\n    if (props) {\n        this.init = props.init;\n        this.scope = props.scope;\n        this.name = props.name;\n        this.thedef = props.thedef;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"Symbol naming a class's name. Lexically scoped to the class.\"\n}, AST_SymbolDeclaration);\n\nvar AST_SymbolCatch = DEFNODE(\"SymbolCatch\", null, function AST_SymbolCatch(props) {\n    if (props) {\n        this.init = props.init;\n        this.scope = props.scope;\n        this.name = props.name;\n        this.thedef = props.thedef;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"Symbol naming the exception in catch\",\n}, AST_SymbolBlockDeclaration);\n\nvar AST_SymbolImport = DEFNODE(\"SymbolImport\", null, function AST_SymbolImport(props) {\n    if (props) {\n        this.init = props.init;\n        this.scope = props.scope;\n        this.name = props.name;\n        this.thedef = props.thedef;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"Symbol referring to an imported name\",\n}, AST_SymbolBlockDeclaration);\n\nvar AST_SymbolImportForeign = DEFNODE(\"SymbolImportForeign\", null, function AST_SymbolImportForeign(props) {\n    if (props) {\n        this.scope = props.scope;\n        this.name = props.name;\n        this.thedef = props.thedef;\n        this.quote = props.quote;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A symbol imported from a module, but it is defined in the other module, and its real name is irrelevant for this module's purposes\",\n}, AST_Symbol);\n\nvar AST_Label = DEFNODE(\"Label\", \"references\", function AST_Label(props) {\n    if (props) {\n        this.references = props.references;\n        this.scope = props.scope;\n        this.name = props.name;\n        this.thedef = props.thedef;\n        this.start = props.start;\n        this.end = props.end;\n        this.initialize();\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"Symbol naming a label (declaration)\",\n    $propdoc: {\n        references: \"[AST_LoopControl*] a list of nodes referring to this label\"\n    },\n    initialize: function() {\n        this.references = [];\n        this.thedef = this;\n    }\n}, AST_Symbol);\n\nvar AST_SymbolRef = DEFNODE(\"SymbolRef\", null, function AST_SymbolRef(props) {\n    if (props) {\n        this.scope = props.scope;\n        this.name = props.name;\n        this.thedef = props.thedef;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"Reference to some symbol (not definition/declaration)\",\n}, AST_Symbol);\n\nvar AST_SymbolExport = DEFNODE(\"SymbolExport\", null, function AST_SymbolExport(props) {\n    if (props) {\n        this.scope = props.scope;\n        this.name = props.name;\n        this.thedef = props.thedef;\n        this.quote = props.quote;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"Symbol referring to a name to export\",\n}, AST_SymbolRef);\n\nvar AST_SymbolExportForeign = DEFNODE(\"SymbolExportForeign\", null, function AST_SymbolExportForeign(props) {\n    if (props) {\n        this.scope = props.scope;\n        this.name = props.name;\n        this.thedef = props.thedef;\n        this.quote = props.quote;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A symbol exported from this module, but it is used in the other module, and its real name is irrelevant for this module's purposes\",\n}, AST_Symbol);\n\nvar AST_LabelRef = DEFNODE(\"LabelRef\", null, function AST_LabelRef(props) {\n    if (props) {\n        this.scope = props.scope;\n        this.name = props.name;\n        this.thedef = props.thedef;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"Reference to a label symbol\",\n}, AST_Symbol);\n\nvar AST_SymbolPrivateProperty = DEFNODE(\"SymbolPrivateProperty\", null, function AST_SymbolPrivateProperty(props) {\n    if (props) {\n        this.scope = props.scope;\n        this.name = props.name;\n        this.thedef = props.thedef;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A symbol that refers to a private property\",\n}, AST_Symbol);\n\nvar AST_This = DEFNODE(\"This\", null, function AST_This(props) {\n    if (props) {\n        this.scope = props.scope;\n        this.name = props.name;\n        this.thedef = props.thedef;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"The `this` symbol\",\n}, AST_Symbol);\n\nvar AST_Super = DEFNODE(\"Super\", null, function AST_Super(props) {\n    if (props) {\n        this.scope = props.scope;\n        this.name = props.name;\n        this.thedef = props.thedef;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"The `super` symbol\",\n}, AST_This);\n\nvar AST_Constant = DEFNODE(\"Constant\", null, function AST_Constant(props) {\n    if (props) {\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"Base class for all constants\",\n    getValue: function() {\n        return this.value;\n    }\n});\n\nvar AST_String = DEFNODE(\"String\", \"value quote\", function AST_String(props) {\n    if (props) {\n        this.value = props.value;\n        this.quote = props.quote;\n        this.start = props.start;\n        this.end = props.end;\n        this._annotations = props._annotations;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A string literal\",\n    $propdoc: {\n        value: \"[string] the contents of this string\",\n        quote: \"[string] the original quote character\"\n    }\n}, AST_Constant);\n\nvar AST_Number = DEFNODE(\"Number\", \"value raw\", function AST_Number(props) {\n    if (props) {\n        this.value = props.value;\n        this.raw = props.raw;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A number literal\",\n    $propdoc: {\n        value: \"[number] the numeric value\",\n        raw: \"[string] numeric value as string\"\n    }\n}, AST_Constant);\n\nvar AST_BigInt = DEFNODE(\"BigInt\", \"value\", function AST_BigInt(props) {\n    if (props) {\n        this.value = props.value;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A big int literal\",\n    $propdoc: {\n        value: \"[string] big int value\"\n    }\n}, AST_Constant);\n\nvar AST_RegExp = DEFNODE(\"RegExp\", \"value\", function AST_RegExp(props) {\n    if (props) {\n        this.value = props.value;\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A regexp literal\",\n    $propdoc: {\n        value: \"[RegExp] the actual regexp\",\n    }\n}, AST_Constant);\n\nvar AST_Atom = DEFNODE(\"Atom\", null, function AST_Atom(props) {\n    if (props) {\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"Base class for atoms\",\n}, AST_Constant);\n\nvar AST_Null = DEFNODE(\"Null\", null, function AST_Null(props) {\n    if (props) {\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"The `null` atom\",\n    value: null\n}, AST_Atom);\n\nvar AST_NaN = DEFNODE(\"NaN\", null, function AST_NaN(props) {\n    if (props) {\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"The impossible value\",\n    value: 0/0\n}, AST_Atom);\n\nvar AST_Undefined = DEFNODE(\"Undefined\", null, function AST_Undefined(props) {\n    if (props) {\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"The `undefined` value\",\n    value: (function() {}())\n}, AST_Atom);\n\nvar AST_Hole = DEFNODE(\"Hole\", null, function AST_Hole(props) {\n    if (props) {\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"A hole in an array\",\n    value: (function() {}())\n}, AST_Atom);\n\nvar AST_Infinity = DEFNODE(\"Infinity\", null, function AST_Infinity(props) {\n    if (props) {\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"The `Infinity` value\",\n    value: 1/0\n}, AST_Atom);\n\nvar AST_Boolean = DEFNODE(\"Boolean\", null, function AST_Boolean(props) {\n    if (props) {\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"Base class for booleans\",\n}, AST_Atom);\n\nvar AST_False = DEFNODE(\"False\", null, function AST_False(props) {\n    if (props) {\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"The `false` atom\",\n    value: false\n}, AST_Boolean);\n\nvar AST_True = DEFNODE(\"True\", null, function AST_True(props) {\n    if (props) {\n        this.start = props.start;\n        this.end = props.end;\n    }\n\n    this.flags = 0;\n}, {\n    $documentation: \"The `true` atom\",\n    value: true\n}, AST_Boolean);\n\n/* -----[ Walk function ]---- */\n\n/**\n * Walk nodes in depth-first search fashion.\n * Callback can return `walk_abort` symbol to stop iteration.\n * It can also return `true` to stop iteration just for child nodes.\n * Iteration can be stopped and continued by passing the `to_visit` argument,\n * which is given to the callback in the second argument.\n **/\nfunction walk(node, cb, to_visit = [node]) {\n    const push = to_visit.push.bind(to_visit);\n    while (to_visit.length) {\n        const node = to_visit.pop();\n        const ret = cb(node, to_visit);\n\n        if (ret) {\n            if (ret === walk_abort) return true;\n            continue;\n        }\n\n        node._children_backwards(push);\n    }\n    return false;\n}\n\n/**\n * Walks an AST node and its children.\n *\n * {cb} can return `walk_abort` to interrupt the walk.\n *\n * @param node\n * @param cb {(node, info: { parent: (nth) => any }) => (boolean | undefined)}\n *\n * @returns {boolean} whether the walk was aborted\n *\n * @example\n * const found_some_cond = walk_parent(my_ast_node, (node, { parent }) => {\n *   if (some_cond(node, parent())) return walk_abort\n * });\n */\nfunction walk_parent(node, cb, initial_stack) {\n    const to_visit = [node];\n    const push = to_visit.push.bind(to_visit);\n    const stack = initial_stack ? initial_stack.slice() : [];\n    const parent_pop_indices = [];\n\n    let current;\n\n    const info = {\n        parent: (n = 0) => {\n            if (n === -1) {\n                return current;\n            }\n\n            // [ p1 p0 ] [ 1 0 ]\n            if (initial_stack && n >= stack.length) {\n                n -= stack.length;\n                return initial_stack[\n                    initial_stack.length - (n + 1)\n                ];\n            }\n\n            return stack[stack.length - (1 + n)];\n        },\n    };\n\n    while (to_visit.length) {\n        current = to_visit.pop();\n\n        while (\n            parent_pop_indices.length &&\n            to_visit.length == parent_pop_indices[parent_pop_indices.length - 1]\n        ) {\n            stack.pop();\n            parent_pop_indices.pop();\n        }\n\n        const ret = cb(current, info);\n\n        if (ret) {\n            if (ret === walk_abort) return true;\n            continue;\n        }\n\n        const visit_length = to_visit.length;\n\n        current._children_backwards(push);\n\n        // Push only if we're going to traverse the children\n        if (to_visit.length > visit_length) {\n            stack.push(current);\n            parent_pop_indices.push(visit_length - 1);\n        }\n    }\n\n    return false;\n}\n\nconst walk_abort = Symbol(\"abort walk\");\n\n/* -----[ TreeWalker ]----- */\n\nclass TreeWalker {\n    constructor(callback) {\n        this.visit = callback;\n        this.stack = [];\n        this.directives = Object.create(null);\n    }\n\n    _visit(node, descend) {\n        this.push(node);\n        var ret = this.visit(node, descend ? function() {\n            descend.call(node);\n        } : noop);\n        if (!ret && descend) {\n            descend.call(node);\n        }\n        this.pop();\n        return ret;\n    }\n\n    parent(n) {\n        return this.stack[this.stack.length - 2 - (n || 0)];\n    }\n\n    push(node) {\n        if (node instanceof AST_Lambda) {\n            this.directives = Object.create(this.directives);\n        } else if (node instanceof AST_Directive && !this.directives[node.value]) {\n            this.directives[node.value] = node;\n        } else if (node instanceof AST_Class) {\n            this.directives = Object.create(this.directives);\n            if (!this.directives[\"use strict\"]) {\n                this.directives[\"use strict\"] = node;\n            }\n        }\n        this.stack.push(node);\n    }\n\n    pop() {\n        var node = this.stack.pop();\n        if (node instanceof AST_Lambda || node instanceof AST_Class) {\n            this.directives = Object.getPrototypeOf(this.directives);\n        }\n    }\n\n    self() {\n        return this.stack[this.stack.length - 1];\n    }\n\n    find_parent(type) {\n        var stack = this.stack;\n        for (var i = stack.length; --i >= 0;) {\n            var x = stack[i];\n            if (x instanceof type) return x;\n        }\n    }\n\n    find_scope() {\n        var stack = this.stack;\n        for (var i = stack.length; --i >= 0;) {\n            const p = stack[i];\n            if (p instanceof AST_Toplevel) return p;\n            if (p instanceof AST_Lambda) return p;\n            if (p.block_scope) return p.block_scope;\n        }\n    }\n\n    has_directive(type) {\n        var dir = this.directives[type];\n        if (dir) return dir;\n        var node = this.stack[this.stack.length - 1];\n        if (node instanceof AST_Scope && node.body) {\n            for (var i = 0; i < node.body.length; ++i) {\n                var st = node.body[i];\n                if (!(st instanceof AST_Directive)) break;\n                if (st.value == type) return st;\n            }\n        }\n    }\n\n    loopcontrol_target(node) {\n        var stack = this.stack;\n        if (node.label) for (var i = stack.length; --i >= 0;) {\n            var x = stack[i];\n            if (x instanceof AST_LabeledStatement && x.label.name == node.label.name)\n                return x.body;\n        } else for (var i = stack.length; --i >= 0;) {\n            var x = stack[i];\n            if (x instanceof AST_IterationStatement\n                || node instanceof AST_Break && x instanceof AST_Switch)\n                return x;\n        }\n    }\n}\n\n// Tree transformer helpers.\nclass TreeTransformer extends TreeWalker {\n    constructor(before, after) {\n        super();\n        this.before = before;\n        this.after = after;\n    }\n}\n\nconst _PURE       = 0b00000001;\nconst _INLINE     = 0b00000010;\nconst _NOINLINE   = 0b00000100;\nconst _KEY        = 0b00001000;\nconst _MANGLEPROP = 0b00010000;\n\n/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\nfunction def_transform(node, descend) {\n    node.DEFMETHOD(\"transform\", function(tw, in_list) {\n        let transformed = undefined;\n        tw.push(this);\n        if (tw.before) transformed = tw.before(this, descend, in_list);\n        if (transformed === undefined) {\n            transformed = this;\n            descend(transformed, tw);\n            if (tw.after) {\n                const after_ret = tw.after(transformed, in_list);\n                if (after_ret !== undefined) transformed = after_ret;\n            }\n        }\n        tw.pop();\n        return transformed;\n    });\n}\n\ndef_transform(AST_Node, noop);\n\ndef_transform(AST_LabeledStatement, function(self, tw) {\n    self.label = self.label.transform(tw);\n    self.body = self.body.transform(tw);\n});\n\ndef_transform(AST_SimpleStatement, function(self, tw) {\n    self.body = self.body.transform(tw);\n});\n\ndef_transform(AST_Block, function(self, tw) {\n    self.body = MAP(self.body, tw);\n});\n\ndef_transform(AST_Do, function(self, tw) {\n    self.body = self.body.transform(tw);\n    self.condition = self.condition.transform(tw);\n});\n\ndef_transform(AST_While, function(self, tw) {\n    self.condition = self.condition.transform(tw);\n    self.body = self.body.transform(tw);\n});\n\ndef_transform(AST_For, function(self, tw) {\n    if (self.init) self.init = self.init.transform(tw);\n    if (self.condition) self.condition = self.condition.transform(tw);\n    if (self.step) self.step = self.step.transform(tw);\n    self.body = self.body.transform(tw);\n});\n\ndef_transform(AST_ForIn, function(self, tw) {\n    self.init = self.init.transform(tw);\n    self.object = self.object.transform(tw);\n    self.body = self.body.transform(tw);\n});\n\ndef_transform(AST_With, function(self, tw) {\n    self.expression = self.expression.transform(tw);\n    self.body = self.body.transform(tw);\n});\n\ndef_transform(AST_Exit, function(self, tw) {\n    if (self.value) self.value = self.value.transform(tw);\n});\n\ndef_transform(AST_LoopControl, function(self, tw) {\n    if (self.label) self.label = self.label.transform(tw);\n});\n\ndef_transform(AST_If, function(self, tw) {\n    self.condition = self.condition.transform(tw);\n    self.body = self.body.transform(tw);\n    if (self.alternative) self.alternative = self.alternative.transform(tw);\n});\n\ndef_transform(AST_Switch, function(self, tw) {\n    self.expression = self.expression.transform(tw);\n    self.body = MAP(self.body, tw);\n});\n\ndef_transform(AST_Case, function(self, tw) {\n    self.expression = self.expression.transform(tw);\n    self.body = MAP(self.body, tw);\n});\n\ndef_transform(AST_Try, function(self, tw) {\n    self.body = self.body.transform(tw);\n    if (self.bcatch) self.bcatch = self.bcatch.transform(tw);\n    if (self.bfinally) self.bfinally = self.bfinally.transform(tw);\n});\n\ndef_transform(AST_Catch, function(self, tw) {\n    if (self.argname) self.argname = self.argname.transform(tw);\n    self.body = MAP(self.body, tw);\n});\n\ndef_transform(AST_Definitions, function(self, tw) {\n    self.definitions = MAP(self.definitions, tw);\n});\n\ndef_transform(AST_VarDef, function(self, tw) {\n    self.name = self.name.transform(tw);\n    if (self.value) self.value = self.value.transform(tw);\n});\n\ndef_transform(AST_Destructuring, function(self, tw) {\n    self.names = MAP(self.names, tw);\n});\n\ndef_transform(AST_Lambda, function(self, tw) {\n    if (self.name) self.name = self.name.transform(tw);\n    self.argnames = MAP(self.argnames, tw, /* allow_splicing */ false);\n    if (self.body instanceof AST_Node) {\n        self.body = self.body.transform(tw);\n    } else {\n        self.body = MAP(self.body, tw);\n    }\n});\n\ndef_transform(AST_Call, function(self, tw) {\n    self.expression = self.expression.transform(tw);\n    self.args = MAP(self.args, tw, /* allow_splicing */ false);\n});\n\ndef_transform(AST_Sequence, function(self, tw) {\n    const result = MAP(self.expressions, tw);\n    self.expressions = result.length\n        ? result\n        : [new AST_Number({ value: 0 })];\n});\n\ndef_transform(AST_PropAccess, function(self, tw) {\n    self.expression = self.expression.transform(tw);\n});\n\ndef_transform(AST_Sub, function(self, tw) {\n    self.expression = self.expression.transform(tw);\n    self.property = self.property.transform(tw);\n});\n\ndef_transform(AST_Chain, function(self, tw) {\n    self.expression = self.expression.transform(tw);\n});\n\ndef_transform(AST_Yield, function(self, tw) {\n    if (self.expression) self.expression = self.expression.transform(tw);\n});\n\ndef_transform(AST_Await, function(self, tw) {\n    self.expression = self.expression.transform(tw);\n});\n\ndef_transform(AST_Unary, function(self, tw) {\n    self.expression = self.expression.transform(tw);\n});\n\ndef_transform(AST_Binary, function(self, tw) {\n    self.left = self.left.transform(tw);\n    self.right = self.right.transform(tw);\n});\n\ndef_transform(AST_PrivateIn, function(self, tw) {\n    self.key = self.key.transform(tw);\n    self.value = self.value.transform(tw);\n});\n\ndef_transform(AST_Conditional, function(self, tw) {\n    self.condition = self.condition.transform(tw);\n    self.consequent = self.consequent.transform(tw);\n    self.alternative = self.alternative.transform(tw);\n});\n\ndef_transform(AST_Array, function(self, tw) {\n    self.elements = MAP(self.elements, tw);\n});\n\ndef_transform(AST_Object, function(self, tw) {\n    self.properties = MAP(self.properties, tw);\n});\n\ndef_transform(AST_ObjectProperty, function(self, tw) {\n    if (self.key instanceof AST_Node) {\n        self.key = self.key.transform(tw);\n    }\n    if (self.value) self.value = self.value.transform(tw);\n});\n\ndef_transform(AST_Class, function(self, tw) {\n    if (self.name) self.name = self.name.transform(tw);\n    if (self.extends) self.extends = self.extends.transform(tw);\n    self.properties = MAP(self.properties, tw);\n});\n\ndef_transform(AST_ClassStaticBlock, function(self, tw) {\n    self.body = MAP(self.body, tw);\n});\n\ndef_transform(AST_Expansion, function(self, tw) {\n    self.expression = self.expression.transform(tw);\n});\n\ndef_transform(AST_NameMapping, function(self, tw) {\n    self.foreign_name = self.foreign_name.transform(tw);\n    self.name = self.name.transform(tw);\n});\n\ndef_transform(AST_Import, function(self, tw) {\n    if (self.imported_name) self.imported_name = self.imported_name.transform(tw);\n    if (self.imported_names) MAP(self.imported_names, tw);\n    self.module_name = self.module_name.transform(tw);\n});\n\ndef_transform(AST_Export, function(self, tw) {\n    if (self.exported_definition) self.exported_definition = self.exported_definition.transform(tw);\n    if (self.exported_value) self.exported_value = self.exported_value.transform(tw);\n    if (self.exported_names) MAP(self.exported_names, tw);\n    if (self.module_name) self.module_name = self.module_name.transform(tw);\n});\n\ndef_transform(AST_TemplateString, function(self, tw) {\n    self.segments = MAP(self.segments, tw);\n});\n\ndef_transform(AST_PrefixedTemplateString, function(self, tw) {\n    self.prefix = self.prefix.transform(tw);\n    self.template_string = self.template_string.transform(tw);\n});\n\n/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n(function() {\n\n    var normalize_directives = function(body) {\n        for (var i = 0; i < body.length; i++) {\n            if (body[i] instanceof AST_Statement && body[i].body instanceof AST_String) {\n                body[i] = new AST_Directive({\n                    start: body[i].start,\n                    end: body[i].end,\n                    value: body[i].body.value\n                });\n            } else {\n                return body;\n            }\n        }\n\n        return body;\n    };\n\n    const assert_clause_from_moz = (assertions) => {\n        if (assertions && assertions.length > 0) {\n            return new AST_Object({\n                start: my_start_token(assertions),\n                end: my_end_token(assertions),\n                properties: assertions.map((assertion_kv) =>\n                    new AST_ObjectKeyVal({\n                        start: my_start_token(assertion_kv),\n                        end: my_end_token(assertion_kv),\n                        key: assertion_kv.key.name || assertion_kv.key.value,\n                        value: from_moz(assertion_kv.value)\n                    })\n                )\n            });\n        }\n        return null;\n    };\n\n    var MOZ_TO_ME = {\n        Program: function(M) {\n            return new AST_Toplevel({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                body: normalize_directives(M.body.map(from_moz))\n            });\n        },\n\n        ArrayPattern: function(M) {\n            return new AST_Destructuring({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                names: M.elements.map(function(elm) {\n                    if (elm === null) {\n                        return new AST_Hole();\n                    }\n                    return from_moz(elm);\n                }),\n                is_array: true\n            });\n        },\n\n        ObjectPattern: function(M) {\n            return new AST_Destructuring({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                names: M.properties.map(from_moz),\n                is_array: false\n            });\n        },\n\n        AssignmentPattern: function(M) {\n            return new AST_DefaultAssign({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                left: from_moz(M.left),\n                operator: \"=\",\n                right: from_moz(M.right)\n            });\n        },\n\n        SpreadElement: function(M) {\n            return new AST_Expansion({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                expression: from_moz(M.argument)\n            });\n        },\n\n        RestElement: function(M) {\n            return new AST_Expansion({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                expression: from_moz(M.argument)\n            });\n        },\n\n        TemplateElement: function(M) {\n            return new AST_TemplateSegment({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                value: M.value.cooked,\n                raw: M.value.raw\n            });\n        },\n\n        TemplateLiteral: function(M) {\n            var segments = [];\n            for (var i = 0; i < M.quasis.length; i++) {\n                segments.push(from_moz(M.quasis[i]));\n                if (M.expressions[i]) {\n                    segments.push(from_moz(M.expressions[i]));\n                }\n            }\n            return new AST_TemplateString({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                segments: segments\n            });\n        },\n\n        TaggedTemplateExpression: function(M) {\n            return new AST_PrefixedTemplateString({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                template_string: from_moz(M.quasi),\n                prefix: from_moz(M.tag)\n            });\n        },\n\n        FunctionDeclaration: function(M) {\n            return new AST_Defun({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                name: from_moz(M.id),\n                argnames: M.params.map(from_moz),\n                is_generator: M.generator,\n                async: M.async,\n                body: normalize_directives(from_moz(M.body).body)\n            });\n        },\n\n        FunctionExpression: function(M) {\n            return new AST_Function({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                name: from_moz(M.id),\n                argnames: M.params.map(from_moz),\n                is_generator: M.generator,\n                async: M.async,\n                body: normalize_directives(from_moz(M.body).body)\n            });\n        },\n\n        ArrowFunctionExpression: function(M) {\n            const body = M.body.type === \"BlockStatement\"\n                ? from_moz(M.body).body\n                : [make_node(AST_Return, {}, { value: from_moz(M.body) })];\n            return new AST_Arrow({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                argnames: M.params.map(from_moz),\n                body,\n                async: M.async,\n            });\n        },\n\n        ExpressionStatement: function(M) {\n            return new AST_SimpleStatement({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                body: from_moz(M.expression)\n            });\n        },\n\n        TryStatement: function(M) {\n            var handlers = M.handlers || [M.handler];\n            if (handlers.length > 1 || M.guardedHandlers && M.guardedHandlers.length) {\n                throw new Error(\"Multiple catch clauses are not supported.\");\n            }\n            return new AST_Try({\n                start    : my_start_token(M),\n                end      : my_end_token(M),\n                body     : new AST_TryBlock(from_moz(M.block)),\n                bcatch   : from_moz(handlers[0]),\n                bfinally : M.finalizer ? new AST_Finally(from_moz(M.finalizer)) : null\n            });\n        },\n\n        Property: function(M) {\n            var key = M.key;\n            var args = {\n                start    : my_start_token(key || M.value),\n                end      : my_end_token(M.value),\n                key      : key.type == \"Identifier\" ? key.name : key.value,\n                value    : from_moz(M.value)\n            };\n            if (M.computed) {\n                args.key = from_moz(M.key);\n            }\n            if (M.method) {\n                args.is_generator = M.value.generator;\n                args.async = M.value.async;\n                if (!M.computed) {\n                    args.key = new AST_SymbolMethod({ name: args.key });\n                } else {\n                    args.key = from_moz(M.key);\n                }\n                return new AST_ConciseMethod(args);\n            }\n            if (M.kind == \"init\") {\n                if (key.type != \"Identifier\" && key.type != \"Literal\") {\n                    args.key = from_moz(key);\n                }\n                return new AST_ObjectKeyVal(args);\n            }\n            if (typeof args.key === \"string\" || typeof args.key === \"number\") {\n                args.key = new AST_SymbolMethod({\n                    name: args.key\n                });\n            }\n            args.value = new AST_Accessor(args.value);\n            if (M.kind == \"get\") return new AST_ObjectGetter(args);\n            if (M.kind == \"set\") return new AST_ObjectSetter(args);\n            if (M.kind == \"method\") {\n                args.async = M.value.async;\n                args.is_generator = M.value.generator;\n                args.quote = M.computed ? \"\\\"\" : null;\n                return new AST_ConciseMethod(args);\n            }\n        },\n\n        MethodDefinition: function(M) {\n            const is_private = M.key.type === \"PrivateIdentifier\";\n            const key = M.computed ? from_moz(M.key) : new AST_SymbolMethod({ name: M.key.name || M.key.value });\n\n            var args = {\n                start    : my_start_token(M),\n                end      : my_end_token(M),\n                key,\n                value    : from_moz(M.value),\n                static   : M.static,\n            };\n            if (M.kind == \"get\") {\n                return new (is_private ? AST_PrivateGetter : AST_ObjectGetter)(args);\n            }\n            if (M.kind == \"set\") {\n                return new (is_private ? AST_PrivateSetter : AST_ObjectSetter)(args);\n            }\n            args.is_generator = M.value.generator;\n            args.async = M.value.async;\n            return new (is_private ? AST_PrivateMethod : AST_ConciseMethod)(args);\n        },\n\n        FieldDefinition: function(M) {\n            let key;\n            if (M.computed) {\n                key = from_moz(M.key);\n            } else {\n                if (M.key.type !== \"Identifier\") throw new Error(\"Non-Identifier key in FieldDefinition\");\n                key = from_moz(M.key);\n            }\n            return new AST_ClassProperty({\n                start    : my_start_token(M),\n                end      : my_end_token(M),\n                key,\n                value    : from_moz(M.value),\n                static   : M.static,\n            });\n        },\n\n        PropertyDefinition: function(M) {\n            let key;\n            if (M.computed) {\n                key = from_moz(M.key);\n            } else if (M.key.type === \"PrivateIdentifier\") {\n                return new AST_ClassPrivateProperty({\n                    start    : my_start_token(M),\n                    end      : my_end_token(M),\n                    key      : from_moz(M.key),\n                    value    : from_moz(M.value),\n                    static   : M.static,\n                });\n            } else {\n                if (M.key.type !== \"Identifier\") {\n                    throw new Error(\"Non-Identifier key in PropertyDefinition\");\n                }\n                key = from_moz(M.key);\n            }\n\n            return new AST_ClassProperty({\n                start    : my_start_token(M),\n                end      : my_end_token(M),\n                key,\n                value    : from_moz(M.value),\n                static   : M.static,\n            });\n        },\n\n        PrivateIdentifier: function (M) {\n            return new AST_SymbolPrivateProperty({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                name: M.name\n            });\n        },\n\n        StaticBlock: function(M) {\n            return new AST_ClassStaticBlock({\n                start : my_start_token(M),\n                end   : my_end_token(M),\n                body  : M.body.map(from_moz),\n            });\n        },\n\n        ArrayExpression: function(M) {\n            return new AST_Array({\n                start    : my_start_token(M),\n                end      : my_end_token(M),\n                elements : M.elements.map(function(elem) {\n                    return elem === null ? new AST_Hole() : from_moz(elem);\n                })\n            });\n        },\n\n        ObjectExpression: function(M) {\n            return new AST_Object({\n                start      : my_start_token(M),\n                end        : my_end_token(M),\n                properties : M.properties.map(function(prop) {\n                    if (prop.type === \"SpreadElement\") {\n                        return from_moz(prop);\n                    }\n                    prop.type = \"Property\";\n                    return from_moz(prop);\n                })\n            });\n        },\n\n        SequenceExpression: function(M) {\n            return new AST_Sequence({\n                start      : my_start_token(M),\n                end        : my_end_token(M),\n                expressions: M.expressions.map(from_moz)\n            });\n        },\n\n        MemberExpression: function(M) {\n            if (M.property.type === \"PrivateIdentifier\") {\n                return new AST_DotHash({\n                    start      : my_start_token(M),\n                    end        : my_end_token(M),\n                    property   : M.property.name,\n                    expression : from_moz(M.object),\n                    optional   : M.optional || false\n                });\n            }\n            return new (M.computed ? AST_Sub : AST_Dot)({\n                start      : my_start_token(M),\n                end        : my_end_token(M),\n                property   : M.computed ? from_moz(M.property) : M.property.name,\n                expression : from_moz(M.object),\n                optional   : M.optional || false\n            });\n        },\n\n        ChainExpression: function(M) {\n            return new AST_Chain({\n                start      : my_start_token(M),\n                end        : my_end_token(M),\n                expression : from_moz(M.expression)\n            });\n        },\n\n        SwitchCase: function(M) {\n            return new (M.test ? AST_Case : AST_Default)({\n                start      : my_start_token(M),\n                end        : my_end_token(M),\n                expression : from_moz(M.test),\n                body       : M.consequent.map(from_moz)\n            });\n        },\n\n        VariableDeclaration: function(M) {\n            return new (M.kind === \"const\" ? AST_Const :\n                        M.kind === \"let\" ? AST_Let : AST_Var)({\n                start       : my_start_token(M),\n                end         : my_end_token(M),\n                definitions : M.declarations.map(from_moz)\n            });\n        },\n\n        ImportDeclaration: function(M) {\n            var imported_name = null;\n            var imported_names = null;\n            M.specifiers.forEach(function (specifier) {\n                if (specifier.type === \"ImportSpecifier\" || specifier.type === \"ImportNamespaceSpecifier\") {\n                    if (!imported_names) { imported_names = []; }\n                    imported_names.push(from_moz(specifier));\n                } else if (specifier.type === \"ImportDefaultSpecifier\") {\n                    imported_name = from_moz(specifier);\n                }\n            });\n            return new AST_Import({\n                start       : my_start_token(M),\n                end         : my_end_token(M),\n                imported_name: imported_name,\n                imported_names : imported_names,\n                module_name : from_moz(M.source),\n                assert_clause: assert_clause_from_moz(M.assertions)\n            });\n        },\n\n        ImportSpecifier: function(M) {\n            return new AST_NameMapping({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                foreign_name: from_moz(M.imported),\n                name: from_moz(M.local)\n            });\n        },\n\n        ImportDefaultSpecifier: function(M) {\n            return from_moz(M.local);\n        },\n\n        ImportNamespaceSpecifier: function(M) {\n            return new AST_NameMapping({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                foreign_name: new AST_SymbolImportForeign({ name: \"*\" }),\n                name: from_moz(M.local)\n            });\n        },\n\n        ExportAllDeclaration: function(M) {\n            var foreign_name = M.exported == null ? \n                new AST_SymbolExportForeign({ name: \"*\" }) :\n                from_moz(M.exported);\n            return new AST_Export({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                exported_names: [\n                    new AST_NameMapping({\n                        name: new AST_SymbolExportForeign({ name: \"*\" }),\n                        foreign_name: foreign_name\n                    })\n                ],\n                module_name: from_moz(M.source),\n                assert_clause: assert_clause_from_moz(M.assertions)\n            });\n        },\n\n        ExportNamedDeclaration: function(M) {\n            return new AST_Export({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                exported_definition: from_moz(M.declaration),\n                exported_names: M.specifiers && M.specifiers.length ? M.specifiers.map(function (specifier) {\n                    return from_moz(specifier);\n                }) : null,\n                module_name: from_moz(M.source),\n                assert_clause: assert_clause_from_moz(M.assertions)\n            });\n        },\n\n        ExportDefaultDeclaration: function(M) {\n            return new AST_Export({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                exported_value: from_moz(M.declaration),\n                is_default: true\n            });\n        },\n\n        ExportSpecifier: function(M) {\n            return new AST_NameMapping({\n                foreign_name: from_moz(M.exported),\n                name: from_moz(M.local)\n            });\n        },\n\n        Literal: function(M) {\n            var val = M.value, args = {\n                start  : my_start_token(M),\n                end    : my_end_token(M)\n            };\n            var rx = M.regex;\n            if (rx && rx.pattern) {\n                // RegExpLiteral as per ESTree AST spec\n                args.value = {\n                    source: rx.pattern,\n                    flags: rx.flags\n                };\n                return new AST_RegExp(args);\n            } else if (rx) {\n                // support legacy RegExp\n                const rx_source = M.raw || val;\n                const match = rx_source.match(/^\\/(.*)\\/(\\w*)$/);\n                if (!match) throw new Error(\"Invalid regex source \" + rx_source);\n                const [_, source, flags] = match;\n                args.value = { source, flags };\n                return new AST_RegExp(args);\n            }\n            if (val === null) return new AST_Null(args);\n            switch (typeof val) {\n              case \"string\":\n                args.quote = \"\\\"\";\n                var p = FROM_MOZ_STACK[FROM_MOZ_STACK.length - 2];\n                if (p.type == \"ImportSpecifier\") {\n                    args.name = val;\n                    return new AST_SymbolImportForeign(args);\n                } else if (p.type == \"ExportSpecifier\") {\n                    args.name = val;\n                    if (M == p.exported) {\n                        return new AST_SymbolExportForeign(args);\n                    } else {\n                        return new AST_SymbolExport(args);\n                    }\n                } else if (p.type == \"ExportAllDeclaration\" && M == p.exported) {\n                    args.name = val;\n                    return new AST_SymbolExportForeign(args);\n                }\n                args.value = val;\n                return new AST_String(args);\n              case \"number\":\n                args.value = val;\n                args.raw = M.raw || val.toString();\n                return new AST_Number(args);\n              case \"boolean\":\n                return new (val ? AST_True : AST_False)(args);\n            }\n        },\n\n        MetaProperty: function(M) {\n            if (M.meta.name === \"new\" && M.property.name === \"target\") {\n                return new AST_NewTarget({\n                    start: my_start_token(M),\n                    end: my_end_token(M)\n                });\n            } else if (M.meta.name === \"import\" && M.property.name === \"meta\") {\n                return new AST_ImportMeta({\n                    start: my_start_token(M),\n                    end: my_end_token(M)\n                });\n            }\n        },\n\n        Identifier: function(M) {\n            var p = FROM_MOZ_STACK[FROM_MOZ_STACK.length - 2];\n            return new (  p.type == \"LabeledStatement\" ? AST_Label\n                        : p.type == \"VariableDeclarator\" && p.id === M ? (p.kind == \"const\" ? AST_SymbolConst : p.kind == \"let\" ? AST_SymbolLet : AST_SymbolVar)\n                        : /Import.*Specifier/.test(p.type) ? (p.local === M ? AST_SymbolImport : AST_SymbolImportForeign)\n                        : p.type == \"ExportSpecifier\" ? (p.local === M ? AST_SymbolExport : AST_SymbolExportForeign)\n                        : p.type == \"FunctionExpression\" ? (p.id === M ? AST_SymbolLambda : AST_SymbolFunarg)\n                        : p.type == \"FunctionDeclaration\" ? (p.id === M ? AST_SymbolDefun : AST_SymbolFunarg)\n                        : p.type == \"ArrowFunctionExpression\" ? (p.params.includes(M)) ? AST_SymbolFunarg : AST_SymbolRef\n                        : p.type == \"ClassExpression\" ? (p.id === M ? AST_SymbolClass : AST_SymbolRef)\n                        : p.type == \"Property\" ? (p.key === M && p.computed || p.value === M ? AST_SymbolRef : AST_SymbolMethod)\n                        : p.type == \"PropertyDefinition\" || p.type === \"FieldDefinition\" ? (p.key === M && p.computed || p.value === M ? AST_SymbolRef : AST_SymbolClassProperty)\n                        : p.type == \"ClassDeclaration\" ? (p.id === M ? AST_SymbolDefClass : AST_SymbolRef)\n                        : p.type == \"MethodDefinition\" ? (p.computed ? AST_SymbolRef : AST_SymbolMethod)\n                        : p.type == \"CatchClause\" ? AST_SymbolCatch\n                        : p.type == \"BreakStatement\" || p.type == \"ContinueStatement\" ? AST_LabelRef\n                        : AST_SymbolRef)({\n                            start : my_start_token(M),\n                            end   : my_end_token(M),\n                            name  : M.name\n                        });\n        },\n\n        BigIntLiteral(M) {\n            return new AST_BigInt({\n                start : my_start_token(M),\n                end   : my_end_token(M),\n                value : M.value\n            });\n        },\n\n        EmptyStatement: function(M) {\n            return new AST_EmptyStatement({\n                start: my_start_token(M),\n                end: my_end_token(M)\n            });\n        },\n\n        BlockStatement: function(M) {\n            return new AST_BlockStatement({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                body: M.body.map(from_moz)\n            });\n        },\n\n        IfStatement: function(M) {\n            return new AST_If({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                condition: from_moz(M.test),\n                body: from_moz(M.consequent),\n                alternative: from_moz(M.alternate)\n            });\n        },\n\n        LabeledStatement: function(M) {\n            return new AST_LabeledStatement({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                label: from_moz(M.label),\n                body: from_moz(M.body)\n            });\n        },\n\n        BreakStatement: function(M) {\n            return new AST_Break({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                label: from_moz(M.label)\n            });\n        },\n\n        ContinueStatement: function(M) {\n            return new AST_Continue({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                label: from_moz(M.label)\n            });\n        },\n\n        WithStatement: function(M) {\n            return new AST_With({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                expression: from_moz(M.object),\n                body: from_moz(M.body)\n            });\n        },\n\n        SwitchStatement: function(M) {\n            return new AST_Switch({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                expression: from_moz(M.discriminant),\n                body: M.cases.map(from_moz)\n            });\n        },\n\n        ReturnStatement: function(M) {\n            return new AST_Return({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                value: from_moz(M.argument)\n            });\n        },\n\n        ThrowStatement: function(M) {\n            return new AST_Throw({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                value: from_moz(M.argument)\n            });\n        },\n\n        WhileStatement: function(M) {\n            return new AST_While({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                condition: from_moz(M.test),\n                body: from_moz(M.body)\n            });\n        },\n\n        DoWhileStatement: function(M) {\n            return new AST_Do({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                condition: from_moz(M.test),\n                body: from_moz(M.body)\n            });\n        },\n\n        ForStatement: function(M) {\n            return new AST_For({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                init: from_moz(M.init),\n                condition: from_moz(M.test),\n                step: from_moz(M.update),\n                body: from_moz(M.body)\n            });\n        },\n\n        ForInStatement: function(M) {\n            return new AST_ForIn({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                init: from_moz(M.left),\n                object: from_moz(M.right),\n                body: from_moz(M.body)\n            });\n        },\n\n        ForOfStatement: function(M) {\n            return new AST_ForOf({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                init: from_moz(M.left),\n                object: from_moz(M.right),\n                body: from_moz(M.body),\n                await: M.await\n            });\n        },\n\n        AwaitExpression: function(M) {\n            return new AST_Await({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                expression: from_moz(M.argument)\n            });\n        },\n\n        YieldExpression: function(M) {\n            return new AST_Yield({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                expression: from_moz(M.argument),\n                is_star: M.delegate\n            });\n        },\n\n        DebuggerStatement: function(M) {\n            return new AST_Debugger({\n                start: my_start_token(M),\n                end: my_end_token(M)\n            });\n        },\n\n        VariableDeclarator: function(M) {\n            return new AST_VarDef({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                name: from_moz(M.id),\n                value: from_moz(M.init)\n            });\n        },\n\n        CatchClause: function(M) {\n            return new AST_Catch({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                argname: from_moz(M.param),\n                body: from_moz(M.body).body\n            });\n        },\n\n        ThisExpression: function(M) {\n            return new AST_This({\n                start: my_start_token(M),\n                end: my_end_token(M)\n            });\n        },\n\n        Super: function(M) {\n            return new AST_Super({\n                start: my_start_token(M),\n                end: my_end_token(M)\n            });\n        },\n\n        BinaryExpression: function(M) {\n            if (M.left.type === \"PrivateIdentifier\") {\n                return new AST_PrivateIn({\n                    start: my_start_token(M),\n                    end: my_end_token(M),\n                    key: new AST_SymbolPrivateProperty({\n                        start: my_start_token(M.left),\n                        end: my_end_token(M.left),\n                        name: M.left.name\n                    }),\n                    value: from_moz(M.right),\n                });\n            }\n            return new AST_Binary({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                operator: M.operator,\n                left: from_moz(M.left),\n                right: from_moz(M.right)\n            });\n        },\n\n        LogicalExpression: function(M) {\n            return new AST_Binary({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                operator: M.operator,\n                left: from_moz(M.left),\n                right: from_moz(M.right)\n            });\n        },\n\n        AssignmentExpression: function(M) {\n            return new AST_Assign({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                operator: M.operator,\n                left: from_moz(M.left),\n                right: from_moz(M.right)\n            });\n        },\n\n        ConditionalExpression: function(M) {\n            return new AST_Conditional({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                condition: from_moz(M.test),\n                consequent: from_moz(M.consequent),\n                alternative: from_moz(M.alternate)\n            });\n        },\n\n        NewExpression: function(M) {\n            return new AST_New({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                expression: from_moz(M.callee),\n                args: M.arguments.map(from_moz)\n            });\n        },\n\n        CallExpression: function(M) {\n            return new AST_Call({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                expression: from_moz(M.callee),\n                optional: M.optional,\n                args: M.arguments.map(from_moz)\n            });\n        }\n    };\n\n    MOZ_TO_ME.UpdateExpression =\n    MOZ_TO_ME.UnaryExpression = function To_Moz_Unary(M) {\n        var prefix = \"prefix\" in M ? M.prefix\n            : M.type == \"UnaryExpression\" ? true : false;\n        return new (prefix ? AST_UnaryPrefix : AST_UnaryPostfix)({\n            start      : my_start_token(M),\n            end        : my_end_token(M),\n            operator   : M.operator,\n            expression : from_moz(M.argument)\n        });\n    };\n\n    MOZ_TO_ME.ClassDeclaration =\n    MOZ_TO_ME.ClassExpression = function From_Moz_Class(M) {\n        return new (M.type === \"ClassDeclaration\" ? AST_DefClass : AST_ClassExpression)({\n            start    : my_start_token(M),\n            end      : my_end_token(M),\n            name     : from_moz(M.id),\n            extends  : from_moz(M.superClass),\n            properties: M.body.body.map(from_moz)\n        });\n    };\n\n    def_to_moz(AST_EmptyStatement, function To_Moz_EmptyStatement() {\n        return {\n            type: \"EmptyStatement\"\n        };\n    });\n    def_to_moz(AST_BlockStatement, function To_Moz_BlockStatement(M) {\n        return {\n            type: \"BlockStatement\",\n            body: M.body.map(to_moz)\n        };\n    });\n    def_to_moz(AST_If, function To_Moz_IfStatement(M) {\n        return {\n            type: \"IfStatement\",\n            test: to_moz(M.condition),\n            consequent: to_moz(M.body),\n            alternate: to_moz(M.alternative)\n        };\n    });\n    def_to_moz(AST_LabeledStatement, function To_Moz_LabeledStatement(M) {\n        return {\n            type: \"LabeledStatement\",\n            label: to_moz(M.label),\n            body: to_moz(M.body)\n        };\n    });\n    def_to_moz(AST_Break, function To_Moz_BreakStatement(M) {\n        return {\n            type: \"BreakStatement\",\n            label: to_moz(M.label)\n        };\n    });\n    def_to_moz(AST_Continue, function To_Moz_ContinueStatement(M) {\n        return {\n            type: \"ContinueStatement\",\n            label: to_moz(M.label)\n        };\n    });\n    def_to_moz(AST_With, function To_Moz_WithStatement(M) {\n        return {\n            type: \"WithStatement\",\n            object: to_moz(M.expression),\n            body: to_moz(M.body)\n        };\n    });\n    def_to_moz(AST_Switch, function To_Moz_SwitchStatement(M) {\n        return {\n            type: \"SwitchStatement\",\n            discriminant: to_moz(M.expression),\n            cases: M.body.map(to_moz)\n        };\n    });\n    def_to_moz(AST_Return, function To_Moz_ReturnStatement(M) {\n        return {\n            type: \"ReturnStatement\",\n            argument: to_moz(M.value)\n        };\n    });\n    def_to_moz(AST_Throw, function To_Moz_ThrowStatement(M) {\n        return {\n            type: \"ThrowStatement\",\n            argument: to_moz(M.value)\n        };\n    });\n    def_to_moz(AST_While, function To_Moz_WhileStatement(M) {\n        return {\n            type: \"WhileStatement\",\n            test: to_moz(M.condition),\n            body: to_moz(M.body)\n        };\n    });\n    def_to_moz(AST_Do, function To_Moz_DoWhileStatement(M) {\n        return {\n            type: \"DoWhileStatement\",\n            test: to_moz(M.condition),\n            body: to_moz(M.body)\n        };\n    });\n    def_to_moz(AST_For, function To_Moz_ForStatement(M) {\n        return {\n            type: \"ForStatement\",\n            init: to_moz(M.init),\n            test: to_moz(M.condition),\n            update: to_moz(M.step),\n            body: to_moz(M.body)\n        };\n    });\n    def_to_moz(AST_ForIn, function To_Moz_ForInStatement(M) {\n        return {\n            type: \"ForInStatement\",\n            left: to_moz(M.init),\n            right: to_moz(M.object),\n            body: to_moz(M.body)\n        };\n    });\n    def_to_moz(AST_ForOf, function To_Moz_ForOfStatement(M) {\n        return {\n            type: \"ForOfStatement\",\n            left: to_moz(M.init),\n            right: to_moz(M.object),\n            body: to_moz(M.body),\n            await: M.await\n        };\n    });\n    def_to_moz(AST_Await, function To_Moz_AwaitExpression(M) {\n        return {\n            type: \"AwaitExpression\",\n            argument: to_moz(M.expression)\n        };\n    });\n    def_to_moz(AST_Yield, function To_Moz_YieldExpression(M) {\n        return {\n            type: \"YieldExpression\",\n            argument: to_moz(M.expression),\n            delegate: M.is_star\n        };\n    });\n    def_to_moz(AST_Debugger, function To_Moz_DebuggerStatement() {\n        return {\n            type: \"DebuggerStatement\"\n        };\n    });\n    def_to_moz(AST_VarDef, function To_Moz_VariableDeclarator(M) {\n        return {\n            type: \"VariableDeclarator\",\n            id: to_moz(M.name),\n            init: to_moz(M.value)\n        };\n    });\n    def_to_moz(AST_Catch, function To_Moz_CatchClause(M) {\n        return {\n            type: \"CatchClause\",\n            param: to_moz(M.argname),\n            body: to_moz_block(M)\n        };\n    });\n\n    def_to_moz(AST_This, function To_Moz_ThisExpression() {\n        return {\n            type: \"ThisExpression\"\n        };\n    });\n    def_to_moz(AST_Super, function To_Moz_Super() {\n        return {\n            type: \"Super\"\n        };\n    });\n    def_to_moz(AST_Binary, function To_Moz_BinaryExpression(M) {\n        return {\n            type: \"BinaryExpression\",\n            operator: M.operator,\n            left: to_moz(M.left),\n            right: to_moz(M.right)\n        };\n    });\n    def_to_moz(AST_Binary, function To_Moz_LogicalExpression(M) {\n        return {\n            type: \"LogicalExpression\",\n            operator: M.operator,\n            left: to_moz(M.left),\n            right: to_moz(M.right)\n        };\n    });\n    def_to_moz(AST_Assign, function To_Moz_AssignmentExpression(M) {\n        return {\n            type: \"AssignmentExpression\",\n            operator: M.operator,\n            left: to_moz(M.left),\n            right: to_moz(M.right)\n        };\n    });\n    def_to_moz(AST_Conditional, function To_Moz_ConditionalExpression(M) {\n        return {\n            type: \"ConditionalExpression\",\n            test: to_moz(M.condition),\n            consequent: to_moz(M.consequent),\n            alternate: to_moz(M.alternative)\n        };\n    });\n    def_to_moz(AST_New, function To_Moz_NewExpression(M) {\n        return {\n            type: \"NewExpression\",\n            callee: to_moz(M.expression),\n            arguments: M.args.map(to_moz)\n        };\n    });\n    def_to_moz(AST_Call, function To_Moz_CallExpression(M) {\n        return {\n            type: \"CallExpression\",\n            callee: to_moz(M.expression),\n            optional: M.optional,\n            arguments: M.args.map(to_moz)\n        };\n    });\n\n    def_to_moz(AST_Toplevel, function To_Moz_Program(M) {\n        return to_moz_scope(\"Program\", M);\n    });\n\n    def_to_moz(AST_Expansion, function To_Moz_Spread(M) {\n        return {\n            type: to_moz_in_destructuring() ? \"RestElement\" : \"SpreadElement\",\n            argument: to_moz(M.expression)\n        };\n    });\n\n    def_to_moz(AST_PrefixedTemplateString, function To_Moz_TaggedTemplateExpression(M) {\n        return {\n            type: \"TaggedTemplateExpression\",\n            tag: to_moz(M.prefix),\n            quasi: to_moz(M.template_string)\n        };\n    });\n\n    def_to_moz(AST_TemplateString, function To_Moz_TemplateLiteral(M) {\n        var quasis = [];\n        var expressions = [];\n        for (var i = 0; i < M.segments.length; i++) {\n            if (i % 2 !== 0) {\n                expressions.push(to_moz(M.segments[i]));\n            } else {\n                quasis.push({\n                    type: \"TemplateElement\",\n                    value: {\n                        raw: M.segments[i].raw,\n                        cooked: M.segments[i].value\n                    },\n                    tail: i === M.segments.length - 1\n                });\n            }\n        }\n        return {\n            type: \"TemplateLiteral\",\n            quasis: quasis,\n            expressions: expressions\n        };\n    });\n\n    def_to_moz(AST_Defun, function To_Moz_FunctionDeclaration(M) {\n        return {\n            type: \"FunctionDeclaration\",\n            id: to_moz(M.name),\n            params: M.argnames.map(to_moz),\n            generator: M.is_generator,\n            async: M.async,\n            body: to_moz_scope(\"BlockStatement\", M)\n        };\n    });\n\n    def_to_moz(AST_Function, function To_Moz_FunctionExpression(M, parent) {\n        var is_generator = parent.is_generator !== undefined ?\n            parent.is_generator : M.is_generator;\n        return {\n            type: \"FunctionExpression\",\n            id: to_moz(M.name),\n            params: M.argnames.map(to_moz),\n            generator: is_generator,\n            async: M.async,\n            body: to_moz_scope(\"BlockStatement\", M)\n        };\n    });\n\n    def_to_moz(AST_Arrow, function To_Moz_ArrowFunctionExpression(M) {\n        var body = {\n            type: \"BlockStatement\",\n            body: M.body.map(to_moz)\n        };\n        return {\n            type: \"ArrowFunctionExpression\",\n            params: M.argnames.map(to_moz),\n            async: M.async,\n            body: body\n        };\n    });\n\n    def_to_moz(AST_Destructuring, function To_Moz_ObjectPattern(M) {\n        if (M.is_array) {\n            return {\n                type: \"ArrayPattern\",\n                elements: M.names.map(to_moz)\n            };\n        }\n        return {\n            type: \"ObjectPattern\",\n            properties: M.names.map(to_moz)\n        };\n    });\n\n    def_to_moz(AST_Directive, function To_Moz_Directive(M) {\n        return {\n            type: \"ExpressionStatement\",\n            expression: {\n                type: \"Literal\",\n                value: M.value,\n                raw: M.print_to_string()\n            },\n            directive: M.value\n        };\n    });\n\n    def_to_moz(AST_SimpleStatement, function To_Moz_ExpressionStatement(M) {\n        return {\n            type: \"ExpressionStatement\",\n            expression: to_moz(M.body)\n        };\n    });\n\n    def_to_moz(AST_SwitchBranch, function To_Moz_SwitchCase(M) {\n        return {\n            type: \"SwitchCase\",\n            test: to_moz(M.expression),\n            consequent: M.body.map(to_moz)\n        };\n    });\n\n    def_to_moz(AST_Try, function To_Moz_TryStatement(M) {\n        return {\n            type: \"TryStatement\",\n            block: to_moz_block(M.body),\n            handler: to_moz(M.bcatch),\n            guardedHandlers: [],\n            finalizer: to_moz(M.bfinally)\n        };\n    });\n\n    def_to_moz(AST_Catch, function To_Moz_CatchClause(M) {\n        return {\n            type: \"CatchClause\",\n            param: to_moz(M.argname),\n            guard: null,\n            body: to_moz_block(M)\n        };\n    });\n\n    def_to_moz(AST_Definitions, function To_Moz_VariableDeclaration(M) {\n        return {\n            type: \"VariableDeclaration\",\n            kind:\n                M instanceof AST_Const ? \"const\" :\n                M instanceof AST_Let ? \"let\" : \"var\",\n            declarations: M.definitions.map(to_moz)\n        };\n    });\n\n    const assert_clause_to_moz = assert_clause => {\n        const assertions = [];\n        if (assert_clause) {\n            for (const { key, value } of assert_clause.properties) {\n                const key_moz = is_basic_identifier_string(key)\n                    ? { type: \"Identifier\", name: key }\n                    : { type: \"Literal\", value: key, raw: JSON.stringify(key) };\n                assertions.push({\n                    type: \"ImportAttribute\",\n                    key: key_moz,\n                    value: to_moz(value)\n                });\n            }\n        }\n        return assertions;\n    };\n\n    def_to_moz(AST_Export, function To_Moz_ExportDeclaration(M) {\n        if (M.exported_names) {\n            var first_exported = M.exported_names[0];\n            var first_exported_name = first_exported.name;\n            if (first_exported_name.name === \"*\" && !first_exported_name.quote) {\n                var foreign_name = first_exported.foreign_name;\n                var exported = foreign_name.name === \"*\" && !foreign_name.quote\n                    ? null\n                    : to_moz(foreign_name);\n                return {\n                    type: \"ExportAllDeclaration\",\n                    source: to_moz(M.module_name),\n                    exported: exported,\n                    assertions: assert_clause_to_moz(M.assert_clause)\n                };\n            }\n            return {\n                type: \"ExportNamedDeclaration\",\n                specifiers: M.exported_names.map(function (name_mapping) {\n                    return {\n                        type: \"ExportSpecifier\",\n                        exported: to_moz(name_mapping.foreign_name),\n                        local: to_moz(name_mapping.name)\n                    };\n                }),\n                declaration: to_moz(M.exported_definition),\n                source: to_moz(M.module_name),\n                assertions: assert_clause_to_moz(M.assert_clause)\n            };\n        }\n        return {\n            type: M.is_default ? \"ExportDefaultDeclaration\" : \"ExportNamedDeclaration\",\n            declaration: to_moz(M.exported_value || M.exported_definition)\n        };\n    });\n\n    def_to_moz(AST_Import, function To_Moz_ImportDeclaration(M) {\n        var specifiers = [];\n        if (M.imported_name) {\n            specifiers.push({\n                type: \"ImportDefaultSpecifier\",\n                local: to_moz(M.imported_name)\n            });\n        }\n        if (M.imported_names) {\n            var first_imported_foreign_name = M.imported_names[0].foreign_name;\n            if (first_imported_foreign_name.name === \"*\" && !first_imported_foreign_name.quote) {\n                specifiers.push({\n                    type: \"ImportNamespaceSpecifier\",\n                    local: to_moz(M.imported_names[0].name)\n                });\n            } else {\n                M.imported_names.forEach(function(name_mapping) {\n                    specifiers.push({\n                        type: \"ImportSpecifier\",\n                        local: to_moz(name_mapping.name),\n                        imported: to_moz(name_mapping.foreign_name)\n                    });\n                });\n            }\n        }\n        return {\n            type: \"ImportDeclaration\",\n            specifiers: specifiers,\n            source: to_moz(M.module_name),\n            assertions: assert_clause_to_moz(M.assert_clause)\n        };\n    });\n\n    def_to_moz(AST_ImportMeta, function To_Moz_MetaProperty() {\n        return {\n            type: \"MetaProperty\",\n            meta: {\n                type: \"Identifier\",\n                name: \"import\"\n            },\n            property: {\n                type: \"Identifier\",\n                name: \"meta\"\n            }\n        };\n    });\n\n    def_to_moz(AST_Sequence, function To_Moz_SequenceExpression(M) {\n        return {\n            type: \"SequenceExpression\",\n            expressions: M.expressions.map(to_moz)\n        };\n    });\n\n    def_to_moz(AST_DotHash, function To_Moz_PrivateMemberExpression(M) {\n        return {\n            type: \"MemberExpression\",\n            object: to_moz(M.expression),\n            computed: false,\n            property: {\n                type: \"PrivateIdentifier\",\n                name: M.property\n            },\n            optional: M.optional\n        };\n    });\n\n    def_to_moz(AST_PropAccess, function To_Moz_MemberExpression(M) {\n        var isComputed = M instanceof AST_Sub;\n        return {\n            type: \"MemberExpression\",\n            object: to_moz(M.expression),\n            computed: isComputed,\n            property: isComputed ? to_moz(M.property) : {type: \"Identifier\", name: M.property},\n            optional: M.optional\n        };\n    });\n\n    def_to_moz(AST_Chain, function To_Moz_ChainExpression(M) {\n        return {\n            type: \"ChainExpression\",\n            expression: to_moz(M.expression)\n        };\n    });\n\n    def_to_moz(AST_Unary, function To_Moz_Unary(M) {\n        return {\n            type: M.operator == \"++\" || M.operator == \"--\" ? \"UpdateExpression\" : \"UnaryExpression\",\n            operator: M.operator,\n            prefix: M instanceof AST_UnaryPrefix,\n            argument: to_moz(M.expression)\n        };\n    });\n\n    def_to_moz(AST_Binary, function To_Moz_BinaryExpression(M) {\n        if (M.operator == \"=\" && to_moz_in_destructuring()) {\n            return {\n                type: \"AssignmentPattern\",\n                left: to_moz(M.left),\n                right: to_moz(M.right)\n            };\n        }\n\n        const type = M.operator == \"&&\" || M.operator == \"||\" || M.operator === \"??\"\n            ? \"LogicalExpression\"\n            : \"BinaryExpression\";\n\n        return {\n            type,\n            left: to_moz(M.left),\n            operator: M.operator,\n            right: to_moz(M.right)\n        };\n    });\n\n    def_to_moz(AST_PrivateIn, function To_Moz_BinaryExpression_PrivateIn(M) {\n        return {\n            type: \"BinaryExpression\",\n            left: { type: \"PrivateIdentifier\", name: M.key.name },\n            operator: \"in\",\n            right: to_moz(M.value),\n        };\n    });\n\n    def_to_moz(AST_Array, function To_Moz_ArrayExpression(M) {\n        return {\n            type: \"ArrayExpression\",\n            elements: M.elements.map(to_moz)\n        };\n    });\n\n    def_to_moz(AST_Object, function To_Moz_ObjectExpression(M) {\n        return {\n            type: \"ObjectExpression\",\n            properties: M.properties.map(to_moz)\n        };\n    });\n\n    def_to_moz(AST_ObjectProperty, function To_Moz_Property(M, parent) {\n        var key = M.key instanceof AST_Node ? to_moz(M.key) : {\n            type: \"Identifier\",\n            value: M.key\n        };\n        if (typeof M.key === \"number\") {\n            key = {\n                type: \"Literal\",\n                value: Number(M.key)\n            };\n        }\n        if (typeof M.key === \"string\") {\n            key = {\n                type: \"Identifier\",\n                name: M.key\n            };\n        }\n        var kind;\n        var string_or_num = typeof M.key === \"string\" || typeof M.key === \"number\";\n        var computed = string_or_num ? false : !(M.key instanceof AST_Symbol) || M.key instanceof AST_SymbolRef;\n        if (M instanceof AST_ObjectKeyVal) {\n            kind = \"init\";\n            computed = !string_or_num;\n        } else\n        if (M instanceof AST_ObjectGetter) {\n            kind = \"get\";\n        } else\n        if (M instanceof AST_ObjectSetter) {\n            kind = \"set\";\n        }\n        if (M instanceof AST_PrivateGetter || M instanceof AST_PrivateSetter) {\n            const kind = M instanceof AST_PrivateGetter ? \"get\" : \"set\";\n            return {\n                type: \"MethodDefinition\",\n                computed: false,\n                kind: kind,\n                static: M.static,\n                key: {\n                    type: \"PrivateIdentifier\",\n                    name: M.key.name\n                },\n                value: to_moz(M.value)\n            };\n        }\n        if (M instanceof AST_ClassPrivateProperty) {\n            return {\n                type: \"PropertyDefinition\",\n                key: {\n                    type: \"PrivateIdentifier\",\n                    name: M.key.name\n                },\n                value: to_moz(M.value),\n                computed: false,\n                static: M.static\n            };\n        }\n        if (M instanceof AST_ClassProperty) {\n            return {\n                type: \"PropertyDefinition\",\n                key,\n                value: to_moz(M.value),\n                computed,\n                static: M.static\n            };\n        }\n        if (parent instanceof AST_Class) {\n            return {\n                type: \"MethodDefinition\",\n                computed: computed,\n                kind: kind,\n                static: M.static,\n                key: to_moz(M.key),\n                value: to_moz(M.value)\n            };\n        }\n        return {\n            type: \"Property\",\n            computed: computed,\n            kind: kind,\n            key: key,\n            value: to_moz(M.value)\n        };\n    });\n\n    def_to_moz(AST_ConciseMethod, function To_Moz_MethodDefinition(M, parent) {\n        if (parent instanceof AST_Object) {\n            return {\n                type: \"Property\",\n                computed: !(M.key instanceof AST_Symbol) || M.key instanceof AST_SymbolRef,\n                kind: \"init\",\n                method: true,\n                shorthand: false,\n                key: to_moz(M.key),\n                value: to_moz(M.value)\n            };\n        }\n\n        const key = M instanceof AST_PrivateMethod\n            ? {\n                type: \"PrivateIdentifier\",\n                name: M.key.name\n            }\n            : to_moz(M.key);\n\n        return {\n            type: \"MethodDefinition\",\n            kind: M.key === \"constructor\" ? \"constructor\" : \"method\",\n            key,\n            value: to_moz(M.value),\n            computed: !(M.key instanceof AST_Symbol) || M.key instanceof AST_SymbolRef,\n            static: M.static,\n        };\n    });\n\n    def_to_moz(AST_Class, function To_Moz_Class(M) {\n        var type = M instanceof AST_ClassExpression ? \"ClassExpression\" : \"ClassDeclaration\";\n        return {\n            type: type,\n            superClass: to_moz(M.extends),\n            id: M.name ? to_moz(M.name) : null,\n            body: {\n                type: \"ClassBody\",\n                body: M.properties.map(to_moz)\n            }\n        };\n    });\n\n    def_to_moz(AST_ClassStaticBlock, function To_Moz_StaticBlock(M) {\n        return {\n            type: \"StaticBlock\",\n            body: M.body.map(to_moz),\n        };\n    });\n\n    def_to_moz(AST_NewTarget, function To_Moz_MetaProperty() {\n        return {\n            type: \"MetaProperty\",\n            meta: {\n                type: \"Identifier\",\n                name: \"new\"\n            },\n            property: {\n                type: \"Identifier\",\n                name: \"target\"\n            }\n        };\n    });\n\n    def_to_moz(AST_Symbol, function To_Moz_Identifier(M, parent) {\n        if (\n            (M instanceof AST_SymbolMethod && parent.quote) ||\n            ((\n                M instanceof AST_SymbolImportForeign ||\n                M instanceof AST_SymbolExportForeign ||\n                M instanceof AST_SymbolExport\n                ) && M.quote)\n         ) {\n            return {\n                type: \"Literal\",\n                value: M.name\n            };\n        }\n        var def = M.definition();\n        return {\n            type: \"Identifier\",\n            name: def ? def.mangled_name || def.name : M.name\n        };\n    });\n\n    def_to_moz(AST_RegExp, function To_Moz_RegExpLiteral(M) {\n        const pattern = M.value.source;\n        const flags = M.value.flags;\n        return {\n            type: \"Literal\",\n            value: null,\n            raw: M.print_to_string(),\n            regex: { pattern, flags }\n        };\n    });\n\n    def_to_moz(AST_Constant, function To_Moz_Literal(M) {\n        var value = M.value;\n        return {\n            type: \"Literal\",\n            value: value,\n            raw: M.raw || M.print_to_string()\n        };\n    });\n\n    def_to_moz(AST_Atom, function To_Moz_Atom(M) {\n        return {\n            type: \"Identifier\",\n            name: String(M.value)\n        };\n    });\n\n    def_to_moz(AST_BigInt, M => ({\n        type: \"BigIntLiteral\",\n        value: M.value\n    }));\n\n    AST_Boolean.DEFMETHOD(\"to_mozilla_ast\", AST_Constant.prototype.to_mozilla_ast);\n    AST_Null.DEFMETHOD(\"to_mozilla_ast\", AST_Constant.prototype.to_mozilla_ast);\n    AST_Hole.DEFMETHOD(\"to_mozilla_ast\", function To_Moz_ArrayHole() { return null; });\n\n    AST_Block.DEFMETHOD(\"to_mozilla_ast\", AST_BlockStatement.prototype.to_mozilla_ast);\n    AST_Lambda.DEFMETHOD(\"to_mozilla_ast\", AST_Function.prototype.to_mozilla_ast);\n\n    /* -----[ tools ]----- */\n\n    function my_start_token(moznode) {\n        var loc = moznode.loc, start = loc && loc.start;\n        var range = moznode.range;\n        return new AST_Token(\n            \"\",\n            \"\",\n            start && start.line || 0,\n            start && start.column || 0,\n            range ? range [0] : moznode.start,\n            false,\n            [],\n            [],\n            loc && loc.source,\n        );\n    }\n\n    function my_end_token(moznode) {\n        var loc = moznode.loc, end = loc && loc.end;\n        var range = moznode.range;\n        return new AST_Token(\n            \"\",\n            \"\",\n            end && end.line || 0,\n            end && end.column || 0,\n            range ? range [0] : moznode.end,\n            false,\n            [],\n            [],\n            loc && loc.source,\n        );\n    }\n\n    var FROM_MOZ_STACK = null;\n\n    function from_moz(node) {\n        FROM_MOZ_STACK.push(node);\n        var ret = node != null ? MOZ_TO_ME[node.type](node) : null;\n        FROM_MOZ_STACK.pop();\n        return ret;\n    }\n\n    AST_Node.from_mozilla_ast = function(node) {\n        var save_stack = FROM_MOZ_STACK;\n        FROM_MOZ_STACK = [];\n        var ast = from_moz(node);\n        FROM_MOZ_STACK = save_stack;\n        return ast;\n    };\n\n    function set_moz_loc(mynode, moznode) {\n        var start = mynode.start;\n        var end = mynode.end;\n        if (!(start && end)) {\n            return moznode;\n        }\n        if (start.pos != null && end.endpos != null) {\n            moznode.range = [start.pos, end.endpos];\n        }\n        if (start.line) {\n            moznode.loc = {\n                start: {line: start.line, column: start.col},\n                end: end.endline ? {line: end.endline, column: end.endcol} : null\n            };\n            if (start.file) {\n                moznode.loc.source = start.file;\n            }\n        }\n        return moznode;\n    }\n\n    function def_to_moz(mytype, handler) {\n        mytype.DEFMETHOD(\"to_mozilla_ast\", function(parent) {\n            return set_moz_loc(this, handler(this, parent));\n        });\n    }\n\n    var TO_MOZ_STACK = null;\n\n    function to_moz(node) {\n        if (TO_MOZ_STACK === null) { TO_MOZ_STACK = []; }\n        TO_MOZ_STACK.push(node);\n        var ast = node != null ? node.to_mozilla_ast(TO_MOZ_STACK[TO_MOZ_STACK.length - 2]) : null;\n        TO_MOZ_STACK.pop();\n        if (TO_MOZ_STACK.length === 0) { TO_MOZ_STACK = null; }\n        return ast;\n    }\n\n    function to_moz_in_destructuring() {\n        var i = TO_MOZ_STACK.length;\n        while (i--) {\n            if (TO_MOZ_STACK[i] instanceof AST_Destructuring) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    function to_moz_block(node) {\n        return {\n            type: \"BlockStatement\",\n            body: node.body.map(to_moz)\n        };\n    }\n\n    function to_moz_scope(type, node) {\n        var body = node.body.map(to_moz);\n        if (node.body[0] instanceof AST_SimpleStatement && node.body[0].body instanceof AST_String) {\n            body.unshift(to_moz(new AST_EmptyStatement(node.body[0])));\n        }\n        return {\n            type: type,\n            body: body\n        };\n    }\n})();\n\n// return true if the node at the top of the stack (that means the\n// innermost node in the current output) is lexically the first in\n// a statement.\nfunction first_in_statement(stack) {\n    let node = stack.parent(-1);\n    for (let i = 0, p; p = stack.parent(i); i++) {\n        if (p instanceof AST_Statement && p.body === node)\n            return true;\n        if ((p instanceof AST_Sequence && p.expressions[0] === node) ||\n            (p.TYPE === \"Call\" && p.expression === node) ||\n            (p instanceof AST_PrefixedTemplateString && p.prefix === node) ||\n            (p instanceof AST_Dot && p.expression === node) ||\n            (p instanceof AST_Sub && p.expression === node) ||\n            (p instanceof AST_Chain && p.expression === node) ||\n            (p instanceof AST_Conditional && p.condition === node) ||\n            (p instanceof AST_Binary && p.left === node) ||\n            (p instanceof AST_UnaryPostfix && p.expression === node)\n        ) {\n            node = p;\n        } else {\n            return false;\n        }\n    }\n}\n\n// Returns whether the leftmost item in the expression is an object\nfunction left_is_object(node) {\n    if (node instanceof AST_Object) return true;\n    if (node instanceof AST_Sequence) return left_is_object(node.expressions[0]);\n    if (node.TYPE === \"Call\") return left_is_object(node.expression);\n    if (node instanceof AST_PrefixedTemplateString) return left_is_object(node.prefix);\n    if (node instanceof AST_Dot || node instanceof AST_Sub) return left_is_object(node.expression);\n    if (node instanceof AST_Chain) return left_is_object(node.expression);\n    if (node instanceof AST_Conditional) return left_is_object(node.condition);\n    if (node instanceof AST_Binary) return left_is_object(node.left);\n    if (node instanceof AST_UnaryPostfix) return left_is_object(node.expression);\n    return false;\n}\n\n/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\nconst CODE_LINE_BREAK = 10;\nconst CODE_SPACE = 32;\n\nconst r_annotation = /[@#]__(PURE|INLINE|NOINLINE)__/;\n\nfunction is_some_comments(comment) {\n    // multiline comment\n    return (\n        (comment.type === \"comment2\" || comment.type === \"comment1\")\n        && /@preserve|@copyright|@lic|@cc_on|^\\**!/i.test(comment.value)\n    );\n}\n\nconst ROPE_COMMIT_WHEN = 8 * 1000;\nclass Rope {\n    constructor() {\n        this.committed = \"\";\n        this.current = \"\";\n    }\n\n    append(str) {\n        /** When `this.current` is too long, commit it. */\n        if (this.current.length > ROPE_COMMIT_WHEN) {\n            this.committed += this.current + str;\n            this.current = \"\";\n        } else {\n            this.current += str;\n        }\n    }\n\n    insertAt(char, index) {\n        const { committed, current } = this;\n        if (index < committed.length) {\n            this.committed = committed.slice(0, index) + char + committed.slice(index);\n        } else if (index === committed.length) {\n            this.committed += char;\n        } else {\n            index -= committed.length;\n            this.committed += current.slice(0, index) + char;\n            this.current = current.slice(index);\n        }\n    }\n\n    charAt(index) {\n        const { committed } = this;\n        if (index < committed.length) return committed[index];\n        return this.current[index - committed.length];\n    }\n\n    charCodeAt(index) {\n        const { committed } = this;\n        if (index < committed.length) return committed.charCodeAt(index);\n        return this.current.charCodeAt(index - committed.length);\n    }\n\n    length() {\n        return this.committed.length + this.current.length;\n    }\n\n    expectDirective() {\n        // /^$|[;{][\\s\\n]*$/\n\n        let ch, n = this.length();\n\n        if (n <= 0) return true;\n\n        // Skip N whitespace from the end\n        while (\n            (ch = this.charCodeAt(--n))\n            && (ch == CODE_SPACE || ch == CODE_LINE_BREAK)\n        );\n\n        // either \";\", or \"{\", or the string ended\n        return !ch || ch === 59 || ch === 123;\n    }\n\n    hasNLB() {\n        let n = this.length() - 1;\n        while (n >= 0) {\n            const code = this.charCodeAt(n--);\n\n            if (code === CODE_LINE_BREAK) return true;\n            if (code !== CODE_SPACE) return false;\n        }\n        return true;\n    }\n\n\n    toString() {\n        return this.committed + this.current;\n    }\n}\n\nfunction OutputStream(options) {\n\n    var readonly = !options;\n    options = defaults(options, {\n        ascii_only           : false,\n        beautify             : false,\n        braces               : false,\n        comments             : \"some\",\n        ecma                 : 5,\n        ie8                  : false,\n        indent_level         : 4,\n        indent_start         : 0,\n        inline_script        : true,\n        keep_numbers         : false,\n        keep_quoted_props    : false,\n        max_line_len         : false,\n        preamble             : null,\n        preserve_annotations : false,\n        quote_keys           : false,\n        quote_style          : 0,\n        safari10             : false,\n        semicolons           : true,\n        shebang              : true,\n        shorthand            : undefined,\n        source_map           : null,\n        webkit               : false,\n        width                : 80,\n        wrap_iife            : false,\n        wrap_func_args       : true,\n\n        _destroy_ast         : false\n    }, true);\n\n    if (options.shorthand === undefined)\n        options.shorthand = options.ecma > 5;\n\n    // Convert comment option to RegExp if necessary and set up comments filter\n    var comment_filter = return_false; // Default case, throw all comments away\n    if (options.comments) {\n        let comments = options.comments;\n        if (typeof options.comments === \"string\" && /^\\/.*\\/[a-zA-Z]*$/.test(options.comments)) {\n            var regex_pos = options.comments.lastIndexOf(\"/\");\n            comments = new RegExp(\n                options.comments.substr(1, regex_pos - 1),\n                options.comments.substr(regex_pos + 1)\n            );\n        }\n        if (comments instanceof RegExp) {\n            comment_filter = function(comment) {\n                return comment.type != \"comment5\" && comments.test(comment.value);\n            };\n        } else if (typeof comments === \"function\") {\n            comment_filter = function(comment) {\n                return comment.type != \"comment5\" && comments(this, comment);\n            };\n        } else if (comments === \"some\") {\n            comment_filter = is_some_comments;\n        } else { // NOTE includes \"all\" option\n            comment_filter = return_true;\n        }\n    }\n\n    if (options.preserve_annotations) {\n        let prev_comment_filter = comment_filter;\n        comment_filter = function (comment) {\n            return r_annotation.test(comment.value) || prev_comment_filter.apply(this, arguments);\n        };\n    }\n\n    var indentation = 0;\n    var current_col = 0;\n    var current_line = 1;\n    var current_pos = 0;\n    var OUTPUT = new Rope();\n    let printed_comments = new Set();\n\n    var to_utf8 = options.ascii_only ? function(str, identifier = false, regexp = false) {\n        if (options.ecma >= 2015 && !options.safari10 && !regexp) {\n            str = str.replace(/[\\ud800-\\udbff][\\udc00-\\udfff]/g, function(ch) {\n                var code = get_full_char_code(ch, 0).toString(16);\n                return \"\\\\u{\" + code + \"}\";\n            });\n        }\n        return str.replace(/[\\u0000-\\u001f\\u007f-\\uffff]/g, function(ch) {\n            var code = ch.charCodeAt(0).toString(16);\n            if (code.length <= 2 && !identifier) {\n                while (code.length < 2) code = \"0\" + code;\n                return \"\\\\x\" + code;\n            } else {\n                while (code.length < 4) code = \"0\" + code;\n                return \"\\\\u\" + code;\n            }\n        });\n    } : function(str) {\n        return str.replace(/[\\ud800-\\udbff][\\udc00-\\udfff]|([\\ud800-\\udbff]|[\\udc00-\\udfff])/g, function(match, lone) {\n            if (lone) {\n                return \"\\\\u\" + lone.charCodeAt(0).toString(16);\n            }\n            return match;\n        });\n    };\n\n    function make_string(str, quote) {\n        var dq = 0, sq = 0;\n        str = str.replace(/[\\\\\\b\\f\\n\\r\\v\\t\\x22\\x27\\u2028\\u2029\\0\\ufeff]/g,\n          function(s, i) {\n            switch (s) {\n              case '\"': ++dq; return '\"';\n              case \"'\": ++sq; return \"'\";\n              case \"\\\\\": return \"\\\\\\\\\";\n              case \"\\n\": return \"\\\\n\";\n              case \"\\r\": return \"\\\\r\";\n              case \"\\t\": return \"\\\\t\";\n              case \"\\b\": return \"\\\\b\";\n              case \"\\f\": return \"\\\\f\";\n              case \"\\x0B\": return options.ie8 ? \"\\\\x0B\" : \"\\\\v\";\n              case \"\\u2028\": return \"\\\\u2028\";\n              case \"\\u2029\": return \"\\\\u2029\";\n              case \"\\ufeff\": return \"\\\\ufeff\";\n              case \"\\0\":\n                  return /[0-9]/.test(get_full_char(str, i+1)) ? \"\\\\x00\" : \"\\\\0\";\n            }\n            return s;\n        });\n        function quote_single() {\n            return \"'\" + str.replace(/\\x27/g, \"\\\\'\") + \"'\";\n        }\n        function quote_double() {\n            return '\"' + str.replace(/\\x22/g, '\\\\\"') + '\"';\n        }\n        function quote_template() {\n            return \"`\" + str.replace(/`/g, \"\\\\`\") + \"`\";\n        }\n        str = to_utf8(str);\n        if (quote === \"`\") return quote_template();\n        switch (options.quote_style) {\n          case 1:\n            return quote_single();\n          case 2:\n            return quote_double();\n          case 3:\n            return quote == \"'\" ? quote_single() : quote_double();\n          default:\n            return dq > sq ? quote_single() : quote_double();\n        }\n    }\n\n    function encode_string(str, quote) {\n        var ret = make_string(str, quote);\n        if (options.inline_script) {\n            ret = ret.replace(/<\\x2f(script)([>\\/\\t\\n\\f\\r ])/gi, \"<\\\\/$1$2\");\n            ret = ret.replace(/\\x3c!--/g, \"\\\\x3c!--\");\n            ret = ret.replace(/--\\x3e/g, \"--\\\\x3e\");\n        }\n        return ret;\n    }\n\n    function make_name(name) {\n        name = name.toString();\n        name = to_utf8(name, true);\n        return name;\n    }\n\n    function make_indent(back) {\n        return \" \".repeat(options.indent_start + indentation - back * options.indent_level);\n    }\n\n    /* -----[ beautification/minification ]----- */\n\n    var has_parens = false;\n    var might_need_space = false;\n    var might_need_semicolon = false;\n    var might_add_newline = 0;\n    var need_newline_indented = false;\n    var need_space = false;\n    var newline_insert = -1;\n    var last = \"\";\n    var mapping_token, mapping_name, mappings = options.source_map && [];\n\n    var do_add_mapping = mappings ? function() {\n        mappings.forEach(function(mapping) {\n            try {\n                let { name, token } = mapping;\n                if (name !== false) {\n                    if (token.type == \"name\" || token.type === \"privatename\") {\n                        name = token.value;\n                    } else if (name instanceof AST_Symbol) {\n                        name = token.type === \"string\" ? token.value : name.name;\n                    }\n                }\n                options.source_map.add(\n                    mapping.token.file,\n                    mapping.line, mapping.col,\n                    mapping.token.line, mapping.token.col,\n                    is_basic_identifier_string(name) ? name : undefined\n                );\n            } catch(ex) {\n                // Ignore bad mapping\n            }\n        });\n        mappings = [];\n    } : noop;\n\n    var ensure_line_len = options.max_line_len ? function() {\n        if (current_col > options.max_line_len) {\n            if (might_add_newline) {\n                OUTPUT.insertAt(\"\\n\", might_add_newline);\n                const len_after_newline = OUTPUT.length() - might_add_newline - 1;\n                if (mappings) {\n                    var delta = len_after_newline - current_col;\n                    mappings.forEach(function(mapping) {\n                        mapping.line++;\n                        mapping.col += delta;\n                    });\n                }\n                current_line++;\n                current_pos++;\n                current_col = len_after_newline;\n            }\n        }\n        if (might_add_newline) {\n            might_add_newline = 0;\n            do_add_mapping();\n        }\n    } : noop;\n\n    var requireSemicolonChars = makePredicate(\"( [ + * / - , . `\");\n\n    function print(str) {\n        str = String(str);\n        var ch = get_full_char(str, 0);\n        if (need_newline_indented && ch) {\n            need_newline_indented = false;\n            if (ch !== \"\\n\") {\n                print(\"\\n\");\n                indent();\n            }\n        }\n        if (need_space && ch) {\n            need_space = false;\n            if (!/[\\s;})]/.test(ch)) {\n                space();\n            }\n        }\n        newline_insert = -1;\n        var prev = last.charAt(last.length - 1);\n        if (might_need_semicolon) {\n            might_need_semicolon = false;\n\n            if (prev === \":\" && ch === \"}\" || (!ch || !\";}\".includes(ch)) && prev !== \";\") {\n                if (options.semicolons || requireSemicolonChars.has(ch)) {\n                    OUTPUT.append(\";\");\n                    current_col++;\n                    current_pos++;\n                } else {\n                    ensure_line_len();\n                    if (current_col > 0) {\n                        OUTPUT.append(\"\\n\");\n                        current_pos++;\n                        current_line++;\n                        current_col = 0;\n                    }\n\n                    if (/^\\s+$/.test(str)) {\n                        // reset the semicolon flag, since we didn't print one\n                        // now and might still have to later\n                        might_need_semicolon = true;\n                    }\n                }\n\n                if (!options.beautify)\n                    might_need_space = false;\n            }\n        }\n\n        if (might_need_space) {\n            if ((is_identifier_char(prev)\n                    && (is_identifier_char(ch) || ch == \"\\\\\"))\n                || (ch == \"/\" && ch == prev)\n                || ((ch == \"+\" || ch == \"-\") && ch == last)\n            ) {\n                OUTPUT.append(\" \");\n                current_col++;\n                current_pos++;\n            }\n            might_need_space = false;\n        }\n\n        if (mapping_token) {\n            mappings.push({\n                token: mapping_token,\n                name: mapping_name,\n                line: current_line,\n                col: current_col\n            });\n            mapping_token = false;\n            if (!might_add_newline) do_add_mapping();\n        }\n\n        OUTPUT.append(str);\n        has_parens = str[str.length - 1] == \"(\";\n        current_pos += str.length;\n        var a = str.split(/\\r?\\n/), n = a.length - 1;\n        current_line += n;\n        current_col += a[0].length;\n        if (n > 0) {\n            ensure_line_len();\n            current_col = a[n].length;\n        }\n        last = str;\n    }\n\n    var star = function() {\n        print(\"*\");\n    };\n\n    var space = options.beautify ? function() {\n        print(\" \");\n    } : function() {\n        might_need_space = true;\n    };\n\n    var indent = options.beautify ? function(half) {\n        if (options.beautify) {\n            print(make_indent(half ? 0.5 : 0));\n        }\n    } : noop;\n\n    var with_indent = options.beautify ? function(col, cont) {\n        if (col === true) col = next_indent();\n        var save_indentation = indentation;\n        indentation = col;\n        var ret = cont();\n        indentation = save_indentation;\n        return ret;\n    } : function(col, cont) { return cont(); };\n\n    var newline = options.beautify ? function() {\n        if (newline_insert < 0) return print(\"\\n\");\n        if (OUTPUT.charAt(newline_insert) != \"\\n\") {\n            OUTPUT.insertAt(\"\\n\", newline_insert);\n            current_pos++;\n            current_line++;\n        }\n        newline_insert++;\n    } : options.max_line_len ? function() {\n        ensure_line_len();\n        might_add_newline = OUTPUT.length();\n    } : noop;\n\n    var semicolon = options.beautify ? function() {\n        print(\";\");\n    } : function() {\n        might_need_semicolon = true;\n    };\n\n    function force_semicolon() {\n        might_need_semicolon = false;\n        print(\";\");\n    }\n\n    function next_indent() {\n        return indentation + options.indent_level;\n    }\n\n    function with_block(cont) {\n        var ret;\n        print(\"{\");\n        newline();\n        with_indent(next_indent(), function() {\n            ret = cont();\n        });\n        indent();\n        print(\"}\");\n        return ret;\n    }\n\n    function with_parens(cont) {\n        print(\"(\");\n        //XXX: still nice to have that for argument lists\n        //var ret = with_indent(current_col, cont);\n        var ret = cont();\n        print(\")\");\n        return ret;\n    }\n\n    function with_square(cont) {\n        print(\"[\");\n        //var ret = with_indent(current_col, cont);\n        var ret = cont();\n        print(\"]\");\n        return ret;\n    }\n\n    function comma() {\n        print(\",\");\n        space();\n    }\n\n    function colon() {\n        print(\":\");\n        space();\n    }\n\n    var add_mapping = mappings ? function(token, name) {\n        mapping_token = token;\n        mapping_name = name;\n    } : noop;\n\n    function get() {\n        if (might_add_newline) {\n            ensure_line_len();\n        }\n        return OUTPUT.toString();\n    }\n\n    function filter_comment(comment) {\n        if (!options.preserve_annotations) {\n            comment = comment.replace(r_annotation, \" \");\n        }\n        if (/^\\s*$/.test(comment)) {\n            return \"\";\n        }\n        return comment.replace(/(<\\s*\\/\\s*)(script)/i, \"<\\\\/$2\");\n    }\n\n    function prepend_comments(node) {\n        var self = this;\n        var start = node.start;\n        if (!start) return;\n        var printed_comments = self.printed_comments;\n\n        // There cannot be a newline between return/yield and its value.\n        const keyword_with_value = \n            node instanceof AST_Exit && node.value\n            || (node instanceof AST_Await || node instanceof AST_Yield)\n                && node.expression;\n\n        if (\n            start.comments_before\n            && printed_comments.has(start.comments_before)\n        ) {\n            if (keyword_with_value) {\n                start.comments_before = [];\n            } else {\n                return;\n            }\n        }\n\n        var comments = start.comments_before;\n        if (!comments) {\n            comments = start.comments_before = [];\n        }\n        printed_comments.add(comments);\n\n        if (keyword_with_value) {\n            var tw = new TreeWalker(function(node) {\n                var parent = tw.parent();\n                if (parent instanceof AST_Exit\n                    || parent instanceof AST_Await\n                    || parent instanceof AST_Yield\n                    || parent instanceof AST_Binary && parent.left === node\n                    || parent.TYPE == \"Call\" && parent.expression === node\n                    || parent instanceof AST_Conditional && parent.condition === node\n                    || parent instanceof AST_Dot && parent.expression === node\n                    || parent instanceof AST_Sequence && parent.expressions[0] === node\n                    || parent instanceof AST_Sub && parent.expression === node\n                    || parent instanceof AST_UnaryPostfix) {\n                    if (!node.start) return;\n                    var text = node.start.comments_before;\n                    if (text && !printed_comments.has(text)) {\n                        printed_comments.add(text);\n                        comments = comments.concat(text);\n                    }\n                } else {\n                    return true;\n                }\n            });\n            tw.push(node);\n            keyword_with_value.walk(tw);\n        }\n\n        if (current_pos == 0) {\n            if (comments.length > 0 && options.shebang && comments[0].type === \"comment5\"\n                && !printed_comments.has(comments[0])) {\n                print(\"#!\" + comments.shift().value + \"\\n\");\n                indent();\n            }\n            var preamble = options.preamble;\n            if (preamble) {\n                print(preamble.replace(/\\r\\n?|[\\n\\u2028\\u2029]|\\s*$/g, \"\\n\"));\n            }\n        }\n\n        comments = comments.filter(comment_filter, node).filter(c => !printed_comments.has(c));\n        if (comments.length == 0) return;\n        var last_nlb = OUTPUT.hasNLB();\n        comments.forEach(function(c, i) {\n            printed_comments.add(c);\n            if (!last_nlb) {\n                if (c.nlb) {\n                    print(\"\\n\");\n                    indent();\n                    last_nlb = true;\n                } else if (i > 0) {\n                    space();\n                }\n            }\n\n            if (/comment[134]/.test(c.type)) {\n                var value = filter_comment(c.value);\n                if (value) {\n                    print(\"//\" + value + \"\\n\");\n                    indent();\n                }\n                last_nlb = true;\n            } else if (c.type == \"comment2\") {\n                var value = filter_comment(c.value);\n                if (value) {\n                    print(\"/*\" + value + \"*/\");\n                }\n                last_nlb = false;\n            }\n        });\n        if (!last_nlb) {\n            if (start.nlb) {\n                print(\"\\n\");\n                indent();\n            } else {\n                space();\n            }\n        }\n    }\n\n    function append_comments(node, tail) {\n        var self = this;\n        var token = node.end;\n        if (!token) return;\n        var printed_comments = self.printed_comments;\n        var comments = token[tail ? \"comments_before\" : \"comments_after\"];\n        if (!comments || printed_comments.has(comments)) return;\n        if (!(node instanceof AST_Statement || comments.every((c) =>\n            !/comment[134]/.test(c.type)\n        ))) return;\n        printed_comments.add(comments);\n        var insert = OUTPUT.length();\n        comments.filter(comment_filter, node).forEach(function(c, i) {\n            if (printed_comments.has(c)) return;\n            printed_comments.add(c);\n            need_space = false;\n            if (need_newline_indented) {\n                print(\"\\n\");\n                indent();\n                need_newline_indented = false;\n            } else if (c.nlb && (i > 0 || !OUTPUT.hasNLB())) {\n                print(\"\\n\");\n                indent();\n            } else if (i > 0 || !tail) {\n                space();\n            }\n            if (/comment[134]/.test(c.type)) {\n                const value = filter_comment(c.value);\n                if (value) {\n                    print(\"//\" + value);\n                }\n                need_newline_indented = true;\n            } else if (c.type == \"comment2\") {\n                const value = filter_comment(c.value);\n                if (value) {\n                    print(\"/*\" + value + \"*/\");\n                }\n                need_space = true;\n            }\n        });\n        if (OUTPUT.length() > insert) newline_insert = insert;\n    }\n\n    /**\n     * When output.option(\"_destroy_ast\") is enabled, destroy the function.\n     * Call this after printing it.\n     */\n    const gc_scope =\n      options[\"_destroy_ast\"]\n        ? function gc_scope(scope) {\n            scope.body.length = 0;\n            scope.argnames.length = 0;\n        }\n        : noop;\n\n    var stack = [];\n    return {\n        get             : get,\n        toString        : get,\n        indent          : indent,\n        in_directive    : false,\n        use_asm         : null,\n        active_scope    : null,\n        indentation     : function() { return indentation; },\n        current_width   : function() { return current_col - indentation; },\n        should_break    : function() { return options.width && this.current_width() >= options.width; },\n        has_parens      : function() { return has_parens; },\n        newline         : newline,\n        print           : print,\n        star            : star,\n        space           : space,\n        comma           : comma,\n        colon           : colon,\n        last            : function() { return last; },\n        semicolon       : semicolon,\n        force_semicolon : force_semicolon,\n        to_utf8         : to_utf8,\n        print_name      : function(name) { print(make_name(name)); },\n        print_string    : function(str, quote, escape_directive) {\n            var encoded = encode_string(str, quote);\n            if (escape_directive === true && !encoded.includes(\"\\\\\")) {\n                // Insert semicolons to break directive prologue\n                if (!OUTPUT.expectDirective()) {\n                    force_semicolon();\n                }\n                force_semicolon();\n            }\n            print(encoded);\n        },\n        print_template_string_chars: function(str) {\n            var encoded = encode_string(str, \"`\").replace(/\\${/g, \"\\\\${\");\n            return print(encoded.substr(1, encoded.length - 2));\n        },\n        encode_string   : encode_string,\n        next_indent     : next_indent,\n        with_indent     : with_indent,\n        with_block      : with_block,\n        with_parens     : with_parens,\n        with_square     : with_square,\n        add_mapping     : add_mapping,\n        option          : function(opt) { return options[opt]; },\n        gc_scope,\n        printed_comments: printed_comments,\n        prepend_comments: readonly ? noop : prepend_comments,\n        append_comments : readonly || comment_filter === return_false ? noop : append_comments,\n        line            : function() { return current_line; },\n        col             : function() { return current_col; },\n        pos             : function() { return current_pos; },\n        push_node       : function(node) { stack.push(node); },\n        pop_node        : function() { return stack.pop(); },\n        parent          : function(n) {\n            return stack[stack.length - 2 - (n || 0)];\n        }\n    };\n\n}\n\n/* -----[ code generators ]----- */\n\n(function() {\n\n    /* -----[ utils ]----- */\n\n    function DEFPRINT(nodetype, generator) {\n        nodetype.DEFMETHOD(\"_codegen\", generator);\n    }\n\n    AST_Node.DEFMETHOD(\"print\", function(output, force_parens) {\n        var self = this, generator = self._codegen;\n        if (self instanceof AST_Scope) {\n            output.active_scope = self;\n        } else if (!output.use_asm && self instanceof AST_Directive && self.value == \"use asm\") {\n            output.use_asm = output.active_scope;\n        }\n        function doit() {\n            output.prepend_comments(self);\n            self.add_source_map(output);\n            generator(self, output);\n            output.append_comments(self);\n        }\n        output.push_node(self);\n        if (force_parens || self.needs_parens(output)) {\n            output.with_parens(doit);\n        } else {\n            doit();\n        }\n        output.pop_node();\n        if (self === output.use_asm) {\n            output.use_asm = null;\n        }\n    });\n    AST_Node.DEFMETHOD(\"_print\", AST_Node.prototype.print);\n\n    AST_Node.DEFMETHOD(\"print_to_string\", function(options) {\n        var output = OutputStream(options);\n        this.print(output);\n        return output.get();\n    });\n\n    /* -----[ PARENTHESES ]----- */\n\n    function PARENS(nodetype, func) {\n        if (Array.isArray(nodetype)) {\n            nodetype.forEach(function(nodetype) {\n                PARENS(nodetype, func);\n            });\n        } else {\n            nodetype.DEFMETHOD(\"needs_parens\", func);\n        }\n    }\n\n    PARENS(AST_Node, return_false);\n\n    // a function expression needs parens around it when it's provably\n    // the first token to appear in a statement.\n    PARENS(AST_Function, function(output) {\n        if (!output.has_parens() && first_in_statement(output)) {\n            return true;\n        }\n\n        if (output.option(\"webkit\")) {\n            var p = output.parent();\n            if (p instanceof AST_PropAccess && p.expression === this) {\n                return true;\n            }\n        }\n\n        if (output.option(\"wrap_iife\")) {\n            var p = output.parent();\n            if (p instanceof AST_Call && p.expression === this) {\n                return true;\n            }\n        }\n\n        if (output.option(\"wrap_func_args\")) {\n            var p = output.parent();\n            if (p instanceof AST_Call && p.args.includes(this)) {\n                return true;\n            }\n        }\n\n        return false;\n    });\n\n    PARENS(AST_Arrow, function(output) {\n        var p = output.parent();\n\n        if (\n            output.option(\"wrap_func_args\")\n            && p instanceof AST_Call\n            && p.args.includes(this)\n        ) {\n            return true;\n        }\n        return p instanceof AST_PropAccess && p.expression === this\n            || p instanceof AST_Conditional && p.condition === this;\n    });\n\n    // same goes for an object literal (as in AST_Function), because\n    // otherwise {...} would be interpreted as a block of code.\n    PARENS(AST_Object, function(output) {\n        return !output.has_parens() && first_in_statement(output);\n    });\n\n    PARENS(AST_ClassExpression, first_in_statement);\n\n    PARENS(AST_Unary, function(output) {\n        var p = output.parent();\n        return p instanceof AST_PropAccess && p.expression === this\n            || p instanceof AST_Call && p.expression === this\n            || p instanceof AST_Binary\n                && p.operator === \"**\"\n                && this instanceof AST_UnaryPrefix\n                && p.left === this\n                && this.operator !== \"++\"\n                && this.operator !== \"--\";\n    });\n\n    PARENS(AST_Await, function(output) {\n        var p = output.parent();\n        return p instanceof AST_PropAccess && p.expression === this\n            || p instanceof AST_Call && p.expression === this\n            || p instanceof AST_Binary && p.operator === \"**\" && p.left === this\n            || output.option(\"safari10\") && p instanceof AST_UnaryPrefix;\n    });\n\n    PARENS(AST_Sequence, function(output) {\n        var p = output.parent();\n        return p instanceof AST_Call                          // (foo, bar)() or foo(1, (2, 3), 4)\n            || p instanceof AST_Unary                         // !(foo, bar, baz)\n            || p instanceof AST_Binary                        // 1 + (2, 3) + 4 ==> 8\n            || p instanceof AST_VarDef                        // var a = (1, 2), b = a + a; ==> b == 4\n            || p instanceof AST_PropAccess                    // (1, {foo:2}).foo or (1, {foo:2})[\"foo\"] ==> 2\n            || p instanceof AST_Array                         // [ 1, (2, 3), 4 ] ==> [ 1, 3, 4 ]\n            || p instanceof AST_ObjectProperty                // { foo: (1, 2) }.foo ==> 2\n            || p instanceof AST_Conditional                   /* (false, true) ? (a = 10, b = 20) : (c = 30)\n                                                               * ==> 20 (side effect, set a := 10 and b := 20) */\n            || p instanceof AST_Arrow                         // x => (x, x)\n            || p instanceof AST_DefaultAssign                 // x => (x = (0, function(){}))\n            || p instanceof AST_Expansion                     // [...(a, b)]\n            || p instanceof AST_ForOf && this === p.object    // for (e of (foo, bar)) {}\n            || p instanceof AST_Yield                         // yield (foo, bar)\n            || p instanceof AST_Export                        // export default (foo, bar)\n        ;\n    });\n\n    PARENS(AST_Binary, function(output) {\n        var p = output.parent();\n        // (foo && bar)()\n        if (p instanceof AST_Call && p.expression === this)\n            return true;\n        // typeof (foo && bar)\n        if (p instanceof AST_Unary)\n            return true;\n        // (foo && bar)[\"prop\"], (foo && bar).prop\n        if (p instanceof AST_PropAccess && p.expression === this)\n            return true;\n        // this deals with precedence: 3 * (2 + 1)\n        if (p instanceof AST_Binary) {\n            const po = p.operator;\n            const so = this.operator;\n\n            if (so === \"??\" && (po === \"||\" || po === \"&&\")) {\n                return true;\n            }\n\n            if (po === \"??\" && (so === \"||\" || so === \"&&\")) {\n                return true;\n            }\n\n            const pp = PRECEDENCE[po];\n            const sp = PRECEDENCE[so];\n            if (pp > sp\n                || (pp == sp\n                    && (this === p.right || po == \"**\"))) {\n                return true;\n            }\n        }\n    });\n\n    PARENS(AST_Yield, function(output) {\n        var p = output.parent();\n        // (yield 1) + (yield 2)\n        // a = yield 3\n        if (p instanceof AST_Binary && p.operator !== \"=\")\n            return true;\n        // (yield 1)()\n        // new (yield 1)()\n        if (p instanceof AST_Call && p.expression === this)\n            return true;\n        // (yield 1) ? yield 2 : yield 3\n        if (p instanceof AST_Conditional && p.condition === this)\n            return true;\n        // -(yield 4)\n        if (p instanceof AST_Unary)\n            return true;\n        // (yield x).foo\n        // (yield x)['foo']\n        if (p instanceof AST_PropAccess && p.expression === this)\n            return true;\n    });\n\n    PARENS(AST_Chain, function(output) {\n        var p = output.parent();\n        if (!(p instanceof AST_Call || p instanceof AST_PropAccess)) return false;\n        return p.expression === this;\n    });\n\n    PARENS(AST_PropAccess, function(output) {\n        var p = output.parent();\n        if (p instanceof AST_New && p.expression === this) {\n            // i.e. new (foo.bar().baz)\n            //\n            // if there's one call into this subtree, then we need\n            // parens around it too, otherwise the call will be\n            // interpreted as passing the arguments to the upper New\n            // expression.\n            return walk(this, node => {\n                if (node instanceof AST_Scope) return true;\n                if (node instanceof AST_Call) {\n                    return walk_abort;  // makes walk() return true.\n                }\n            });\n        }\n    });\n\n    PARENS(AST_Call, function(output) {\n        var p = output.parent(), p1;\n        if (p instanceof AST_New && p.expression === this\n            || p instanceof AST_Export && p.is_default && this.expression instanceof AST_Function)\n            return true;\n\n        // workaround for Safari bug.\n        // https://bugs.webkit.org/show_bug.cgi?id=123506\n        return this.expression instanceof AST_Function\n            && p instanceof AST_PropAccess\n            && p.expression === this\n            && (p1 = output.parent(1)) instanceof AST_Assign\n            && p1.left === p;\n    });\n\n    PARENS(AST_New, function(output) {\n        var p = output.parent();\n        if (this.args.length === 0\n            && (p instanceof AST_PropAccess // (new Date).getTime(), (new Date)[\"getTime\"]()\n                || p instanceof AST_Call && p.expression === this\n                || p instanceof AST_PrefixedTemplateString && p.prefix === this)) // (new foo)(bar)\n            return true;\n    });\n\n    PARENS(AST_Number, function(output) {\n        var p = output.parent();\n        if (p instanceof AST_PropAccess && p.expression === this) {\n            var value = this.getValue();\n            if (value < 0 || /^0/.test(make_num(value))) {\n                return true;\n            }\n        }\n    });\n\n    PARENS(AST_BigInt, function(output) {\n        var p = output.parent();\n        if (p instanceof AST_PropAccess && p.expression === this) {\n            var value = this.getValue();\n            if (value.startsWith(\"-\")) {\n                return true;\n            }\n        }\n    });\n\n    PARENS([ AST_Assign, AST_Conditional ], function(output) {\n        var p = output.parent();\n        // !(a = false) → true\n        if (p instanceof AST_Unary)\n            return true;\n        // 1 + (a = 2) + 3 → 6, side effect setting a = 2\n        if (p instanceof AST_Binary && !(p instanceof AST_Assign))\n            return true;\n        // (a = func)() —or— new (a = Object)()\n        if (p instanceof AST_Call && p.expression === this)\n            return true;\n        // (a = foo) ? bar : baz\n        if (p instanceof AST_Conditional && p.condition === this)\n            return true;\n        // (a = foo)[\"prop\"] —or— (a = foo).prop\n        if (p instanceof AST_PropAccess && p.expression === this)\n            return true;\n        // ({a, b} = {a: 1, b: 2}), a destructuring assignment\n        if (this instanceof AST_Assign && this.left instanceof AST_Destructuring && this.left.is_array === false)\n            return true;\n    });\n\n    /* -----[ PRINTERS ]----- */\n\n    DEFPRINT(AST_Directive, function(self, output) {\n        output.print_string(self.value, self.quote);\n        output.semicolon();\n    });\n\n    DEFPRINT(AST_Expansion, function (self, output) {\n        output.print(\"...\");\n        self.expression.print(output);\n    });\n\n    DEFPRINT(AST_Destructuring, function (self, output) {\n        output.print(self.is_array ? \"[\" : \"{\");\n        var len = self.names.length;\n        self.names.forEach(function (name, i) {\n            if (i > 0) output.comma();\n            name.print(output);\n            // If the final element is a hole, we need to make sure it\n            // doesn't look like a trailing comma, by inserting an actual\n            // trailing comma.\n            if (i == len - 1 && name instanceof AST_Hole) output.comma();\n        });\n        output.print(self.is_array ? \"]\" : \"}\");\n    });\n\n    DEFPRINT(AST_Debugger, function(self, output) {\n        output.print(\"debugger\");\n        output.semicolon();\n    });\n\n    /* -----[ statements ]----- */\n\n    function display_body(body, is_toplevel, output, allow_directives) {\n        var last = body.length - 1;\n        output.in_directive = allow_directives;\n        body.forEach(function(stmt, i) {\n            if (output.in_directive === true && !(stmt instanceof AST_Directive ||\n                stmt instanceof AST_EmptyStatement ||\n                (stmt instanceof AST_SimpleStatement && stmt.body instanceof AST_String)\n            )) {\n                output.in_directive = false;\n            }\n            if (!(stmt instanceof AST_EmptyStatement)) {\n                output.indent();\n                stmt.print(output);\n                if (!(i == last && is_toplevel)) {\n                    output.newline();\n                    if (is_toplevel) output.newline();\n                }\n            }\n            if (output.in_directive === true &&\n                stmt instanceof AST_SimpleStatement &&\n                stmt.body instanceof AST_String\n            ) {\n                output.in_directive = false;\n            }\n        });\n        output.in_directive = false;\n    }\n\n    AST_StatementWithBody.DEFMETHOD(\"_do_print_body\", function(output) {\n        print_maybe_braced_body(this.body, output);\n    });\n\n    DEFPRINT(AST_Statement, function(self, output) {\n        self.body.print(output);\n        output.semicolon();\n    });\n    DEFPRINT(AST_Toplevel, function(self, output) {\n        display_body(self.body, true, output, true);\n        output.print(\"\");\n    });\n    DEFPRINT(AST_LabeledStatement, function(self, output) {\n        self.label.print(output);\n        output.colon();\n        self.body.print(output);\n    });\n    DEFPRINT(AST_SimpleStatement, function(self, output) {\n        self.body.print(output);\n        output.semicolon();\n    });\n    function print_braced_empty(self, output) {\n        output.print(\"{\");\n        output.with_indent(output.next_indent(), function() {\n            output.append_comments(self, true);\n        });\n        output.add_mapping(self.end);\n        output.print(\"}\");\n    }\n    function print_braced(self, output, allow_directives) {\n        if (self.body.length > 0) {\n            output.with_block(function() {\n                display_body(self.body, false, output, allow_directives);\n                output.add_mapping(self.end);\n            });\n        } else print_braced_empty(self, output);\n    }\n    DEFPRINT(AST_BlockStatement, function(self, output) {\n        print_braced(self, output);\n    });\n    DEFPRINT(AST_EmptyStatement, function(self, output) {\n        output.semicolon();\n    });\n    DEFPRINT(AST_Do, function(self, output) {\n        output.print(\"do\");\n        output.space();\n        make_block(self.body, output);\n        output.space();\n        output.print(\"while\");\n        output.space();\n        output.with_parens(function() {\n            self.condition.print(output);\n        });\n        output.semicolon();\n    });\n    DEFPRINT(AST_While, function(self, output) {\n        output.print(\"while\");\n        output.space();\n        output.with_parens(function() {\n            self.condition.print(output);\n        });\n        output.space();\n        self._do_print_body(output);\n    });\n    DEFPRINT(AST_For, function(self, output) {\n        output.print(\"for\");\n        output.space();\n        output.with_parens(function() {\n            if (self.init) {\n                if (self.init instanceof AST_Definitions) {\n                    self.init.print(output);\n                } else {\n                    parenthesize_for_noin(self.init, output, true);\n                }\n                output.print(\";\");\n                output.space();\n            } else {\n                output.print(\";\");\n            }\n            if (self.condition) {\n                self.condition.print(output);\n                output.print(\";\");\n                output.space();\n            } else {\n                output.print(\";\");\n            }\n            if (self.step) {\n                self.step.print(output);\n            }\n        });\n        output.space();\n        self._do_print_body(output);\n    });\n    DEFPRINT(AST_ForIn, function(self, output) {\n        output.print(\"for\");\n        if (self.await) {\n            output.space();\n            output.print(\"await\");\n        }\n        output.space();\n        output.with_parens(function() {\n            self.init.print(output);\n            output.space();\n            output.print(self instanceof AST_ForOf ? \"of\" : \"in\");\n            output.space();\n            self.object.print(output);\n        });\n        output.space();\n        self._do_print_body(output);\n    });\n    DEFPRINT(AST_With, function(self, output) {\n        output.print(\"with\");\n        output.space();\n        output.with_parens(function() {\n            self.expression.print(output);\n        });\n        output.space();\n        self._do_print_body(output);\n    });\n\n    /* -----[ functions ]----- */\n    AST_Lambda.DEFMETHOD(\"_do_print\", function(output, nokeyword) {\n        var self = this;\n        if (!nokeyword) {\n            if (self.async) {\n                output.print(\"async\");\n                output.space();\n            }\n            output.print(\"function\");\n            if (self.is_generator) {\n                output.star();\n            }\n            if (self.name) {\n                output.space();\n            }\n        }\n        if (self.name instanceof AST_Symbol) {\n            self.name.print(output);\n        } else if (nokeyword && self.name instanceof AST_Node) {\n            output.with_square(function() {\n                self.name.print(output); // Computed method name\n            });\n        }\n        output.with_parens(function() {\n            self.argnames.forEach(function(arg, i) {\n                if (i) output.comma();\n                arg.print(output);\n            });\n        });\n        output.space();\n        print_braced(self, output, true);\n    });\n    DEFPRINT(AST_Lambda, function(self, output) {\n        self._do_print(output);\n        output.gc_scope(self);\n    });\n\n    DEFPRINT(AST_PrefixedTemplateString, function(self, output) {\n        var tag = self.prefix;\n        var parenthesize_tag = tag instanceof AST_Lambda\n            || tag instanceof AST_Binary\n            || tag instanceof AST_Conditional\n            || tag instanceof AST_Sequence\n            || tag instanceof AST_Unary\n            || tag instanceof AST_Dot && tag.expression instanceof AST_Object;\n        if (parenthesize_tag) output.print(\"(\");\n        self.prefix.print(output);\n        if (parenthesize_tag) output.print(\")\");\n        self.template_string.print(output);\n    });\n    DEFPRINT(AST_TemplateString, function(self, output) {\n        var is_tagged = output.parent() instanceof AST_PrefixedTemplateString;\n\n        output.print(\"`\");\n        for (var i = 0; i < self.segments.length; i++) {\n            if (!(self.segments[i] instanceof AST_TemplateSegment)) {\n                output.print(\"${\");\n                self.segments[i].print(output);\n                output.print(\"}\");\n            } else if (is_tagged) {\n                output.print(self.segments[i].raw);\n            } else {\n                output.print_template_string_chars(self.segments[i].value);\n            }\n        }\n        output.print(\"`\");\n    });\n    DEFPRINT(AST_TemplateSegment, function(self, output) {\n        output.print_template_string_chars(self.value);\n    });\n\n    AST_Arrow.DEFMETHOD(\"_do_print\", function(output) {\n        var self = this;\n        var parent = output.parent();\n        var needs_parens = (parent instanceof AST_Binary && !(parent instanceof AST_Assign)) ||\n            parent instanceof AST_Unary ||\n            (parent instanceof AST_Call && self === parent.expression);\n        if (needs_parens) { output.print(\"(\"); }\n        if (self.async) {\n            output.print(\"async\");\n            output.space();\n        }\n        if (self.argnames.length === 1 && self.argnames[0] instanceof AST_Symbol) {\n            self.argnames[0].print(output);\n        } else {\n            output.with_parens(function() {\n                self.argnames.forEach(function(arg, i) {\n                    if (i) output.comma();\n                    arg.print(output);\n                });\n            });\n        }\n        output.space();\n        output.print(\"=>\");\n        output.space();\n        const first_statement = self.body[0];\n        if (\n            self.body.length === 1\n            && first_statement instanceof AST_Return\n        ) {\n            const returned = first_statement.value;\n            if (!returned) {\n                output.print(\"{}\");\n            } else if (left_is_object(returned)) {\n                output.print(\"(\");\n                returned.print(output);\n                output.print(\")\");\n            } else {\n                returned.print(output);\n            }\n        } else {\n            print_braced(self, output);\n        }\n        if (needs_parens) { output.print(\")\"); }\n        output.gc_scope(self);\n    });\n\n    /* -----[ exits ]----- */\n    AST_Exit.DEFMETHOD(\"_do_print\", function(output, kind) {\n        output.print(kind);\n        if (this.value) {\n            output.space();\n            const comments = this.value.start.comments_before;\n            if (comments && comments.length && !output.printed_comments.has(comments)) {\n                output.print(\"(\");\n                this.value.print(output);\n                output.print(\")\");\n            } else {\n                this.value.print(output);\n            }\n        }\n        output.semicolon();\n    });\n    DEFPRINT(AST_Return, function(self, output) {\n        self._do_print(output, \"return\");\n    });\n    DEFPRINT(AST_Throw, function(self, output) {\n        self._do_print(output, \"throw\");\n    });\n\n    /* -----[ yield ]----- */\n\n    DEFPRINT(AST_Yield, function(self, output) {\n        var star = self.is_star ? \"*\" : \"\";\n        output.print(\"yield\" + star);\n        if (self.expression) {\n            output.space();\n            self.expression.print(output);\n        }\n    });\n\n    DEFPRINT(AST_Await, function(self, output) {\n        output.print(\"await\");\n        output.space();\n        var e = self.expression;\n        var parens = !(\n               e instanceof AST_Call\n            || e instanceof AST_SymbolRef\n            || e instanceof AST_PropAccess\n            || e instanceof AST_Unary\n            || e instanceof AST_Constant\n            || e instanceof AST_Await\n            || e instanceof AST_Object\n        );\n        if (parens) output.print(\"(\");\n        self.expression.print(output);\n        if (parens) output.print(\")\");\n    });\n\n    /* -----[ loop control ]----- */\n    AST_LoopControl.DEFMETHOD(\"_do_print\", function(output, kind) {\n        output.print(kind);\n        if (this.label) {\n            output.space();\n            this.label.print(output);\n        }\n        output.semicolon();\n    });\n    DEFPRINT(AST_Break, function(self, output) {\n        self._do_print(output, \"break\");\n    });\n    DEFPRINT(AST_Continue, function(self, output) {\n        self._do_print(output, \"continue\");\n    });\n\n    /* -----[ if ]----- */\n    function make_then(self, output) {\n        var b = self.body;\n        if (output.option(\"braces\")\n            || output.option(\"ie8\") && b instanceof AST_Do)\n            return make_block(b, output);\n        // The squeezer replaces \"block\"-s that contain only a single\n        // statement with the statement itself; technically, the AST\n        // is correct, but this can create problems when we output an\n        // IF having an ELSE clause where the THEN clause ends in an\n        // IF *without* an ELSE block (then the outer ELSE would refer\n        // to the inner IF).  This function checks for this case and\n        // adds the block braces if needed.\n        if (!b) return output.force_semicolon();\n        while (true) {\n            if (b instanceof AST_If) {\n                if (!b.alternative) {\n                    make_block(self.body, output);\n                    return;\n                }\n                b = b.alternative;\n            } else if (b instanceof AST_StatementWithBody) {\n                b = b.body;\n            } else break;\n        }\n        print_maybe_braced_body(self.body, output);\n    }\n    DEFPRINT(AST_If, function(self, output) {\n        output.print(\"if\");\n        output.space();\n        output.with_parens(function() {\n            self.condition.print(output);\n        });\n        output.space();\n        if (self.alternative) {\n            make_then(self, output);\n            output.space();\n            output.print(\"else\");\n            output.space();\n            if (self.alternative instanceof AST_If)\n                self.alternative.print(output);\n            else\n                print_maybe_braced_body(self.alternative, output);\n        } else {\n            self._do_print_body(output);\n        }\n    });\n\n    /* -----[ switch ]----- */\n    DEFPRINT(AST_Switch, function(self, output) {\n        output.print(\"switch\");\n        output.space();\n        output.with_parens(function() {\n            self.expression.print(output);\n        });\n        output.space();\n        var last = self.body.length - 1;\n        if (last < 0) print_braced_empty(self, output);\n        else output.with_block(function() {\n            self.body.forEach(function(branch, i) {\n                output.indent(true);\n                branch.print(output);\n                if (i < last && branch.body.length > 0)\n                    output.newline();\n            });\n        });\n    });\n    AST_SwitchBranch.DEFMETHOD(\"_do_print_body\", function(output) {\n        output.newline();\n        this.body.forEach(function(stmt) {\n            output.indent();\n            stmt.print(output);\n            output.newline();\n        });\n    });\n    DEFPRINT(AST_Default, function(self, output) {\n        output.print(\"default:\");\n        self._do_print_body(output);\n    });\n    DEFPRINT(AST_Case, function(self, output) {\n        output.print(\"case\");\n        output.space();\n        self.expression.print(output);\n        output.print(\":\");\n        self._do_print_body(output);\n    });\n\n    /* -----[ exceptions ]----- */\n    DEFPRINT(AST_Try, function(self, output) {\n        output.print(\"try\");\n        output.space();\n        self.body.print(output);\n        if (self.bcatch) {\n            output.space();\n            self.bcatch.print(output);\n        }\n        if (self.bfinally) {\n            output.space();\n            self.bfinally.print(output);\n        }\n    });\n    DEFPRINT(AST_TryBlock, function(self, output) {\n        print_braced(self, output);\n    });\n    DEFPRINT(AST_Catch, function(self, output) {\n        output.print(\"catch\");\n        if (self.argname) {\n            output.space();\n            output.with_parens(function() {\n                self.argname.print(output);\n            });\n        }\n        output.space();\n        print_braced(self, output);\n    });\n    DEFPRINT(AST_Finally, function(self, output) {\n        output.print(\"finally\");\n        output.space();\n        print_braced(self, output);\n    });\n\n    /* -----[ var/const ]----- */\n    AST_Definitions.DEFMETHOD(\"_do_print\", function(output, kind) {\n        output.print(kind);\n        output.space();\n        this.definitions.forEach(function(def, i) {\n            if (i) output.comma();\n            def.print(output);\n        });\n        var p = output.parent();\n        var in_for = p instanceof AST_For || p instanceof AST_ForIn;\n        var output_semicolon = !in_for || p && p.init !== this;\n        if (output_semicolon)\n            output.semicolon();\n    });\n    DEFPRINT(AST_Let, function(self, output) {\n        self._do_print(output, \"let\");\n    });\n    DEFPRINT(AST_Var, function(self, output) {\n        self._do_print(output, \"var\");\n    });\n    DEFPRINT(AST_Const, function(self, output) {\n        self._do_print(output, \"const\");\n    });\n    DEFPRINT(AST_Import, function(self, output) {\n        output.print(\"import\");\n        output.space();\n        if (self.imported_name) {\n            self.imported_name.print(output);\n        }\n        if (self.imported_name && self.imported_names) {\n            output.print(\",\");\n            output.space();\n        }\n        if (self.imported_names) {\n            if (self.imported_names.length === 1 &&\n                self.imported_names[0].foreign_name.name === \"*\" &&\n                !self.imported_names[0].foreign_name.quote) {\n                self.imported_names[0].print(output);\n            } else {\n                output.print(\"{\");\n                self.imported_names.forEach(function (name_import, i) {\n                    output.space();\n                    name_import.print(output);\n                    if (i < self.imported_names.length - 1) {\n                        output.print(\",\");\n                    }\n                });\n                output.space();\n                output.print(\"}\");\n            }\n        }\n        if (self.imported_name || self.imported_names) {\n            output.space();\n            output.print(\"from\");\n            output.space();\n        }\n        self.module_name.print(output);\n        if (self.assert_clause) {\n            output.print(\"assert\");\n            self.assert_clause.print(output);\n        }\n        output.semicolon();\n    });\n    DEFPRINT(AST_ImportMeta, function(self, output) {\n        output.print(\"import.meta\");\n    });\n\n    DEFPRINT(AST_NameMapping, function(self, output) {\n        var is_import = output.parent() instanceof AST_Import;\n        var definition = self.name.definition();\n        var foreign_name = self.foreign_name;\n        var names_are_different =\n            (definition && definition.mangled_name || self.name.name) !==\n            foreign_name.name;\n        if (!names_are_different &&\n            foreign_name.name === \"*\" &&\n            foreign_name.quote != self.name.quote) {\n                // export * as \"*\"\n            names_are_different = true;\n        }\n        var foreign_name_is_name = foreign_name.quote == null;\n        if (names_are_different) {\n            if (is_import) {\n                if (foreign_name_is_name) {\n                    output.print(foreign_name.name);\n                } else {\n                    output.print_string(foreign_name.name, foreign_name.quote);\n                }\n            } else {\n                if (self.name.quote == null) {\n                    self.name.print(output);\n                } else {\n                    output.print_string(self.name.name, self.name.quote);\n                }\n                \n            }\n            output.space();\n            output.print(\"as\");\n            output.space();\n            if (is_import) {\n                self.name.print(output);\n            } else {\n                if (foreign_name_is_name) {\n                    output.print(foreign_name.name);\n                } else {\n                    output.print_string(foreign_name.name, foreign_name.quote);\n                }\n            }\n        } else {\n            if (self.name.quote == null) {\n                self.name.print(output);\n            } else {\n                output.print_string(self.name.name, self.name.quote);\n            }\n        }\n    });\n\n    DEFPRINT(AST_Export, function(self, output) {\n        output.print(\"export\");\n        output.space();\n        if (self.is_default) {\n            output.print(\"default\");\n            output.space();\n        }\n        if (self.exported_names) {\n            if (self.exported_names.length === 1 &&\n                self.exported_names[0].name.name === \"*\" &&\n                !self.exported_names[0].name.quote) {\n                    self.exported_names[0].print(output);\n            } else {\n                output.print(\"{\");\n                self.exported_names.forEach(function(name_export, i) {\n                    output.space();\n                    name_export.print(output);\n                    if (i < self.exported_names.length - 1) {\n                        output.print(\",\");\n                    }\n                });\n                output.space();\n                output.print(\"}\");\n            }\n        } else if (self.exported_value) {\n            self.exported_value.print(output);\n        } else if (self.exported_definition) {\n            self.exported_definition.print(output);\n            if (self.exported_definition instanceof AST_Definitions) return;\n        }\n        if (self.module_name) {\n            output.space();\n            output.print(\"from\");\n            output.space();\n            self.module_name.print(output);\n        }\n        if (self.assert_clause) {\n            output.print(\"assert\");\n            self.assert_clause.print(output);\n        }\n        if (self.exported_value\n                && !(self.exported_value instanceof AST_Defun ||\n                    self.exported_value instanceof AST_Function ||\n                    self.exported_value instanceof AST_Class)\n            || self.module_name\n            || self.exported_names\n        ) {\n            output.semicolon();\n        }\n    });\n\n    function parenthesize_for_noin(node, output, noin) {\n        var parens = false;\n        // need to take some precautions here:\n        //    https://github.com/mishoo/UglifyJS2/issues/60\n        if (noin) {\n            parens = walk(node, node => {\n                // Don't go into scopes -- except arrow functions:\n                // https://github.com/terser/terser/issues/1019#issuecomment-877642607\n                if (node instanceof AST_Scope && !(node instanceof AST_Arrow)) {\n                    return true;\n                }\n                if (\n                    node instanceof AST_Binary && node.operator == \"in\"\n                    || node instanceof AST_PrivateIn\n                ) {\n                    return walk_abort;  // makes walk() return true\n                }\n            });\n        }\n        node.print(output, parens);\n    }\n\n    DEFPRINT(AST_VarDef, function(self, output) {\n        self.name.print(output);\n        if (self.value) {\n            output.space();\n            output.print(\"=\");\n            output.space();\n            var p = output.parent(1);\n            var noin = p instanceof AST_For || p instanceof AST_ForIn;\n            parenthesize_for_noin(self.value, output, noin);\n        }\n    });\n\n    /* -----[ other expressions ]----- */\n    DEFPRINT(AST_Call, function(self, output) {\n        self.expression.print(output);\n        if (self instanceof AST_New && self.args.length === 0)\n            return;\n        if (self.expression instanceof AST_Call || self.expression instanceof AST_Lambda) {\n            output.add_mapping(self.start);\n        }\n        if (self.optional) output.print(\"?.\");\n        output.with_parens(function() {\n            self.args.forEach(function(expr, i) {\n                if (i) output.comma();\n                expr.print(output);\n            });\n        });\n    });\n    DEFPRINT(AST_New, function(self, output) {\n        output.print(\"new\");\n        output.space();\n        AST_Call.prototype._codegen(self, output);\n    });\n\n    AST_Sequence.DEFMETHOD(\"_do_print\", function(output) {\n        this.expressions.forEach(function(node, index) {\n            if (index > 0) {\n                output.comma();\n                if (output.should_break()) {\n                    output.newline();\n                    output.indent();\n                }\n            }\n            node.print(output);\n        });\n    });\n    DEFPRINT(AST_Sequence, function(self, output) {\n        self._do_print(output);\n        // var p = output.parent();\n        // if (p instanceof AST_Statement) {\n        //     output.with_indent(output.next_indent(), function(){\n        //         self._do_print(output);\n        //     });\n        // } else {\n        //     self._do_print(output);\n        // }\n    });\n    DEFPRINT(AST_Dot, function(self, output) {\n        var expr = self.expression;\n        expr.print(output);\n        var prop = self.property;\n        var print_computed = ALL_RESERVED_WORDS.has(prop)\n            ? output.option(\"ie8\")\n            : !is_identifier_string(\n                prop,\n                output.option(\"ecma\") >= 2015 && !output.option(\"safari10\")\n            );\n\n        if (self.optional) output.print(\"?.\");\n\n        if (print_computed) {\n            output.print(\"[\");\n            output.add_mapping(self.end);\n            output.print_string(prop);\n            output.print(\"]\");\n        } else {\n            if (expr instanceof AST_Number && expr.getValue() >= 0) {\n                if (!/[xa-f.)]/i.test(output.last())) {\n                    output.print(\".\");\n                }\n            }\n            if (!self.optional) output.print(\".\");\n            // the name after dot would be mapped about here.\n            output.add_mapping(self.end);\n            output.print_name(prop);\n        }\n    });\n    DEFPRINT(AST_DotHash, function(self, output) {\n        var expr = self.expression;\n        expr.print(output);\n        var prop = self.property;\n\n        if (self.optional) output.print(\"?\");\n        output.print(\".#\");\n        output.add_mapping(self.end);\n        output.print_name(prop);\n    });\n    DEFPRINT(AST_Sub, function(self, output) {\n        self.expression.print(output);\n        if (self.optional) output.print(\"?.\");\n        output.print(\"[\");\n        self.property.print(output);\n        output.print(\"]\");\n    });\n    DEFPRINT(AST_Chain, function(self, output) {\n        self.expression.print(output);\n    });\n    DEFPRINT(AST_UnaryPrefix, function(self, output) {\n        var op = self.operator;\n        if (op === \"--\" && output.last().endsWith(\"!\")) {\n            // avoid printing \"<!--\"\n            output.print(\" \");\n        }\n        output.print(op);\n        if (/^[a-z]/i.test(op)\n            || (/[+-]$/.test(op)\n                && self.expression instanceof AST_UnaryPrefix\n                && /^[+-]/.test(self.expression.operator))) {\n            output.space();\n        }\n        self.expression.print(output);\n    });\n    DEFPRINT(AST_UnaryPostfix, function(self, output) {\n        self.expression.print(output);\n        output.print(self.operator);\n    });\n    DEFPRINT(AST_Binary, function(self, output) {\n        var op = self.operator;\n        self.left.print(output);\n        if (op[0] == \">\" /* \">>\" \">>>\" \">\" \">=\" */\n            && output.last().endsWith(\"--\")) {\n            // space is mandatory to avoid outputting -->\n            output.print(\" \");\n        } else {\n            // the space is optional depending on \"beautify\"\n            output.space();\n        }\n        output.print(op);\n        output.space();\n        self.right.print(output);\n    });\n    DEFPRINT(AST_Conditional, function(self, output) {\n        self.condition.print(output);\n        output.space();\n        output.print(\"?\");\n        output.space();\n        self.consequent.print(output);\n        output.space();\n        output.colon();\n        self.alternative.print(output);\n    });\n\n    /* -----[ literals ]----- */\n    DEFPRINT(AST_Array, function(self, output) {\n        output.with_square(function() {\n            var a = self.elements, len = a.length;\n            if (len > 0) output.space();\n            a.forEach(function(exp, i) {\n                if (i) output.comma();\n                exp.print(output);\n                // If the final element is a hole, we need to make sure it\n                // doesn't look like a trailing comma, by inserting an actual\n                // trailing comma.\n                if (i === len - 1 && exp instanceof AST_Hole)\n                  output.comma();\n            });\n            if (len > 0) output.space();\n        });\n    });\n    DEFPRINT(AST_Object, function(self, output) {\n        if (self.properties.length > 0) output.with_block(function() {\n            self.properties.forEach(function(prop, i) {\n                if (i) {\n                    output.print(\",\");\n                    output.newline();\n                }\n                output.indent();\n                prop.print(output);\n            });\n            output.newline();\n        });\n        else print_braced_empty(self, output);\n    });\n    DEFPRINT(AST_Class, function(self, output) {\n        output.print(\"class\");\n        output.space();\n        if (self.name) {\n            self.name.print(output);\n            output.space();\n        }\n        if (self.extends) {\n            var parens = (\n                   !(self.extends instanceof AST_SymbolRef)\n                && !(self.extends instanceof AST_PropAccess)\n                && !(self.extends instanceof AST_ClassExpression)\n                && !(self.extends instanceof AST_Function)\n            );\n            output.print(\"extends\");\n            if (parens) {\n                output.print(\"(\");\n            } else {\n                output.space();\n            }\n            self.extends.print(output);\n            if (parens) {\n                output.print(\")\");\n            } else {\n                output.space();\n            }\n        }\n        if (self.properties.length > 0) output.with_block(function() {\n            self.properties.forEach(function(prop, i) {\n                if (i) {\n                    output.newline();\n                }\n                output.indent();\n                prop.print(output);\n            });\n            output.newline();\n        });\n        else output.print(\"{}\");\n    });\n    DEFPRINT(AST_NewTarget, function(self, output) {\n        output.print(\"new.target\");\n    });\n\n    /** Prints a prop name. Returns whether it can be used as a shorthand. */\n    function print_property_name(key, quote, output) {\n        if (output.option(\"quote_keys\")) {\n            output.print_string(key);\n            return false;\n        }\n        if (\"\" + +key == key && key >= 0) {\n            if (output.option(\"keep_numbers\")) {\n                output.print(key);\n                return false;\n            }\n            output.print(make_num(key));\n            return false;\n        }\n        var print_string = ALL_RESERVED_WORDS.has(key)\n            ? output.option(\"ie8\")\n            : (\n                output.option(\"ecma\") < 2015 || output.option(\"safari10\")\n                    ? !is_basic_identifier_string(key)\n                    : !is_identifier_string(key, true)\n            );\n        if (print_string || (quote && output.option(\"keep_quoted_props\"))) {\n            output.print_string(key, quote);\n            return false;\n        }\n        output.print_name(key);\n        return true;\n    }\n\n    DEFPRINT(AST_ObjectKeyVal, function(self, output) {\n        function get_name(self) {\n            var def = self.definition();\n            return def ? def.mangled_name || def.name : self.name;\n        }\n\n        const try_shorthand = output.option(\"shorthand\") && !(self.key instanceof AST_Node);\n        if (\n            try_shorthand\n            && self.value instanceof AST_Symbol\n            && get_name(self.value) === self.key\n            && !ALL_RESERVED_WORDS.has(self.key)\n        ) {\n            const was_shorthand = print_property_name(self.key, self.quote, output);\n            if (!was_shorthand) {\n                output.colon();\n                self.value.print(output);\n            }\n        } else if (\n            try_shorthand\n            && self.value instanceof AST_DefaultAssign\n            && self.value.left instanceof AST_Symbol\n            && get_name(self.value.left) === self.key\n        ) {\n            const was_shorthand = print_property_name(self.key, self.quote, output);\n            if (!was_shorthand) {\n                output.colon();\n                self.value.left.print(output);\n            }\n            output.space();\n            output.print(\"=\");\n            output.space();\n            self.value.right.print(output);\n        } else {\n            if (!(self.key instanceof AST_Node)) {\n                print_property_name(self.key, self.quote, output);\n            } else {\n                output.with_square(function() {\n                    self.key.print(output);\n                });\n            }\n            output.colon();\n            self.value.print(output);\n        }\n    });\n    DEFPRINT(AST_ClassPrivateProperty, (self, output) => {\n        if (self.static) {\n            output.print(\"static\");\n            output.space();\n        }\n\n        output.print(\"#\");\n        \n        print_property_name(self.key.name, self.quote, output);\n\n        if (self.value) {\n            output.print(\"=\");\n            self.value.print(output);\n        }\n\n        output.semicolon();\n    });\n    DEFPRINT(AST_ClassProperty, (self, output) => {\n        if (self.static) {\n            output.print(\"static\");\n            output.space();\n        }\n\n        if (self.key instanceof AST_SymbolClassProperty) {\n            print_property_name(self.key.name, self.quote, output);\n        } else {\n            output.print(\"[\");\n            self.key.print(output);\n            output.print(\"]\");\n        }\n\n        if (self.value) {\n            output.print(\"=\");\n            self.value.print(output);\n        }\n\n        output.semicolon();\n    });\n    AST_ObjectProperty.DEFMETHOD(\"_print_getter_setter\", function(type, is_private, output) {\n        var self = this;\n        if (self.static) {\n            output.print(\"static\");\n            output.space();\n        }\n        if (type) {\n            output.print(type);\n            output.space();\n        }\n        if (self.key instanceof AST_SymbolMethod) {\n            if (is_private) output.print(\"#\");\n            print_property_name(self.key.name, self.quote, output);\n            self.key.add_source_map(output);\n        } else {\n            output.with_square(function() {\n                self.key.print(output);\n            });\n        }\n        self.value._do_print(output, true);\n    });\n    DEFPRINT(AST_ObjectSetter, function(self, output) {\n        self._print_getter_setter(\"set\", false, output);\n    });\n    DEFPRINT(AST_ObjectGetter, function(self, output) {\n        self._print_getter_setter(\"get\", false, output);\n    });\n    DEFPRINT(AST_PrivateSetter, function(self, output) {\n        self._print_getter_setter(\"set\", true, output);\n    });\n    DEFPRINT(AST_PrivateGetter, function(self, output) {\n        self._print_getter_setter(\"get\", true, output);\n    });\n    DEFPRINT(AST_PrivateMethod, function(self, output) {\n        var type;\n        if (self.is_generator && self.async) {\n            type = \"async*\";\n        } else if (self.is_generator) {\n            type = \"*\";\n        } else if (self.async) {\n            type = \"async\";\n        }\n        self._print_getter_setter(type, true, output);\n    });\n    DEFPRINT(AST_PrivateIn, function(self, output) {\n        self.key.print(output);\n        output.space();\n        output.print(\"in\");\n        output.space();\n        self.value.print(output);\n    });\n    DEFPRINT(AST_SymbolPrivateProperty, function(self, output) {\n        output.print(\"#\" + self.name);\n    });\n    DEFPRINT(AST_ConciseMethod, function(self, output) {\n        var type;\n        if (self.is_generator && self.async) {\n            type = \"async*\";\n        } else if (self.is_generator) {\n            type = \"*\";\n        } else if (self.async) {\n            type = \"async\";\n        }\n        self._print_getter_setter(type, false, output);\n    });\n    DEFPRINT(AST_ClassStaticBlock, function (self, output) {\n        output.print(\"static\");\n        output.space();\n        print_braced(self, output);\n    });\n    AST_Symbol.DEFMETHOD(\"_do_print\", function(output) {\n        var def = this.definition();\n        output.print_name(def ? def.mangled_name || def.name : this.name);\n    });\n    DEFPRINT(AST_Symbol, function (self, output) {\n        self._do_print(output);\n    });\n    DEFPRINT(AST_Hole, noop);\n    DEFPRINT(AST_This, function(self, output) {\n        output.print(\"this\");\n    });\n    DEFPRINT(AST_Super, function(self, output) {\n        output.print(\"super\");\n    });\n    DEFPRINT(AST_Constant, function(self, output) {\n        output.print(self.getValue());\n    });\n    DEFPRINT(AST_String, function(self, output) {\n        output.print_string(self.getValue(), self.quote, output.in_directive);\n    });\n    DEFPRINT(AST_Number, function(self, output) {\n        if ((output.option(\"keep_numbers\") || output.use_asm) && self.raw) {\n            output.print(self.raw);\n        } else {\n            output.print(make_num(self.getValue()));\n        }\n    });\n    DEFPRINT(AST_BigInt, function(self, output) {\n        output.print(self.getValue() + \"n\");\n    });\n\n    const r_slash_script = /(<\\s*\\/\\s*script)/i;\n    const r_starts_with_script = /^\\s*script/i;\n    const slash_script_replace = (_, $1) => $1.replace(\"/\", \"\\\\/\");\n    DEFPRINT(AST_RegExp, function(self, output) {\n        let { source, flags } = self.getValue();\n        source = regexp_source_fix(source);\n        flags = flags ? sort_regexp_flags(flags) : \"\";\n\n        // Avoid outputting end of script tag\n        source = source.replace(r_slash_script, slash_script_replace);\n        if (r_starts_with_script.test(source) && output.last().endsWith(\"<\")) {\n            output.print(\" \");\n        }\n\n        output.print(output.to_utf8(`/${source}/${flags}`, false, true));\n\n        const parent = output.parent();\n        if (\n            parent instanceof AST_Binary\n            && /^\\w/.test(parent.operator)\n            && parent.left === self\n        ) {\n            output.print(\" \");\n        }\n    });\n\n    /** if, for, while, may or may not have braces surrounding its body */\n    function print_maybe_braced_body(stat, output) {\n        if (output.option(\"braces\")) {\n            make_block(stat, output);\n        } else {\n            if (!stat || stat instanceof AST_EmptyStatement)\n                output.force_semicolon();\n            else if (stat instanceof AST_Let || stat instanceof AST_Const || stat instanceof AST_Class)\n                make_block(stat, output);\n            else\n                stat.print(output);\n        }\n    }\n\n    function best_of(a) {\n        var best = a[0], len = best.length;\n        for (var i = 1; i < a.length; ++i) {\n            if (a[i].length < len) {\n                best = a[i];\n                len = best.length;\n            }\n        }\n        return best;\n    }\n\n    function make_num(num) {\n        var str = num.toString(10).replace(/^0\\./, \".\").replace(\"e+\", \"e\");\n        var candidates = [ str ];\n        if (Math.floor(num) === num) {\n            if (num < 0) {\n                candidates.push(\"-0x\" + (-num).toString(16).toLowerCase());\n            } else {\n                candidates.push(\"0x\" + num.toString(16).toLowerCase());\n            }\n        }\n        var match, len, digits;\n        if (match = /^\\.0+/.exec(str)) {\n            len = match[0].length;\n            digits = str.slice(len);\n            candidates.push(digits + \"e-\" + (digits.length + len - 1));\n        } else if (match = /0+$/.exec(str)) {\n            len = match[0].length;\n            candidates.push(str.slice(0, -len) + \"e\" + len);\n        } else if (match = /^(\\d)\\.(\\d+)e(-?\\d+)$/.exec(str)) {\n            candidates.push(match[1] + match[2] + \"e\" + (match[3] - match[2].length));\n        }\n        return best_of(candidates);\n    }\n\n    function make_block(stmt, output) {\n        if (!stmt || stmt instanceof AST_EmptyStatement)\n            output.print(\"{}\");\n        else if (stmt instanceof AST_BlockStatement)\n            stmt.print(output);\n        else output.with_block(function() {\n            output.indent();\n            stmt.print(output);\n            output.newline();\n        });\n    }\n\n    /* -----[ source map generators ]----- */\n\n    function DEFMAP(nodetype, generator) {\n        nodetype.forEach(function(nodetype) {\n            nodetype.DEFMETHOD(\"add_source_map\", generator);\n        });\n    }\n\n    DEFMAP([\n        // We could easily add info for ALL nodes, but it seems to me that\n        // would be quite wasteful, hence this noop in the base class.\n        AST_Node,\n        // since the label symbol will mark it\n        AST_LabeledStatement,\n        AST_Toplevel,\n    ], noop);\n\n    // XXX: I'm not exactly sure if we need it for all of these nodes,\n    // or if we should add even more.\n    DEFMAP([\n        AST_Array,\n        AST_BlockStatement,\n        AST_Catch,\n        AST_Class,\n        AST_Constant,\n        AST_Debugger,\n        AST_Definitions,\n        AST_Directive,\n        AST_Finally,\n        AST_Jump,\n        AST_Lambda,\n        AST_New,\n        AST_Object,\n        AST_StatementWithBody,\n        AST_Symbol,\n        AST_Switch,\n        AST_SwitchBranch,\n        AST_TemplateString,\n        AST_TemplateSegment,\n        AST_Try,\n    ], function(output) {\n        output.add_mapping(this.start);\n    });\n\n    DEFMAP([\n        AST_ObjectGetter,\n        AST_ObjectSetter,\n        AST_PrivateGetter,\n        AST_PrivateSetter,\n        AST_ConciseMethod,\n        AST_PrivateMethod,\n    ], function(output) {\n        output.add_mapping(this.start, false /*name handled below*/);\n    });\n\n    DEFMAP([\n        AST_SymbolMethod,\n        AST_SymbolPrivateProperty\n    ], function(output) {\n        const tok_type = this.end && this.end.type;\n        if (tok_type === \"name\" || tok_type === \"privatename\") {\n            output.add_mapping(this.end, this.name);\n        } else {\n            output.add_mapping(this.end);\n        }\n    });\n\n    DEFMAP([ AST_ObjectProperty ], function(output) {\n        output.add_mapping(this.start, this.key);\n    });\n})();\n\nconst shallow_cmp = (node1, node2) => {\n    return (\n        node1 === null && node2 === null\n        || node1.TYPE === node2.TYPE && node1.shallow_cmp(node2)\n    );\n};\n\nconst equivalent_to = (tree1, tree2) => {\n    if (!shallow_cmp(tree1, tree2)) return false;\n    const walk_1_state = [tree1];\n    const walk_2_state = [tree2];\n\n    const walk_1_push = walk_1_state.push.bind(walk_1_state);\n    const walk_2_push = walk_2_state.push.bind(walk_2_state);\n\n    while (walk_1_state.length && walk_2_state.length) {\n        const node_1 = walk_1_state.pop();\n        const node_2 = walk_2_state.pop();\n\n        if (!shallow_cmp(node_1, node_2)) return false;\n\n        node_1._children_backwards(walk_1_push);\n        node_2._children_backwards(walk_2_push);\n\n        if (walk_1_state.length !== walk_2_state.length) {\n            // Different number of children\n            return false;\n        }\n    }\n\n    return walk_1_state.length == 0 && walk_2_state.length == 0;\n};\n\nconst pass_through = () => true;\n\nAST_Node.prototype.shallow_cmp = function () {\n    throw new Error(\"did not find a shallow_cmp function for \" + this.constructor.name);\n};\n\nAST_Debugger.prototype.shallow_cmp = pass_through;\n\nAST_Directive.prototype.shallow_cmp = function(other) {\n    return this.value === other.value;\n};\n\nAST_SimpleStatement.prototype.shallow_cmp = pass_through;\n\nAST_Block.prototype.shallow_cmp = pass_through;\n\nAST_EmptyStatement.prototype.shallow_cmp = pass_through;\n\nAST_LabeledStatement.prototype.shallow_cmp = function(other) {\n    return this.label.name === other.label.name;\n};\n\nAST_Do.prototype.shallow_cmp = pass_through;\n\nAST_While.prototype.shallow_cmp = pass_through;\n\nAST_For.prototype.shallow_cmp = function(other) {\n    return (this.init == null ? other.init == null : this.init === other.init) && (this.condition == null ? other.condition == null : this.condition === other.condition) && (this.step == null ? other.step == null : this.step === other.step);\n};\n\nAST_ForIn.prototype.shallow_cmp = pass_through;\n\nAST_ForOf.prototype.shallow_cmp = pass_through;\n\nAST_With.prototype.shallow_cmp = pass_through;\n\nAST_Toplevel.prototype.shallow_cmp = pass_through;\n\nAST_Expansion.prototype.shallow_cmp = pass_through;\n\nAST_Lambda.prototype.shallow_cmp = function(other) {\n    return this.is_generator === other.is_generator && this.async === other.async;\n};\n\nAST_Destructuring.prototype.shallow_cmp = function(other) {\n    return this.is_array === other.is_array;\n};\n\nAST_PrefixedTemplateString.prototype.shallow_cmp = pass_through;\n\nAST_TemplateString.prototype.shallow_cmp = pass_through;\n\nAST_TemplateSegment.prototype.shallow_cmp = function(other) {\n    return this.value === other.value;\n};\n\nAST_Jump.prototype.shallow_cmp = pass_through;\n\nAST_LoopControl.prototype.shallow_cmp = pass_through;\n\nAST_Await.prototype.shallow_cmp = pass_through;\n\nAST_Yield.prototype.shallow_cmp = function(other) {\n    return this.is_star === other.is_star;\n};\n\nAST_If.prototype.shallow_cmp = function(other) {\n    return this.alternative == null ? other.alternative == null : this.alternative === other.alternative;\n};\n\nAST_Switch.prototype.shallow_cmp = pass_through;\n\nAST_SwitchBranch.prototype.shallow_cmp = pass_through;\n\nAST_Try.prototype.shallow_cmp = function(other) {\n    return (this.body === other.body) && (this.bcatch == null ? other.bcatch == null : this.bcatch === other.bcatch) && (this.bfinally == null ? other.bfinally == null : this.bfinally === other.bfinally);\n};\n\nAST_Catch.prototype.shallow_cmp = function(other) {\n    return this.argname == null ? other.argname == null : this.argname === other.argname;\n};\n\nAST_Finally.prototype.shallow_cmp = pass_through;\n\nAST_Definitions.prototype.shallow_cmp = pass_through;\n\nAST_VarDef.prototype.shallow_cmp = function(other) {\n    return this.value == null ? other.value == null : this.value === other.value;\n};\n\nAST_NameMapping.prototype.shallow_cmp = pass_through;\n\nAST_Import.prototype.shallow_cmp = function(other) {\n    return (this.imported_name == null ? other.imported_name == null : this.imported_name === other.imported_name) && (this.imported_names == null ? other.imported_names == null : this.imported_names === other.imported_names);\n};\n\nAST_ImportMeta.prototype.shallow_cmp = pass_through;\n\nAST_Export.prototype.shallow_cmp = function(other) {\n    return (this.exported_definition == null ? other.exported_definition == null : this.exported_definition === other.exported_definition) && (this.exported_value == null ? other.exported_value == null : this.exported_value === other.exported_value) && (this.exported_names == null ? other.exported_names == null : this.exported_names === other.exported_names) && this.module_name === other.module_name && this.is_default === other.is_default;\n};\n\nAST_Call.prototype.shallow_cmp = pass_through;\n\nAST_Sequence.prototype.shallow_cmp = pass_through;\n\nAST_PropAccess.prototype.shallow_cmp = pass_through;\n\nAST_Chain.prototype.shallow_cmp = pass_through;\n\nAST_Dot.prototype.shallow_cmp = function(other) {\n    return this.property === other.property;\n};\n\nAST_DotHash.prototype.shallow_cmp = function(other) {\n    return this.property === other.property;\n};\n\nAST_Unary.prototype.shallow_cmp = function(other) {\n    return this.operator === other.operator;\n};\n\nAST_Binary.prototype.shallow_cmp = function(other) {\n    return this.operator === other.operator;\n};\n\nAST_Conditional.prototype.shallow_cmp = pass_through;\n\nAST_Array.prototype.shallow_cmp = pass_through;\n\nAST_Object.prototype.shallow_cmp = pass_through;\n\nAST_ObjectProperty.prototype.shallow_cmp = pass_through;\n\nAST_ObjectKeyVal.prototype.shallow_cmp = function(other) {\n    return this.key === other.key;\n};\n\nAST_ObjectSetter.prototype.shallow_cmp = function(other) {\n    return this.static === other.static;\n};\n\nAST_ObjectGetter.prototype.shallow_cmp = function(other) {\n    return this.static === other.static;\n};\n\nAST_ConciseMethod.prototype.shallow_cmp = function(other) {\n    return this.static === other.static && this.is_generator === other.is_generator && this.async === other.async;\n};\n\nAST_Class.prototype.shallow_cmp = function(other) {\n    return (this.name == null ? other.name == null : this.name === other.name) && (this.extends == null ? other.extends == null : this.extends === other.extends);\n};\n\nAST_ClassProperty.prototype.shallow_cmp = function(other) {\n    return this.static === other.static;\n};\n\nAST_Symbol.prototype.shallow_cmp = function(other) {\n    return this.name === other.name;\n};\n\nAST_NewTarget.prototype.shallow_cmp = pass_through;\n\nAST_This.prototype.shallow_cmp = pass_through;\n\nAST_Super.prototype.shallow_cmp = pass_through;\n\nAST_String.prototype.shallow_cmp = function(other) {\n    return this.value === other.value;\n};\n\nAST_Number.prototype.shallow_cmp = function(other) {\n    return this.value === other.value;\n};\n\nAST_BigInt.prototype.shallow_cmp = function(other) {\n    return this.value === other.value;\n};\n\nAST_RegExp.prototype.shallow_cmp = function (other) {\n    return (\n        this.value.flags === other.value.flags\n        && this.value.source === other.value.source\n    );\n};\n\nAST_Atom.prototype.shallow_cmp = pass_through;\n\n/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\nconst MASK_EXPORT_DONT_MANGLE = 1 << 0;\nconst MASK_EXPORT_WANT_MANGLE = 1 << 1;\n\nlet function_defs = null;\nlet unmangleable_names = null;\n/**\n * When defined, there is a function declaration somewhere that's inside of a block.\n * See https://tc39.es/ecma262/multipage/additional-ecmascript-features-for-web-browsers.html#sec-block-level-function-declarations-web-legacy-compatibility-semantics\n*/\nlet scopes_with_block_defuns = null;\n\nclass SymbolDef {\n    constructor(scope, orig, init) {\n        this.name = orig.name;\n        this.orig = [ orig ];\n        this.init = init;\n        this.eliminated = 0;\n        this.assignments = 0;\n        this.scope = scope;\n        this.replaced = 0;\n        this.global = false;\n        this.export = 0;\n        this.mangled_name = null;\n        this.undeclared = false;\n        this.id = SymbolDef.next_id++;\n        this.chained = false;\n        this.direct_access = false;\n        this.escaped = 0;\n        this.recursive_refs = 0;\n        this.references = [];\n        this.should_replace = undefined;\n        this.single_use = false;\n        this.fixed = false;\n        Object.seal(this);\n    }\n    fixed_value() {\n        if (!this.fixed || this.fixed instanceof AST_Node) return this.fixed;\n        return this.fixed();\n    }\n    unmangleable(options) {\n        if (!options) options = {};\n\n        if (\n            function_defs &&\n            function_defs.has(this.id) &&\n            keep_name(options.keep_fnames, this.orig[0].name)\n        ) return true;\n\n        return this.global && !options.toplevel\n            || (this.export & MASK_EXPORT_DONT_MANGLE)\n            || this.undeclared\n            || !options.eval && this.scope.pinned()\n            || (this.orig[0] instanceof AST_SymbolLambda\n                  || this.orig[0] instanceof AST_SymbolDefun) && keep_name(options.keep_fnames, this.orig[0].name)\n            || this.orig[0] instanceof AST_SymbolMethod\n            || (this.orig[0] instanceof AST_SymbolClass\n                  || this.orig[0] instanceof AST_SymbolDefClass) && keep_name(options.keep_classnames, this.orig[0].name);\n    }\n    mangle(options) {\n        const cache = options.cache && options.cache.props;\n        if (this.global && cache && cache.has(this.name)) {\n            this.mangled_name = cache.get(this.name);\n        } else if (!this.mangled_name && !this.unmangleable(options)) {\n            var s = this.scope;\n            var sym = this.orig[0];\n            if (options.ie8 && sym instanceof AST_SymbolLambda)\n                s = s.parent_scope;\n            const redefinition = redefined_catch_def(this);\n            this.mangled_name = redefinition\n                ? redefinition.mangled_name || redefinition.name\n                : s.next_mangled(options, this);\n            if (this.global && cache) {\n                cache.set(this.name, this.mangled_name);\n            }\n        }\n    }\n}\n\nSymbolDef.next_id = 1;\n\nfunction redefined_catch_def(def) {\n    if (def.orig[0] instanceof AST_SymbolCatch\n        && def.scope.is_block_scope()\n    ) {\n        return def.scope.get_defun_scope().variables.get(def.name);\n    }\n}\n\nAST_Scope.DEFMETHOD(\"figure_out_scope\", function(options, { parent_scope = null, toplevel = this } = {}) {\n    options = defaults(options, {\n        cache: null,\n        ie8: false,\n        safari10: false,\n        module: false,\n    });\n\n    if (!(toplevel instanceof AST_Toplevel)) {\n        throw new Error(\"Invalid toplevel scope\");\n    }\n\n    // pass 1: setup scope chaining and handle definitions\n    var scope = this.parent_scope = parent_scope;\n    var labels = new Map();\n    var defun = null;\n    var in_destructuring = null;\n    var for_scopes = [];\n    var tw = new TreeWalker((node, descend) => {\n        if (node.is_block_scope()) {\n            const save_scope = scope;\n            node.block_scope = scope = new AST_Scope(node);\n            scope._block_scope = true;\n            scope.init_scope_vars(save_scope);\n            scope.uses_with = save_scope.uses_with;\n            scope.uses_eval = save_scope.uses_eval;\n\n            if (options.safari10) {\n                if (node instanceof AST_For || node instanceof AST_ForIn || node instanceof AST_ForOf) {\n                    for_scopes.push(scope);\n                }\n            }\n\n            if (node instanceof AST_Switch) {\n                // XXX: HACK! Ensure the switch expression gets the correct scope (the parent scope) and the body gets the contained scope\n                // AST_Switch has a scope within the body, but it itself \"is a block scope\"\n                // This means the switched expression has to belong to the outer scope\n                // while the body inside belongs to the switch itself.\n                // This is pretty nasty and warrants an AST change\n                const the_block_scope = scope;\n                scope = save_scope;\n                node.expression.walk(tw);\n                scope = the_block_scope;\n                for (let i = 0; i < node.body.length; i++) {\n                    node.body[i].walk(tw);\n                }\n            } else {\n                descend();\n            }\n            scope = save_scope;\n            return true;\n        }\n        if (node instanceof AST_Destructuring) {\n            const save_destructuring = in_destructuring;\n            in_destructuring = node;\n            descend();\n            in_destructuring = save_destructuring;\n            return true;\n        }\n        if (node instanceof AST_Scope) {\n            node.init_scope_vars(scope);\n            var save_scope = scope;\n            var save_defun = defun;\n            var save_labels = labels;\n            defun = scope = node;\n            labels = new Map();\n            descend();\n            scope = save_scope;\n            defun = save_defun;\n            labels = save_labels;\n            return true;        // don't descend again in TreeWalker\n        }\n        if (node instanceof AST_LabeledStatement) {\n            var l = node.label;\n            if (labels.has(l.name)) {\n                throw new Error(string_template(\"Label {name} defined twice\", l));\n            }\n            labels.set(l.name, l);\n            descend();\n            labels.delete(l.name);\n            return true;        // no descend again\n        }\n        if (node instanceof AST_With) {\n            for (var s = scope; s; s = s.parent_scope)\n                s.uses_with = true;\n            return;\n        }\n        if (node instanceof AST_Symbol) {\n            node.scope = scope;\n        }\n        if (node instanceof AST_Label) {\n            node.thedef = node;\n            node.references = [];\n        }\n        if (node instanceof AST_SymbolLambda) {\n            defun.def_function(node, node.name == \"arguments\" ? undefined : defun);\n        } else if (node instanceof AST_SymbolDefun) {\n            // Careful here, the scope where this should be defined is\n            // the parent scope.  The reason is that we enter a new\n            // scope when we encounter the AST_Defun node (which is\n            // instanceof AST_Scope) but we get to the symbol a bit\n            // later.\n            const closest_scope = defun.parent_scope;\n\n            // In strict mode, function definitions are block-scoped\n            node.scope = tw.directives[\"use strict\"]\n                ? closest_scope\n                : closest_scope.get_defun_scope();\n\n            mark_export(node.scope.def_function(node, defun), 1);\n        } else if (node instanceof AST_SymbolClass) {\n            mark_export(defun.def_variable(node, defun), 1);\n        } else if (node instanceof AST_SymbolImport) {\n            scope.def_variable(node);\n        } else if (node instanceof AST_SymbolDefClass) {\n            // This deals with the name of the class being available\n            // inside the class.\n            mark_export((node.scope = defun.parent_scope).def_function(node, defun), 1);\n        } else if (\n            node instanceof AST_SymbolVar\n            || node instanceof AST_SymbolLet\n            || node instanceof AST_SymbolConst\n            || node instanceof AST_SymbolCatch\n        ) {\n            var def;\n            if (node instanceof AST_SymbolBlockDeclaration) {\n                def = scope.def_variable(node, null);\n            } else {\n                def = defun.def_variable(node, node.TYPE == \"SymbolVar\" ? null : undefined);\n            }\n            if (!def.orig.every((sym) => {\n                if (sym === node) return true;\n                if (node instanceof AST_SymbolBlockDeclaration) {\n                    return sym instanceof AST_SymbolLambda;\n                }\n                return !(sym instanceof AST_SymbolLet || sym instanceof AST_SymbolConst);\n            })) {\n                js_error(\n                    `\"${node.name}\" is redeclared`,\n                    node.start.file,\n                    node.start.line,\n                    node.start.col,\n                    node.start.pos\n                );\n            }\n            if (!(node instanceof AST_SymbolFunarg)) mark_export(def, 2);\n            if (defun !== scope) {\n                node.mark_enclosed();\n                var def = scope.find_variable(node);\n                if (node.thedef !== def) {\n                    node.thedef = def;\n                    node.reference();\n                }\n            }\n        } else if (node instanceof AST_LabelRef) {\n            var sym = labels.get(node.name);\n            if (!sym) throw new Error(string_template(\"Undefined label {name} [{line},{col}]\", {\n                name: node.name,\n                line: node.start.line,\n                col: node.start.col\n            }));\n            node.thedef = sym;\n        }\n        if (!(scope instanceof AST_Toplevel) && (node instanceof AST_Export || node instanceof AST_Import)) {\n            js_error(\n                `\"${node.TYPE}\" statement may only appear at the top level`,\n                node.start.file,\n                node.start.line,\n                node.start.col,\n                node.start.pos\n            );\n        }\n    });\n\n    if (options.module) {\n        tw.directives[\"use strict\"] = true;\n    }\n\n    this.walk(tw);\n\n    function mark_export(def, level) {\n        if (in_destructuring) {\n            var i = 0;\n            do {\n                level++;\n            } while (tw.parent(i++) !== in_destructuring);\n        }\n        var node = tw.parent(level);\n        if (def.export = node instanceof AST_Export ? MASK_EXPORT_DONT_MANGLE : 0) {\n            var exported = node.exported_definition;\n            if ((exported instanceof AST_Defun || exported instanceof AST_DefClass) && node.is_default) {\n                def.export = MASK_EXPORT_WANT_MANGLE;\n            }\n        }\n    }\n\n    // pass 2: find back references and eval\n    const is_toplevel = this instanceof AST_Toplevel;\n    if (is_toplevel) {\n        this.globals = new Map();\n    }\n\n    var tw = new TreeWalker(node => {\n        if (node instanceof AST_LoopControl && node.label) {\n            node.label.thedef.references.push(node);\n            return true;\n        }\n        if (node instanceof AST_SymbolRef) {\n            var name = node.name;\n            if (name == \"eval\" && tw.parent() instanceof AST_Call) {\n                for (var s = node.scope; s && !s.uses_eval; s = s.parent_scope) {\n                    s.uses_eval = true;\n                }\n            }\n            var sym;\n            if (tw.parent() instanceof AST_NameMapping && tw.parent(1).module_name\n                || !(sym = node.scope.find_variable(name))) {\n\n                sym = toplevel.def_global(node);\n                if (node instanceof AST_SymbolExport) sym.export = MASK_EXPORT_DONT_MANGLE;\n            } else if (sym.scope instanceof AST_Lambda && name == \"arguments\") {\n                sym.scope.get_defun_scope().uses_arguments = true;\n            }\n            node.thedef = sym;\n            node.reference();\n            if (node.scope.is_block_scope()\n                && !(sym.orig[0] instanceof AST_SymbolBlockDeclaration)) {\n                node.scope = node.scope.get_defun_scope();\n            }\n            return true;\n        }\n        // ensure mangling works if catch reuses a scope variable\n        var def;\n        if (node instanceof AST_SymbolCatch && (def = redefined_catch_def(node.definition()))) {\n            var s = node.scope;\n            while (s) {\n                push_uniq(s.enclosed, def);\n                if (s === def.scope) break;\n                s = s.parent_scope;\n            }\n        }\n    });\n    this.walk(tw);\n\n    // pass 3: work around IE8 and Safari catch scope bugs\n    if (options.ie8 || options.safari10) {\n        walk(this, node => {\n            if (node instanceof AST_SymbolCatch) {\n                var name = node.name;\n                var refs = node.thedef.references;\n                var scope = node.scope.get_defun_scope();\n                var def = scope.find_variable(name)\n                    || toplevel.globals.get(name)\n                    || scope.def_variable(node);\n                refs.forEach(function(ref) {\n                    ref.thedef = def;\n                    ref.reference();\n                });\n                node.thedef = def;\n                node.reference();\n                return true;\n            }\n        });\n    }\n\n    // pass 4: add symbol definitions to loop scopes\n    // Safari/Webkit bug workaround - loop init let variable shadowing argument.\n    // https://github.com/mishoo/UglifyJS2/issues/1753\n    // https://bugs.webkit.org/show_bug.cgi?id=171041\n    if (options.safari10) {\n        for (const scope of for_scopes) {\n            scope.parent_scope.variables.forEach(function(def) {\n                push_uniq(scope.enclosed, def);\n            });\n        }\n    }\n});\n\nAST_Toplevel.DEFMETHOD(\"def_global\", function(node) {\n    var globals = this.globals, name = node.name;\n    if (globals.has(name)) {\n        return globals.get(name);\n    } else {\n        var g = new SymbolDef(this, node);\n        g.undeclared = true;\n        g.global = true;\n        globals.set(name, g);\n        return g;\n    }\n});\n\nAST_Scope.DEFMETHOD(\"init_scope_vars\", function(parent_scope) {\n    this.variables = new Map();         // map name to AST_SymbolVar (variables defined in this scope; includes functions)\n    this.uses_with = false;             // will be set to true if this or some nested scope uses the `with` statement\n    this.uses_eval = false;             // will be set to true if this or nested scope uses the global `eval`\n    this.parent_scope = parent_scope;   // the parent scope\n    this.enclosed = [];                 // a list of variables from this or outer scope(s) that are referenced from this or inner scopes\n    this.cname = -1;                    // the current index for mangling functions/variables\n});\n\nAST_Scope.DEFMETHOD(\"conflicting_def\", function (name) {\n    return (\n        this.enclosed.find(def => def.name === name)\n        || this.variables.has(name)\n        || (this.parent_scope && this.parent_scope.conflicting_def(name))\n    );\n});\n\nAST_Scope.DEFMETHOD(\"conflicting_def_shallow\", function (name) {\n    return (\n        this.enclosed.find(def => def.name === name)\n        || this.variables.has(name)\n    );\n});\n\nAST_Scope.DEFMETHOD(\"add_child_scope\", function (scope) {\n    // `scope` is going to be moved into `this` right now.\n    // Update the required scopes' information\n\n    if (scope.parent_scope === this) return;\n\n    scope.parent_scope = this;\n\n    // Propagate to this.uses_arguments from arrow functions\n    if ((scope instanceof AST_Arrow) && !this.uses_arguments) {\n        this.uses_arguments = walk(scope, node => {\n            if (\n                node instanceof AST_SymbolRef\n                && node.scope instanceof AST_Lambda\n                && node.name === \"arguments\"\n            ) {\n                return walk_abort;\n            }\n\n            if (node instanceof AST_Lambda && !(node instanceof AST_Arrow)) {\n                return true;\n            }\n        });\n    }\n\n    this.uses_with = this.uses_with || scope.uses_with;\n    this.uses_eval = this.uses_eval || scope.uses_eval;\n\n    const scope_ancestry = (() => {\n        const ancestry = [];\n        let cur = this;\n        do {\n            ancestry.push(cur);\n        } while ((cur = cur.parent_scope));\n        ancestry.reverse();\n        return ancestry;\n    })();\n\n    const new_scope_enclosed_set = new Set(scope.enclosed);\n    const to_enclose = [];\n    for (const scope_topdown of scope_ancestry) {\n        to_enclose.forEach(e => push_uniq(scope_topdown.enclosed, e));\n        for (const def of scope_topdown.variables.values()) {\n            if (new_scope_enclosed_set.has(def)) {\n                push_uniq(to_enclose, def);\n                push_uniq(scope_topdown.enclosed, def);\n            }\n        }\n    }\n});\n\nfunction find_scopes_visible_from(scopes) {\n    const found_scopes = new Set();\n\n    for (const scope of new Set(scopes)) {\n        (function bubble_up(scope) {\n            if (scope == null || found_scopes.has(scope)) return;\n\n            found_scopes.add(scope);\n\n            bubble_up(scope.parent_scope);\n        })(scope);\n    }\n\n    return [...found_scopes];\n}\n\n// Creates a symbol during compression\nAST_Scope.DEFMETHOD(\"create_symbol\", function(SymClass, {\n    source,\n    tentative_name,\n    scope,\n    conflict_scopes = [scope],\n    init = null\n} = {}) {\n    let symbol_name;\n\n    conflict_scopes = find_scopes_visible_from(conflict_scopes);\n\n    if (tentative_name) {\n        // Implement hygiene (no new names are conflicting with existing names)\n        tentative_name =\n            symbol_name =\n            tentative_name.replace(/(?:^[^a-z_$]|[^a-z0-9_$])/ig, \"_\");\n\n        let i = 0;\n        while (conflict_scopes.find(s => s.conflicting_def_shallow(symbol_name))) {\n            symbol_name = tentative_name + \"$\" + i++;\n        }\n    }\n\n    if (!symbol_name) {\n        throw new Error(\"No symbol name could be generated in create_symbol()\");\n    }\n\n    const symbol = make_node(SymClass, source, {\n        name: symbol_name,\n        scope\n    });\n\n    this.def_variable(symbol, init || null);\n\n    symbol.mark_enclosed();\n\n    return symbol;\n});\n\n\nAST_Node.DEFMETHOD(\"is_block_scope\", return_false);\nAST_Class.DEFMETHOD(\"is_block_scope\", return_false);\nAST_Lambda.DEFMETHOD(\"is_block_scope\", return_false);\nAST_Toplevel.DEFMETHOD(\"is_block_scope\", return_false);\nAST_SwitchBranch.DEFMETHOD(\"is_block_scope\", return_false);\nAST_Block.DEFMETHOD(\"is_block_scope\", return_true);\nAST_Scope.DEFMETHOD(\"is_block_scope\", function () {\n    return this._block_scope || false;\n});\nAST_IterationStatement.DEFMETHOD(\"is_block_scope\", return_true);\n\nAST_Lambda.DEFMETHOD(\"init_scope_vars\", function() {\n    AST_Scope.prototype.init_scope_vars.apply(this, arguments);\n    this.uses_arguments = false;\n    this.def_variable(new AST_SymbolFunarg({\n        name: \"arguments\",\n        start: this.start,\n        end: this.end\n    }));\n});\n\nAST_Arrow.DEFMETHOD(\"init_scope_vars\", function() {\n    AST_Scope.prototype.init_scope_vars.apply(this, arguments);\n    this.uses_arguments = false;\n});\n\nAST_Symbol.DEFMETHOD(\"mark_enclosed\", function() {\n    var def = this.definition();\n    var s = this.scope;\n    while (s) {\n        push_uniq(s.enclosed, def);\n        if (s === def.scope) break;\n        s = s.parent_scope;\n    }\n});\n\nAST_Symbol.DEFMETHOD(\"reference\", function() {\n    this.definition().references.push(this);\n    this.mark_enclosed();\n});\n\nAST_Scope.DEFMETHOD(\"find_variable\", function(name) {\n    if (name instanceof AST_Symbol) name = name.name;\n    return this.variables.get(name)\n        || (this.parent_scope && this.parent_scope.find_variable(name));\n});\n\nAST_Scope.DEFMETHOD(\"def_function\", function(symbol, init) {\n    var def = this.def_variable(symbol, init);\n    if (!def.init || def.init instanceof AST_Defun) def.init = init;\n    return def;\n});\n\nAST_Scope.DEFMETHOD(\"def_variable\", function(symbol, init) {\n    var def = this.variables.get(symbol.name);\n    if (def) {\n        def.orig.push(symbol);\n        if (def.init && (def.scope !== symbol.scope || def.init instanceof AST_Function)) {\n            def.init = init;\n        }\n    } else {\n        def = new SymbolDef(this, symbol, init);\n        this.variables.set(symbol.name, def);\n        def.global = !this.parent_scope;\n    }\n    return symbol.thedef = def;\n});\n\nfunction next_mangled(scope, options) {\n    let defun_scope;\n    if (\n        scopes_with_block_defuns\n        && (defun_scope = scope.get_defun_scope())\n        && scopes_with_block_defuns.has(defun_scope)\n    ) {\n        scope = defun_scope;\n    }\n\n    var ext = scope.enclosed;\n    var nth_identifier = options.nth_identifier;\n    out: while (true) {\n        var m = nth_identifier.get(++scope.cname);\n        if (ALL_RESERVED_WORDS.has(m)) continue; // skip over \"do\"\n\n        // https://github.com/mishoo/UglifyJS2/issues/242 -- do not\n        // shadow a name reserved from mangling.\n        if (options.reserved.has(m)) continue;\n\n        // Functions with short names might collide with base54 output\n        // and therefore cause collisions when keep_fnames is true.\n        if (unmangleable_names && unmangleable_names.has(m)) continue out;\n\n        // we must ensure that the mangled name does not shadow a name\n        // from some parent scope that is referenced in this or in\n        // inner scopes.\n        for (let i = ext.length; --i >= 0;) {\n            const def = ext[i];\n            const name = def.mangled_name || (def.unmangleable(options) && def.name);\n            if (m == name) continue out;\n        }\n        return m;\n    }\n}\n\nAST_Scope.DEFMETHOD(\"next_mangled\", function(options) {\n    return next_mangled(this, options);\n});\n\nAST_Toplevel.DEFMETHOD(\"next_mangled\", function(options) {\n    let name;\n    const mangled_names = this.mangled_names;\n    do {\n        name = next_mangled(this, options);\n    } while (mangled_names.has(name));\n    return name;\n});\n\nAST_Function.DEFMETHOD(\"next_mangled\", function(options, def) {\n    // #179, #326\n    // in Safari strict mode, something like (function x(x){...}) is a syntax error;\n    // a function expression's argument cannot shadow the function expression's name\n\n    var tricky_def = def.orig[0] instanceof AST_SymbolFunarg && this.name && this.name.definition();\n\n    // the function's mangled_name is null when keep_fnames is true\n    var tricky_name = tricky_def ? tricky_def.mangled_name || tricky_def.name : null;\n\n    while (true) {\n        var name = next_mangled(this, options);\n        if (!tricky_name || tricky_name != name)\n            return name;\n    }\n});\n\nAST_Symbol.DEFMETHOD(\"unmangleable\", function(options) {\n    var def = this.definition();\n    return !def || def.unmangleable(options);\n});\n\n// labels are always mangleable\nAST_Label.DEFMETHOD(\"unmangleable\", return_false);\n\nAST_Symbol.DEFMETHOD(\"unreferenced\", function() {\n    return !this.definition().references.length && !this.scope.pinned();\n});\n\nAST_Symbol.DEFMETHOD(\"definition\", function() {\n    return this.thedef;\n});\n\nAST_Symbol.DEFMETHOD(\"global\", function() {\n    return this.thedef.global;\n});\n\n/**\n * Format the mangler options (if any) into their appropriate types\n */\nfunction format_mangler_options(options) {\n    options = defaults(options, {\n        eval        : false,\n        nth_identifier : base54,\n        ie8         : false,\n        keep_classnames: false,\n        keep_fnames : false,\n        module      : false,\n        reserved    : [],\n        toplevel    : false,\n    });\n    if (options.module) options.toplevel = true;\n    if (!Array.isArray(options.reserved)\n        && !(options.reserved instanceof Set)\n    ) {\n        options.reserved = [];\n    }\n    options.reserved = new Set(options.reserved);\n    // Never mangle arguments\n    options.reserved.add(\"arguments\");\n    return options;\n}\n\nAST_Toplevel.DEFMETHOD(\"mangle_names\", function(options) {\n    options = format_mangler_options(options);\n    var nth_identifier = options.nth_identifier;\n\n    // We only need to mangle declaration nodes.  Special logic wired\n    // into the code generator will display the mangled name if it's\n    // present (and for AST_SymbolRef-s it'll use the mangled name of\n    // the AST_SymbolDeclaration that it points to).\n    var lname = -1;\n    var to_mangle = [];\n\n    if (options.keep_fnames) {\n        function_defs = new Set();\n    }\n\n    const mangled_names = this.mangled_names = new Set();\n    unmangleable_names = new Set();\n\n    if (options.cache) {\n        this.globals.forEach(collect);\n        if (options.cache.props) {\n            options.cache.props.forEach(function(mangled_name) {\n                mangled_names.add(mangled_name);\n            });\n        }\n    }\n\n    var tw = new TreeWalker(function(node, descend) {\n        if (node instanceof AST_LabeledStatement) {\n            // lname is incremented when we get to the AST_Label\n            var save_nesting = lname;\n            descend();\n            lname = save_nesting;\n            return true;        // don't descend again in TreeWalker\n        }\n        if (\n            node instanceof AST_Defun\n            && !(tw.parent() instanceof AST_Scope)\n        ) {\n            scopes_with_block_defuns = scopes_with_block_defuns || new Set();\n            scopes_with_block_defuns.add(node.parent_scope.get_defun_scope());\n        }\n        if (node instanceof AST_Scope) {\n            node.variables.forEach(collect);\n            return;\n        }\n        if (node.is_block_scope()) {\n            node.block_scope.variables.forEach(collect);\n            return;\n        }\n        if (\n            function_defs\n            && node instanceof AST_VarDef\n            && node.value instanceof AST_Lambda\n            && !node.value.name\n            && keep_name(options.keep_fnames, node.name.name)\n        ) {\n            function_defs.add(node.name.definition().id);\n            return;\n        }\n        if (node instanceof AST_Label) {\n            let name;\n            do {\n                name = nth_identifier.get(++lname);\n            } while (ALL_RESERVED_WORDS.has(name));\n            node.mangled_name = name;\n            return true;\n        }\n        if (!(options.ie8 || options.safari10) && node instanceof AST_SymbolCatch) {\n            to_mangle.push(node.definition());\n            return;\n        }\n    });\n\n    this.walk(tw);\n\n    if (options.keep_fnames || options.keep_classnames) {\n        // Collect a set of short names which are unmangleable,\n        // for use in avoiding collisions in next_mangled.\n        to_mangle.forEach(def => {\n            if (def.name.length < 6 && def.unmangleable(options)) {\n                unmangleable_names.add(def.name);\n            }\n        });\n    }\n\n    to_mangle.forEach(def => { def.mangle(options); });\n\n    function_defs = null;\n    unmangleable_names = null;\n    scopes_with_block_defuns = null;\n\n    function collect(symbol) {\n        if (symbol.export & MASK_EXPORT_DONT_MANGLE) {\n            unmangleable_names.add(symbol.name);\n        } else if (!options.reserved.has(symbol.name)) {\n            to_mangle.push(symbol);\n        }\n    }\n});\n\nAST_Toplevel.DEFMETHOD(\"find_colliding_names\", function(options) {\n    const cache = options.cache && options.cache.props;\n    const avoid = new Set();\n    options.reserved.forEach(to_avoid);\n    this.globals.forEach(add_def);\n    this.walk(new TreeWalker(function(node) {\n        if (node instanceof AST_Scope) node.variables.forEach(add_def);\n        if (node instanceof AST_SymbolCatch) add_def(node.definition());\n    }));\n    return avoid;\n\n    function to_avoid(name) {\n        avoid.add(name);\n    }\n\n    function add_def(def) {\n        var name = def.name;\n        if (def.global && cache && cache.has(name)) name = cache.get(name);\n        else if (!def.unmangleable(options)) return;\n        to_avoid(name);\n    }\n});\n\nAST_Toplevel.DEFMETHOD(\"expand_names\", function(options) {\n    options = format_mangler_options(options);\n    var nth_identifier = options.nth_identifier;\n    if (nth_identifier.reset && nth_identifier.sort) {\n        nth_identifier.reset();\n        nth_identifier.sort();\n    }\n    var avoid = this.find_colliding_names(options);\n    var cname = 0;\n    this.globals.forEach(rename);\n    this.walk(new TreeWalker(function(node) {\n        if (node instanceof AST_Scope) node.variables.forEach(rename);\n        if (node instanceof AST_SymbolCatch) rename(node.definition());\n    }));\n\n    function next_name() {\n        var name;\n        do {\n            name = nth_identifier.get(cname++);\n        } while (avoid.has(name) || ALL_RESERVED_WORDS.has(name));\n        return name;\n    }\n\n    function rename(def) {\n        if (def.global && options.cache) return;\n        if (def.unmangleable(options)) return;\n        if (options.reserved.has(def.name)) return;\n        const redefinition = redefined_catch_def(def);\n        const name = def.name = redefinition ? redefinition.name : next_name();\n        def.orig.forEach(function(sym) {\n            sym.name = name;\n        });\n        def.references.forEach(function(sym) {\n            sym.name = name;\n        });\n    }\n});\n\nAST_Node.DEFMETHOD(\"tail_node\", return_this);\nAST_Sequence.DEFMETHOD(\"tail_node\", function() {\n    return this.expressions[this.expressions.length - 1];\n});\n\nAST_Toplevel.DEFMETHOD(\"compute_char_frequency\", function(options) {\n    options = format_mangler_options(options);\n    var nth_identifier = options.nth_identifier;\n    if (!nth_identifier.reset || !nth_identifier.consider || !nth_identifier.sort) {\n        // If the identifier mangler is invariant, skip computing character frequency.\n        return;\n    }\n    nth_identifier.reset();\n\n    try {\n        AST_Node.prototype.print = function(stream, force_parens) {\n            this._print(stream, force_parens);\n            if (this instanceof AST_Symbol && !this.unmangleable(options)) {\n                nth_identifier.consider(this.name, -1);\n            } else if (options.properties) {\n                if (this instanceof AST_DotHash) {\n                    nth_identifier.consider(\"#\" + this.property, -1);\n                } else if (this instanceof AST_Dot) {\n                    nth_identifier.consider(this.property, -1);\n                } else if (this instanceof AST_Sub) {\n                    skip_string(this.property);\n                }\n            }\n        };\n        nth_identifier.consider(this.print_to_string(), 1);\n    } finally {\n        AST_Node.prototype.print = AST_Node.prototype._print;\n    }\n    nth_identifier.sort();\n\n    function skip_string(node) {\n        if (node instanceof AST_String) {\n            nth_identifier.consider(node.value, -1);\n        } else if (node instanceof AST_Conditional) {\n            skip_string(node.consequent);\n            skip_string(node.alternative);\n        } else if (node instanceof AST_Sequence) {\n            skip_string(node.tail_node());\n        }\n    }\n});\n\nconst base54 = (() => {\n    const leading = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_\".split(\"\");\n    const digits = \"0123456789\".split(\"\");\n    let chars;\n    let frequency;\n    function reset() {\n        frequency = new Map();\n        leading.forEach(function(ch) {\n            frequency.set(ch, 0);\n        });\n        digits.forEach(function(ch) {\n            frequency.set(ch, 0);\n        });\n    }\n    function consider(str, delta) {\n        for (var i = str.length; --i >= 0;) {\n            frequency.set(str[i], frequency.get(str[i]) + delta);\n        }\n    }\n    function compare(a, b) {\n        return frequency.get(b) - frequency.get(a);\n    }\n    function sort() {\n        chars = mergeSort(leading, compare).concat(mergeSort(digits, compare));\n    }\n    // Ensure this is in a usable initial state.\n    reset();\n    sort();\n    function base54(num) {\n        var ret = \"\", base = 54;\n        num++;\n        do {\n            num--;\n            ret += chars[num % base];\n            num = Math.floor(num / base);\n            base = 64;\n        } while (num > 0);\n        return ret;\n    }\n\n    return {\n        get: base54,\n        consider,\n        reset,\n        sort\n    };\n})();\n\nlet mangle_options = undefined;\nAST_Node.prototype.size = function (compressor, stack) {\n    mangle_options = compressor && compressor._mangle_options;\n\n    let size = 0;\n    walk_parent(this, (node, info) => {\n        size += node._size(info);\n\n        // Braceless arrow functions have fake \"return\" statements\n        if (node instanceof AST_Arrow && node.is_braceless()) {\n            size += node.body[0].value._size(info);\n            return true;\n        }\n    }, stack || (compressor && compressor.stack));\n\n    // just to save a bit of memory\n    mangle_options = undefined;\n\n    return size;\n};\n\nAST_Node.prototype._size = () => 0;\n\nAST_Debugger.prototype._size = () => 8;\n\nAST_Directive.prototype._size = function () {\n    // TODO string encoding stuff\n    return 2 + this.value.length;\n};\n\n/** Count commas/semicolons necessary to show a list of expressions/statements */\nconst list_overhead = (array) => array.length && array.length - 1;\n\nAST_Block.prototype._size = function () {\n    return 2 + list_overhead(this.body);\n};\n\nAST_Toplevel.prototype._size = function() {\n    return list_overhead(this.body);\n};\n\nAST_EmptyStatement.prototype._size = () => 1;\n\nAST_LabeledStatement.prototype._size = () => 2;  // x:\n\nAST_Do.prototype._size = () => 9;\n\nAST_While.prototype._size = () => 7;\n\nAST_For.prototype._size = () => 8;\n\nAST_ForIn.prototype._size = () => 8;\n// AST_ForOf inherits ^\n\nAST_With.prototype._size = () => 6;\n\nAST_Expansion.prototype._size = () => 3;\n\nconst lambda_modifiers = func =>\n    (func.is_generator ? 1 : 0) + (func.async ? 6 : 0);\n\nAST_Accessor.prototype._size = function () {\n    return lambda_modifiers(this) + 4 + list_overhead(this.argnames) + list_overhead(this.body);\n};\n\nAST_Function.prototype._size = function (info) {\n    const first = !!first_in_statement(info);\n    return (first * 2) + lambda_modifiers(this) + 12 + list_overhead(this.argnames) + list_overhead(this.body);\n};\n\nAST_Defun.prototype._size = function () {\n    return lambda_modifiers(this) + 13 + list_overhead(this.argnames) + list_overhead(this.body);\n};\n\nAST_Arrow.prototype._size = function () {\n    let args_and_arrow = 2 + list_overhead(this.argnames);\n\n    if (\n        !(\n            this.argnames.length === 1\n            && this.argnames[0] instanceof AST_Symbol\n        )\n    ) {\n        args_and_arrow += 2; // parens around the args\n    }\n\n    const body_overhead = this.is_braceless() ? 0 : list_overhead(this.body) + 2;\n\n    return lambda_modifiers(this) + args_and_arrow + body_overhead;\n};\n\nAST_Destructuring.prototype._size = () => 2;\n\nAST_TemplateString.prototype._size = function () {\n    return 2 + (Math.floor(this.segments.length / 2) * 3);  /* \"${}\" */\n};\n\nAST_TemplateSegment.prototype._size = function () {\n    return this.value.length;\n};\n\nAST_Return.prototype._size = function () {\n    return this.value ? 7 : 6;\n};\n\nAST_Throw.prototype._size = () => 6;\n\nAST_Break.prototype._size = function () {\n    return this.label ? 6 : 5;\n};\n\nAST_Continue.prototype._size = function () {\n    return this.label ? 9 : 8;\n};\n\nAST_If.prototype._size = () => 4;\n\nAST_Switch.prototype._size = function () {\n    return 8 + list_overhead(this.body);\n};\n\nAST_Case.prototype._size = function () {\n    return 5 + list_overhead(this.body);\n};\n\nAST_Default.prototype._size = function () {\n    return 8 + list_overhead(this.body);\n};\n\nAST_Try.prototype._size = () => 3;\n\nAST_Catch.prototype._size = function () {\n    let size = 7 + list_overhead(this.body);\n    if (this.argname) {\n        size += 2;\n    }\n    return size;\n};\n\nAST_Finally.prototype._size = function () {\n    return 7 + list_overhead(this.body);\n};\n\nAST_Var.prototype._size = function () {\n    return 4 + list_overhead(this.definitions);\n};\n\nAST_Let.prototype._size = function () {\n    return 4 + list_overhead(this.definitions);\n};\n\nAST_Const.prototype._size = function () {\n    return 6 + list_overhead(this.definitions);\n};\n\nAST_VarDef.prototype._size = function () {\n    return this.value ? 1 : 0;\n};\n\nAST_NameMapping.prototype._size = function () {\n    // foreign name isn't mangled\n    return this.name ? 4 : 0;\n};\n\nAST_Import.prototype._size = function () {\n    // import\n    let size = 6;\n\n    if (this.imported_name) size += 1;\n\n    // from\n    if (this.imported_name || this.imported_names) size += 5;\n\n    // braces, and the commas\n    if (this.imported_names) {\n        size += 2 + list_overhead(this.imported_names);\n    }\n\n    return size;\n};\n\nAST_ImportMeta.prototype._size = () => 11;\n\nAST_Export.prototype._size = function () {\n    let size = 7 + (this.is_default ? 8 : 0);\n\n    if (this.exported_value) {\n        size += this.exported_value._size();\n    }\n\n    if (this.exported_names) {\n        // Braces and commas\n        size += 2 + list_overhead(this.exported_names);\n    }\n\n    if (this.module_name) {\n        // \"from \"\n        size += 5;\n    }\n\n    return size;\n};\n\nAST_Call.prototype._size = function () {\n    if (this.optional) {\n        return 4 + list_overhead(this.args);\n    }\n    return 2 + list_overhead(this.args);\n};\n\nAST_New.prototype._size = function () {\n    return 6 + list_overhead(this.args);\n};\n\nAST_Sequence.prototype._size = function () {\n    return list_overhead(this.expressions);\n};\n\nAST_Dot.prototype._size = function () {\n    if (this.optional) {\n        return this.property.length + 2;\n    }\n    return this.property.length + 1;\n};\n\nAST_DotHash.prototype._size = function () {\n    if (this.optional) {\n        return this.property.length + 3;\n    }\n    return this.property.length + 2;\n};\n\nAST_Sub.prototype._size = function () {\n    return this.optional ? 4 : 2;\n};\n\nAST_Unary.prototype._size = function () {\n    if (this.operator === \"typeof\") return 7;\n    if (this.operator === \"void\") return 5;\n    return this.operator.length;\n};\n\nAST_Binary.prototype._size = function (info) {\n    if (this.operator === \"in\") return 4;\n\n    let size = this.operator.length;\n\n    if (\n        (this.operator === \"+\" || this.operator === \"-\")\n        && this.right instanceof AST_Unary && this.right.operator === this.operator\n    ) {\n        // 1+ +a > needs space between the +\n        size += 1;\n    }\n\n    if (this.needs_parens(info)) {\n        size += 2;\n    }\n\n    return size;\n};\n\nAST_Conditional.prototype._size = () => 3;\n\nAST_Array.prototype._size = function () {\n    return 2 + list_overhead(this.elements);\n};\n\nAST_Object.prototype._size = function (info) {\n    let base = 2;\n    if (first_in_statement(info)) {\n        base += 2; // parens\n    }\n    return base + list_overhead(this.properties);\n};\n\n/*#__INLINE__*/\nconst key_size = key =>\n    typeof key === \"string\" ? key.length : 0;\n\nAST_ObjectKeyVal.prototype._size = function () {\n    return key_size(this.key) + 1;\n};\n\n/*#__INLINE__*/\nconst static_size = is_static => is_static ? 7 : 0;\n\nAST_ObjectGetter.prototype._size = function () {\n    return 5 + static_size(this.static) + key_size(this.key);\n};\n\nAST_ObjectSetter.prototype._size = function () {\n    return 5 + static_size(this.static) + key_size(this.key);\n};\n\nAST_ConciseMethod.prototype._size = function () {\n    return static_size(this.static) + key_size(this.key) + lambda_modifiers(this);\n};\n\nAST_PrivateMethod.prototype._size = function () {\n    return AST_ConciseMethod.prototype._size.call(this) + 1;\n};\n\nAST_PrivateGetter.prototype._size = AST_PrivateSetter.prototype._size = function () {\n    return AST_ConciseMethod.prototype._size.call(this) + 4;\n};\n\nAST_PrivateIn.prototype._size = function () {\n    return 5; // \"#\", and \" in \"\n};\n\nAST_Class.prototype._size = function () {\n    return (\n        (this.name ? 8 : 7)\n        + (this.extends ? 8 : 0)\n    );\n};\n\nAST_ClassStaticBlock.prototype._size = function () {\n    // \"static{}\" + semicolons\n    return 8 + list_overhead(this.body);\n};\n\nAST_ClassProperty.prototype._size = function () {\n    return (\n        static_size(this.static)\n        + (typeof this.key === \"string\" ? this.key.length + 2 : 0)\n        + (this.value ? 1 : 0)\n    );\n};\n\nAST_ClassPrivateProperty.prototype._size = function () {\n    return AST_ClassProperty.prototype._size.call(this) + 1;\n};\n\nAST_Symbol.prototype._size = function () {\n    if (!(mangle_options && this.thedef && !this.thedef.unmangleable(mangle_options))) {\n        return this.name.length;\n    } else {\n        return 1;\n    }\n};\n\n// TODO take propmangle into account\nAST_SymbolClassProperty.prototype._size = function () {\n    return this.name.length;\n};\n\nAST_SymbolRef.prototype._size = AST_SymbolDeclaration.prototype._size = function () {\n    if (this.name === \"arguments\") return 9;\n\n    return AST_Symbol.prototype._size.call(this);\n};\n\nAST_NewTarget.prototype._size = () => 10;\n\nAST_SymbolImportForeign.prototype._size = function () {\n    return this.name.length;\n};\n\nAST_SymbolExportForeign.prototype._size = function () {\n    return this.name.length;\n};\n\nAST_This.prototype._size = () => 4;\n\nAST_Super.prototype._size = () => 5;\n\nAST_String.prototype._size = function () {\n    return this.value.length + 2;\n};\n\nAST_Number.prototype._size = function () {\n    const { value } = this;\n    if (value === 0) return 1;\n    if (value > 0 && Math.floor(value) === value) {\n        return Math.floor(Math.log10(value) + 1);\n    }\n    return value.toString().length;\n};\n\nAST_BigInt.prototype._size = function () {\n    return this.value.length;\n};\n\nAST_RegExp.prototype._size = function () {\n    return this.value.toString().length;\n};\n\nAST_Null.prototype._size = () => 4;\n\nAST_NaN.prototype._size = () => 3;\n\nAST_Undefined.prototype._size = () => 6; // \"void 0\"\n\nAST_Hole.prototype._size = () => 0;  // comma is taken into account by list_overhead()\n\nAST_Infinity.prototype._size = () => 8;\n\nAST_True.prototype._size = () => 4;\n\nAST_False.prototype._size = () => 5;\n\nAST_Await.prototype._size = () => 6;\n\nAST_Yield.prototype._size = () => 6;\n\n/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n// bitfield flags to be stored in node.flags.\n// These are set and unset during compression, and store information in the node without requiring multiple fields.\nconst UNUSED = 0b00000001;\nconst TRUTHY = 0b00000010;\nconst FALSY = 0b00000100;\nconst UNDEFINED = 0b00001000;\nconst INLINED = 0b00010000;\n\n// Nodes to which values are ever written. Used when keep_assign is part of the unused option string.\nconst WRITE_ONLY = 0b00100000;\n\n// information specific to a single compression pass\nconst SQUEEZED = 0b0000000100000000;\nconst OPTIMIZED = 0b0000001000000000;\nconst TOP = 0b0000010000000000;\nconst CLEAR_BETWEEN_PASSES = SQUEEZED | OPTIMIZED | TOP;\n\nconst has_flag = (node, flag) => node.flags & flag;\nconst set_flag = (node, flag) => { node.flags |= flag; };\nconst clear_flag = (node, flag) => { node.flags &= ~flag; };\n\n/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\nfunction merge_sequence(array, node) {\n    if (node instanceof AST_Sequence) {\n        array.push(...node.expressions);\n    } else {\n        array.push(node);\n    }\n    return array;\n}\n\nfunction make_sequence(orig, expressions) {\n    if (expressions.length == 1) return expressions[0];\n    if (expressions.length == 0) throw new Error(\"trying to create a sequence with length zero!\");\n    return make_node(AST_Sequence, orig, {\n        expressions: expressions.reduce(merge_sequence, [])\n    });\n}\n\nfunction make_node_from_constant(val, orig) {\n    switch (typeof val) {\n      case \"string\":\n        return make_node(AST_String, orig, {\n            value: val\n        });\n      case \"number\":\n        if (isNaN(val)) return make_node(AST_NaN, orig);\n        if (isFinite(val)) {\n            return 1 / val < 0 ? make_node(AST_UnaryPrefix, orig, {\n                operator: \"-\",\n                expression: make_node(AST_Number, orig, { value: -val })\n            }) : make_node(AST_Number, orig, { value: val });\n        }\n        return val < 0 ? make_node(AST_UnaryPrefix, orig, {\n            operator: \"-\",\n            expression: make_node(AST_Infinity, orig)\n        }) : make_node(AST_Infinity, orig);\n      case \"bigint\":\n        return make_node(AST_BigInt, orig, { value: val.toString() });\n      case \"boolean\":\n        return make_node(val ? AST_True : AST_False, orig);\n      case \"undefined\":\n        return make_node(AST_Undefined, orig);\n      default:\n        if (val === null) {\n            return make_node(AST_Null, orig, { value: null });\n        }\n        if (val instanceof RegExp) {\n            return make_node(AST_RegExp, orig, {\n                value: {\n                    source: regexp_source_fix(val.source),\n                    flags: val.flags\n                }\n            });\n        }\n        throw new Error(string_template(\"Can't handle constant of type: {type}\", {\n            type: typeof val\n        }));\n    }\n}\n\nfunction best_of_expression(ast1, ast2) {\n    return ast1.size() > ast2.size() ? ast2 : ast1;\n}\n\nfunction best_of_statement(ast1, ast2) {\n    return best_of_expression(\n        make_node(AST_SimpleStatement, ast1, {\n            body: ast1\n        }),\n        make_node(AST_SimpleStatement, ast2, {\n            body: ast2\n        })\n    ).body;\n}\n\n/** Find which node is smaller, and return that */\nfunction best_of(compressor, ast1, ast2) {\n    if (first_in_statement(compressor)) {\n        return best_of_statement(ast1, ast2);\n    } else {\n        return best_of_expression(ast1, ast2);\n    }\n}\n\n/** Simplify an object property's key, if possible */\nfunction get_simple_key(key) {\n    if (key instanceof AST_Constant) {\n        return key.getValue();\n    }\n    if (key instanceof AST_UnaryPrefix\n        && key.operator == \"void\"\n        && key.expression instanceof AST_Constant) {\n        return;\n    }\n    return key;\n}\n\nfunction read_property(obj, key) {\n    key = get_simple_key(key);\n    if (key instanceof AST_Node) return;\n\n    var value;\n    if (obj instanceof AST_Array) {\n        var elements = obj.elements;\n        if (key == \"length\") return make_node_from_constant(elements.length, obj);\n        if (typeof key == \"number\" && key in elements) value = elements[key];\n    } else if (obj instanceof AST_Object) {\n        key = \"\" + key;\n        var props = obj.properties;\n        for (var i = props.length; --i >= 0;) {\n            var prop = props[i];\n            if (!(prop instanceof AST_ObjectKeyVal)) return;\n            if (!value && props[i].key === key) value = props[i].value;\n        }\n    }\n\n    return value instanceof AST_SymbolRef && value.fixed_value() || value;\n}\n\nfunction has_break_or_continue(loop, parent) {\n    var found = false;\n    var tw = new TreeWalker(function(node) {\n        if (found || node instanceof AST_Scope) return true;\n        if (node instanceof AST_LoopControl && tw.loopcontrol_target(node) === loop) {\n            return found = true;\n        }\n    });\n    if (parent instanceof AST_LabeledStatement) tw.push(parent);\n    tw.push(loop);\n    loop.body.walk(tw);\n    return found;\n}\n\n// we shouldn't compress (1,func)(something) to\n// func(something) because that changes the meaning of\n// the func (becomes lexical instead of global).\nfunction maintain_this_binding(parent, orig, val) {\n    if (\n        parent instanceof AST_UnaryPrefix && parent.operator == \"delete\"\n        || parent instanceof AST_Call && parent.expression === orig\n            && (\n                val instanceof AST_Chain\n                || val instanceof AST_PropAccess\n                || val instanceof AST_SymbolRef && val.name == \"eval\"\n            )\n    ) {\n        const zero = make_node(AST_Number, orig, { value: 0 });\n        return make_sequence(orig, [ zero, val ]);\n    } else {\n        return val;\n    }\n}\n\nfunction is_func_expr(node) {\n    return node instanceof AST_Arrow || node instanceof AST_Function;\n}\n\n/**\n * Used to determine whether the node can benefit from negation.\n * Not the case with arrow functions (you need an extra set of parens). */\nfunction is_iife_call(node) {\n    if (node.TYPE != \"Call\") return false;\n    return node.expression instanceof AST_Function || is_iife_call(node.expression);\n}\n\nfunction is_empty(thing) {\n    if (thing === null) return true;\n    if (thing instanceof AST_EmptyStatement) return true;\n    if (thing instanceof AST_BlockStatement) return thing.body.length == 0;\n    return false;\n}\n\nconst identifier_atom = makePredicate(\"Infinity NaN undefined\");\nfunction is_identifier_atom(node) {\n    return node instanceof AST_Infinity\n        || node instanceof AST_NaN\n        || node instanceof AST_Undefined;\n}\n\n/** Check if this is a SymbolRef node which has one def of a certain AST type */\nfunction is_ref_of(ref, type) {\n    if (!(ref instanceof AST_SymbolRef)) return false;\n    var orig = ref.definition().orig;\n    for (var i = orig.length; --i >= 0;) {\n        if (orig[i] instanceof type) return true;\n    }\n}\n\n/**Can we turn { block contents... } into just the block contents ?\n * Not if one of these is inside.\n **/\nfunction can_be_evicted_from_block(node) {\n    return !(\n        node instanceof AST_DefClass ||\n        node instanceof AST_Defun ||\n        node instanceof AST_Let ||\n        node instanceof AST_Const ||\n        node instanceof AST_Export ||\n        node instanceof AST_Import\n    );\n}\n\nfunction as_statement_array(thing) {\n    if (thing === null) return [];\n    if (thing instanceof AST_BlockStatement) return thing.body;\n    if (thing instanceof AST_EmptyStatement) return [];\n    if (thing instanceof AST_Statement) return [ thing ];\n    throw new Error(\"Can't convert thing to statement array\");\n}\n\nfunction is_reachable(scope_node, defs) {\n    const find_ref = node => {\n        if (node instanceof AST_SymbolRef && defs.includes(node.definition())) {\n            return walk_abort;\n        }\n    };\n\n    return walk_parent(scope_node, (node, info) => {\n        if (node instanceof AST_Scope && node !== scope_node) {\n            var parent = info.parent();\n\n            if (\n                parent instanceof AST_Call\n                && parent.expression === node\n                // Async/Generators aren't guaranteed to sync evaluate all of\n                // their body steps, so it's possible they close over the variable.\n                && !(node.async || node.is_generator)\n            ) {\n                return;\n            }\n\n            if (walk(node, find_ref)) return walk_abort;\n\n            return true;\n        }\n    });\n}\n\n/** Check if a ref refers to the name of a function/class it's defined within */\nfunction is_recursive_ref(compressor, def) {\n    var node;\n    for (var i = 0; node = compressor.parent(i); i++) {\n        if (node instanceof AST_Lambda || node instanceof AST_Class) {\n            var name = node.name;\n            if (name && name.definition() === def) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\n// TODO this only works with AST_Defun, shouldn't it work for other ways of defining functions?\nfunction retain_top_func(fn, compressor) {\n    return compressor.top_retain\n        && fn instanceof AST_Defun\n        && has_flag(fn, TOP)\n        && fn.name\n        && compressor.top_retain(fn.name.definition());\n}\n\n/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n// Lists of native methods, useful for `unsafe` option which assumes they exist.\n// Note: Lots of methods and functions are missing here, in case they aren't pure\n// or not available in all JS environments.\n\nfunction make_nested_lookup(obj) {\n    const out = new Map();\n    for (var key of Object.keys(obj)) {\n        out.set(key, makePredicate(obj[key]));\n    }\n\n    const does_have = (global_name, fname) => {\n        const inner_map = out.get(global_name);\n        return inner_map != null && inner_map.has(fname);\n    };\n    return does_have;\n}\n\n// Objects which are safe to access without throwing or causing a side effect.\n// Usually we'd check the `unsafe` option first but these are way too common for that\nconst pure_prop_access_globals = new Set([\n    \"Number\",\n    \"String\",\n    \"Array\",\n    \"Object\",\n    \"Function\",\n    \"Promise\",\n]);\n\nconst object_methods = [\n    \"constructor\",\n    \"toString\",\n    \"valueOf\",\n];\n\nconst is_pure_native_method = make_nested_lookup({\n    Array: [\n        \"at\",\n        \"flat\",\n        \"includes\",\n        \"indexOf\",\n        \"join\",\n        \"lastIndexOf\",\n        \"slice\",\n        ...object_methods,\n    ],\n    Boolean: object_methods,\n    Function: object_methods,\n    Number: [\n        \"toExponential\",\n        \"toFixed\",\n        \"toPrecision\",\n        ...object_methods,\n    ],\n    Object: object_methods,\n    RegExp: [\n        \"test\",\n        ...object_methods,\n    ],\n    String: [\n        \"at\",\n        \"charAt\",\n        \"charCodeAt\",\n        \"charPointAt\",\n        \"concat\",\n        \"endsWith\",\n        \"fromCharCode\",\n        \"fromCodePoint\",\n        \"includes\",\n        \"indexOf\",\n        \"italics\",\n        \"lastIndexOf\",\n        \"localeCompare\",\n        \"match\",\n        \"matchAll\",\n        \"normalize\",\n        \"padStart\",\n        \"padEnd\",\n        \"repeat\",\n        \"replace\",\n        \"replaceAll\",\n        \"search\",\n        \"slice\",\n        \"split\",\n        \"startsWith\",\n        \"substr\",\n        \"substring\",\n        \"repeat\",\n        \"toLocaleLowerCase\",\n        \"toLocaleUpperCase\",\n        \"toLowerCase\",\n        \"toUpperCase\",\n        \"trim\",\n        \"trimEnd\",\n        \"trimStart\",\n        ...object_methods,\n    ],\n});\n\nconst is_pure_native_fn = make_nested_lookup({\n    Array: [\n        \"isArray\",\n    ],\n    Math: [\n        \"abs\",\n        \"acos\",\n        \"asin\",\n        \"atan\",\n        \"ceil\",\n        \"cos\",\n        \"exp\",\n        \"floor\",\n        \"log\",\n        \"round\",\n        \"sin\",\n        \"sqrt\",\n        \"tan\",\n        \"atan2\",\n        \"pow\",\n        \"max\",\n        \"min\",\n    ],\n    Number: [\n        \"isFinite\",\n        \"isNaN\",\n    ],\n    Object: [\n        \"create\",\n        \"getOwnPropertyDescriptor\",\n        \"getOwnPropertyNames\",\n        \"getPrototypeOf\",\n        \"isExtensible\",\n        \"isFrozen\",\n        \"isSealed\",\n        \"hasOwn\",\n        \"keys\",\n    ],\n    String: [\n        \"fromCharCode\",\n    ],\n});\n\n// Known numeric values which come with JS environments\nconst is_pure_native_value = make_nested_lookup({\n    Math: [\n        \"E\",\n        \"LN10\",\n        \"LN2\",\n        \"LOG2E\",\n        \"LOG10E\",\n        \"PI\",\n        \"SQRT1_2\",\n        \"SQRT2\",\n    ],\n    Number: [\n        \"MAX_VALUE\",\n        \"MIN_VALUE\",\n        \"NaN\",\n        \"NEGATIVE_INFINITY\",\n        \"POSITIVE_INFINITY\",\n    ],\n});\n\n/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n// Functions and methods to infer certain facts about expressions\n// It's not always possible to be 100% sure about something just by static analysis,\n// so `true` means yes, and `false` means maybe\n\nconst is_undeclared_ref = (node) =>\n    node instanceof AST_SymbolRef && node.definition().undeclared;\n\nconst bitwise_binop = makePredicate(\"<<< >> << & | ^ ~\");\nconst lazy_op = makePredicate(\"&& || ??\");\nconst unary_side_effects = makePredicate(\"delete ++ --\");\n\n// methods to determine whether an expression has a boolean result type\n(function(def_is_boolean) {\n    const unary_bool = makePredicate(\"! delete\");\n    const binary_bool = makePredicate(\"in instanceof == != === !== < <= >= >\");\n    def_is_boolean(AST_Node, return_false);\n    def_is_boolean(AST_UnaryPrefix, function() {\n        return unary_bool.has(this.operator);\n    });\n    def_is_boolean(AST_Binary, function() {\n        return binary_bool.has(this.operator)\n            || lazy_op.has(this.operator)\n                && this.left.is_boolean()\n                && this.right.is_boolean();\n    });\n    def_is_boolean(AST_Conditional, function() {\n        return this.consequent.is_boolean() && this.alternative.is_boolean();\n    });\n    def_is_boolean(AST_Assign, function() {\n        return this.operator == \"=\" && this.right.is_boolean();\n    });\n    def_is_boolean(AST_Sequence, function() {\n        return this.tail_node().is_boolean();\n    });\n    def_is_boolean(AST_True, return_true);\n    def_is_boolean(AST_False, return_true);\n})(function(node, func) {\n    node.DEFMETHOD(\"is_boolean\", func);\n});\n\n// methods to determine if an expression has a numeric result type\n(function(def_is_number) {\n    def_is_number(AST_Node, return_false);\n    def_is_number(AST_Number, return_true);\n    const unary = makePredicate(\"+ - ~ ++ --\");\n    def_is_number(AST_Unary, function() {\n        return unary.has(this.operator) && !(this.expression instanceof AST_BigInt);\n    });\n    const numeric_ops = makePredicate(\"- * / % & | ^ << >> >>>\");\n    def_is_number(AST_Binary, function(compressor) {\n        return numeric_ops.has(this.operator) || this.operator == \"+\"\n            && this.left.is_number(compressor)\n            && this.right.is_number(compressor);\n    });\n    def_is_number(AST_Assign, function(compressor) {\n        return numeric_ops.has(this.operator.slice(0, -1))\n            || this.operator == \"=\" && this.right.is_number(compressor);\n    });\n    def_is_number(AST_Sequence, function(compressor) {\n        return this.tail_node().is_number(compressor);\n    });\n    def_is_number(AST_Conditional, function(compressor) {\n        return this.consequent.is_number(compressor) && this.alternative.is_number(compressor);\n    });\n})(function(node, func) {\n    node.DEFMETHOD(\"is_number\", func);\n});\n\n// methods to determine if an expression is a 32 bit integer (IE results from bitwise ops, or is an integer constant fitting in that size\n(function(def_is_32_bit_integer) {\n    def_is_32_bit_integer(AST_Node, return_false);\n    def_is_32_bit_integer(AST_Number, function() {\n        return this.value === (this.value | 0);\n    });\n    def_is_32_bit_integer(AST_UnaryPrefix, function() {\n        return this.operator == \"~\" ? this.expression.is_number()\n            : this.operator === \"+\" ? this.expression.is_32_bit_integer()\n            : false;\n    });\n    def_is_32_bit_integer(AST_Binary, function() {\n        return bitwise_binop.has(this.operator);\n    });\n}(function (node, func) {\n    node.DEFMETHOD(\"is_32_bit_integer\", func);\n}));\n\n// methods to determine if an expression has a string result type\n(function(def_is_string) {\n    def_is_string(AST_Node, return_false);\n    def_is_string(AST_String, return_true);\n    def_is_string(AST_TemplateString, return_true);\n    def_is_string(AST_UnaryPrefix, function() {\n        return this.operator == \"typeof\";\n    });\n    def_is_string(AST_Binary, function(compressor) {\n        return this.operator == \"+\" &&\n            (this.left.is_string(compressor) || this.right.is_string(compressor));\n    });\n    def_is_string(AST_Assign, function(compressor) {\n        return (this.operator == \"=\" || this.operator == \"+=\") && this.right.is_string(compressor);\n    });\n    def_is_string(AST_Sequence, function(compressor) {\n        return this.tail_node().is_string(compressor);\n    });\n    def_is_string(AST_Conditional, function(compressor) {\n        return this.consequent.is_string(compressor) && this.alternative.is_string(compressor);\n    });\n})(function(node, func) {\n    node.DEFMETHOD(\"is_string\", func);\n});\n\nfunction is_undefined(node, compressor) {\n    return (\n        has_flag(node, UNDEFINED)\n        || node instanceof AST_Undefined\n        || node instanceof AST_UnaryPrefix\n            && node.operator == \"void\"\n            && !node.expression.has_side_effects(compressor)\n    );\n}\n\n// Is the node explicitly null or undefined.\nfunction is_null_or_undefined(node, compressor) {\n    let fixed;\n    return (\n        node instanceof AST_Null\n        || is_undefined(node, compressor)\n        || (\n            node instanceof AST_SymbolRef\n            && (fixed = node.definition().fixed) instanceof AST_Node\n            && is_nullish(fixed, compressor)\n        )\n    );\n}\n\n// Find out if this expression is optionally chained from a base-point that we\n// can statically analyze as null or undefined.\nfunction is_nullish_shortcircuited(node, compressor) {\n    if (node instanceof AST_PropAccess || node instanceof AST_Call) {\n        return (\n            (node.optional && is_null_or_undefined(node.expression, compressor))\n            || is_nullish_shortcircuited(node.expression, compressor)\n        );\n    }\n    if (node instanceof AST_Chain) return is_nullish_shortcircuited(node.expression, compressor);\n    return false;\n}\n\n// Find out if something is == null, or can short circuit into nullish.\n// Used to optimize ?. and ??\nfunction is_nullish(node, compressor) {\n    if (is_null_or_undefined(node, compressor)) return true;\n    return is_nullish_shortcircuited(node, compressor);\n}\n\n// Determine if expression might cause side effects\n// If there's a possibility that a node may change something when it's executed, this returns true\n(function(def_has_side_effects) {\n    def_has_side_effects(AST_Node, return_true);\n\n    def_has_side_effects(AST_EmptyStatement, return_false);\n    def_has_side_effects(AST_Constant, return_false);\n    def_has_side_effects(AST_This, return_false);\n\n    function any(list, compressor) {\n        for (var i = list.length; --i >= 0;)\n            if (list[i].has_side_effects(compressor))\n                return true;\n        return false;\n    }\n\n    def_has_side_effects(AST_Block, function(compressor) {\n        return any(this.body, compressor);\n    });\n    def_has_side_effects(AST_Call, function(compressor) {\n        if (\n            !this.is_callee_pure(compressor)\n            && (!this.expression.is_call_pure(compressor)\n                || this.expression.has_side_effects(compressor))\n        ) {\n            return true;\n        }\n        return any(this.args, compressor);\n    });\n    def_has_side_effects(AST_Switch, function(compressor) {\n        return this.expression.has_side_effects(compressor)\n            || any(this.body, compressor);\n    });\n    def_has_side_effects(AST_Case, function(compressor) {\n        return this.expression.has_side_effects(compressor)\n            || any(this.body, compressor);\n    });\n    def_has_side_effects(AST_Try, function(compressor) {\n        return this.body.has_side_effects(compressor)\n            || this.bcatch && this.bcatch.has_side_effects(compressor)\n            || this.bfinally && this.bfinally.has_side_effects(compressor);\n    });\n    def_has_side_effects(AST_If, function(compressor) {\n        return this.condition.has_side_effects(compressor)\n            || this.body && this.body.has_side_effects(compressor)\n            || this.alternative && this.alternative.has_side_effects(compressor);\n    });\n    def_has_side_effects(AST_ImportMeta, return_false);\n    def_has_side_effects(AST_LabeledStatement, function(compressor) {\n        return this.body.has_side_effects(compressor);\n    });\n    def_has_side_effects(AST_SimpleStatement, function(compressor) {\n        return this.body.has_side_effects(compressor);\n    });\n    def_has_side_effects(AST_Lambda, return_false);\n    def_has_side_effects(AST_Class, function (compressor) {\n        if (this.extends && this.extends.has_side_effects(compressor)) {\n            return true;\n        }\n        return any(this.properties, compressor);\n    });\n    def_has_side_effects(AST_ClassStaticBlock, function(compressor) {\n        return any(this.body, compressor);\n    });\n    def_has_side_effects(AST_Binary, function(compressor) {\n        return this.left.has_side_effects(compressor)\n            || this.right.has_side_effects(compressor);\n    });\n    def_has_side_effects(AST_Assign, return_true);\n    def_has_side_effects(AST_Conditional, function(compressor) {\n        return this.condition.has_side_effects(compressor)\n            || this.consequent.has_side_effects(compressor)\n            || this.alternative.has_side_effects(compressor);\n    });\n    def_has_side_effects(AST_Unary, function(compressor) {\n        return unary_side_effects.has(this.operator)\n            || this.expression.has_side_effects(compressor);\n    });\n    def_has_side_effects(AST_SymbolRef, function(compressor) {\n        return !this.is_declared(compressor) && !pure_prop_access_globals.has(this.name);\n    });\n    def_has_side_effects(AST_SymbolClassProperty, return_false);\n    def_has_side_effects(AST_SymbolDeclaration, return_false);\n    def_has_side_effects(AST_Object, function(compressor) {\n        return any(this.properties, compressor);\n    });\n    def_has_side_effects(AST_ObjectProperty, function(compressor) {\n        return (\n            this.computed_key() && this.key.has_side_effects(compressor)\n            || this.value && this.value.has_side_effects(compressor)\n        );\n    });\n    def_has_side_effects(AST_ClassProperty, function(compressor) {\n        return (\n            this.computed_key() && this.key.has_side_effects(compressor)\n            || this.static && this.value && this.value.has_side_effects(compressor)\n        );\n    });\n    def_has_side_effects(AST_ConciseMethod, function(compressor) {\n        return this.computed_key() && this.key.has_side_effects(compressor);\n    });\n    def_has_side_effects(AST_ObjectGetter, function(compressor) {\n        return this.computed_key() && this.key.has_side_effects(compressor);\n    });\n    def_has_side_effects(AST_ObjectSetter, function(compressor) {\n        return this.computed_key() && this.key.has_side_effects(compressor);\n    });\n    def_has_side_effects(AST_Array, function(compressor) {\n        return any(this.elements, compressor);\n    });\n    def_has_side_effects(AST_Dot, function(compressor) {\n        if (is_nullish(this, compressor)) {\n            return this.expression.has_side_effects(compressor);\n        }\n        if (!this.optional && this.expression.may_throw_on_access(compressor)) {\n            return true;\n        }\n\n        return this.expression.has_side_effects(compressor);\n    });\n    def_has_side_effects(AST_Sub, function(compressor) {\n        if (is_nullish(this, compressor)) {\n            return this.expression.has_side_effects(compressor);\n        }\n        if (!this.optional && this.expression.may_throw_on_access(compressor)) {\n            return true;\n        }\n\n        var property = this.property.has_side_effects(compressor);\n        if (property && this.optional) return true; // \"?.\" is a condition\n\n        return property || this.expression.has_side_effects(compressor);\n    });\n    def_has_side_effects(AST_Chain, function (compressor) {\n        return this.expression.has_side_effects(compressor);\n    });\n    def_has_side_effects(AST_Sequence, function(compressor) {\n        return any(this.expressions, compressor);\n    });\n    def_has_side_effects(AST_Definitions, function(compressor) {\n        return any(this.definitions, compressor);\n    });\n    def_has_side_effects(AST_VarDef, function() {\n        return this.value;\n    });\n    def_has_side_effects(AST_TemplateSegment, return_false);\n    def_has_side_effects(AST_TemplateString, function(compressor) {\n        return any(this.segments, compressor);\n    });\n})(function(node, func) {\n    node.DEFMETHOD(\"has_side_effects\", func);\n});\n\n// determine if expression may throw\n(function(def_may_throw) {\n    def_may_throw(AST_Node, return_true);\n\n    def_may_throw(AST_Constant, return_false);\n    def_may_throw(AST_EmptyStatement, return_false);\n    def_may_throw(AST_Lambda, return_false);\n    def_may_throw(AST_SymbolDeclaration, return_false);\n    def_may_throw(AST_This, return_false);\n    def_may_throw(AST_ImportMeta, return_false);\n\n    function any(list, compressor) {\n        for (var i = list.length; --i >= 0;)\n            if (list[i].may_throw(compressor))\n                return true;\n        return false;\n    }\n\n    def_may_throw(AST_Class, function(compressor) {\n        if (this.extends && this.extends.may_throw(compressor)) return true;\n        return any(this.properties, compressor);\n    });\n    def_may_throw(AST_ClassStaticBlock, function (compressor) {\n        return any(this.body, compressor);\n    });\n\n    def_may_throw(AST_Array, function(compressor) {\n        return any(this.elements, compressor);\n    });\n    def_may_throw(AST_Assign, function(compressor) {\n        if (this.right.may_throw(compressor)) return true;\n        if (!compressor.has_directive(\"use strict\")\n            && this.operator == \"=\"\n            && this.left instanceof AST_SymbolRef) {\n            return false;\n        }\n        return this.left.may_throw(compressor);\n    });\n    def_may_throw(AST_Binary, function(compressor) {\n        return this.left.may_throw(compressor)\n            || this.right.may_throw(compressor);\n    });\n    def_may_throw(AST_Block, function(compressor) {\n        return any(this.body, compressor);\n    });\n    def_may_throw(AST_Call, function(compressor) {\n        if (is_nullish(this, compressor)) return false;\n        if (any(this.args, compressor)) return true;\n        if (this.is_callee_pure(compressor)) return false;\n        if (this.expression.may_throw(compressor)) return true;\n        return !(this.expression instanceof AST_Lambda)\n            || any(this.expression.body, compressor);\n    });\n    def_may_throw(AST_Case, function(compressor) {\n        return this.expression.may_throw(compressor)\n            || any(this.body, compressor);\n    });\n    def_may_throw(AST_Conditional, function(compressor) {\n        return this.condition.may_throw(compressor)\n            || this.consequent.may_throw(compressor)\n            || this.alternative.may_throw(compressor);\n    });\n    def_may_throw(AST_Definitions, function(compressor) {\n        return any(this.definitions, compressor);\n    });\n    def_may_throw(AST_If, function(compressor) {\n        return this.condition.may_throw(compressor)\n            || this.body && this.body.may_throw(compressor)\n            || this.alternative && this.alternative.may_throw(compressor);\n    });\n    def_may_throw(AST_LabeledStatement, function(compressor) {\n        return this.body.may_throw(compressor);\n    });\n    def_may_throw(AST_Object, function(compressor) {\n        return any(this.properties, compressor);\n    });\n    def_may_throw(AST_ObjectProperty, function(compressor) {\n        // TODO key may throw too\n        return this.value ? this.value.may_throw(compressor) : false;\n    });\n    def_may_throw(AST_ClassProperty, function(compressor) {\n        return (\n            this.computed_key() && this.key.may_throw(compressor)\n            || this.static && this.value && this.value.may_throw(compressor)\n        );\n    });\n    def_may_throw(AST_ConciseMethod, function(compressor) {\n        return this.computed_key() && this.key.may_throw(compressor);\n    });\n    def_may_throw(AST_ObjectGetter, function(compressor) {\n        return this.computed_key() && this.key.may_throw(compressor);\n    });\n    def_may_throw(AST_ObjectSetter, function(compressor) {\n        return this.computed_key() && this.key.may_throw(compressor);\n    });\n    def_may_throw(AST_Return, function(compressor) {\n        return this.value && this.value.may_throw(compressor);\n    });\n    def_may_throw(AST_Sequence, function(compressor) {\n        return any(this.expressions, compressor);\n    });\n    def_may_throw(AST_SimpleStatement, function(compressor) {\n        return this.body.may_throw(compressor);\n    });\n    def_may_throw(AST_Dot, function(compressor) {\n        if (is_nullish(this, compressor)) return false;\n        return !this.optional && this.expression.may_throw_on_access(compressor)\n            || this.expression.may_throw(compressor);\n    });\n    def_may_throw(AST_Sub, function(compressor) {\n        if (is_nullish(this, compressor)) return false;\n        return !this.optional && this.expression.may_throw_on_access(compressor)\n            || this.expression.may_throw(compressor)\n            || this.property.may_throw(compressor);\n    });\n    def_may_throw(AST_Chain, function(compressor) {\n        return this.expression.may_throw(compressor);\n    });\n    def_may_throw(AST_Switch, function(compressor) {\n        return this.expression.may_throw(compressor)\n            || any(this.body, compressor);\n    });\n    def_may_throw(AST_SymbolRef, function(compressor) {\n        return !this.is_declared(compressor) && !pure_prop_access_globals.has(this.name);\n    });\n    def_may_throw(AST_SymbolClassProperty, return_false);\n    def_may_throw(AST_Try, function(compressor) {\n        return this.bcatch ? this.bcatch.may_throw(compressor) : this.body.may_throw(compressor)\n            || this.bfinally && this.bfinally.may_throw(compressor);\n    });\n    def_may_throw(AST_Unary, function(compressor) {\n        if (this.operator == \"typeof\" && this.expression instanceof AST_SymbolRef)\n            return false;\n        return this.expression.may_throw(compressor);\n    });\n    def_may_throw(AST_VarDef, function(compressor) {\n        if (!this.value) return false;\n        return this.value.may_throw(compressor);\n    });\n})(function(node, func) {\n    node.DEFMETHOD(\"may_throw\", func);\n});\n\n// determine if expression is constant\n(function(def_is_constant_expression) {\n    function all_refs_local(scope) {\n        let result = true;\n        walk(this, node => {\n            if (node instanceof AST_SymbolRef) {\n                if (has_flag(this, INLINED)) {\n                    result = false;\n                    return walk_abort;\n                }\n                var def = node.definition();\n                if (\n                    member(def, this.enclosed)\n                    && !this.variables.has(def.name)\n                ) {\n                    if (scope) {\n                        var scope_def = scope.find_variable(node);\n                        if (def.undeclared ? !scope_def : scope_def === def) {\n                            result = \"f\";\n                            return true;\n                        }\n                    }\n                    result = false;\n                    return walk_abort;\n                }\n                return true;\n            }\n            if (node instanceof AST_This && this instanceof AST_Arrow) {\n                result = false;\n                return walk_abort;\n            }\n        });\n        return result;\n    }\n\n    def_is_constant_expression(AST_Node, return_false);\n    def_is_constant_expression(AST_Constant, return_true);\n    def_is_constant_expression(AST_Class, function(scope) {\n        if (this.extends && !this.extends.is_constant_expression(scope)) {\n            return false;\n        }\n\n        for (const prop of this.properties) {\n            if (prop.computed_key() && !prop.key.is_constant_expression(scope)) {\n                return false;\n            }\n            if (prop.static && prop.value && !prop.value.is_constant_expression(scope)) {\n                return false;\n            }\n            if (prop instanceof AST_ClassStaticBlock) {\n                return false;\n            }\n        }\n\n        return all_refs_local.call(this, scope);\n    });\n    def_is_constant_expression(AST_Lambda, all_refs_local);\n    def_is_constant_expression(AST_Unary, function() {\n        return this.expression.is_constant_expression();\n    });\n    def_is_constant_expression(AST_Binary, function() {\n        return this.left.is_constant_expression()\n            && this.right.is_constant_expression();\n    });\n    def_is_constant_expression(AST_Array, function() {\n        return this.elements.every((l) => l.is_constant_expression());\n    });\n    def_is_constant_expression(AST_Object, function() {\n        return this.properties.every((l) => l.is_constant_expression());\n    });\n    def_is_constant_expression(AST_ObjectProperty, function() {\n        return !!(!(this.key instanceof AST_Node) && this.value && this.value.is_constant_expression());\n    });\n})(function(node, func) {\n    node.DEFMETHOD(\"is_constant_expression\", func);\n});\n\n\n// may_throw_on_access()\n// returns true if this node may be null, undefined or contain `AST_Accessor`\n(function(def_may_throw_on_access) {\n    AST_Node.DEFMETHOD(\"may_throw_on_access\", function(compressor) {\n        return !compressor.option(\"pure_getters\")\n            || this._dot_throw(compressor);\n    });\n\n    function is_strict(compressor) {\n        return /strict/.test(compressor.option(\"pure_getters\"));\n    }\n\n    def_may_throw_on_access(AST_Node, is_strict);\n    def_may_throw_on_access(AST_Null, return_true);\n    def_may_throw_on_access(AST_Undefined, return_true);\n    def_may_throw_on_access(AST_Constant, return_false);\n    def_may_throw_on_access(AST_Array, return_false);\n    def_may_throw_on_access(AST_Object, function(compressor) {\n        if (!is_strict(compressor)) return false;\n        for (var i = this.properties.length; --i >=0;)\n            if (this.properties[i]._dot_throw(compressor)) return true;\n        return false;\n    });\n    // Do not be as strict with classes as we are with objects.\n    // Hopefully the community is not going to abuse static getters and setters.\n    // https://github.com/terser/terser/issues/724#issuecomment-643655656\n    def_may_throw_on_access(AST_Class, return_false);\n    def_may_throw_on_access(AST_ObjectProperty, return_false);\n    def_may_throw_on_access(AST_ObjectGetter, return_true);\n    def_may_throw_on_access(AST_Expansion, function(compressor) {\n        return this.expression._dot_throw(compressor);\n    });\n    def_may_throw_on_access(AST_Function, return_false);\n    def_may_throw_on_access(AST_Arrow, return_false);\n    def_may_throw_on_access(AST_UnaryPostfix, return_false);\n    def_may_throw_on_access(AST_UnaryPrefix, function() {\n        return this.operator == \"void\";\n    });\n    def_may_throw_on_access(AST_Binary, function(compressor) {\n        return (this.operator == \"&&\" || this.operator == \"||\" || this.operator == \"??\")\n            && (this.left._dot_throw(compressor) || this.right._dot_throw(compressor));\n    });\n    def_may_throw_on_access(AST_Assign, function(compressor) {\n        if (this.logical) return true;\n\n        return this.operator == \"=\"\n            && this.right._dot_throw(compressor);\n    });\n    def_may_throw_on_access(AST_Conditional, function(compressor) {\n        return this.consequent._dot_throw(compressor)\n            || this.alternative._dot_throw(compressor);\n    });\n    def_may_throw_on_access(AST_Dot, function(compressor) {\n        if (!is_strict(compressor)) return false;\n\n        if (this.property == \"prototype\") {\n            return !(\n                this.expression instanceof AST_Function\n                || this.expression instanceof AST_Class\n            );\n        }\n        return true;\n    });\n    def_may_throw_on_access(AST_Chain, function(compressor) {\n        return this.expression._dot_throw(compressor);\n    });\n    def_may_throw_on_access(AST_Sequence, function(compressor) {\n        return this.tail_node()._dot_throw(compressor);\n    });\n    def_may_throw_on_access(AST_SymbolRef, function(compressor) {\n        if (this.name === \"arguments\" && this.scope instanceof AST_Lambda) return false;\n        if (has_flag(this, UNDEFINED)) return true;\n        if (!is_strict(compressor)) return false;\n        if (is_undeclared_ref(this) && this.is_declared(compressor)) return false;\n        if (this.is_immutable()) return false;\n        var fixed = this.fixed_value();\n        return !fixed || fixed._dot_throw(compressor);\n    });\n})(function(node, func) {\n    node.DEFMETHOD(\"_dot_throw\", func);\n});\n\nfunction is_lhs(node, parent) {\n    if (parent instanceof AST_Unary && unary_side_effects.has(parent.operator)) return parent.expression;\n    if (parent instanceof AST_Assign && parent.left === node) return node;\n    if (parent instanceof AST_ForIn && parent.init === node) return node;\n}\n\n// method to negate an expression\n(function(def_negate) {\n    function basic_negation(exp) {\n        return make_node(AST_UnaryPrefix, exp, {\n            operator: \"!\",\n            expression: exp\n        });\n    }\n    function best(orig, alt, first_in_statement) {\n        var negated = basic_negation(orig);\n        if (first_in_statement) {\n            var stat = make_node(AST_SimpleStatement, alt, {\n                body: alt\n            });\n            return best_of_expression(negated, stat) === stat ? alt : negated;\n        }\n        return best_of_expression(negated, alt);\n    }\n    def_negate(AST_Node, function() {\n        return basic_negation(this);\n    });\n    def_negate(AST_Statement, function() {\n        throw new Error(\"Cannot negate a statement\");\n    });\n    def_negate(AST_Function, function() {\n        return basic_negation(this);\n    });\n    def_negate(AST_Class, function() {\n        return basic_negation(this);\n    });\n    def_negate(AST_Arrow, function() {\n        return basic_negation(this);\n    });\n    def_negate(AST_UnaryPrefix, function() {\n        if (this.operator == \"!\")\n            return this.expression;\n        return basic_negation(this);\n    });\n    def_negate(AST_Sequence, function(compressor) {\n        var expressions = this.expressions.slice();\n        expressions.push(expressions.pop().negate(compressor));\n        return make_sequence(this, expressions);\n    });\n    def_negate(AST_Conditional, function(compressor, first_in_statement) {\n        var self = this.clone();\n        self.consequent = self.consequent.negate(compressor);\n        self.alternative = self.alternative.negate(compressor);\n        return best(this, self, first_in_statement);\n    });\n    def_negate(AST_Binary, function(compressor, first_in_statement) {\n        var self = this.clone(), op = this.operator;\n        if (compressor.option(\"unsafe_comps\")) {\n            switch (op) {\n              case \"<=\" : self.operator = \">\"  ; return self;\n              case \"<\"  : self.operator = \">=\" ; return self;\n              case \">=\" : self.operator = \"<\"  ; return self;\n              case \">\"  : self.operator = \"<=\" ; return self;\n            }\n        }\n        switch (op) {\n          case \"==\" : self.operator = \"!=\"; return self;\n          case \"!=\" : self.operator = \"==\"; return self;\n          case \"===\": self.operator = \"!==\"; return self;\n          case \"!==\": self.operator = \"===\"; return self;\n          case \"&&\":\n            self.operator = \"||\";\n            self.left = self.left.negate(compressor, first_in_statement);\n            self.right = self.right.negate(compressor);\n            return best(this, self, first_in_statement);\n          case \"||\":\n            self.operator = \"&&\";\n            self.left = self.left.negate(compressor, first_in_statement);\n            self.right = self.right.negate(compressor);\n            return best(this, self, first_in_statement);\n        }\n        return basic_negation(this);\n    });\n})(function(node, func) {\n    node.DEFMETHOD(\"negate\", function(compressor, first_in_statement) {\n        return func.call(this, compressor, first_in_statement);\n    });\n});\n\n(function (def_bitwise_negate) {\n    function basic_negation(exp) {\n        return make_node(AST_UnaryPrefix, exp, {\n            operator: \"~\",\n            expression: exp\n        });\n    }\n\n    def_bitwise_negate(AST_Node, function() {\n        return basic_negation(this);\n    });\n\n    def_bitwise_negate(AST_Number, function() {\n        const neg = ~this.value;\n        if (neg.toString().length > this.value.toString().length) {\n            return basic_negation(this);\n        }\n        return make_node(AST_Number, this, { value: neg });\n    });\n\n    def_bitwise_negate(AST_UnaryPrefix, function(in_32_bit_context) {\n        if (this.operator == \"~\" && (in_32_bit_context || this.expression.is_32_bit_integer())) {\n            return this.expression;\n        } else {\n            return basic_negation(this);\n        }\n    });\n})(function (node, func) {\n    node.DEFMETHOD(\"bitwise_negate\", func);\n});\n\n// Is the callee of this function pure?\nvar global_pure_fns = makePredicate(\"Boolean decodeURI decodeURIComponent Date encodeURI encodeURIComponent Error escape EvalError isFinite isNaN Number Object parseFloat parseInt RangeError ReferenceError String SyntaxError TypeError unescape URIError\");\nAST_Call.DEFMETHOD(\"is_callee_pure\", function(compressor) {\n    if (compressor.option(\"unsafe\")) {\n        var expr = this.expression;\n        var first_arg = (this.args && this.args[0] && this.args[0].evaluate(compressor));\n        if (\n            expr.expression && expr.expression.name === \"hasOwnProperty\" &&\n            (first_arg == null || first_arg.thedef && first_arg.thedef.undeclared)\n        ) {\n            return false;\n        }\n        if (is_undeclared_ref(expr) && global_pure_fns.has(expr.name)) return true;\n        if (\n            expr instanceof AST_Dot\n            && is_undeclared_ref(expr.expression)\n            && is_pure_native_fn(expr.expression.name, expr.property)\n        ) {\n            return true;\n        }\n    }\n    if ((this instanceof AST_New) && compressor.option(\"pure_new\")) {\n        return true;\n    }\n    if (compressor.option(\"side_effects\") && has_annotation(this, _PURE)) {\n        return true;\n    }\n    return !compressor.pure_funcs(this);\n});\n\n// If I call this, is it a pure function?\nAST_Node.DEFMETHOD(\"is_call_pure\", return_false);\nAST_Dot.DEFMETHOD(\"is_call_pure\", function(compressor) {\n    if (!compressor.option(\"unsafe\")) return;\n    const expr = this.expression;\n\n    let native_obj;\n    if (expr instanceof AST_Array) {\n        native_obj = \"Array\";\n    } else if (expr.is_boolean()) {\n        native_obj = \"Boolean\";\n    } else if (expr.is_number(compressor)) {\n        native_obj = \"Number\";\n    } else if (expr instanceof AST_RegExp) {\n        native_obj = \"RegExp\";\n    } else if (expr.is_string(compressor)) {\n        native_obj = \"String\";\n    } else if (!this.may_throw_on_access(compressor)) {\n        native_obj = \"Object\";\n    }\n    return native_obj != null && is_pure_native_method(native_obj, this.property);\n});\n\n// tell me if a statement aborts\nconst aborts = (thing) => thing && thing.aborts();\n\n(function(def_aborts) {\n    def_aborts(AST_Statement, return_null);\n    def_aborts(AST_Jump, return_this);\n    function block_aborts() {\n        for (var i = 0; i < this.body.length; i++) {\n            if (aborts(this.body[i])) {\n                return this.body[i];\n            }\n        }\n        return null;\n    }\n    def_aborts(AST_Import, return_null);\n    def_aborts(AST_BlockStatement, block_aborts);\n    def_aborts(AST_SwitchBranch, block_aborts);\n    def_aborts(AST_DefClass, function () {\n        for (const prop of this.properties) {\n            if (prop instanceof AST_ClassStaticBlock) {\n                if (prop.aborts()) return prop;\n            }\n        }\n        return null;\n    });\n    def_aborts(AST_ClassStaticBlock, block_aborts);\n    def_aborts(AST_If, function() {\n        return this.alternative && aborts(this.body) && aborts(this.alternative) && this;\n    });\n})(function(node, func) {\n    node.DEFMETHOD(\"aborts\", func);\n});\n\nAST_Node.DEFMETHOD(\"contains_this\", function() {\n    return walk(this, node => {\n        if (node instanceof AST_This) return walk_abort;\n        if (\n            node !== this\n            && node instanceof AST_Scope\n            && !(node instanceof AST_Arrow)\n        ) {\n            return true;\n        }\n    });\n});\n\nfunction is_modified(compressor, tw, node, value, level, immutable) {\n    var parent = tw.parent(level);\n    var lhs = is_lhs(node, parent);\n    if (lhs) return lhs;\n    if (!immutable\n        && parent instanceof AST_Call\n        && parent.expression === node\n        && !(value instanceof AST_Arrow)\n        && !(value instanceof AST_Class)\n        && !parent.is_callee_pure(compressor)\n        && (!(value instanceof AST_Function)\n            || !(parent instanceof AST_New) && value.contains_this())) {\n        return true;\n    }\n    if (parent instanceof AST_Array) {\n        return is_modified(compressor, tw, parent, parent, level + 1);\n    }\n    if (parent instanceof AST_ObjectKeyVal && node === parent.value) {\n        var obj = tw.parent(level + 1);\n        return is_modified(compressor, tw, obj, obj, level + 2);\n    }\n    if (parent instanceof AST_PropAccess && parent.expression === node) {\n        var prop = read_property(value, parent.property);\n        return !immutable && is_modified(compressor, tw, parent, prop, level + 1);\n    }\n}\n\n/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n// methods to evaluate a constant expression\n\nfunction def_eval(node, func) {\n    node.DEFMETHOD(\"_eval\", func);\n}\n\n// Used to propagate a nullish short-circuit signal upwards through the chain.\nconst nullish = Symbol(\"This AST_Chain is nullish\");\n\n// If the node has been successfully reduced to a constant,\n// then its value is returned; otherwise the element itself\n// is returned.\n// They can be distinguished as constant value is never a\n// descendant of AST_Node.\nAST_Node.DEFMETHOD(\"evaluate\", function (compressor) {\n    if (!compressor.option(\"evaluate\"))\n        return this;\n    var val = this._eval(compressor, 1);\n    if (!val || val instanceof RegExp)\n        return val;\n    if (typeof val == \"function\" || typeof val == \"object\" || val == nullish)\n        return this;\n\n    // Evaluated strings can be larger than the original expression\n    if (typeof val === \"string\") {\n        const unevaluated_size = this.size(compressor);\n        if (val.length + 2 > unevaluated_size) return this;\n    }\n\n    return val;\n});\n\nvar unaryPrefix = makePredicate(\"! ~ - + void\");\nAST_Node.DEFMETHOD(\"is_constant\", function () {\n    // Accomodate when compress option evaluate=false\n    // as well as the common constant expressions !0 and -1\n    if (this instanceof AST_Constant) {\n        return !(this instanceof AST_RegExp);\n    } else {\n        return this instanceof AST_UnaryPrefix\n            && this.expression instanceof AST_Constant\n            && unaryPrefix.has(this.operator);\n    }\n});\n\ndef_eval(AST_Statement, function () {\n    throw new Error(string_template(\"Cannot evaluate a statement [{file}:{line},{col}]\", this.start));\n});\n\ndef_eval(AST_Lambda, return_this);\ndef_eval(AST_Class, return_this);\ndef_eval(AST_Node, return_this);\ndef_eval(AST_Constant, function () {\n    return this.getValue();\n});\n\nconst supports_bigint = typeof BigInt === \"function\";\ndef_eval(AST_BigInt, function () {\n    if (supports_bigint) {\n        return BigInt(this.value);\n    } else {\n        return this;\n    }\n});\n\ndef_eval(AST_RegExp, function (compressor) {\n    let evaluated = compressor.evaluated_regexps.get(this.value);\n    if (evaluated === undefined && regexp_is_safe(this.value.source)) {\n        try {\n            const { source, flags } = this.value;\n            evaluated = new RegExp(source, flags);\n        } catch (e) {\n            evaluated = null;\n        }\n        compressor.evaluated_regexps.set(this.value, evaluated);\n    }\n    return evaluated || this;\n});\n\ndef_eval(AST_TemplateString, function () {\n    if (this.segments.length !== 1) return this;\n    return this.segments[0].value;\n});\n\ndef_eval(AST_Function, function (compressor) {\n    if (compressor.option(\"unsafe\")) {\n        var fn = function () { };\n        fn.node = this;\n        fn.toString = () => this.print_to_string();\n        return fn;\n    }\n    return this;\n});\n\ndef_eval(AST_Array, function (compressor, depth) {\n    if (compressor.option(\"unsafe\")) {\n        var elements = [];\n        for (var i = 0, len = this.elements.length; i < len; i++) {\n            var element = this.elements[i];\n            var value = element._eval(compressor, depth);\n            if (element === value)\n                return this;\n            elements.push(value);\n        }\n        return elements;\n    }\n    return this;\n});\n\ndef_eval(AST_Object, function (compressor, depth) {\n    if (compressor.option(\"unsafe\")) {\n        var val = {};\n        for (var i = 0, len = this.properties.length; i < len; i++) {\n            var prop = this.properties[i];\n            if (prop instanceof AST_Expansion)\n                return this;\n            var key = prop.key;\n            if (key instanceof AST_Symbol) {\n                key = key.name;\n            } else if (key instanceof AST_Node) {\n                key = key._eval(compressor, depth);\n                if (key === prop.key)\n                    return this;\n            }\n            if (typeof Object.prototype[key] === \"function\") {\n                return this;\n            }\n            if (prop.value instanceof AST_Function)\n                continue;\n            val[key] = prop.value._eval(compressor, depth);\n            if (val[key] === prop.value)\n                return this;\n        }\n        return val;\n    }\n    return this;\n});\n\nvar non_converting_unary = makePredicate(\"! typeof void\");\ndef_eval(AST_UnaryPrefix, function (compressor, depth) {\n    var e = this.expression;\n    // Function would be evaluated to an array and so typeof would\n    // incorrectly return 'object'. Hence making is a special case.\n    if (compressor.option(\"typeofs\")\n        && this.operator == \"typeof\"\n        && (e instanceof AST_Lambda\n            || e instanceof AST_SymbolRef\n            && e.fixed_value() instanceof AST_Lambda)) {\n        return typeof function () { };\n    }\n    if (!non_converting_unary.has(this.operator))\n        depth++;\n    e = e._eval(compressor, depth);\n    if (e === this.expression)\n        return this;\n    switch (this.operator) {\n        case \"!\": return !e;\n        case \"typeof\":\n            // typeof <RegExp> returns \"object\" or \"function\" on different platforms\n            // so cannot evaluate reliably\n            if (e instanceof RegExp)\n                return this;\n            return typeof e;\n        case \"void\": return void e;\n        case \"~\": return ~e;\n        case \"-\": return -e;\n        case \"+\": return +e;\n    }\n    return this;\n});\n\nvar non_converting_binary = makePredicate(\"&& || ?? === !==\");\nconst identity_comparison = makePredicate(\"== != === !==\");\nconst has_identity = value => typeof value === \"object\"\n    || typeof value === \"function\"\n    || typeof value === \"symbol\";\n\ndef_eval(AST_Binary, function (compressor, depth) {\n    if (!non_converting_binary.has(this.operator))\n        depth++;\n\n    var left = this.left._eval(compressor, depth);\n    if (left === this.left)\n        return this;\n    var right = this.right._eval(compressor, depth);\n    if (right === this.right)\n        return this;\n\n    if (left != null\n        && right != null\n        && identity_comparison.has(this.operator)\n        && has_identity(left)\n        && has_identity(right)\n        && typeof left === typeof right) {\n        // Do not compare by reference\n        return this;\n    }\n\n    // Do not mix BigInt and Number; Don't use `>>>` on BigInt or `/ 0n`\n    if (\n        (typeof left === \"bigint\") !== (typeof right === \"bigint\")\n        || typeof left === \"bigint\"\n            && (this.operator === \">>>\"\n                || this.operator === \"/\" && Number(right) === 0)\n    ) {\n        return this;\n    }\n\n    var result;\n    switch (this.operator) {\n        case \"&&\": result = left && right; break;\n        case \"||\": result = left || right; break;\n        case \"??\": result = left != null ? left : right; break;\n        case \"|\": result = left | right; break;\n        case \"&\": result = left & right; break;\n        case \"^\": result = left ^ right; break;\n        case \"+\": result = left + right; break;\n        case \"*\": result = left * right; break;\n        case \"**\": result = left ** right; break;\n        case \"/\": result = left / right; break;\n        case \"%\": result = left % right; break;\n        case \"-\": result = left - right; break;\n        case \"<<\": result = left << right; break;\n        case \">>\": result = left >> right; break;\n        case \">>>\": result = left >>> right; break;\n        case \"==\": result = left == right; break;\n        case \"===\": result = left === right; break;\n        case \"!=\": result = left != right; break;\n        case \"!==\": result = left !== right; break;\n        case \"<\": result = left < right; break;\n        case \"<=\": result = left <= right; break;\n        case \">\": result = left > right; break;\n        case \">=\": result = left >= right; break;\n        default:\n            return this;\n    }\n    if (typeof result === \"number\" && isNaN(result) && compressor.find_parent(AST_With)) {\n        // leave original expression as is\n        return this;\n    }\n    return result;\n});\n\ndef_eval(AST_Conditional, function (compressor, depth) {\n    var condition = this.condition._eval(compressor, depth);\n    if (condition === this.condition)\n        return this;\n    var node = condition ? this.consequent : this.alternative;\n    var value = node._eval(compressor, depth);\n    return value === node ? this : value;\n});\n\n// Set of AST_SymbolRef which are currently being evaluated.\n// Avoids infinite recursion of ._eval()\nconst reentrant_ref_eval = new Set();\ndef_eval(AST_SymbolRef, function (compressor, depth) {\n    if (reentrant_ref_eval.has(this))\n        return this;\n\n    var fixed = this.fixed_value();\n    if (!fixed)\n        return this;\n\n    reentrant_ref_eval.add(this);\n    const value = fixed._eval(compressor, depth);\n    reentrant_ref_eval.delete(this);\n\n    if (value === fixed)\n        return this;\n\n    if (value && typeof value == \"object\") {\n        var escaped = this.definition().escaped;\n        if (escaped && depth > escaped)\n            return this;\n    }\n    return value;\n});\n\nconst global_objs = { Array, Math, Number, Object, String };\n\nconst regexp_flags = new Set([\n    \"dotAll\",\n    \"global\",\n    \"ignoreCase\",\n    \"multiline\",\n    \"sticky\",\n    \"unicode\",\n]);\n\ndef_eval(AST_PropAccess, function (compressor, depth) {\n    let obj = this.expression._eval(compressor, depth + 1);\n    if (obj === nullish || (this.optional && obj == null)) return nullish;\n\n    // `.length` of strings and arrays is always safe\n    if (this.property === \"length\") {\n        if (typeof obj === \"string\") {\n            return obj.length;\n        }\n\n        const is_spreadless_array =\n            obj instanceof AST_Array\n            && obj.elements.every(el => !(el instanceof AST_Expansion));\n\n        if (\n            is_spreadless_array\n            && obj.elements.every(el => !el.has_side_effects(compressor))\n        ) {\n            return obj.elements.length;\n        }\n    }\n\n    if (compressor.option(\"unsafe\")) {\n        var key = this.property;\n        if (key instanceof AST_Node) {\n            key = key._eval(compressor, depth);\n            if (key === this.property)\n                return this;\n        }\n\n        var exp = this.expression;\n        if (is_undeclared_ref(exp)) {\n            var aa;\n            var first_arg = exp.name === \"hasOwnProperty\"\n                && key === \"call\"\n                && (aa = compressor.parent() && compressor.parent().args)\n                && (aa && aa[0]\n                    && aa[0].evaluate(compressor));\n\n            first_arg = first_arg instanceof AST_Dot ? first_arg.expression : first_arg;\n\n            if (first_arg == null || first_arg.thedef && first_arg.thedef.undeclared) {\n                return this.clone();\n            }\n            if (!is_pure_native_value(exp.name, key))\n                return this;\n            obj = global_objs[exp.name];\n        } else {\n            if (obj instanceof RegExp) {\n                if (key == \"source\") {\n                    return regexp_source_fix(obj.source);\n                } else if (key == \"flags\" || regexp_flags.has(key)) {\n                    return obj[key];\n                }\n            }\n            if (!obj || obj === exp || !HOP(obj, key))\n                return this;\n\n            if (typeof obj == \"function\")\n                switch (key) {\n                    case \"name\":\n                        return obj.node.name ? obj.node.name.name : \"\";\n                    case \"length\":\n                        return obj.node.length_property();\n                    default:\n                        return this;\n                }\n        }\n        return obj[key];\n    }\n    return this;\n});\n\ndef_eval(AST_Chain, function (compressor, depth) {\n    const evaluated = this.expression._eval(compressor, depth);\n    return evaluated === nullish\n        ? undefined\n        : evaluated === this.expression\n          ? this\n          : evaluated;\n});\n\ndef_eval(AST_Call, function (compressor, depth) {\n    var exp = this.expression;\n\n    const callee = exp._eval(compressor, depth);\n    if (callee === nullish || (this.optional && callee == null)) return nullish;\n\n    if (compressor.option(\"unsafe\") && exp instanceof AST_PropAccess) {\n        var key = exp.property;\n        if (key instanceof AST_Node) {\n            key = key._eval(compressor, depth);\n            if (key === exp.property)\n                return this;\n        }\n        var val;\n        var e = exp.expression;\n        if (is_undeclared_ref(e)) {\n            var first_arg = e.name === \"hasOwnProperty\" &&\n                key === \"call\" &&\n                (this.args[0] && this.args[0].evaluate(compressor));\n\n            first_arg = first_arg instanceof AST_Dot ? first_arg.expression : first_arg;\n\n            if ((first_arg == null || first_arg.thedef && first_arg.thedef.undeclared)) {\n                return this.clone();\n            }\n            if (!is_pure_native_fn(e.name, key)) return this;\n            val = global_objs[e.name];\n        } else {\n            val = e._eval(compressor, depth + 1);\n            if (val === e || !val)\n                return this;\n            if (!is_pure_native_method(val.constructor.name, key))\n                return this;\n        }\n        var args = [];\n        for (var i = 0, len = this.args.length; i < len; i++) {\n            var arg = this.args[i];\n            var value = arg._eval(compressor, depth);\n            if (arg === value)\n                return this;\n            if (arg instanceof AST_Lambda)\n                return this;\n            args.push(value);\n        }\n        try {\n            return val[key].apply(val, args);\n        } catch (ex) {\n            // We don't really care\n        }\n    }\n    return this;\n});\n\n// Also a subclass of AST_Call\ndef_eval(AST_New, return_this);\n\n/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n// AST_Node#drop_side_effect_free() gets called when we don't care about the value,\n// only about side effects. We'll be defining this method for each node type in this module\n//\n// Examples:\n// foo++ -> foo++\n// 1 + func() -> func()\n// 10 -> (nothing)\n// knownPureFunc(foo++) -> foo++\n\nfunction def_drop_side_effect_free(node, func) {\n    node.DEFMETHOD(\"drop_side_effect_free\", func);\n}\n\n// Drop side-effect-free elements from an array of expressions.\n// Returns an array of expressions with side-effects or null\n// if all elements were dropped. Note: original array may be\n// returned if nothing changed.\nfunction trim(nodes, compressor, first_in_statement) {\n    var len = nodes.length;\n    if (!len)  return null;\n\n    var ret = [], changed = false;\n    for (var i = 0; i < len; i++) {\n        var node = nodes[i].drop_side_effect_free(compressor, first_in_statement);\n        changed |= node !== nodes[i];\n        if (node) {\n            ret.push(node);\n            first_in_statement = false;\n        }\n    }\n    return changed ? ret.length ? ret : null : nodes;\n}\n\ndef_drop_side_effect_free(AST_Node, return_this);\ndef_drop_side_effect_free(AST_Constant, return_null);\ndef_drop_side_effect_free(AST_This, return_null);\n\ndef_drop_side_effect_free(AST_Call, function (compressor, first_in_statement) {\n    if (is_nullish_shortcircuited(this, compressor)) {\n        return this.expression.drop_side_effect_free(compressor, first_in_statement);\n    }\n\n    if (!this.is_callee_pure(compressor)) {\n        if (this.expression.is_call_pure(compressor)) {\n            var exprs = this.args.slice();\n            exprs.unshift(this.expression.expression);\n            exprs = trim(exprs, compressor, first_in_statement);\n            return exprs && make_sequence(this, exprs);\n        }\n        if (is_func_expr(this.expression)\n            && (!this.expression.name || !this.expression.name.definition().references.length)) {\n            var node = this.clone();\n            node.expression.process_expression(false, compressor);\n            return node;\n        }\n        return this;\n    }\n\n    var args = trim(this.args, compressor, first_in_statement);\n    return args && make_sequence(this, args);\n});\n\ndef_drop_side_effect_free(AST_Accessor, return_null);\n\ndef_drop_side_effect_free(AST_Function, return_null);\n\ndef_drop_side_effect_free(AST_Arrow, return_null);\n\ndef_drop_side_effect_free(AST_Class, function (compressor) {\n    const with_effects = [];\n    const trimmed_extends = this.extends && this.extends.drop_side_effect_free(compressor);\n    if (trimmed_extends)\n        with_effects.push(trimmed_extends);\n\n    for (const prop of this.properties) {\n        if (prop instanceof AST_ClassStaticBlock) {\n            if (prop.has_side_effects(compressor)) {\n                return this; // Be cautious about these\n            }\n        } else {\n            const trimmed_prop = prop.drop_side_effect_free(compressor);\n            if (trimmed_prop) {\n                if (trimmed_prop.contains_this()) return this;\n\n                with_effects.push(trimmed_prop);\n            }\n        }\n    }\n\n    if (!with_effects.length)\n        return null;\n\n    const exprs = make_sequence(this, with_effects);\n    if (this instanceof AST_DefClass) {\n        // We want a statement\n        return make_node(AST_SimpleStatement, this, { body: exprs });\n    } else {\n        return exprs;\n    }\n});\n\ndef_drop_side_effect_free(AST_ClassProperty, function (compressor) {\n    const key = this.computed_key() && this.key.drop_side_effect_free(compressor);\n\n    const value = this.static && this.value\n        && this.value.drop_side_effect_free(compressor);\n\n    if (key && value)\n        return make_sequence(this, [key, value]);\n    return key || value || null;\n});\n\ndef_drop_side_effect_free(AST_Binary, function (compressor, first_in_statement) {\n    var right = this.right.drop_side_effect_free(compressor);\n    if (!right)\n        return this.left.drop_side_effect_free(compressor, first_in_statement);\n    if (lazy_op.has(this.operator)) {\n        if (right === this.right)\n            return this;\n        var node = this.clone();\n        node.right = right;\n        return node;\n    } else {\n        var left = this.left.drop_side_effect_free(compressor, first_in_statement);\n        if (!left)\n            return this.right.drop_side_effect_free(compressor, first_in_statement);\n        return make_sequence(this, [left, right]);\n    }\n});\n\ndef_drop_side_effect_free(AST_Assign, function (compressor) {\n    if (this.logical)\n        return this;\n\n    var left = this.left;\n    if (left.has_side_effects(compressor)\n        || compressor.has_directive(\"use strict\")\n        && left instanceof AST_PropAccess\n        && left.expression.is_constant()) {\n        return this;\n    }\n    set_flag(this, WRITE_ONLY);\n    while (left instanceof AST_PropAccess) {\n        left = left.expression;\n    }\n    if (left.is_constant_expression(compressor.find_parent(AST_Scope))) {\n        return this.right.drop_side_effect_free(compressor);\n    }\n    return this;\n});\n\ndef_drop_side_effect_free(AST_Conditional, function (compressor) {\n    var consequent = this.consequent.drop_side_effect_free(compressor);\n    var alternative = this.alternative.drop_side_effect_free(compressor);\n    if (consequent === this.consequent && alternative === this.alternative)\n        return this;\n    if (!consequent)\n        return alternative ? make_node(AST_Binary, this, {\n            operator: \"||\",\n            left: this.condition,\n            right: alternative\n        }) : this.condition.drop_side_effect_free(compressor);\n    if (!alternative)\n        return make_node(AST_Binary, this, {\n            operator: \"&&\",\n            left: this.condition,\n            right: consequent\n        });\n    var node = this.clone();\n    node.consequent = consequent;\n    node.alternative = alternative;\n    return node;\n});\n\ndef_drop_side_effect_free(AST_Unary, function (compressor, first_in_statement) {\n    if (unary_side_effects.has(this.operator)) {\n        if (!this.expression.has_side_effects(compressor)) {\n            set_flag(this, WRITE_ONLY);\n        } else {\n            clear_flag(this, WRITE_ONLY);\n        }\n        return this;\n    }\n    if (this.operator == \"typeof\" && this.expression instanceof AST_SymbolRef)\n        return null;\n    var expression = this.expression.drop_side_effect_free(compressor, first_in_statement);\n    if (first_in_statement && expression && is_iife_call(expression)) {\n        if (expression === this.expression && this.operator == \"!\")\n            return this;\n        return expression.negate(compressor, first_in_statement);\n    }\n    return expression;\n});\n\ndef_drop_side_effect_free(AST_SymbolRef, function (compressor) {\n    const safe_access = this.is_declared(compressor)\n        || pure_prop_access_globals.has(this.name);\n    return safe_access ? null : this;\n});\n\ndef_drop_side_effect_free(AST_Object, function (compressor, first_in_statement) {\n    var values = trim(this.properties, compressor, first_in_statement);\n    return values && make_sequence(this, values);\n});\n\ndef_drop_side_effect_free(AST_ObjectProperty, function (compressor, first_in_statement) {\n    const computed_key = this instanceof AST_ObjectKeyVal && this.key instanceof AST_Node;\n    const key = computed_key && this.key.drop_side_effect_free(compressor, first_in_statement);\n    const value = this.value && this.value.drop_side_effect_free(compressor, first_in_statement);\n    if (key && value) {\n        return make_sequence(this, [key, value]);\n    }\n    return key || value;\n});\n\ndef_drop_side_effect_free(AST_ConciseMethod, function () {\n    return this.computed_key() ? this.key : null;\n});\n\ndef_drop_side_effect_free(AST_ObjectGetter, function () {\n    return this.computed_key() ? this.key : null;\n});\n\ndef_drop_side_effect_free(AST_ObjectSetter, function () {\n    return this.computed_key() ? this.key : null;\n});\n\ndef_drop_side_effect_free(AST_Array, function (compressor, first_in_statement) {\n    var values = trim(this.elements, compressor, first_in_statement);\n    return values && make_sequence(this, values);\n});\n\ndef_drop_side_effect_free(AST_Dot, function (compressor, first_in_statement) {\n    if (is_nullish_shortcircuited(this, compressor)) {\n        return this.expression.drop_side_effect_free(compressor, first_in_statement);\n    }\n    if (!this.optional && this.expression.may_throw_on_access(compressor)) {\n        return this;\n    }\n\n    return this.expression.drop_side_effect_free(compressor, first_in_statement);\n});\n\ndef_drop_side_effect_free(AST_Sub, function (compressor, first_in_statement) {\n    if (is_nullish_shortcircuited(this, compressor)) {\n        return this.expression.drop_side_effect_free(compressor, first_in_statement);\n    }\n    if (!this.optional && this.expression.may_throw_on_access(compressor)) {\n        return this;\n    }\n\n    var property = this.property.drop_side_effect_free(compressor);\n    if (property && this.optional) return this;\n\n    var expression = this.expression.drop_side_effect_free(compressor, first_in_statement);\n\n    if (expression && property) return make_sequence(this, [expression, property]);\n    return expression || property;\n});\n\ndef_drop_side_effect_free(AST_Chain, function (compressor, first_in_statement) {\n    return this.expression.drop_side_effect_free(compressor, first_in_statement);\n});\n\ndef_drop_side_effect_free(AST_Sequence, function (compressor) {\n    var last = this.tail_node();\n    var expr = last.drop_side_effect_free(compressor);\n    if (expr === last)\n        return this;\n    var expressions = this.expressions.slice(0, -1);\n    if (expr)\n        expressions.push(expr);\n    if (!expressions.length) {\n        return make_node(AST_Number, this, { value: 0 });\n    }\n    return make_sequence(this, expressions);\n});\n\ndef_drop_side_effect_free(AST_Expansion, function (compressor, first_in_statement) {\n    return this.expression.drop_side_effect_free(compressor, first_in_statement);\n});\n\ndef_drop_side_effect_free(AST_TemplateSegment, return_null);\n\ndef_drop_side_effect_free(AST_TemplateString, function (compressor) {\n    var values = trim(this.segments, compressor, first_in_statement);\n    return values && make_sequence(this, values);\n});\n\n/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\nconst r_keep_assign = /keep_assign/;\n\n/** Drop unused variables from this scope */\nAST_Scope.DEFMETHOD(\"drop_unused\", function(compressor) {\n    if (!compressor.option(\"unused\")) return;\n    if (compressor.has_directive(\"use asm\")) return;\n    if (!this.variables) return; // not really a scope (eg: AST_Class)\n\n    var self = this;\n    if (self.pinned()) return;\n    var drop_funcs = !(self instanceof AST_Toplevel) || compressor.toplevel.funcs;\n    var drop_vars = !(self instanceof AST_Toplevel) || compressor.toplevel.vars;\n    const assign_as_unused = r_keep_assign.test(compressor.option(\"unused\")) ? return_false : function(node) {\n        if (node instanceof AST_Assign\n            && !node.logical\n            && (has_flag(node, WRITE_ONLY) || node.operator == \"=\")\n        ) {\n            return node.left;\n        }\n        if (node instanceof AST_Unary && has_flag(node, WRITE_ONLY)) {\n            return node.expression;\n        }\n    };\n    var this_def = null;\n    var in_use_ids = new Map();\n    var fixed_ids = new Map();\n    if (self instanceof AST_Toplevel && compressor.top_retain) {\n        self.variables.forEach(function(def) {\n            if (compressor.top_retain(def)) {\n                in_use_ids.set(def.id, def);\n            }\n        });\n    }\n    var var_defs_by_id = new Map();\n    var initializations = new Map();\n\n    // pass 1: find out which symbols are directly used in\n    // this scope (not in nested scopes).\n    var scope = this;\n    var tw = new TreeWalker(function(node, descend) {\n        if (node instanceof AST_Lambda && node.uses_arguments && !tw.has_directive(\"use strict\")) {\n            node.argnames.forEach(function(argname) {\n                if (!(argname instanceof AST_SymbolDeclaration)) return;\n                var def = argname.definition();\n                in_use_ids.set(def.id, def);\n            });\n        }\n        if (node === self) return;\n        if (node instanceof AST_Defun || node instanceof AST_DefClass) {\n            var node_def = node.name.definition();\n            const in_export = tw.parent() instanceof AST_Export;\n            if (in_export || !drop_funcs && scope === self) {\n                if (node_def.global) {\n                    in_use_ids.set(node_def.id, node_def);\n                }\n            }\n\n            if (node instanceof AST_DefClass && node.has_side_effects(compressor)) {\n                const save_this_def = this_def;\n                this_def = node_def;\n                node.visit_nondeferred_class_parts(tw);\n                this_def = save_this_def;\n            }\n\n            map_add(initializations, node_def.id, node);\n            return true; // don't go in nested scopes\n        }\n        // In the root scope, we drop things. In inner scopes, we just check for uses.\n        const in_root_scope = scope === self;\n        if (node instanceof AST_This && this_def && in_root_scope) {\n            in_use_ids.set(this_def.id, this_def);\n            return true;\n        }\n        if (node instanceof AST_SymbolFunarg && in_root_scope) {\n            map_add(var_defs_by_id, node.definition().id, node);\n        }\n        if (node instanceof AST_Definitions && in_root_scope) {\n            const in_export = tw.parent() instanceof AST_Export;\n            node.definitions.forEach(function(def) {\n                if (def.name instanceof AST_SymbolVar) {\n                    map_add(var_defs_by_id, def.name.definition().id, def);\n                }\n                if (in_export || !drop_vars) {\n                    walk(def.name, node => {\n                        if (node instanceof AST_SymbolDeclaration) {\n                            const def = node.definition();\n                            if (def.global) {\n                                in_use_ids.set(def.id, def);\n                            }\n                        }\n                    });\n                }\n                if (def.name instanceof AST_Destructuring) {\n                    def.walk(tw);\n                }\n                if (def.name instanceof AST_SymbolDeclaration && def.value) {\n                    var node_def = def.name.definition();\n                    map_add(initializations, node_def.id, def.value);\n                    if (!node_def.chained && def.name.fixed_value() === def.value) {\n                        fixed_ids.set(node_def.id, def);\n                    }\n                    if (def.value.has_side_effects(compressor)) {\n                        def.value.walk(tw);\n                    }\n                }\n            });\n            return true;\n        }\n        return scan_ref_scoped(node, descend);\n    });\n    self.walk(tw);\n    // pass 2: for every used symbol we need to walk its\n    // initialization code to figure out if it uses other\n    // symbols (that may not be in_use).\n    tw = new TreeWalker(scan_ref_scoped);\n    in_use_ids.forEach(function (def) {\n        var init = initializations.get(def.id);\n        if (init) init.forEach(function(init) {\n            init.walk(tw);\n        });\n    });\n    // pass 3: we should drop declarations not in_use\n    var tt = new TreeTransformer(\n        function before(node, descend, in_list) {\n            var parent = tt.parent();\n            if (drop_vars) {\n                const sym = assign_as_unused(node);\n                if (sym instanceof AST_SymbolRef) {\n                    var def = sym.definition();\n                    var in_use = in_use_ids.has(def.id);\n                    if (node instanceof AST_Assign) {\n                        if (!in_use || fixed_ids.has(def.id) && fixed_ids.get(def.id) !== node) {\n                            return maintain_this_binding(parent, node, node.right.transform(tt));\n                        }\n                    } else if (!in_use) {\n                        return in_list ? MAP.skip : make_node(AST_Number, node, { value: 0 });\n                    }\n                }\n            }\n            if (scope !== self) return;\n            var def;\n            if (node.name\n                && (node instanceof AST_ClassExpression\n                    && !keep_name(compressor.option(\"keep_classnames\"), (def = node.name.definition()).name)\n                || node instanceof AST_Function\n                    && !keep_name(compressor.option(\"keep_fnames\"), (def = node.name.definition()).name))) {\n                // any declarations with same name will overshadow\n                // name of this anonymous function and can therefore\n                // never be used anywhere\n                if (!in_use_ids.has(def.id) || def.orig.length > 1) node.name = null;\n            }\n            if (node instanceof AST_Lambda && !(node instanceof AST_Accessor)) {\n                var trim = !compressor.option(\"keep_fargs\");\n                for (var a = node.argnames, i = a.length; --i >= 0;) {\n                    var sym = a[i];\n                    if (sym instanceof AST_Expansion) {\n                        sym = sym.expression;\n                    }\n                    if (sym instanceof AST_DefaultAssign) {\n                        sym = sym.left;\n                    }\n                    // Do not drop destructuring arguments.\n                    // They constitute a type assertion of sorts\n                    if (\n                        !(sym instanceof AST_Destructuring)\n                        && !in_use_ids.has(sym.definition().id)\n                    ) {\n                        set_flag(sym, UNUSED);\n                        if (trim) {\n                            a.pop();\n                        }\n                    } else {\n                        trim = false;\n                    }\n                }\n            }\n            if (node instanceof AST_DefClass && node !== self) {\n                const def = node.name.definition();\n                descend(node, this);\n                const keep_class = def.global && !drop_funcs || in_use_ids.has(def.id);\n                if (!keep_class) {\n                    const kept = node.drop_side_effect_free(compressor);\n                    if (kept == null) {\n                        def.eliminated++;\n                        return in_list ? MAP.skip : make_node(AST_EmptyStatement, node);\n                    }\n                    return kept;\n                }\n                return node;\n            }\n            if (node instanceof AST_Defun && node !== self) {\n                const def = node.name.definition();\n                const keep = def.global && !drop_funcs || in_use_ids.has(def.id);\n                if (!keep) {\n                    def.eliminated++;\n                    return in_list ? MAP.skip : make_node(AST_EmptyStatement, node);\n                }\n            }\n            if (node instanceof AST_Definitions && !(parent instanceof AST_ForIn && parent.init === node)) {\n                var drop_block = !(parent instanceof AST_Toplevel) && !(node instanceof AST_Var);\n                // place uninitialized names at the start\n                var body = [], head = [], tail = [];\n                // for unused names whose initialization has\n                // side effects, we can cascade the init. code\n                // into the next one, or next statement.\n                var side_effects = [];\n                node.definitions.forEach(function(def) {\n                    if (def.value) def.value = def.value.transform(tt);\n                    var is_destructure = def.name instanceof AST_Destructuring;\n                    var sym = is_destructure\n                        ? new SymbolDef(null, { name: \"<destructure>\" }) /* fake SymbolDef */\n                        : def.name.definition();\n                    if (drop_block && sym.global) return tail.push(def);\n                    if (!(drop_vars || drop_block)\n                        || is_destructure\n                            && (def.name.names.length\n                                || def.name.is_array\n                                || compressor.option(\"pure_getters\") != true)\n                        || in_use_ids.has(sym.id)\n                    ) {\n                        if (def.value && fixed_ids.has(sym.id) && fixed_ids.get(sym.id) !== def) {\n                            def.value = def.value.drop_side_effect_free(compressor);\n                        }\n                        if (def.name instanceof AST_SymbolVar) {\n                            var var_defs = var_defs_by_id.get(sym.id);\n                            if (var_defs.length > 1 && (!def.value || sym.orig.indexOf(def.name) > sym.eliminated)) {\n                                if (def.value) {\n                                    var ref = make_node(AST_SymbolRef, def.name, def.name);\n                                    sym.references.push(ref);\n                                    var assign = make_node(AST_Assign, def, {\n                                        operator: \"=\",\n                                        logical: false,\n                                        left: ref,\n                                        right: def.value\n                                    });\n                                    if (fixed_ids.get(sym.id) === def) {\n                                        fixed_ids.set(sym.id, assign);\n                                    }\n                                    side_effects.push(assign.transform(tt));\n                                }\n                                remove(var_defs, def);\n                                sym.eliminated++;\n                                return;\n                            }\n                        }\n                        if (def.value) {\n                            if (side_effects.length > 0) {\n                                if (tail.length > 0) {\n                                    side_effects.push(def.value);\n                                    def.value = make_sequence(def.value, side_effects);\n                                } else {\n                                    body.push(make_node(AST_SimpleStatement, node, {\n                                        body: make_sequence(node, side_effects)\n                                    }));\n                                }\n                                side_effects = [];\n                            }\n                            tail.push(def);\n                        } else {\n                            head.push(def);\n                        }\n                    } else if (sym.orig[0] instanceof AST_SymbolCatch) {\n                        var value = def.value && def.value.drop_side_effect_free(compressor);\n                        if (value) side_effects.push(value);\n                        def.value = null;\n                        head.push(def);\n                    } else {\n                        var value = def.value && def.value.drop_side_effect_free(compressor);\n                        if (value) {\n                            side_effects.push(value);\n                        }\n                        sym.eliminated++;\n                    }\n                });\n                if (head.length > 0 || tail.length > 0) {\n                    node.definitions = head.concat(tail);\n                    body.push(node);\n                }\n                if (side_effects.length > 0) {\n                    body.push(make_node(AST_SimpleStatement, node, {\n                        body: make_sequence(node, side_effects)\n                    }));\n                }\n                switch (body.length) {\n                  case 0:\n                    return in_list ? MAP.skip : make_node(AST_EmptyStatement, node);\n                  case 1:\n                    return body[0];\n                  default:\n                    return in_list ? MAP.splice(body) : make_node(AST_BlockStatement, node, { body });\n                }\n            }\n            // certain combination of unused name + side effect leads to:\n            //    https://github.com/mishoo/UglifyJS2/issues/44\n            //    https://github.com/mishoo/UglifyJS2/issues/1830\n            //    https://github.com/mishoo/UglifyJS2/issues/1838\n            // that's an invalid AST.\n            // We fix it at this stage by moving the `var` outside the `for`.\n            if (node instanceof AST_For) {\n                descend(node, this);\n                var block;\n                if (node.init instanceof AST_BlockStatement) {\n                    block = node.init;\n                    node.init = block.body.pop();\n                    block.body.push(node);\n                }\n                if (node.init instanceof AST_SimpleStatement) {\n                    node.init = node.init.body;\n                } else if (is_empty(node.init)) {\n                    node.init = null;\n                }\n                return !block ? node : in_list ? MAP.splice(block.body) : block;\n            }\n            if (node instanceof AST_LabeledStatement\n                && node.body instanceof AST_For\n            ) {\n                descend(node, this);\n                if (node.body instanceof AST_BlockStatement) {\n                    var block = node.body;\n                    node.body = block.body.pop();\n                    block.body.push(node);\n                    return in_list ? MAP.splice(block.body) : block;\n                }\n                return node;\n            }\n            if (node instanceof AST_BlockStatement) {\n                descend(node, this);\n                if (in_list && node.body.every(can_be_evicted_from_block)) {\n                    return MAP.splice(node.body);\n                }\n                return node;\n            }\n            if (node instanceof AST_Scope && !(node instanceof AST_ClassStaticBlock)) {\n                const save_scope = scope;\n                scope = node;\n                descend(node, this);\n                scope = save_scope;\n                return node;\n            }\n        }\n    );\n\n    self.transform(tt);\n\n    function scan_ref_scoped(node, descend) {\n        var node_def;\n        const sym = assign_as_unused(node);\n        if (sym instanceof AST_SymbolRef\n            && !is_ref_of(node.left, AST_SymbolBlockDeclaration)\n            && self.variables.get(sym.name) === (node_def = sym.definition())\n        ) {\n            if (node instanceof AST_Assign) {\n                node.right.walk(tw);\n                if (!node_def.chained && node.left.fixed_value() === node.right) {\n                    fixed_ids.set(node_def.id, node);\n                }\n            }\n            return true;\n        }\n        if (node instanceof AST_SymbolRef) {\n            node_def = node.definition();\n            if (!in_use_ids.has(node_def.id)) {\n                in_use_ids.set(node_def.id, node_def);\n                if (node_def.orig[0] instanceof AST_SymbolCatch) {\n                    const redef = node_def.scope.is_block_scope()\n                        && node_def.scope.get_defun_scope().variables.get(node_def.name);\n                    if (redef) in_use_ids.set(redef.id, redef);\n                }\n            }\n            return true;\n        }\n        if (node instanceof AST_Class) {\n            descend();\n            return true;\n        }\n        if (node instanceof AST_Scope && !(node instanceof AST_ClassStaticBlock)) {\n            var save_scope = scope;\n            scope = node;\n            descend();\n            scope = save_scope;\n            return true;\n        }\n    }\n});\n\n/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n/**\n * Define the method AST_Node#reduce_vars, which goes through the AST in\n * execution order to perform basic flow analysis\n */\nfunction def_reduce_vars(node, func) {\n    node.DEFMETHOD(\"reduce_vars\", func);\n}\n\ndef_reduce_vars(AST_Node, noop);\n\n/** Clear definition properties */\nfunction reset_def(compressor, def) {\n    def.assignments = 0;\n    def.chained = false;\n    def.direct_access = false;\n    def.escaped = 0;\n    def.recursive_refs = 0;\n    def.references = [];\n    def.single_use = undefined;\n    if (\n        def.scope.pinned()\n        || (def.orig[0] instanceof AST_SymbolFunarg && def.scope.uses_arguments)\n    ) {\n        def.fixed = false;\n    } else if (def.orig[0] instanceof AST_SymbolConst || !compressor.exposed(def)) {\n        def.fixed = def.init;\n    } else {\n        def.fixed = false;\n    }\n}\n\nfunction reset_variables(tw, compressor, node) {\n    node.variables.forEach(function(def) {\n        reset_def(compressor, def);\n        if (def.fixed === null) {\n            tw.defs_to_safe_ids.set(def.id, tw.safe_ids);\n            mark(tw, def, true);\n        } else if (def.fixed) {\n            tw.loop_ids.set(def.id, tw.in_loop);\n            mark(tw, def, true);\n        }\n    });\n}\n\nfunction reset_block_variables(compressor, node) {\n    if (node.block_scope) node.block_scope.variables.forEach((def) => {\n        reset_def(compressor, def);\n    });\n}\n\nfunction push(tw) {\n    tw.safe_ids = Object.create(tw.safe_ids);\n}\n\nfunction pop(tw) {\n    tw.safe_ids = Object.getPrototypeOf(tw.safe_ids);\n}\n\nfunction mark(tw, def, safe) {\n    tw.safe_ids[def.id] = safe;\n}\n\nfunction safe_to_read(tw, def) {\n    if (def.single_use == \"m\") return false;\n    if (tw.safe_ids[def.id]) {\n        if (def.fixed == null) {\n            var orig = def.orig[0];\n            if (orig instanceof AST_SymbolFunarg || orig.name == \"arguments\") return false;\n            def.fixed = make_node(AST_Undefined, orig);\n        }\n        return true;\n    }\n    return def.fixed instanceof AST_Defun;\n}\n\nfunction safe_to_assign(tw, def, scope, value) {\n    if (def.fixed === undefined) return true;\n    let def_safe_ids;\n    if (def.fixed === null\n        && (def_safe_ids = tw.defs_to_safe_ids.get(def.id))\n    ) {\n        def_safe_ids[def.id] = false;\n        tw.defs_to_safe_ids.delete(def.id);\n        return true;\n    }\n    if (!HOP(tw.safe_ids, def.id)) return false;\n    if (!safe_to_read(tw, def)) return false;\n    if (def.fixed === false) return false;\n    if (def.fixed != null && (!value || def.references.length > def.assignments)) return false;\n    if (def.fixed instanceof AST_Defun) {\n        return value instanceof AST_Node && def.fixed.parent_scope === scope;\n    }\n    return def.orig.every((sym) => {\n        return !(sym instanceof AST_SymbolConst\n            || sym instanceof AST_SymbolDefun\n            || sym instanceof AST_SymbolLambda);\n    });\n}\n\nfunction ref_once(tw, compressor, def) {\n    return compressor.option(\"unused\")\n        && !def.scope.pinned()\n        && def.references.length - def.recursive_refs == 1\n        && tw.loop_ids.get(def.id) === tw.in_loop;\n}\n\nfunction is_immutable(value) {\n    if (!value) return false;\n    return value.is_constant()\n        || value instanceof AST_Lambda\n        || value instanceof AST_This;\n}\n\n// A definition \"escapes\" when its value can leave the point of use.\n// Example: `a = b || c`\n// In this example, \"b\" and \"c\" are escaping, because they're going into \"a\"\n//\n// def.escaped is != 0 when it escapes.\n//\n// When greater than 1, it means that N chained properties will be read off\n// of that def before an escape occurs. This is useful for evaluating\n// property accesses, where you need to know when to stop.\nfunction mark_escaped(tw, d, scope, node, value, level = 0, depth = 1) {\n    var parent = tw.parent(level);\n    if (value) {\n        if (value.is_constant()) return;\n        if (value instanceof AST_ClassExpression) return;\n    }\n\n    if (\n        parent instanceof AST_Assign && (parent.operator === \"=\" || parent.logical) && node === parent.right\n        || parent instanceof AST_Call && (node !== parent.expression || parent instanceof AST_New)\n        || parent instanceof AST_Exit && node === parent.value && node.scope !== d.scope\n        || parent instanceof AST_VarDef && node === parent.value\n        || parent instanceof AST_Yield && node === parent.value && node.scope !== d.scope\n    ) {\n        if (depth > 1 && !(value && value.is_constant_expression(scope))) depth = 1;\n        if (!d.escaped || d.escaped > depth) d.escaped = depth;\n        return;\n    } else if (\n        parent instanceof AST_Array\n        || parent instanceof AST_Await\n        || parent instanceof AST_Binary && lazy_op.has(parent.operator)\n        || parent instanceof AST_Conditional && node !== parent.condition\n        || parent instanceof AST_Expansion\n        || parent instanceof AST_Sequence && node === parent.tail_node()\n    ) {\n        mark_escaped(tw, d, scope, parent, parent, level + 1, depth);\n    } else if (parent instanceof AST_ObjectKeyVal && node === parent.value) {\n        var obj = tw.parent(level + 1);\n\n        mark_escaped(tw, d, scope, obj, obj, level + 2, depth);\n    } else if (parent instanceof AST_PropAccess && node === parent.expression) {\n        value = read_property(value, parent.property);\n\n        mark_escaped(tw, d, scope, parent, value, level + 1, depth + 1);\n        if (value) return;\n    }\n\n    if (level > 0) return;\n    if (parent instanceof AST_Sequence && node !== parent.tail_node()) return;\n    if (parent instanceof AST_SimpleStatement) return;\n\n    d.direct_access = true;\n}\n\nconst suppress = node => walk(node, node => {\n    if (!(node instanceof AST_Symbol)) return;\n    var d = node.definition();\n    if (!d) return;\n    if (node instanceof AST_SymbolRef) d.references.push(node);\n    d.fixed = false;\n});\n\ndef_reduce_vars(AST_Accessor, function(tw, descend, compressor) {\n    push(tw);\n    reset_variables(tw, compressor, this);\n    descend();\n    pop(tw);\n    return true;\n});\n\ndef_reduce_vars(AST_Assign, function(tw, descend, compressor) {\n    var node = this;\n    if (node.left instanceof AST_Destructuring) {\n        suppress(node.left);\n        return;\n    }\n\n    const finish_walk = () => {\n        if (node.logical) {\n            node.left.walk(tw);\n\n            push(tw);\n            node.right.walk(tw);\n            pop(tw);\n\n            return true;\n        }\n    };\n\n    var sym = node.left;\n    if (!(sym instanceof AST_SymbolRef)) return finish_walk();\n\n    var def = sym.definition();\n    var safe = safe_to_assign(tw, def, sym.scope, node.right);\n    def.assignments++;\n    if (!safe) return finish_walk();\n\n    var fixed = def.fixed;\n    if (!fixed && node.operator != \"=\" && !node.logical) return finish_walk();\n\n    var eq = node.operator == \"=\";\n    var value = eq ? node.right : node;\n    if (is_modified(compressor, tw, node, value, 0)) return finish_walk();\n\n    def.references.push(sym);\n\n    if (!node.logical) {\n        if (!eq) def.chained = true;\n\n        def.fixed = eq ? function() {\n            return node.right;\n        } : function() {\n            return make_node(AST_Binary, node, {\n                operator: node.operator.slice(0, -1),\n                left: fixed instanceof AST_Node ? fixed : fixed(),\n                right: node.right\n            });\n        };\n    }\n\n    if (node.logical) {\n        mark(tw, def, false);\n        push(tw);\n        node.right.walk(tw);\n        pop(tw);\n        return true;\n    }\n\n    mark(tw, def, false);\n    node.right.walk(tw);\n    mark(tw, def, true);\n\n    mark_escaped(tw, def, sym.scope, node, value, 0, 1);\n\n    return true;\n});\n\ndef_reduce_vars(AST_Binary, function(tw) {\n    if (!lazy_op.has(this.operator)) return;\n    this.left.walk(tw);\n    push(tw);\n    this.right.walk(tw);\n    pop(tw);\n    return true;\n});\n\ndef_reduce_vars(AST_Block, function(tw, descend, compressor) {\n    reset_block_variables(compressor, this);\n});\n\ndef_reduce_vars(AST_Case, function(tw) {\n    push(tw);\n    this.expression.walk(tw);\n    pop(tw);\n    push(tw);\n    walk_body(this, tw);\n    pop(tw);\n    return true;\n});\n\ndef_reduce_vars(AST_Class, function(tw, descend) {\n    clear_flag(this, INLINED);\n    push(tw);\n    descend();\n    pop(tw);\n    return true;\n});\n\ndef_reduce_vars(AST_ClassStaticBlock, function(tw, descend, compressor) {\n    reset_block_variables(compressor, this);\n});\n\ndef_reduce_vars(AST_Conditional, function(tw) {\n    this.condition.walk(tw);\n    push(tw);\n    this.consequent.walk(tw);\n    pop(tw);\n    push(tw);\n    this.alternative.walk(tw);\n    pop(tw);\n    return true;\n});\n\ndef_reduce_vars(AST_Chain, function(tw, descend) {\n    // Chains' conditions apply left-to-right, cumulatively.\n    // If we walk normally we don't go in that order because we would pop before pushing again\n    // Solution: AST_PropAccess and AST_Call push when they are optional, and never pop.\n    // Then we pop everything when they are done being walked.\n    const safe_ids = tw.safe_ids;\n\n    descend();\n\n    // Unroll back to start\n    tw.safe_ids = safe_ids;\n    return true;\n});\n\ndef_reduce_vars(AST_Call, function (tw) {\n    this.expression.walk(tw);\n\n    if (this.optional) {\n        // Never pop -- it's popped at AST_Chain above\n        push(tw);\n    }\n\n    for (const arg of this.args) arg.walk(tw);\n\n    return true;\n});\n\ndef_reduce_vars(AST_PropAccess, function (tw) {\n    if (!this.optional) return;\n\n    this.expression.walk(tw);\n\n    // Never pop -- it's popped at AST_Chain above\n    push(tw);\n\n    if (this.property instanceof AST_Node) this.property.walk(tw);\n\n    return true;\n});\n\ndef_reduce_vars(AST_Default, function(tw, descend) {\n    push(tw);\n    descend();\n    pop(tw);\n    return true;\n});\n\nfunction mark_lambda(tw, descend, compressor) {\n    clear_flag(this, INLINED);\n    push(tw);\n    reset_variables(tw, compressor, this);\n\n    var iife;\n    if (!this.name\n        && !this.uses_arguments\n        && !this.pinned()\n        && (iife = tw.parent()) instanceof AST_Call\n        && iife.expression === this\n        && !iife.args.some(arg => arg instanceof AST_Expansion)\n        && this.argnames.every(arg_name => arg_name instanceof AST_Symbol)\n    ) {\n        // Virtually turn IIFE parameters into variable definitions:\n        //   (function(a,b) {...})(c,d) => (function() {var a=c,b=d; ...})()\n        // So existing transformation rules can work on them.\n        this.argnames.forEach((arg, i) => {\n            if (!arg.definition) return;\n            var d = arg.definition();\n            // Avoid setting fixed when there's more than one origin for a variable value\n            if (d.orig.length > 1) return;\n            if (d.fixed === undefined && (!this.uses_arguments || tw.has_directive(\"use strict\"))) {\n                d.fixed = function() {\n                    return iife.args[i] || make_node(AST_Undefined, iife);\n                };\n                tw.loop_ids.set(d.id, tw.in_loop);\n                mark(tw, d, true);\n            } else {\n                d.fixed = false;\n            }\n        });\n    }\n\n    descend();\n    pop(tw);\n\n    handle_defined_after_hoist(this);\n\n    return true;\n}\n\n/**\n * It's possible for a hoisted function to use something that's not defined yet. Example:\n *\n * hoisted();\n * var defined_after = true;\n * function hoisted() {\n *   // use defined_after\n * }\n *\n * This function is called on the parent to handle this issue.\n */\nfunction handle_defined_after_hoist(parent) {\n    const defuns = [];\n    walk(parent, node => {\n        if (node === parent) return;\n        if (node instanceof AST_Defun) defuns.push(node);\n        if (\n            node instanceof AST_Scope\n            || node instanceof AST_SimpleStatement\n        ) return true;\n    });\n\n    const symbols_of_interest = new Set();\n    const defuns_of_interest = new Set();\n    const potential_conflicts = [];\n\n    for (const defun of defuns) {\n        const fname_def = defun.name.definition();\n        const found_self_ref_in_other_defuns = defuns.some(\n            d => d !== defun && d.enclosed.indexOf(fname_def) !== -1\n        );\n\n        for (const def of defun.enclosed) {\n            if (\n                def.fixed === false\n                || def === fname_def\n                || def.scope.get_defun_scope() !== parent\n            ) {\n                continue;\n            }\n\n            // defun is hoisted, so always safe\n            if (\n                def.assignments === 0\n                && def.orig.length === 1\n                && def.orig[0] instanceof AST_SymbolDefun\n            ) {\n                continue;\n            }\n\n            if (found_self_ref_in_other_defuns) {\n                def.fixed = false;\n                continue;\n            }\n\n            // for the slower checks below this loop\n            potential_conflicts.push({ defun, def, fname_def });\n            symbols_of_interest.add(def.id);\n            symbols_of_interest.add(fname_def.id);\n            defuns_of_interest.add(defun);\n        }\n    }\n\n    // linearize all symbols, and locate defs that are read after the defun\n    if (potential_conflicts.length) {\n        // All \"symbols of interest\", that is, defuns or defs, that we found.\n        // These are placed in order so we can check which is after which.\n        const found_symbols = [];\n        // Indices of `found_symbols` which are writes\n        const found_symbol_writes = new Set();\n        // Defun ranges are recorded because we don't care if a function uses the def internally\n        const defun_ranges = new Map();\n\n        let tw;\n        parent.walk((tw = new TreeWalker((node, descend) => {\n            if (node instanceof AST_Defun && defuns_of_interest.has(node)) {\n                const start = found_symbols.length;\n                descend();\n                const end = found_symbols.length;\n\n                defun_ranges.set(node, { start, end });\n                return true;\n            }\n            // if we found a defun on the list, mark IN_DEFUN=id and descend\n\n            if (node instanceof AST_Symbol && node.thedef) {\n                const id = node.definition().id;\n                if (symbols_of_interest.has(id)) {\n                    if (node instanceof AST_SymbolDeclaration || is_lhs(node, tw)) {\n                        found_symbol_writes.add(found_symbols.length);\n                    }\n                    found_symbols.push(id);\n                }\n            }\n        })));\n\n        for (const { def, defun, fname_def } of potential_conflicts) {\n            const defun_range = defun_ranges.get(defun);\n\n            // find the index in `found_symbols`, with some special rules:\n            const find = (sym_id, starting_at = 0, must_be_write = false) => {\n                let index = starting_at;\n\n                for (;;) {\n                    index = found_symbols.indexOf(sym_id, index);\n\n                    if (index === -1) {\n                        break;\n                    } else if (index >= defun_range.start && index < defun_range.end) {\n                        index = defun_range.end;\n                        continue;\n                    } else if (must_be_write && !found_symbol_writes.has(index)) {\n                        index++;\n                        continue;\n                    } else {\n                        break;\n                    }\n                }\n\n                return index;\n            };\n\n            const read_defun_at = find(fname_def.id);\n            const wrote_def_at = find(def.id, read_defun_at + 1, true);\n\n            const wrote_def_after_reading_defun = read_defun_at != -1 && wrote_def_at != -1 && wrote_def_at > read_defun_at;\n\n            if (wrote_def_after_reading_defun) {\n                def.fixed = false;\n            }\n        }\n    }\n}\n\ndef_reduce_vars(AST_Lambda, mark_lambda);\n\ndef_reduce_vars(AST_Do, function(tw, descend, compressor) {\n    reset_block_variables(compressor, this);\n    const saved_loop = tw.in_loop;\n    tw.in_loop = this;\n    push(tw);\n    this.body.walk(tw);\n    if (has_break_or_continue(this)) {\n        pop(tw);\n        push(tw);\n    }\n    this.condition.walk(tw);\n    pop(tw);\n    tw.in_loop = saved_loop;\n    return true;\n});\n\ndef_reduce_vars(AST_For, function(tw, descend, compressor) {\n    reset_block_variables(compressor, this);\n    if (this.init) this.init.walk(tw);\n    const saved_loop = tw.in_loop;\n    tw.in_loop = this;\n    push(tw);\n    if (this.condition) this.condition.walk(tw);\n    this.body.walk(tw);\n    if (this.step) {\n        if (has_break_or_continue(this)) {\n            pop(tw);\n            push(tw);\n        }\n        this.step.walk(tw);\n    }\n    pop(tw);\n    tw.in_loop = saved_loop;\n    return true;\n});\n\ndef_reduce_vars(AST_ForIn, function(tw, descend, compressor) {\n    reset_block_variables(compressor, this);\n    suppress(this.init);\n    this.object.walk(tw);\n    const saved_loop = tw.in_loop;\n    tw.in_loop = this;\n    push(tw);\n    this.body.walk(tw);\n    pop(tw);\n    tw.in_loop = saved_loop;\n    return true;\n});\n\ndef_reduce_vars(AST_If, function(tw) {\n    this.condition.walk(tw);\n    push(tw);\n    this.body.walk(tw);\n    pop(tw);\n    if (this.alternative) {\n        push(tw);\n        this.alternative.walk(tw);\n        pop(tw);\n    }\n    return true;\n});\n\ndef_reduce_vars(AST_LabeledStatement, function(tw) {\n    push(tw);\n    this.body.walk(tw);\n    pop(tw);\n    return true;\n});\n\ndef_reduce_vars(AST_SymbolCatch, function() {\n    this.definition().fixed = false;\n});\n\ndef_reduce_vars(AST_SymbolRef, function(tw, descend, compressor) {\n    var d = this.definition();\n    d.references.push(this);\n    if (d.references.length == 1\n        && !d.fixed\n        && d.orig[0] instanceof AST_SymbolDefun) {\n        tw.loop_ids.set(d.id, tw.in_loop);\n    }\n    var fixed_value;\n    if (d.fixed === undefined || !safe_to_read(tw, d)) {\n        d.fixed = false;\n    } else if (d.fixed) {\n        fixed_value = this.fixed_value();\n        if (\n            fixed_value instanceof AST_Lambda\n            && is_recursive_ref(tw, d)\n        ) {\n            d.recursive_refs++;\n        } else if (fixed_value\n            && !compressor.exposed(d)\n            && ref_once(tw, compressor, d)\n        ) {\n            d.single_use =\n                fixed_value instanceof AST_Lambda && !fixed_value.pinned()\n                || fixed_value instanceof AST_Class\n                || d.scope === this.scope && fixed_value.is_constant_expression();\n        } else {\n            d.single_use = false;\n        }\n        if (is_modified(compressor, tw, this, fixed_value, 0, is_immutable(fixed_value))) {\n            if (d.single_use) {\n                d.single_use = \"m\";\n            } else {\n                d.fixed = false;\n            }\n        }\n    }\n    mark_escaped(tw, d, this.scope, this, fixed_value, 0, 1);\n});\n\ndef_reduce_vars(AST_Toplevel, function(tw, descend, compressor) {\n    this.globals.forEach(function(def) {\n        reset_def(compressor, def);\n    });\n    reset_variables(tw, compressor, this);\n    descend();\n    handle_defined_after_hoist(this);\n    return true;\n});\n\ndef_reduce_vars(AST_Try, function(tw, descend, compressor) {\n    reset_block_variables(compressor, this);\n    push(tw);\n    this.body.walk(tw);\n    pop(tw);\n    if (this.bcatch) {\n        push(tw);\n        this.bcatch.walk(tw);\n        pop(tw);\n    }\n    if (this.bfinally) this.bfinally.walk(tw);\n    return true;\n});\n\ndef_reduce_vars(AST_Unary, function(tw) {\n    var node = this;\n    if (node.operator !== \"++\" && node.operator !== \"--\") return;\n    var exp = node.expression;\n    if (!(exp instanceof AST_SymbolRef)) return;\n    var def = exp.definition();\n    var safe = safe_to_assign(tw, def, exp.scope, true);\n    def.assignments++;\n    if (!safe) return;\n    var fixed = def.fixed;\n    if (!fixed) return;\n    def.references.push(exp);\n    def.chained = true;\n    def.fixed = function() {\n        return make_node(AST_Binary, node, {\n            operator: node.operator.slice(0, -1),\n            left: make_node(AST_UnaryPrefix, node, {\n                operator: \"+\",\n                expression: fixed instanceof AST_Node ? fixed : fixed()\n            }),\n            right: make_node(AST_Number, node, {\n                value: 1\n            })\n        });\n    };\n    mark(tw, def, true);\n    return true;\n});\n\ndef_reduce_vars(AST_VarDef, function(tw, descend) {\n    var node = this;\n    if (node.name instanceof AST_Destructuring) {\n        suppress(node.name);\n        return;\n    }\n    var d = node.name.definition();\n    if (node.value) {\n        if (safe_to_assign(tw, d, node.name.scope, node.value)) {\n            d.fixed = function() {\n                return node.value;\n            };\n            tw.loop_ids.set(d.id, tw.in_loop);\n            mark(tw, d, false);\n            descend();\n            mark(tw, d, true);\n            return true;\n        } else {\n            d.fixed = false;\n        }\n    }\n});\n\ndef_reduce_vars(AST_While, function(tw, descend, compressor) {\n    reset_block_variables(compressor, this);\n    const saved_loop = tw.in_loop;\n    tw.in_loop = this;\n    push(tw);\n    descend();\n    pop(tw);\n    tw.in_loop = saved_loop;\n    return true;\n});\n\n/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\nfunction loop_body(x) {\n    if (x instanceof AST_IterationStatement) {\n        return x.body instanceof AST_BlockStatement ? x.body : x;\n    }\n    return x;\n}\n\nfunction is_lhs_read_only(lhs) {\n    if (lhs instanceof AST_This) return true;\n    if (lhs instanceof AST_SymbolRef) return lhs.definition().orig[0] instanceof AST_SymbolLambda;\n    if (lhs instanceof AST_PropAccess) {\n        lhs = lhs.expression;\n        if (lhs instanceof AST_SymbolRef) {\n            if (lhs.is_immutable()) return false;\n            lhs = lhs.fixed_value();\n        }\n        if (!lhs) return true;\n        if (lhs instanceof AST_RegExp) return false;\n        if (lhs instanceof AST_Constant) return true;\n        return is_lhs_read_only(lhs);\n    }\n    return false;\n}\n\n/** var a = 1 --> var a*/\nfunction remove_initializers(var_statement) {\n    var decls = [];\n    var_statement.definitions.forEach(function(def) {\n        if (def.name instanceof AST_SymbolDeclaration) {\n            def.value = null;\n            decls.push(def);\n        } else {\n            def.declarations_as_names().forEach(name => {\n                decls.push(make_node(AST_VarDef, def, {\n                    name,\n                    value: null\n                }));\n            });\n        }\n    });\n    return decls.length ? make_node(AST_Var, var_statement, { definitions: decls }) : null;\n}\n\n/** Called on code which we know is unreachable, to keep elements that affect outside of it. */\nfunction trim_unreachable_code(compressor, stat, target) {\n    walk(stat, node => {\n        if (node instanceof AST_Var) {\n            const no_initializers = remove_initializers(node);\n            if (no_initializers) target.push(no_initializers);\n            return true;\n        }\n        if (\n            node instanceof AST_Defun\n            && (node === stat || !compressor.has_directive(\"use strict\"))\n        ) {\n            target.push(node === stat ? node : make_node(AST_Var, node, {\n                definitions: [\n                    make_node(AST_VarDef, node, {\n                        name: make_node(AST_SymbolVar, node.name, node.name),\n                        value: null\n                    })\n                ]\n            }));\n            return true;\n        }\n        if (node instanceof AST_Export || node instanceof AST_Import) {\n            target.push(node);\n            return true;\n        }\n        if (node instanceof AST_Scope) {\n            return true;\n        }\n    });\n}\n\n/** Tighten a bunch of statements together, and perform statement-level optimization. */\nfunction tighten_body(statements, compressor) {\n    const nearest_scope = compressor.find_scope();\n    const defun_scope = nearest_scope.get_defun_scope();\n    const { in_loop, in_try } = find_loop_scope_try();\n\n    var CHANGED, max_iter = 10;\n    do {\n        CHANGED = false;\n        eliminate_spurious_blocks(statements);\n        if (compressor.option(\"dead_code\")) {\n            eliminate_dead_code(statements, compressor);\n        }\n        if (compressor.option(\"if_return\")) {\n            handle_if_return(statements, compressor);\n        }\n        if (compressor.sequences_limit > 0) {\n            sequencesize(statements, compressor);\n            sequencesize_2(statements, compressor);\n        }\n        if (compressor.option(\"join_vars\")) {\n            join_consecutive_vars(statements);\n        }\n        if (compressor.option(\"collapse_vars\")) {\n            collapse(statements, compressor);\n        }\n    } while (CHANGED && max_iter-- > 0);\n\n    function find_loop_scope_try() {\n        var node = compressor.self(), level = 0, in_loop = false, in_try = false;\n        do {\n            if (node instanceof AST_IterationStatement) {\n                in_loop = true;\n            } else if (node instanceof AST_Scope) {\n                break;\n            } else if (node instanceof AST_TryBlock) {\n                in_try = true;\n            }\n        } while (node = compressor.parent(level++));\n\n        return { in_loop, in_try };\n    }\n\n    // Search from right to left for assignment-like expressions:\n    // - `var a = x;`\n    // - `a = x;`\n    // - `++a`\n    // For each candidate, scan from left to right for first usage, then try\n    // to fold assignment into the site for compression.\n    // Will not attempt to collapse assignments into or past code blocks\n    // which are not sequentially executed, e.g. loops and conditionals.\n    function collapse(statements, compressor) {\n        if (nearest_scope.pinned() || defun_scope.pinned())\n            return statements;\n        var args;\n        var candidates = [];\n        var stat_index = statements.length;\n        var scanner = new TreeTransformer(function (node) {\n            if (abort)\n                return node;\n            // Skip nodes before `candidate` as quickly as possible\n            if (!hit) {\n                if (node !== hit_stack[hit_index])\n                    return node;\n                hit_index++;\n                if (hit_index < hit_stack.length)\n                    return handle_custom_scan_order(node);\n                hit = true;\n                stop_after = find_stop(node, 0);\n                if (stop_after === node)\n                    abort = true;\n                return node;\n            }\n            // Stop immediately if these node types are encountered\n            var parent = scanner.parent();\n            if (node instanceof AST_Assign\n                    && (node.logical || node.operator != \"=\" && lhs.equivalent_to(node.left))\n                || node instanceof AST_Await\n                || node instanceof AST_Call && lhs instanceof AST_PropAccess && lhs.equivalent_to(node.expression)\n                ||\n                    (node instanceof AST_Call || node instanceof AST_PropAccess)\n                    && node.optional\n                || node instanceof AST_Debugger\n                || node instanceof AST_Destructuring\n                || node instanceof AST_Expansion\n                    && node.expression instanceof AST_Symbol\n                    && (\n                        node.expression instanceof AST_This\n                        || node.expression.definition().references.length > 1\n                    )\n                || node instanceof AST_IterationStatement && !(node instanceof AST_For)\n                || node instanceof AST_LoopControl\n                || node instanceof AST_Try\n                || node instanceof AST_With\n                || node instanceof AST_Yield\n                || node instanceof AST_Export\n                || node instanceof AST_Class\n                || parent instanceof AST_For && node !== parent.init\n                || !replace_all\n                    && (\n                        node instanceof AST_SymbolRef\n                        && !node.is_declared(compressor)\n                        && !pure_prop_access_globals.has(node)\n                    )\n                || node instanceof AST_SymbolRef\n                    && parent instanceof AST_Call\n                    && has_annotation(parent, _NOINLINE)\n            ) {\n                abort = true;\n                return node;\n            }\n            // Stop only if candidate is found within conditional branches\n            if (!stop_if_hit && (!lhs_local || !replace_all)\n                && (parent instanceof AST_Binary && lazy_op.has(parent.operator) && parent.left !== node\n                    || parent instanceof AST_Conditional && parent.condition !== node\n                    || parent instanceof AST_If && parent.condition !== node)) {\n                stop_if_hit = parent;\n            }\n            // Replace variable with assignment when found\n            if (\n                can_replace\n                && !(node instanceof AST_SymbolDeclaration)\n                && lhs.equivalent_to(node)\n                && !shadows(scanner.find_scope() || nearest_scope, lvalues)\n            ) {\n                if (stop_if_hit) {\n                    abort = true;\n                    return node;\n                }\n                if (is_lhs(node, parent)) {\n                    if (value_def)\n                        replaced++;\n                    return node;\n                } else {\n                    replaced++;\n                    if (value_def && candidate instanceof AST_VarDef)\n                        return node;\n                }\n                CHANGED = abort = true;\n                if (candidate instanceof AST_UnaryPostfix) {\n                    return make_node(AST_UnaryPrefix, candidate, candidate);\n                }\n                if (candidate instanceof AST_VarDef) {\n                    var def = candidate.name.definition();\n                    var value = candidate.value;\n                    if (def.references.length - def.replaced == 1 && !compressor.exposed(def)) {\n                        def.replaced++;\n                        if (funarg && is_identifier_atom(value)) {\n                            return value.transform(compressor);\n                        } else {\n                            return maintain_this_binding(parent, node, value);\n                        }\n                    }\n                    return make_node(AST_Assign, candidate, {\n                        operator: \"=\",\n                        logical: false,\n                        left: make_node(AST_SymbolRef, candidate.name, candidate.name),\n                        right: value\n                    });\n                }\n                clear_flag(candidate, WRITE_ONLY);\n                return candidate;\n            }\n            // These node types have child nodes that execute sequentially,\n            // but are otherwise not safe to scan into or beyond them.\n            var sym;\n            if (node instanceof AST_Call\n                || node instanceof AST_Exit\n                && (side_effects || lhs instanceof AST_PropAccess || may_modify(lhs))\n                || node instanceof AST_PropAccess\n                && (side_effects || node.expression.may_throw_on_access(compressor))\n                || node instanceof AST_SymbolRef\n                && ((lvalues.has(node.name) && lvalues.get(node.name).modified) || side_effects && may_modify(node))\n                || node instanceof AST_VarDef && node.value\n                && (lvalues.has(node.name.name) || side_effects && may_modify(node.name))\n                || (sym = is_lhs(node.left, node))\n                && (sym instanceof AST_PropAccess || lvalues.has(sym.name))\n                || may_throw\n                && (in_try ? node.has_side_effects(compressor) : side_effects_external(node))) {\n                stop_after = node;\n                if (node instanceof AST_Scope)\n                    abort = true;\n            }\n            return handle_custom_scan_order(node);\n        }, function (node) {\n            if (abort)\n                return;\n            if (stop_after === node)\n                abort = true;\n            if (stop_if_hit === node)\n                stop_if_hit = null;\n        });\n\n        var multi_replacer = new TreeTransformer(function (node) {\n            if (abort)\n                return node;\n            // Skip nodes before `candidate` as quickly as possible\n            if (!hit) {\n                if (node !== hit_stack[hit_index])\n                    return node;\n                hit_index++;\n                if (hit_index < hit_stack.length)\n                    return;\n                hit = true;\n                return node;\n            }\n            // Replace variable when found\n            if (node instanceof AST_SymbolRef\n                && node.name == def.name) {\n                if (!--replaced)\n                    abort = true;\n                if (is_lhs(node, multi_replacer.parent()))\n                    return node;\n                def.replaced++;\n                value_def.replaced--;\n                return candidate.value;\n            }\n            // Skip (non-executed) functions and (leading) default case in switch statements\n            if (node instanceof AST_Default || node instanceof AST_Scope)\n                return node;\n        });\n\n        while (--stat_index >= 0) {\n            // Treat parameters as collapsible in IIFE, i.e.\n            //   function(a, b){ ... }(x());\n            // would be translated into equivalent assignments:\n            //   var a = x(), b = undefined;\n            if (stat_index == 0 && compressor.option(\"unused\"))\n                extract_args();\n            // Find collapsible assignments\n            var hit_stack = [];\n            extract_candidates(statements[stat_index]);\n            while (candidates.length > 0) {\n                hit_stack = candidates.pop();\n                var hit_index = 0;\n                var candidate = hit_stack[hit_stack.length - 1];\n                var value_def = null;\n                var stop_after = null;\n                var stop_if_hit = null;\n                var lhs = get_lhs(candidate);\n                if (!lhs || is_lhs_read_only(lhs) || lhs.has_side_effects(compressor))\n                    continue;\n                // Locate symbols which may execute code outside of scanning range\n                var lvalues = get_lvalues(candidate);\n                var lhs_local = is_lhs_local(lhs);\n                if (lhs instanceof AST_SymbolRef) {\n                    lvalues.set(lhs.name, { def: lhs.definition(), modified: false });\n                }\n                var side_effects = value_has_side_effects(candidate);\n                var replace_all = replace_all_symbols();\n                var may_throw = candidate.may_throw(compressor);\n                var funarg = candidate.name instanceof AST_SymbolFunarg;\n                var hit = funarg;\n                var abort = false, replaced = 0, can_replace = !args || !hit;\n                if (!can_replace) {\n                    for (\n                        let j = compressor.self().argnames.lastIndexOf(candidate.name) + 1;\n                        !abort && j < args.length;\n                        j++\n                    ) {\n                        args[j].transform(scanner);\n                    }\n                    can_replace = true;\n                }\n                for (var i = stat_index; !abort && i < statements.length; i++) {\n                    statements[i].transform(scanner);\n                }\n                if (value_def) {\n                    var def = candidate.name.definition();\n                    if (abort && def.references.length - def.replaced > replaced)\n                        replaced = false;\n                    else {\n                        abort = false;\n                        hit_index = 0;\n                        hit = funarg;\n                        for (var i = stat_index; !abort && i < statements.length; i++) {\n                            statements[i].transform(multi_replacer);\n                        }\n                        value_def.single_use = false;\n                    }\n                }\n                if (replaced && !remove_candidate(candidate))\n                    statements.splice(stat_index, 1);\n            }\n        }\n\n        function handle_custom_scan_order(node) {\n            // Skip (non-executed) functions\n            if (node instanceof AST_Scope)\n                return node;\n\n            // Scan case expressions first in a switch statement\n            if (node instanceof AST_Switch) {\n                node.expression = node.expression.transform(scanner);\n                for (var i = 0, len = node.body.length; !abort && i < len; i++) {\n                    var branch = node.body[i];\n                    if (branch instanceof AST_Case) {\n                        if (!hit) {\n                            if (branch !== hit_stack[hit_index])\n                                continue;\n                            hit_index++;\n                        }\n                        branch.expression = branch.expression.transform(scanner);\n                        if (!replace_all)\n                            break;\n                    }\n                }\n                abort = true;\n                return node;\n            }\n        }\n\n        function redefined_within_scope(def, scope) {\n            if (def.global)\n                return false;\n            let cur_scope = def.scope;\n            while (cur_scope && cur_scope !== scope) {\n                if (cur_scope.variables.has(def.name)) {\n                    return true;\n                }\n                cur_scope = cur_scope.parent_scope;\n            }\n            return false;\n        }\n\n        function has_overlapping_symbol(fn, arg, fn_strict) {\n            var found = false, scan_this = !(fn instanceof AST_Arrow);\n            arg.walk(new TreeWalker(function (node, descend) {\n                if (found)\n                    return true;\n                if (node instanceof AST_SymbolRef && (fn.variables.has(node.name) || redefined_within_scope(node.definition(), fn))) {\n                    var s = node.definition().scope;\n                    if (s !== defun_scope)\n                        while (s = s.parent_scope) {\n                            if (s === defun_scope)\n                                return true;\n                        }\n                    return found = true;\n                }\n                if ((fn_strict || scan_this) && node instanceof AST_This) {\n                    return found = true;\n                }\n                if (node instanceof AST_Scope && !(node instanceof AST_Arrow)) {\n                    var prev = scan_this;\n                    scan_this = false;\n                    descend();\n                    scan_this = prev;\n                    return true;\n                }\n            }));\n            return found;\n        }\n\n        function arg_is_injectable(arg) {\n            if (arg instanceof AST_Expansion) return false;\n            const contains_await = walk(arg, (node) => {\n                if (node instanceof AST_Await) return walk_abort;\n            });\n            if (contains_await) return false;\n            return true;\n        }\n        function extract_args() {\n            var iife, fn = compressor.self();\n            if (is_func_expr(fn)\n                && !fn.name\n                && !fn.uses_arguments\n                && !fn.pinned()\n                && (iife = compressor.parent()) instanceof AST_Call\n                && iife.expression === fn\n                && iife.args.every(arg_is_injectable)\n            ) {\n                var fn_strict = compressor.has_directive(\"use strict\");\n                if (fn_strict && !member(fn_strict, fn.body))\n                    fn_strict = false;\n                var len = fn.argnames.length;\n                args = iife.args.slice(len);\n                var names = new Set();\n                for (var i = len; --i >= 0;) {\n                    var sym = fn.argnames[i];\n                    var arg = iife.args[i];\n                    // The following two line fix is a duplicate of the fix at\n                    // https://github.com/terser/terser/commit/011d3eb08cefe6922c7d1bdfa113fc4aeaca1b75\n                    // This might mean that these two pieces of code (one here in collapse_vars and another in reduce_vars\n                    // Might be doing the exact same thing.\n                    const def = sym.definition && sym.definition();\n                    const is_reassigned = def && def.orig.length > 1;\n                    if (is_reassigned)\n                        continue;\n                    args.unshift(make_node(AST_VarDef, sym, {\n                        name: sym,\n                        value: arg\n                    }));\n                    if (names.has(sym.name))\n                        continue;\n                    names.add(sym.name);\n                    if (sym instanceof AST_Expansion) {\n                        var elements = iife.args.slice(i);\n                        if (elements.every((arg) => !has_overlapping_symbol(fn, arg, fn_strict)\n                        )) {\n                            candidates.unshift([make_node(AST_VarDef, sym, {\n                                name: sym.expression,\n                                value: make_node(AST_Array, iife, {\n                                    elements: elements\n                                })\n                            })]);\n                        }\n                    } else {\n                        if (!arg) {\n                            arg = make_node(AST_Undefined, sym).transform(compressor);\n                        } else if (arg instanceof AST_Lambda && arg.pinned()\n                            || has_overlapping_symbol(fn, arg, fn_strict)) {\n                            arg = null;\n                        }\n                        if (arg)\n                            candidates.unshift([make_node(AST_VarDef, sym, {\n                                name: sym,\n                                value: arg\n                            })]);\n                    }\n                }\n            }\n        }\n\n        function extract_candidates(expr) {\n            hit_stack.push(expr);\n            if (expr instanceof AST_Assign) {\n                if (!expr.left.has_side_effects(compressor)\n                    && !(expr.right instanceof AST_Chain)) {\n                    candidates.push(hit_stack.slice());\n                }\n                extract_candidates(expr.right);\n            } else if (expr instanceof AST_Binary) {\n                extract_candidates(expr.left);\n                extract_candidates(expr.right);\n            } else if (expr instanceof AST_Call && !has_annotation(expr, _NOINLINE)) {\n                extract_candidates(expr.expression);\n                expr.args.forEach(extract_candidates);\n            } else if (expr instanceof AST_Case) {\n                extract_candidates(expr.expression);\n            } else if (expr instanceof AST_Conditional) {\n                extract_candidates(expr.condition);\n                extract_candidates(expr.consequent);\n                extract_candidates(expr.alternative);\n            } else if (expr instanceof AST_Definitions) {\n                var len = expr.definitions.length;\n                // limit number of trailing variable definitions for consideration\n                var i = len - 200;\n                if (i < 0)\n                    i = 0;\n                for (; i < len; i++) {\n                    extract_candidates(expr.definitions[i]);\n                }\n            } else if (expr instanceof AST_DWLoop) {\n                extract_candidates(expr.condition);\n                if (!(expr.body instanceof AST_Block)) {\n                    extract_candidates(expr.body);\n                }\n            } else if (expr instanceof AST_Exit) {\n                if (expr.value)\n                    extract_candidates(expr.value);\n            } else if (expr instanceof AST_For) {\n                if (expr.init)\n                    extract_candidates(expr.init);\n                if (expr.condition)\n                    extract_candidates(expr.condition);\n                if (expr.step)\n                    extract_candidates(expr.step);\n                if (!(expr.body instanceof AST_Block)) {\n                    extract_candidates(expr.body);\n                }\n            } else if (expr instanceof AST_ForIn) {\n                extract_candidates(expr.object);\n                if (!(expr.body instanceof AST_Block)) {\n                    extract_candidates(expr.body);\n                }\n            } else if (expr instanceof AST_If) {\n                extract_candidates(expr.condition);\n                if (!(expr.body instanceof AST_Block)) {\n                    extract_candidates(expr.body);\n                }\n                if (expr.alternative && !(expr.alternative instanceof AST_Block)) {\n                    extract_candidates(expr.alternative);\n                }\n            } else if (expr instanceof AST_Sequence) {\n                expr.expressions.forEach(extract_candidates);\n            } else if (expr instanceof AST_SimpleStatement) {\n                extract_candidates(expr.body);\n            } else if (expr instanceof AST_Switch) {\n                extract_candidates(expr.expression);\n                expr.body.forEach(extract_candidates);\n            } else if (expr instanceof AST_Unary) {\n                if (expr.operator == \"++\" || expr.operator == \"--\") {\n                    candidates.push(hit_stack.slice());\n                }\n            } else if (expr instanceof AST_VarDef) {\n                if (expr.value && !(expr.value instanceof AST_Chain)) {\n                    candidates.push(hit_stack.slice());\n                    extract_candidates(expr.value);\n                }\n            }\n            hit_stack.pop();\n        }\n\n        function find_stop(node, level, write_only) {\n            var parent = scanner.parent(level);\n            if (parent instanceof AST_Assign) {\n                if (write_only\n                    && !parent.logical\n                    && !(parent.left instanceof AST_PropAccess\n                        || lvalues.has(parent.left.name))) {\n                    return find_stop(parent, level + 1, write_only);\n                }\n                return node;\n            }\n            if (parent instanceof AST_Binary) {\n                if (write_only && (!lazy_op.has(parent.operator) || parent.left === node)) {\n                    return find_stop(parent, level + 1, write_only);\n                }\n                return node;\n            }\n            if (parent instanceof AST_Call)\n                return node;\n            if (parent instanceof AST_Case)\n                return node;\n            if (parent instanceof AST_Conditional) {\n                if (write_only && parent.condition === node) {\n                    return find_stop(parent, level + 1, write_only);\n                }\n                return node;\n            }\n            if (parent instanceof AST_Definitions) {\n                return find_stop(parent, level + 1, true);\n            }\n            if (parent instanceof AST_Exit) {\n                return write_only ? find_stop(parent, level + 1, write_only) : node;\n            }\n            if (parent instanceof AST_If) {\n                if (write_only && parent.condition === node) {\n                    return find_stop(parent, level + 1, write_only);\n                }\n                return node;\n            }\n            if (parent instanceof AST_IterationStatement)\n                return node;\n            if (parent instanceof AST_Sequence) {\n                return find_stop(parent, level + 1, parent.tail_node() !== node);\n            }\n            if (parent instanceof AST_SimpleStatement) {\n                return find_stop(parent, level + 1, true);\n            }\n            if (parent instanceof AST_Switch)\n                return node;\n            if (parent instanceof AST_VarDef)\n                return node;\n            return null;\n        }\n\n        function mangleable_var(var_def) {\n            var value = var_def.value;\n            if (!(value instanceof AST_SymbolRef))\n                return;\n            if (value.name == \"arguments\")\n                return;\n            var def = value.definition();\n            if (def.undeclared)\n                return;\n            return value_def = def;\n        }\n\n        function get_lhs(expr) {\n            if (expr instanceof AST_Assign && expr.logical) {\n                return false;\n            } else if (expr instanceof AST_VarDef && expr.name instanceof AST_SymbolDeclaration) {\n                var def = expr.name.definition();\n                if (!member(expr.name, def.orig))\n                    return;\n                var referenced = def.references.length - def.replaced;\n                if (!referenced)\n                    return;\n                var declared = def.orig.length - def.eliminated;\n                if (declared > 1 && !(expr.name instanceof AST_SymbolFunarg)\n                    || (referenced > 1 ? mangleable_var(expr) : !compressor.exposed(def))) {\n                    return make_node(AST_SymbolRef, expr.name, expr.name);\n                }\n            } else {\n                const lhs = expr instanceof AST_Assign\n                    ? expr.left\n                    : expr.expression;\n                return !is_ref_of(lhs, AST_SymbolConst)\n                    && !is_ref_of(lhs, AST_SymbolLet) && lhs;\n            }\n        }\n\n        function get_rvalue(expr) {\n            if (expr instanceof AST_Assign) {\n                return expr.right;\n            } else {\n                return expr.value;\n            }\n        }\n\n        function get_lvalues(expr) {\n            var lvalues = new Map();\n            if (expr instanceof AST_Unary)\n                return lvalues;\n            var tw = new TreeWalker(function (node) {\n                var sym = node;\n                while (sym instanceof AST_PropAccess)\n                    sym = sym.expression;\n                if (sym instanceof AST_SymbolRef) {\n                    const prev = lvalues.get(sym.name);\n                    if (!prev || !prev.modified) {\n                        lvalues.set(sym.name, {\n                            def: sym.definition(),\n                            modified: is_modified(compressor, tw, node, node, 0)\n                        });\n                    }\n                }\n            });\n            get_rvalue(expr).walk(tw);\n            return lvalues;\n        }\n\n        function remove_candidate(expr) {\n            if (expr.name instanceof AST_SymbolFunarg) {\n                var iife = compressor.parent(), argnames = compressor.self().argnames;\n                var index = argnames.indexOf(expr.name);\n                if (index < 0) {\n                    iife.args.length = Math.min(iife.args.length, argnames.length - 1);\n                } else {\n                    var args = iife.args;\n                    if (args[index])\n                        args[index] = make_node(AST_Number, args[index], {\n                            value: 0\n                        });\n                }\n                return true;\n            }\n            var found = false;\n            return statements[stat_index].transform(new TreeTransformer(function (node, descend, in_list) {\n                if (found)\n                    return node;\n                if (node === expr || node.body === expr) {\n                    found = true;\n                    if (node instanceof AST_VarDef) {\n                        node.value = node.name instanceof AST_SymbolConst\n                            ? make_node(AST_Undefined, node.value) // `const` always needs value.\n                            : null;\n                        return node;\n                    }\n                    return in_list ? MAP.skip : null;\n                }\n            }, function (node) {\n                if (node instanceof AST_Sequence)\n                    switch (node.expressions.length) {\n                        case 0: return null;\n                        case 1: return node.expressions[0];\n                    }\n            }));\n        }\n\n        function is_lhs_local(lhs) {\n            while (lhs instanceof AST_PropAccess)\n                lhs = lhs.expression;\n            return lhs instanceof AST_SymbolRef\n                && lhs.definition().scope.get_defun_scope() === defun_scope\n                && !(in_loop\n                    && (lvalues.has(lhs.name)\n                        || candidate instanceof AST_Unary\n                        || (candidate instanceof AST_Assign\n                            && !candidate.logical\n                            && candidate.operator != \"=\")));\n        }\n\n        function value_has_side_effects(expr) {\n            if (expr instanceof AST_Unary)\n                return unary_side_effects.has(expr.operator);\n            return get_rvalue(expr).has_side_effects(compressor);\n        }\n\n        function replace_all_symbols() {\n            if (side_effects)\n                return false;\n            if (value_def)\n                return true;\n            if (lhs instanceof AST_SymbolRef) {\n                var def = lhs.definition();\n                if (def.references.length - def.replaced == (candidate instanceof AST_VarDef ? 1 : 2)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        function may_modify(sym) {\n            if (!sym.definition)\n                return true; // AST_Destructuring\n            var def = sym.definition();\n            if (def.orig.length == 1 && def.orig[0] instanceof AST_SymbolDefun)\n                return false;\n            if (def.scope.get_defun_scope() !== defun_scope)\n                return true;\n            return def.references.some((ref) =>\n                ref.scope.get_defun_scope() !== defun_scope\n            );\n        }\n\n        function side_effects_external(node, lhs) {\n            if (node instanceof AST_Assign)\n                return side_effects_external(node.left, true);\n            if (node instanceof AST_Unary)\n                return side_effects_external(node.expression, true);\n            if (node instanceof AST_VarDef)\n                return node.value && side_effects_external(node.value);\n            if (lhs) {\n                if (node instanceof AST_Dot)\n                    return side_effects_external(node.expression, true);\n                if (node instanceof AST_Sub)\n                    return side_effects_external(node.expression, true);\n                if (node instanceof AST_SymbolRef)\n                    return node.definition().scope.get_defun_scope() !== defun_scope;\n            }\n            return false;\n        }\n\n        /**\n         * Will any of the pulled-in lvalues shadow a variable in newScope or parents?\n         * similar to scope_encloses_variables_in_this_scope */\n        function shadows(my_scope, lvalues) {\n            for (const { def } of lvalues.values()) {\n                const looked_up = my_scope.find_variable(def.name);\n                if (looked_up) {\n                    if (looked_up === def) continue;\n                    return true;\n                }\n            }\n            return false;\n        }\n    }\n\n    function eliminate_spurious_blocks(statements) {\n        var seen_dirs = [];\n        for (var i = 0; i < statements.length;) {\n            var stat = statements[i];\n            if (stat instanceof AST_BlockStatement && stat.body.every(can_be_evicted_from_block)) {\n                CHANGED = true;\n                eliminate_spurious_blocks(stat.body);\n                statements.splice(i, 1, ...stat.body);\n                i += stat.body.length;\n            } else if (stat instanceof AST_EmptyStatement) {\n                CHANGED = true;\n                statements.splice(i, 1);\n            } else if (stat instanceof AST_Directive) {\n                if (seen_dirs.indexOf(stat.value) < 0) {\n                    i++;\n                    seen_dirs.push(stat.value);\n                } else {\n                    CHANGED = true;\n                    statements.splice(i, 1);\n                }\n            } else\n                i++;\n        }\n    }\n\n    function handle_if_return(statements, compressor) {\n        var self = compressor.self();\n        var multiple_if_returns = has_multiple_if_returns(statements);\n        var in_lambda = self instanceof AST_Lambda;\n        // Prevent extremely deep nesting\n        // https://github.com/terser/terser/issues/1432\n        // https://github.com/webpack/webpack/issues/17548\n        const iteration_start = Math.min(statements.length, 500);\n        for (var i = iteration_start; --i >= 0;) {\n            var stat = statements[i];\n            var j = next_index(i);\n            var next = statements[j];\n\n            if (in_lambda && !next && stat instanceof AST_Return) {\n                if (!stat.value) {\n                    CHANGED = true;\n                    statements.splice(i, 1);\n                    continue;\n                }\n                if (stat.value instanceof AST_UnaryPrefix && stat.value.operator == \"void\") {\n                    CHANGED = true;\n                    statements[i] = make_node(AST_SimpleStatement, stat, {\n                        body: stat.value.expression\n                    });\n                    continue;\n                }\n            }\n\n            if (stat instanceof AST_If) {\n                let ab, new_else;\n\n                ab = aborts(stat.body);\n                if (\n                    can_merge_flow(ab)\n                    && (new_else = as_statement_array_with_return(stat.body, ab))\n                ) {\n                    if (ab.label) {\n                        remove(ab.label.thedef.references, ab);\n                    }\n                    CHANGED = true;\n                    stat = stat.clone();\n                    stat.condition = stat.condition.negate(compressor);\n                    stat.body = make_node(AST_BlockStatement, stat, {\n                        body: as_statement_array(stat.alternative).concat(extract_functions())\n                    });\n                    stat.alternative = make_node(AST_BlockStatement, stat, {\n                        body: new_else\n                    });\n                    statements[i] = stat.transform(compressor);\n                    continue;\n                }\n\n                ab = aborts(stat.alternative);\n                if (\n                    can_merge_flow(ab)\n                    && (new_else = as_statement_array_with_return(stat.alternative, ab))\n                ) {\n                    if (ab.label) {\n                        remove(ab.label.thedef.references, ab);\n                    }\n                    CHANGED = true;\n                    stat = stat.clone();\n                    stat.body = make_node(AST_BlockStatement, stat.body, {\n                        body: as_statement_array(stat.body).concat(extract_functions())\n                    });\n                    stat.alternative = make_node(AST_BlockStatement, stat.alternative, {\n                        body: new_else\n                    });\n                    statements[i] = stat.transform(compressor);\n                    continue;\n                }\n            }\n\n            if (stat instanceof AST_If && stat.body instanceof AST_Return) {\n                var value = stat.body.value;\n                //---\n                // pretty silly case, but:\n                // if (foo()) return; return; ==> foo(); return;\n                if (!value && !stat.alternative\n                    && (in_lambda && !next || next instanceof AST_Return && !next.value)) {\n                    CHANGED = true;\n                    statements[i] = make_node(AST_SimpleStatement, stat.condition, {\n                        body: stat.condition\n                    });\n                    continue;\n                }\n                //---\n                // if (foo()) return x; return y; ==> return foo() ? x : y;\n                if (value && !stat.alternative && next instanceof AST_Return && next.value) {\n                    CHANGED = true;\n                    stat = stat.clone();\n                    stat.alternative = next;\n                    statements[i] = stat.transform(compressor);\n                    statements.splice(j, 1);\n                    continue;\n                }\n                //---\n                // if (foo()) return x; [ return ; ] ==> return foo() ? x : undefined;\n                if (value && !stat.alternative\n                    && (!next && in_lambda && multiple_if_returns\n                        || next instanceof AST_Return)) {\n                    CHANGED = true;\n                    stat = stat.clone();\n                    stat.alternative = next || make_node(AST_Return, stat, {\n                        value: null\n                    });\n                    statements[i] = stat.transform(compressor);\n                    if (next)\n                        statements.splice(j, 1);\n                    continue;\n                }\n                //---\n                // if (a) return b; if (c) return d; e; ==> return a ? b : c ? d : void e;\n                //\n                // if sequences is not enabled, this can lead to an endless loop (issue #866).\n                // however, with sequences on this helps producing slightly better output for\n                // the example code.\n                var prev = statements[prev_index(i)];\n                if (compressor.option(\"sequences\") && in_lambda && !stat.alternative\n                    && prev instanceof AST_If && prev.body instanceof AST_Return\n                    && next_index(j) == statements.length && next instanceof AST_SimpleStatement) {\n                    CHANGED = true;\n                    stat = stat.clone();\n                    stat.alternative = make_node(AST_BlockStatement, next, {\n                        body: [\n                            next,\n                            make_node(AST_Return, next, {\n                                value: null\n                            })\n                        ]\n                    });\n                    statements[i] = stat.transform(compressor);\n                    statements.splice(j, 1);\n                    continue;\n                }\n            }\n        }\n\n        function has_multiple_if_returns(statements) {\n            var n = 0;\n            for (var i = statements.length; --i >= 0;) {\n                var stat = statements[i];\n                if (stat instanceof AST_If && stat.body instanceof AST_Return) {\n                    if (++n > 1)\n                        return true;\n                }\n            }\n            return false;\n        }\n\n        function is_return_void(value) {\n            return !value || value instanceof AST_UnaryPrefix && value.operator == \"void\";\n        }\n\n        function can_merge_flow(ab) {\n            if (!ab)\n                return false;\n            for (var j = i + 1, len = statements.length; j < len; j++) {\n                var stat = statements[j];\n                if (stat instanceof AST_Const || stat instanceof AST_Let)\n                    return false;\n            }\n            var lct = ab instanceof AST_LoopControl ? compressor.loopcontrol_target(ab) : null;\n            return ab instanceof AST_Return && in_lambda && is_return_void(ab.value)\n                || ab instanceof AST_Continue && self === loop_body(lct)\n                || ab instanceof AST_Break && lct instanceof AST_BlockStatement && self === lct;\n        }\n\n        function extract_functions() {\n            var tail = statements.slice(i + 1);\n            statements.length = i + 1;\n            return tail.filter(function (stat) {\n                if (stat instanceof AST_Defun) {\n                    statements.push(stat);\n                    return false;\n                }\n                return true;\n            });\n        }\n\n        function as_statement_array_with_return(node, ab) {\n            var body = as_statement_array(node);\n            if (ab !== body[body.length - 1]) {\n                return undefined;\n            }\n            body = body.slice(0, -1);\n            if (ab.value) {\n                body.push(make_node(AST_SimpleStatement, ab.value, {\n                    body: ab.value.expression\n                }));\n            }\n            return body;\n        }\n\n        function next_index(i) {\n            for (var j = i + 1, len = statements.length; j < len; j++) {\n                var stat = statements[j];\n                if (!(stat instanceof AST_Var && declarations_only(stat))) {\n                    break;\n                }\n            }\n            return j;\n        }\n\n        function prev_index(i) {\n            for (var j = i; --j >= 0;) {\n                var stat = statements[j];\n                if (!(stat instanceof AST_Var && declarations_only(stat))) {\n                    break;\n                }\n            }\n            return j;\n        }\n    }\n\n    function eliminate_dead_code(statements, compressor) {\n        var has_quit;\n        var self = compressor.self();\n        for (var i = 0, n = 0, len = statements.length; i < len; i++) {\n            var stat = statements[i];\n            if (stat instanceof AST_LoopControl) {\n                var lct = compressor.loopcontrol_target(stat);\n                if (stat instanceof AST_Break\n                    && !(lct instanceof AST_IterationStatement)\n                    && loop_body(lct) === self\n                    || stat instanceof AST_Continue\n                    && loop_body(lct) === self) {\n                    if (stat.label) {\n                        remove(stat.label.thedef.references, stat);\n                    }\n                } else {\n                    statements[n++] = stat;\n                }\n            } else {\n                statements[n++] = stat;\n            }\n            if (aborts(stat)) {\n                has_quit = statements.slice(i + 1);\n                break;\n            }\n        }\n        statements.length = n;\n        CHANGED = n != len;\n        if (has_quit)\n            has_quit.forEach(function (stat) {\n                trim_unreachable_code(compressor, stat, statements);\n            });\n    }\n\n    function declarations_only(node) {\n        return node.definitions.every((var_def) => !var_def.value);\n    }\n\n    function sequencesize(statements, compressor) {\n        if (statements.length < 2)\n            return;\n        var seq = [], n = 0;\n        function push_seq() {\n            if (!seq.length)\n                return;\n            var body = make_sequence(seq[0], seq);\n            statements[n++] = make_node(AST_SimpleStatement, body, { body: body });\n            seq = [];\n        }\n        for (var i = 0, len = statements.length; i < len; i++) {\n            var stat = statements[i];\n            if (stat instanceof AST_SimpleStatement) {\n                if (seq.length >= compressor.sequences_limit)\n                    push_seq();\n                var body = stat.body;\n                if (seq.length > 0)\n                    body = body.drop_side_effect_free(compressor);\n                if (body)\n                    merge_sequence(seq, body);\n            } else if (stat instanceof AST_Definitions && declarations_only(stat)\n                || stat instanceof AST_Defun) {\n                statements[n++] = stat;\n            } else {\n                push_seq();\n                statements[n++] = stat;\n            }\n        }\n        push_seq();\n        statements.length = n;\n        if (n != len)\n            CHANGED = true;\n    }\n\n    function to_simple_statement(block, decls) {\n        if (!(block instanceof AST_BlockStatement))\n            return block;\n        var stat = null;\n        for (var i = 0, len = block.body.length; i < len; i++) {\n            var line = block.body[i];\n            if (line instanceof AST_Var && declarations_only(line)) {\n                decls.push(line);\n            } else if (stat || line instanceof AST_Const || line instanceof AST_Let) {\n                return false;\n            } else {\n                stat = line;\n            }\n        }\n        return stat;\n    }\n\n    function sequencesize_2(statements, compressor) {\n        function cons_seq(right) {\n            n--;\n            CHANGED = true;\n            var left = prev.body;\n            return make_sequence(left, [left, right]).transform(compressor);\n        }\n        var n = 0, prev;\n        for (var i = 0; i < statements.length; i++) {\n            var stat = statements[i];\n            if (prev) {\n                if (stat instanceof AST_Exit) {\n                    stat.value = cons_seq(stat.value || make_node(AST_Undefined, stat).transform(compressor));\n                } else if (stat instanceof AST_For) {\n                    if (!(stat.init instanceof AST_Definitions)) {\n                        const abort = walk(prev.body, node => {\n                            if (node instanceof AST_Scope)\n                                return true;\n                            if (node instanceof AST_Binary\n                                && node.operator === \"in\") {\n                                return walk_abort;\n                            }\n                        });\n                        if (!abort) {\n                            if (stat.init)\n                                stat.init = cons_seq(stat.init);\n                            else {\n                                stat.init = prev.body;\n                                n--;\n                                CHANGED = true;\n                            }\n                        }\n                    }\n                } else if (stat instanceof AST_ForIn) {\n                    if (!(stat.init instanceof AST_Const) && !(stat.init instanceof AST_Let)) {\n                        stat.object = cons_seq(stat.object);\n                    }\n                } else if (stat instanceof AST_If) {\n                    stat.condition = cons_seq(stat.condition);\n                } else if (stat instanceof AST_Switch) {\n                    stat.expression = cons_seq(stat.expression);\n                } else if (stat instanceof AST_With) {\n                    stat.expression = cons_seq(stat.expression);\n                }\n            }\n            if (compressor.option(\"conditionals\") && stat instanceof AST_If) {\n                var decls = [];\n                var body = to_simple_statement(stat.body, decls);\n                var alt = to_simple_statement(stat.alternative, decls);\n                if (body !== false && alt !== false && decls.length > 0) {\n                    var len = decls.length;\n                    decls.push(make_node(AST_If, stat, {\n                        condition: stat.condition,\n                        body: body || make_node(AST_EmptyStatement, stat.body),\n                        alternative: alt\n                    }));\n                    decls.unshift(n, 1);\n                    [].splice.apply(statements, decls);\n                    i += len;\n                    n += len + 1;\n                    prev = null;\n                    CHANGED = true;\n                    continue;\n                }\n            }\n            statements[n++] = stat;\n            prev = stat instanceof AST_SimpleStatement ? stat : null;\n        }\n        statements.length = n;\n    }\n\n    function join_object_assignments(defn, body) {\n        if (!(defn instanceof AST_Definitions))\n            return;\n        var def = defn.definitions[defn.definitions.length - 1];\n        if (!(def.value instanceof AST_Object))\n            return;\n        var exprs;\n        if (body instanceof AST_Assign && !body.logical) {\n            exprs = [body];\n        } else if (body instanceof AST_Sequence) {\n            exprs = body.expressions.slice();\n        }\n        if (!exprs)\n            return;\n        var trimmed = false;\n        do {\n            var node = exprs[0];\n            if (!(node instanceof AST_Assign))\n                break;\n            if (node.operator != \"=\")\n                break;\n            if (!(node.left instanceof AST_PropAccess))\n                break;\n            var sym = node.left.expression;\n            if (!(sym instanceof AST_SymbolRef))\n                break;\n            if (def.name.name != sym.name)\n                break;\n            if (!node.right.is_constant_expression(nearest_scope))\n                break;\n            var prop = node.left.property;\n            if (prop instanceof AST_Node) {\n                prop = prop.evaluate(compressor);\n            }\n            if (prop instanceof AST_Node)\n                break;\n            prop = \"\" + prop;\n            var diff = compressor.option(\"ecma\") < 2015\n                && compressor.has_directive(\"use strict\") ? function (node) {\n                    return node.key != prop && (node.key && node.key.name != prop);\n                } : function (node) {\n                    return node.key && node.key.name != prop;\n                };\n            if (!def.value.properties.every(diff))\n                break;\n            var p = def.value.properties.filter(function (p) { return p.key === prop; })[0];\n            if (!p) {\n                def.value.properties.push(make_node(AST_ObjectKeyVal, node, {\n                    key: prop,\n                    value: node.right\n                }));\n            } else {\n                p.value = new AST_Sequence({\n                    start: p.start,\n                    expressions: [p.value.clone(), node.right.clone()],\n                    end: p.end\n                });\n            }\n            exprs.shift();\n            trimmed = true;\n        } while (exprs.length);\n        return trimmed && exprs;\n    }\n\n    function join_consecutive_vars(statements) {\n        var defs;\n        for (var i = 0, j = -1, len = statements.length; i < len; i++) {\n            var stat = statements[i];\n            var prev = statements[j];\n            if (stat instanceof AST_Definitions) {\n                if (prev && prev.TYPE == stat.TYPE) {\n                    prev.definitions = prev.definitions.concat(stat.definitions);\n                    CHANGED = true;\n                } else if (defs && defs.TYPE == stat.TYPE && declarations_only(stat)) {\n                    defs.definitions = defs.definitions.concat(stat.definitions);\n                    CHANGED = true;\n                } else {\n                    statements[++j] = stat;\n                    defs = stat;\n                }\n            } else if (stat instanceof AST_Exit) {\n                stat.value = extract_object_assignments(stat.value);\n            } else if (stat instanceof AST_For) {\n                var exprs = join_object_assignments(prev, stat.init);\n                if (exprs) {\n                    CHANGED = true;\n                    stat.init = exprs.length ? make_sequence(stat.init, exprs) : null;\n                    statements[++j] = stat;\n                } else if (\n                    prev instanceof AST_Var\n                    && (!stat.init || stat.init.TYPE == prev.TYPE)\n                ) {\n                    if (stat.init) {\n                        prev.definitions = prev.definitions.concat(stat.init.definitions);\n                    }\n                    stat.init = prev;\n                    statements[j] = stat;\n                    CHANGED = true;\n                } else if (\n                    defs instanceof AST_Var\n                    && stat.init instanceof AST_Var\n                    && declarations_only(stat.init)\n                ) {\n                    defs.definitions = defs.definitions.concat(stat.init.definitions);\n                    stat.init = null;\n                    statements[++j] = stat;\n                    CHANGED = true;\n                } else {\n                    statements[++j] = stat;\n                }\n            } else if (stat instanceof AST_ForIn) {\n                stat.object = extract_object_assignments(stat.object);\n            } else if (stat instanceof AST_If) {\n                stat.condition = extract_object_assignments(stat.condition);\n            } else if (stat instanceof AST_SimpleStatement) {\n                var exprs = join_object_assignments(prev, stat.body);\n                if (exprs) {\n                    CHANGED = true;\n                    if (!exprs.length)\n                        continue;\n                    stat.body = make_sequence(stat.body, exprs);\n                }\n                statements[++j] = stat;\n            } else if (stat instanceof AST_Switch) {\n                stat.expression = extract_object_assignments(stat.expression);\n            } else if (stat instanceof AST_With) {\n                stat.expression = extract_object_assignments(stat.expression);\n            } else {\n                statements[++j] = stat;\n            }\n        }\n        statements.length = j + 1;\n\n        function extract_object_assignments(value) {\n            statements[++j] = stat;\n            var exprs = join_object_assignments(prev, value);\n            if (exprs) {\n                CHANGED = true;\n                if (exprs.length) {\n                    return make_sequence(value, exprs);\n                } else if (value instanceof AST_Sequence) {\n                    return value.tail_node().left;\n                } else {\n                    return value.left;\n                }\n            }\n            return value;\n        }\n    }\n}\n\n/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n/**\n * Module that contains the inlining logic.\n *\n * @module\n *\n * The stars of the show are `inline_into_symbolref` and `inline_into_call`.\n */\n\nfunction within_array_or_object_literal(compressor) {\n    var node, level = 0;\n    while (node = compressor.parent(level++)) {\n        if (node instanceof AST_Statement) return false;\n        if (node instanceof AST_Array\n            || node instanceof AST_ObjectKeyVal\n            || node instanceof AST_Object) {\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction scope_encloses_variables_in_this_scope(scope, pulled_scope) {\n    for (const enclosed of pulled_scope.enclosed) {\n        if (pulled_scope.variables.has(enclosed.name)) {\n            continue;\n        }\n        const looked_up = scope.find_variable(enclosed.name);\n        if (looked_up) {\n            if (looked_up === enclosed) continue;\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * An extra check function for `top_retain` option, compare the length of const identifier\n * and init value length and return true if init value is longer than identifier. for example:\n * ```\n * // top_retain: [\"example\"]\n * const example = 100\n * ```\n * it will return false because length of \"100\" is short than identifier \"example\".\n */\nfunction is_const_symbol_short_than_init_value(def, fixed_value) {\n    if (def.orig.length === 1 && fixed_value) {\n        const init_value_length = fixed_value.size();\n        const identifer_length = def.name.length;\n        return init_value_length > identifer_length;\n    }\n    return true;\n}\n\nfunction inline_into_symbolref(self, compressor) {\n    const parent = compressor.parent();\n    const def = self.definition();\n    const nearest_scope = compressor.find_scope();\n    let fixed = self.fixed_value();\n    if (\n        compressor.top_retain &&\n        def.global && \n        compressor.top_retain(def) && \n        // when identifier is in top_retain option dose not mean we can always inline it.\n        // if identifier name is longer then init value, we can replace it.\n        is_const_symbol_short_than_init_value(def, fixed)\n    ) {\n        // keep it\n        def.fixed = false;\n        def.single_use = false;\n        return self;\n    }\n\n    let single_use = def.single_use\n        && !(parent instanceof AST_Call\n            && (parent.is_callee_pure(compressor))\n                || has_annotation(parent, _NOINLINE))\n        && !(parent instanceof AST_Export\n            && fixed instanceof AST_Lambda\n            && fixed.name);\n\n    if (single_use && fixed instanceof AST_Node) {\n        single_use =\n            !fixed.has_side_effects(compressor)\n            && !fixed.may_throw(compressor);\n    }\n\n    if (fixed instanceof AST_Class && def.scope !== self.scope) {\n        return self;\n    }\n\n    if (single_use && (fixed instanceof AST_Lambda || fixed instanceof AST_Class)) {\n        if (retain_top_func(fixed, compressor)) {\n            single_use = false;\n        } else if (def.scope !== self.scope\n            && (def.escaped == 1\n                || has_flag(fixed, INLINED)\n                || within_array_or_object_literal(compressor)\n                || !compressor.option(\"reduce_funcs\"))) {\n            single_use = false;\n        } else if (is_recursive_ref(compressor, def)) {\n            single_use = false;\n        } else if (def.scope !== self.scope || def.orig[0] instanceof AST_SymbolFunarg) {\n            single_use = fixed.is_constant_expression(self.scope);\n            if (single_use == \"f\") {\n                var scope = self.scope;\n                do {\n                    if (scope instanceof AST_Defun || is_func_expr(scope)) {\n                        set_flag(scope, INLINED);\n                    }\n                } while (scope = scope.parent_scope);\n            }\n        }\n    }\n\n    if (single_use && (fixed instanceof AST_Lambda || fixed instanceof AST_Class)) {\n        single_use =\n            def.scope === self.scope\n                && !scope_encloses_variables_in_this_scope(nearest_scope, fixed)\n            || parent instanceof AST_Call\n                && parent.expression === self\n                && !scope_encloses_variables_in_this_scope(nearest_scope, fixed)\n                && !(fixed.name && fixed.name.definition().recursive_refs > 0);\n    }\n\n    if (single_use && fixed) {\n        if (fixed instanceof AST_DefClass) {\n            set_flag(fixed, SQUEEZED);\n            fixed = make_node(AST_ClassExpression, fixed, fixed);\n        }\n        if (fixed instanceof AST_Defun) {\n            set_flag(fixed, SQUEEZED);\n            fixed = make_node(AST_Function, fixed, fixed);\n        }\n        if (def.recursive_refs > 0 && fixed.name instanceof AST_SymbolDefun) {\n            const defun_def = fixed.name.definition();\n            let lambda_def = fixed.variables.get(fixed.name.name);\n            let name = lambda_def && lambda_def.orig[0];\n            if (!(name instanceof AST_SymbolLambda)) {\n                name = make_node(AST_SymbolLambda, fixed.name, fixed.name);\n                name.scope = fixed;\n                fixed.name = name;\n                lambda_def = fixed.def_function(name);\n            }\n            walk(fixed, node => {\n                if (node instanceof AST_SymbolRef && node.definition() === defun_def) {\n                    node.thedef = lambda_def;\n                    lambda_def.references.push(node);\n                }\n            });\n        }\n        if (\n            (fixed instanceof AST_Lambda || fixed instanceof AST_Class)\n            && fixed.parent_scope !== nearest_scope\n        ) {\n            fixed = fixed.clone(true, compressor.get_toplevel());\n\n            nearest_scope.add_child_scope(fixed);\n        }\n        return fixed.optimize(compressor);\n    }\n\n    // multiple uses\n    if (fixed) {\n        let replace;\n\n        if (fixed instanceof AST_This) {\n            if (!(def.orig[0] instanceof AST_SymbolFunarg)\n                && def.references.every((ref) =>\n                    def.scope === ref.scope\n                )) {\n                replace = fixed;\n            }\n        } else {\n            var ev = fixed.evaluate(compressor);\n            if (\n                ev !== fixed\n                && (compressor.option(\"unsafe_regexp\") || !(ev instanceof RegExp))\n            ) {\n                replace = make_node_from_constant(ev, fixed);\n            }\n        }\n\n        if (replace) {\n            const name_length = self.size(compressor);\n            const replace_size = replace.size(compressor);\n\n            let overhead = 0;\n            if (compressor.option(\"unused\") && !compressor.exposed(def)) {\n                overhead =\n                    (name_length + 2 + replace_size) /\n                    (def.references.length - def.assignments);\n            }\n\n            if (replace_size <= name_length + overhead) {\n                return replace;\n            }\n        }\n    }\n\n    return self;\n}\n\nfunction inline_into_call(self, compressor) {\n    var exp = self.expression;\n    var fn = exp;\n    var simple_args = self.args.every((arg) => !(arg instanceof AST_Expansion));\n\n    if (compressor.option(\"reduce_vars\")\n        && fn instanceof AST_SymbolRef\n        && !has_annotation(self, _NOINLINE)\n    ) {\n        const fixed = fn.fixed_value();\n\n        if (\n            retain_top_func(fixed, compressor)\n            || !compressor.toplevel.funcs && exp.definition().global\n        ) {\n            return self;\n        }\n\n        fn = fixed;\n    }\n\n    var is_func = fn instanceof AST_Lambda;\n\n    var stat = is_func && fn.body[0];\n    var is_regular_func = is_func && !fn.is_generator && !fn.async;\n    var can_inline = is_regular_func && compressor.option(\"inline\") && !self.is_callee_pure(compressor);\n    if (can_inline && stat instanceof AST_Return) {\n        let returned = stat.value;\n        if (!returned || returned.is_constant_expression()) {\n            if (returned) {\n                returned = returned.clone(true);\n            } else {\n                returned = make_node(AST_Undefined, self);\n            }\n            const args = self.args.concat(returned);\n            return make_sequence(self, args).optimize(compressor);\n        }\n\n        // optimize identity function\n        if (\n            fn.argnames.length === 1\n            && (fn.argnames[0] instanceof AST_SymbolFunarg)\n            && self.args.length < 2\n            && !(self.args[0] instanceof AST_Expansion)\n            && returned instanceof AST_SymbolRef\n            && returned.name === fn.argnames[0].name\n        ) {\n            const replacement =\n                (self.args[0] || make_node(AST_Undefined)).optimize(compressor);\n\n            let parent;\n            if (\n                replacement instanceof AST_PropAccess\n                && (parent = compressor.parent()) instanceof AST_Call\n                && parent.expression === self\n            ) {\n                // identity function was being used to remove `this`, like in\n                //\n                // id(bag.no_this)(...)\n                //\n                // Replace with a larger but more effish (0, bag.no_this) wrapper.\n\n                return make_sequence(self, [\n                    make_node(AST_Number, self, { value: 0 }),\n                    replacement\n                ]);\n            }\n            // replace call with first argument or undefined if none passed\n            return replacement;\n        }\n    }\n\n    if (can_inline) {\n        var scope, in_loop, level = -1;\n        let def;\n        let returned_value;\n        let nearest_scope;\n        if (simple_args\n            && !fn.uses_arguments\n            && !(compressor.parent() instanceof AST_Class)\n            && !(fn.name && fn instanceof AST_Function)\n            && (returned_value = can_flatten_body(stat))\n            && (exp === fn\n                || has_annotation(self, _INLINE)\n                || compressor.option(\"unused\")\n                    && (def = exp.definition()).references.length == 1\n                    && !is_recursive_ref(compressor, def)\n                    && fn.is_constant_expression(exp.scope))\n            && !has_annotation(self, _PURE | _NOINLINE)\n            && !fn.contains_this()\n            && can_inject_symbols()\n            && (nearest_scope = compressor.find_scope())\n            && !scope_encloses_variables_in_this_scope(nearest_scope, fn)\n            && !(function in_default_assign() {\n                    // Due to the fact function parameters have their own scope\n                    // which can't use `var something` in the function body within,\n                    // we simply don't inline into DefaultAssign.\n                    let i = 0;\n                    let p;\n                    while ((p = compressor.parent(i++))) {\n                        if (p instanceof AST_DefaultAssign) return true;\n                        if (p instanceof AST_Block) break;\n                    }\n                    return false;\n                })()\n            && !(scope instanceof AST_Class)\n        ) {\n            set_flag(fn, SQUEEZED);\n            nearest_scope.add_child_scope(fn);\n            return make_sequence(self, flatten_fn(returned_value)).optimize(compressor);\n        }\n    }\n\n    if (can_inline && has_annotation(self, _INLINE)) {\n        set_flag(fn, SQUEEZED);\n        fn = make_node(fn.CTOR === AST_Defun ? AST_Function : fn.CTOR, fn, fn);\n        fn = fn.clone(true);\n        fn.figure_out_scope({}, {\n            parent_scope: compressor.find_scope(),\n            toplevel: compressor.get_toplevel()\n        });\n\n        return make_node(AST_Call, self, {\n            expression: fn,\n            args: self.args,\n        }).optimize(compressor);\n    }\n\n    const can_drop_this_call = is_regular_func && compressor.option(\"side_effects\") && fn.body.every(is_empty);\n    if (can_drop_this_call) {\n        var args = self.args.concat(make_node(AST_Undefined, self));\n        return make_sequence(self, args).optimize(compressor);\n    }\n\n    if (compressor.option(\"negate_iife\")\n        && compressor.parent() instanceof AST_SimpleStatement\n        && is_iife_call(self)) {\n        return self.negate(compressor, true);\n    }\n\n    var ev = self.evaluate(compressor);\n    if (ev !== self) {\n        ev = make_node_from_constant(ev, self).optimize(compressor);\n        return best_of(compressor, ev, self);\n    }\n\n    return self;\n\n    function return_value(stat) {\n        if (!stat) return make_node(AST_Undefined, self);\n        if (stat instanceof AST_Return) {\n            if (!stat.value) return make_node(AST_Undefined, self);\n            return stat.value.clone(true);\n        }\n        if (stat instanceof AST_SimpleStatement) {\n            return make_node(AST_UnaryPrefix, stat, {\n                operator: \"void\",\n                expression: stat.body.clone(true)\n            });\n        }\n    }\n\n    function can_flatten_body(stat) {\n        var body = fn.body;\n        var len = body.length;\n        if (compressor.option(\"inline\") < 3) {\n            return len == 1 && return_value(stat);\n        }\n        stat = null;\n        for (var i = 0; i < len; i++) {\n            var line = body[i];\n            if (line instanceof AST_Var) {\n                if (stat && !line.definitions.every((var_def) =>\n                    !var_def.value\n                )) {\n                    return false;\n                }\n            } else if (stat) {\n                return false;\n            } else if (!(line instanceof AST_EmptyStatement)) {\n                stat = line;\n            }\n        }\n        return return_value(stat);\n    }\n\n    function can_inject_args(block_scoped, safe_to_inject) {\n        for (var i = 0, len = fn.argnames.length; i < len; i++) {\n            var arg = fn.argnames[i];\n            if (arg instanceof AST_DefaultAssign) {\n                if (has_flag(arg.left, UNUSED)) continue;\n                return false;\n            }\n            if (arg instanceof AST_Destructuring) return false;\n            if (arg instanceof AST_Expansion) {\n                if (has_flag(arg.expression, UNUSED)) continue;\n                return false;\n            }\n            if (has_flag(arg, UNUSED)) continue;\n            if (!safe_to_inject\n                || block_scoped.has(arg.name)\n                || identifier_atom.has(arg.name)\n                || scope.conflicting_def(arg.name)) {\n                return false;\n            }\n            if (in_loop) in_loop.push(arg.definition());\n        }\n        return true;\n    }\n\n    function can_inject_vars(block_scoped, safe_to_inject) {\n        var len = fn.body.length;\n        for (var i = 0; i < len; i++) {\n            var stat = fn.body[i];\n            if (!(stat instanceof AST_Var)) continue;\n            if (!safe_to_inject) return false;\n            for (var j = stat.definitions.length; --j >= 0;) {\n                var name = stat.definitions[j].name;\n                if (name instanceof AST_Destructuring\n                    || block_scoped.has(name.name)\n                    || identifier_atom.has(name.name)\n                    || scope.conflicting_def(name.name)) {\n                    return false;\n                }\n                if (in_loop) in_loop.push(name.definition());\n            }\n        }\n        return true;\n    }\n\n    function can_inject_symbols() {\n        var block_scoped = new Set();\n        do {\n            scope = compressor.parent(++level);\n            if (scope.is_block_scope() && scope.block_scope) {\n                // TODO this is sometimes undefined during compression.\n                // But it should always have a value!\n                scope.block_scope.variables.forEach(function (variable) {\n                    block_scoped.add(variable.name);\n                });\n            }\n            if (scope instanceof AST_Catch) {\n                // TODO can we delete? AST_Catch is a block scope.\n                if (scope.argname) {\n                    block_scoped.add(scope.argname.name);\n                }\n            } else if (scope instanceof AST_IterationStatement) {\n                in_loop = [];\n            } else if (scope instanceof AST_SymbolRef) {\n                if (scope.fixed_value() instanceof AST_Scope) return false;\n            }\n        } while (!(scope instanceof AST_Scope));\n\n        var safe_to_inject = !(scope instanceof AST_Toplevel) || compressor.toplevel.vars;\n        var inline = compressor.option(\"inline\");\n        if (!can_inject_vars(block_scoped, inline >= 3 && safe_to_inject)) return false;\n        if (!can_inject_args(block_scoped, inline >= 2 && safe_to_inject)) return false;\n        return !in_loop || in_loop.length == 0 || !is_reachable(fn, in_loop);\n    }\n\n    function append_var(decls, expressions, name, value) {\n        var def = name.definition();\n\n        // Name already exists, only when a function argument had the same name\n        const already_appended = scope.variables.has(name.name);\n        if (!already_appended) {\n            scope.variables.set(name.name, def);\n            scope.enclosed.push(def);\n            decls.push(make_node(AST_VarDef, name, {\n                name: name,\n                value: null\n            }));\n        }\n\n        var sym = make_node(AST_SymbolRef, name, name);\n        def.references.push(sym);\n        if (value) expressions.push(make_node(AST_Assign, self, {\n            operator: \"=\",\n            logical: false,\n            left: sym,\n            right: value.clone()\n        }));\n    }\n\n    function flatten_args(decls, expressions) {\n        var len = fn.argnames.length;\n        for (var i = self.args.length; --i >= len;) {\n            expressions.push(self.args[i]);\n        }\n        for (i = len; --i >= 0;) {\n            var name = fn.argnames[i];\n            var value = self.args[i];\n            if (has_flag(name, UNUSED) || !name.name || scope.conflicting_def(name.name)) {\n                if (value) expressions.push(value);\n            } else {\n                var symbol = make_node(AST_SymbolVar, name, name);\n                name.definition().orig.push(symbol);\n                if (!value && in_loop) value = make_node(AST_Undefined, self);\n                append_var(decls, expressions, symbol, value);\n            }\n        }\n        decls.reverse();\n        expressions.reverse();\n    }\n\n    function flatten_vars(decls, expressions) {\n        var pos = expressions.length;\n        for (var i = 0, lines = fn.body.length; i < lines; i++) {\n            var stat = fn.body[i];\n            if (!(stat instanceof AST_Var)) continue;\n            for (var j = 0, defs = stat.definitions.length; j < defs; j++) {\n                var var_def = stat.definitions[j];\n                var name = var_def.name;\n                append_var(decls, expressions, name, var_def.value);\n                if (in_loop && fn.argnames.every((argname) =>\n                    argname.name != name.name\n                )) {\n                    var def = fn.variables.get(name.name);\n                    var sym = make_node(AST_SymbolRef, name, name);\n                    def.references.push(sym);\n                    expressions.splice(pos++, 0, make_node(AST_Assign, var_def, {\n                        operator: \"=\",\n                        logical: false,\n                        left: sym,\n                        right: make_node(AST_Undefined, name)\n                    }));\n                }\n            }\n        }\n    }\n\n    function flatten_fn(returned_value) {\n        var decls = [];\n        var expressions = [];\n        flatten_args(decls, expressions);\n        flatten_vars(decls, expressions);\n        expressions.push(returned_value);\n\n        if (decls.length) {\n            const i = scope.body.indexOf(compressor.parent(level - 1)) + 1;\n            scope.body.splice(i, 0, make_node(AST_Var, fn, {\n                definitions: decls\n            }));\n        }\n\n        return expressions.map(exp => exp.clone(true));\n    }\n}\n\n(function(def_find_defs) {\n    function to_node(value, orig) {\n        if (value instanceof AST_Node) {\n            if (!(value instanceof AST_Constant)) {\n                // Value may be a function, an array including functions and even a complex assign / block expression,\n                // so it should never be shared in different places.\n                // Otherwise wrong information may be used in the compression phase\n                value = value.clone(true);\n            }\n            return make_node(value.CTOR, orig, value);\n        }\n        if (Array.isArray(value)) return make_node(AST_Array, orig, {\n            elements: value.map(function(value) {\n                return to_node(value, orig);\n            })\n        });\n        if (value && typeof value == \"object\") {\n            var props = [];\n            for (var key in value) if (HOP(value, key)) {\n                props.push(make_node(AST_ObjectKeyVal, orig, {\n                    key: key,\n                    value: to_node(value[key], orig)\n                }));\n            }\n            return make_node(AST_Object, orig, {\n                properties: props\n            });\n        }\n        return make_node_from_constant(value, orig);\n    }\n\n    AST_Toplevel.DEFMETHOD(\"resolve_defines\", function(compressor) {\n        if (!compressor.option(\"global_defs\")) return this;\n        this.figure_out_scope({ ie8: compressor.option(\"ie8\") });\n        return this.transform(new TreeTransformer(function(node) {\n            var def = node._find_defs(compressor, \"\");\n            if (!def) return;\n            var level = 0, child = node, parent;\n            while (parent = this.parent(level++)) {\n                if (!(parent instanceof AST_PropAccess)) break;\n                if (parent.expression !== child) break;\n                child = parent;\n            }\n            if (is_lhs(child, parent)) {\n                return;\n            }\n            return def;\n        }));\n    });\n    def_find_defs(AST_Node, noop);\n    def_find_defs(AST_Chain, function(compressor, suffix) {\n        return this.expression._find_defs(compressor, suffix);\n    });\n    def_find_defs(AST_Dot, function(compressor, suffix) {\n        return this.expression._find_defs(compressor, \".\" + this.property + suffix);\n    });\n    def_find_defs(AST_SymbolDeclaration, function() {\n        if (!this.global()) return;\n    });\n    def_find_defs(AST_SymbolRef, function(compressor, suffix) {\n        if (!this.global()) return;\n        var defines = compressor.option(\"global_defs\");\n        var name = this.name + suffix;\n        if (HOP(defines, name)) return to_node(defines[name], this);\n    });\n    def_find_defs(AST_ImportMeta, function(compressor, suffix) {\n        var defines = compressor.option(\"global_defs\");\n        var name = \"import.meta\" + suffix;\n        if (HOP(defines, name)) return to_node(defines[name], this);\n    });\n})(function(node, func) {\n    node.DEFMETHOD(\"_find_defs\", func);\n});\n\n/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\nclass Compressor extends TreeWalker {\n    constructor(options, { false_by_default = false, mangle_options = false }) {\n        super();\n        if (options.defaults !== undefined && !options.defaults) false_by_default = true;\n        this.options = defaults(options, {\n            arguments     : false,\n            arrows        : !false_by_default,\n            booleans      : !false_by_default,\n            booleans_as_integers : false,\n            collapse_vars : !false_by_default,\n            comparisons   : !false_by_default,\n            computed_props: !false_by_default,\n            conditionals  : !false_by_default,\n            dead_code     : !false_by_default,\n            defaults      : true,\n            directives    : !false_by_default,\n            drop_console  : false,\n            drop_debugger : !false_by_default,\n            ecma          : 5,\n            evaluate      : !false_by_default,\n            expression    : false,\n            global_defs   : false,\n            hoist_funs    : false,\n            hoist_props   : !false_by_default,\n            hoist_vars    : false,\n            ie8           : false,\n            if_return     : !false_by_default,\n            inline        : !false_by_default,\n            join_vars     : !false_by_default,\n            keep_classnames: false,\n            keep_fargs    : true,\n            keep_fnames   : false,\n            keep_infinity : false,\n            lhs_constants : !false_by_default,\n            loops         : !false_by_default,\n            module        : false,\n            negate_iife   : !false_by_default,\n            passes        : 1,\n            properties    : !false_by_default,\n            pure_getters  : !false_by_default && \"strict\",\n            pure_funcs    : null,\n            pure_new      : false,\n            reduce_funcs  : !false_by_default,\n            reduce_vars   : !false_by_default,\n            sequences     : !false_by_default,\n            side_effects  : !false_by_default,\n            switches      : !false_by_default,\n            top_retain    : null,\n            toplevel      : !!(options && options[\"top_retain\"]),\n            typeofs       : !false_by_default,\n            unsafe        : false,\n            unsafe_arrows : false,\n            unsafe_comps  : false,\n            unsafe_Function: false,\n            unsafe_math   : false,\n            unsafe_symbols: false,\n            unsafe_methods: false,\n            unsafe_proto  : false,\n            unsafe_regexp : false,\n            unsafe_undefined: false,\n            unused        : !false_by_default,\n            warnings      : false  // legacy\n        }, true);\n        var global_defs = this.options[\"global_defs\"];\n        if (typeof global_defs == \"object\") for (var key in global_defs) {\n            if (key[0] === \"@\" && HOP(global_defs, key)) {\n                global_defs[key.slice(1)] = parse(global_defs[key], {\n                    expression: true\n                });\n            }\n        }\n        if (this.options[\"inline\"] === true) this.options[\"inline\"] = 3;\n        var pure_funcs = this.options[\"pure_funcs\"];\n        if (typeof pure_funcs == \"function\") {\n            this.pure_funcs = pure_funcs;\n        } else {\n            this.pure_funcs = pure_funcs ? function(node) {\n                return !pure_funcs.includes(node.expression.print_to_string());\n            } : return_true;\n        }\n        var top_retain = this.options[\"top_retain\"];\n        if (top_retain instanceof RegExp) {\n            this.top_retain = function(def) {\n                return top_retain.test(def.name);\n            };\n        } else if (typeof top_retain == \"function\") {\n            this.top_retain = top_retain;\n        } else if (top_retain) {\n            if (typeof top_retain == \"string\") {\n                top_retain = top_retain.split(/,/);\n            }\n            this.top_retain = function(def) {\n                return top_retain.includes(def.name);\n            };\n        }\n        if (this.options[\"module\"]) {\n            this.directives[\"use strict\"] = true;\n            this.options[\"toplevel\"] = true;\n        }\n        var toplevel = this.options[\"toplevel\"];\n        this.toplevel = typeof toplevel == \"string\" ? {\n            funcs: /funcs/.test(toplevel),\n            vars: /vars/.test(toplevel)\n        } : {\n            funcs: toplevel,\n            vars: toplevel\n        };\n        var sequences = this.options[\"sequences\"];\n        this.sequences_limit = sequences == 1 ? 800 : sequences | 0;\n        this.evaluated_regexps = new Map();\n        this._toplevel = undefined;\n        this._mangle_options = mangle_options\n            ? format_mangler_options(mangle_options)\n            : mangle_options;\n    }\n\n    mangle_options() {\n        var nth_identifier = this._mangle_options && this._mangle_options.nth_identifier || base54;\n        var module = this._mangle_options && this._mangle_options.module || this.option(\"module\");\n        return { ie8: this.option(\"ie8\"), nth_identifier, module };\n    }\n\n    option(key) {\n        return this.options[key];\n    }\n\n    exposed(def) {\n        if (def.export) return true;\n        if (def.global) for (var i = 0, len = def.orig.length; i < len; i++)\n            if (!this.toplevel[def.orig[i] instanceof AST_SymbolDefun ? \"funcs\" : \"vars\"])\n                return true;\n        return false;\n    }\n\n    in_boolean_context() {\n        if (!this.option(\"booleans\")) return false;\n        var self = this.self();\n        for (var i = 0, p; p = this.parent(i); i++) {\n            if (p instanceof AST_SimpleStatement\n                || p instanceof AST_Conditional && p.condition === self\n                || p instanceof AST_DWLoop && p.condition === self\n                || p instanceof AST_For && p.condition === self\n                || p instanceof AST_If && p.condition === self\n                || p instanceof AST_UnaryPrefix && p.operator == \"!\" && p.expression === self) {\n                return true;\n            }\n            if (\n                p instanceof AST_Binary\n                    && (\n                        p.operator == \"&&\"\n                        || p.operator == \"||\"\n                        || p.operator == \"??\"\n                    )\n                || p instanceof AST_Conditional\n                || p.tail_node() === self\n            ) {\n                self = p;\n            } else {\n                return false;\n            }\n        }\n    }\n\n    in_32_bit_context() {\n        if (!this.option(\"evaluate\")) return false;\n        var self = this.self();\n        for (var i = 0, p; p = this.parent(i); i++) {\n            if (p instanceof AST_Binary && bitwise_binop.has(p.operator)) {\n                return true;\n            }\n            if (p instanceof AST_UnaryPrefix) {\n                return p.operator === \"~\";\n            }\n            if (\n                p instanceof AST_Binary\n                    && (\n                        p.operator == \"&&\"\n                        || p.operator == \"||\"\n                        || p.operator == \"??\"\n                    )\n                || p instanceof AST_Conditional && p.condition !== self\n                || p.tail_node() === self\n            ) {\n                self = p;\n            } else {\n                return false;\n            }\n        }\n    }\n\n    get_toplevel() {\n        return this._toplevel;\n    }\n\n    compress(toplevel) {\n        toplevel = toplevel.resolve_defines(this);\n        this._toplevel = toplevel;\n        if (this.option(\"expression\")) {\n            this._toplevel.process_expression(true);\n        }\n        var passes = +this.options.passes || 1;\n        var min_count = 1 / 0;\n        var stopping = false;\n        var mangle = this.mangle_options();\n        for (var pass = 0; pass < passes; pass++) {\n            this._toplevel.figure_out_scope(mangle);\n            if (pass === 0 && this.option(\"drop_console\")) {\n                // must be run before reduce_vars and compress pass\n                this._toplevel = this._toplevel.drop_console(this.option(\"drop_console\"));\n            }\n            if (pass > 0 || this.option(\"reduce_vars\")) {\n                this._toplevel.reset_opt_flags(this);\n            }\n            this._toplevel = this._toplevel.transform(this);\n            if (passes > 1) {\n                let count = 0;\n                walk(this._toplevel, () => { count++; });\n                if (count < min_count) {\n                    min_count = count;\n                    stopping = false;\n                } else if (stopping) {\n                    break;\n                } else {\n                    stopping = true;\n                }\n            }\n        }\n        if (this.option(\"expression\")) {\n            this._toplevel.process_expression(false);\n        }\n        toplevel = this._toplevel;\n        this._toplevel = undefined;\n        return toplevel;\n    }\n\n    before(node, descend) {\n        if (has_flag(node, SQUEEZED)) return node;\n        var was_scope = false;\n        if (node instanceof AST_Scope) {\n            node = node.hoist_properties(this);\n            node = node.hoist_declarations(this);\n            was_scope = true;\n        }\n        // Before https://github.com/mishoo/UglifyJS2/pull/1602 AST_Node.optimize()\n        // would call AST_Node.transform() if a different instance of AST_Node is\n        // produced after def_optimize().\n        // This corrupts TreeWalker.stack, which cause AST look-ups to malfunction.\n        // Migrate and defer all children's AST_Node.transform() to below, which\n        // will now happen after this parent AST_Node has been properly substituted\n        // thus gives a consistent AST snapshot.\n        descend(node, this);\n        // Existing code relies on how AST_Node.optimize() worked, and omitting the\n        // following replacement call would result in degraded efficiency of both\n        // output and performance.\n        descend(node, this);\n        var opt = node.optimize(this);\n        if (was_scope && opt instanceof AST_Scope) {\n            opt.drop_unused(this);\n            descend(opt, this);\n        }\n        if (opt === node) set_flag(opt, SQUEEZED);\n        return opt;\n    }\n\n    /** Alternative to plain is_lhs() which doesn't work within .optimize() */\n    is_lhs() {\n        const self = this.stack[this.stack.length - 1];\n        const parent = this.stack[this.stack.length - 2];\n        return is_lhs(self, parent);\n    }\n}\n\nfunction def_optimize(node, optimizer) {\n    node.DEFMETHOD(\"optimize\", function(compressor) {\n        var self = this;\n        if (has_flag(self, OPTIMIZED)) return self;\n        if (compressor.has_directive(\"use asm\")) return self;\n        var opt = optimizer(self, compressor);\n        set_flag(opt, OPTIMIZED);\n        return opt;\n    });\n}\n\ndef_optimize(AST_Node, function(self) {\n    return self;\n});\n\nAST_Toplevel.DEFMETHOD(\"drop_console\", function(options) {\n    var isArray = Array.isArray(options);\n\n    return this.transform(new TreeTransformer(function(self) {\n        if (self.TYPE !== \"Call\") {\n            return;\n        }\n\n        var exp = self.expression;\n\n        if (!(exp instanceof AST_PropAccess)) {\n            return;\n        }\n\n        if (isArray && options.indexOf(exp.property) === -1) {\n            return;\n        }\n\n        var name = exp.expression;\n        while (name.expression) {\n            name = name.expression;\n        }\n        if (is_undeclared_ref(name) && name.name == \"console\") {\n            return make_node(AST_Undefined, self);\n        }\n    }));\n});\n\nAST_Node.DEFMETHOD(\"equivalent_to\", function(node) {\n    return equivalent_to(this, node);\n});\n\nAST_Scope.DEFMETHOD(\"process_expression\", function(insert, compressor) {\n    var self = this;\n    var tt = new TreeTransformer(function(node) {\n        if (insert && node instanceof AST_SimpleStatement) {\n            return make_node(AST_Return, node, {\n                value: node.body\n            });\n        }\n        if (!insert && node instanceof AST_Return) {\n            if (compressor) {\n                var value = node.value && node.value.drop_side_effect_free(compressor, true);\n                return value\n                    ? make_node(AST_SimpleStatement, node, { body: value })\n                    : make_node(AST_EmptyStatement, node);\n            }\n            return make_node(AST_SimpleStatement, node, {\n                body: node.value || make_node(AST_UnaryPrefix, node, {\n                    operator: \"void\",\n                    expression: make_node(AST_Number, node, {\n                        value: 0\n                    })\n                })\n            });\n        }\n        if (node instanceof AST_Class || node instanceof AST_Lambda && node !== self) {\n            return node;\n        }\n        if (node instanceof AST_Block) {\n            var index = node.body.length - 1;\n            if (index >= 0) {\n                node.body[index] = node.body[index].transform(tt);\n            }\n        } else if (node instanceof AST_If) {\n            node.body = node.body.transform(tt);\n            if (node.alternative) {\n                node.alternative = node.alternative.transform(tt);\n            }\n        } else if (node instanceof AST_With) {\n            node.body = node.body.transform(tt);\n        }\n        return node;\n    });\n    self.transform(tt);\n});\n\nAST_Toplevel.DEFMETHOD(\"reset_opt_flags\", function(compressor) {\n    const self = this;\n    const reduce_vars = compressor.option(\"reduce_vars\");\n\n    const preparation = new TreeWalker(function(node, descend) {\n        clear_flag(node, CLEAR_BETWEEN_PASSES);\n        if (reduce_vars) {\n            if (compressor.top_retain\n                && node instanceof AST_Defun  // Only functions are retained\n                && preparation.parent() === self\n            ) {\n                set_flag(node, TOP);\n            }\n            return node.reduce_vars(preparation, descend, compressor);\n        }\n    });\n    // Stack of look-up tables to keep track of whether a `SymbolDef` has been\n    // properly assigned before use:\n    // - `push()` & `pop()` when visiting conditional branches\n    preparation.safe_ids = Object.create(null);\n    preparation.in_loop = null;\n    preparation.loop_ids = new Map();\n    preparation.defs_to_safe_ids = new Map();\n    self.walk(preparation);\n});\n\nAST_Symbol.DEFMETHOD(\"fixed_value\", function() {\n    var fixed = this.thedef.fixed;\n    if (!fixed || fixed instanceof AST_Node) return fixed;\n    return fixed();\n});\n\nAST_SymbolRef.DEFMETHOD(\"is_immutable\", function() {\n    var orig = this.definition().orig;\n    return orig.length == 1 && orig[0] instanceof AST_SymbolLambda;\n});\n\nfunction find_variable(compressor, name) {\n    var scope, i = 0;\n    while (scope = compressor.parent(i++)) {\n        if (scope instanceof AST_Scope) break;\n        if (scope instanceof AST_Catch && scope.argname) {\n            scope = scope.argname.definition().scope;\n            break;\n        }\n    }\n    return scope.find_variable(name);\n}\n\nvar global_names = makePredicate(\"Array Boolean clearInterval clearTimeout console Date decodeURI decodeURIComponent encodeURI encodeURIComponent Error escape eval EvalError Function isFinite isNaN JSON Math Number parseFloat parseInt RangeError ReferenceError RegExp Object setInterval setTimeout String SyntaxError TypeError unescape URIError\");\nAST_SymbolRef.DEFMETHOD(\"is_declared\", function(compressor) {\n    return !this.definition().undeclared\n        || compressor.option(\"unsafe\") && global_names.has(this.name);\n});\n\n/* -----[ optimizers ]----- */\n\nvar directives = new Set([\"use asm\", \"use strict\"]);\ndef_optimize(AST_Directive, function(self, compressor) {\n    if (compressor.option(\"directives\")\n        && (!directives.has(self.value) || compressor.has_directive(self.value) !== self)) {\n        return make_node(AST_EmptyStatement, self);\n    }\n    return self;\n});\n\ndef_optimize(AST_Debugger, function(self, compressor) {\n    if (compressor.option(\"drop_debugger\"))\n        return make_node(AST_EmptyStatement, self);\n    return self;\n});\n\ndef_optimize(AST_LabeledStatement, function(self, compressor) {\n    if (self.body instanceof AST_Break\n        && compressor.loopcontrol_target(self.body) === self.body) {\n        return make_node(AST_EmptyStatement, self);\n    }\n    return self.label.references.length == 0 ? self.body : self;\n});\n\ndef_optimize(AST_Block, function(self, compressor) {\n    tighten_body(self.body, compressor);\n    return self;\n});\n\nfunction can_be_extracted_from_if_block(node) {\n    return !(\n        node instanceof AST_Const\n        || node instanceof AST_Let\n        || node instanceof AST_Class\n    );\n}\n\ndef_optimize(AST_BlockStatement, function(self, compressor) {\n    tighten_body(self.body, compressor);\n    switch (self.body.length) {\n      case 1:\n        if (!compressor.has_directive(\"use strict\")\n            && compressor.parent() instanceof AST_If\n            && can_be_extracted_from_if_block(self.body[0])\n            || can_be_evicted_from_block(self.body[0])) {\n            return self.body[0];\n        }\n        break;\n      case 0: return make_node(AST_EmptyStatement, self);\n    }\n    return self;\n});\n\nfunction opt_AST_Lambda(self, compressor) {\n    tighten_body(self.body, compressor);\n    if (compressor.option(\"side_effects\")\n        && self.body.length == 1\n        && self.body[0] === compressor.has_directive(\"use strict\")) {\n        self.body.length = 0;\n    }\n    return self;\n}\ndef_optimize(AST_Lambda, opt_AST_Lambda);\n\nAST_Scope.DEFMETHOD(\"hoist_declarations\", function(compressor) {\n    var self = this;\n    if (compressor.has_directive(\"use asm\")) return self;\n\n    var hoist_funs = compressor.option(\"hoist_funs\");\n    var hoist_vars = compressor.option(\"hoist_vars\");\n\n    if (hoist_funs || hoist_vars) {\n        var dirs = [];\n        var hoisted = [];\n        var vars = new Map(), vars_found = 0, var_decl = 0;\n        // let's count var_decl first, we seem to waste a lot of\n        // space if we hoist `var` when there's only one.\n        walk(self, node => {\n            if (node instanceof AST_Scope && node !== self)\n                return true;\n            if (node instanceof AST_Var) {\n                ++var_decl;\n                return true;\n            }\n        });\n        hoist_vars = hoist_vars && var_decl > 1;\n        var tt = new TreeTransformer(\n            function before(node) {\n                if (node !== self) {\n                    if (node instanceof AST_Directive) {\n                        dirs.push(node);\n                        return make_node(AST_EmptyStatement, node);\n                    }\n                    if (hoist_funs && node instanceof AST_Defun\n                        && !(tt.parent() instanceof AST_Export)\n                        && tt.parent() === self) {\n                        hoisted.push(node);\n                        return make_node(AST_EmptyStatement, node);\n                    }\n                    if (\n                        hoist_vars\n                        && node instanceof AST_Var\n                        && !node.definitions.some(def => def.name instanceof AST_Destructuring)\n                    ) {\n                        node.definitions.forEach(function(def) {\n                            vars.set(def.name.name, def);\n                            ++vars_found;\n                        });\n                        var seq = node.to_assignments(compressor);\n                        var p = tt.parent();\n                        if (p instanceof AST_ForIn && p.init === node) {\n                            if (seq == null) {\n                                var def = node.definitions[0].name;\n                                return make_node(AST_SymbolRef, def, def);\n                            }\n                            return seq;\n                        }\n                        if (p instanceof AST_For && p.init === node) {\n                            return seq;\n                        }\n                        if (!seq) return make_node(AST_EmptyStatement, node);\n                        return make_node(AST_SimpleStatement, node, {\n                            body: seq\n                        });\n                    }\n                    if (node instanceof AST_Scope)\n                        return node; // to avoid descending in nested scopes\n                }\n            }\n        );\n        self = self.transform(tt);\n        if (vars_found > 0) {\n            // collect only vars which don't show up in self's arguments list\n            var defs = [];\n            const is_lambda = self instanceof AST_Lambda;\n            const args_as_names = is_lambda ? self.args_as_names() : null;\n            vars.forEach((def, name) => {\n                if (is_lambda && args_as_names.some((x) => x.name === def.name.name)) {\n                    vars.delete(name);\n                } else {\n                    def = def.clone();\n                    def.value = null;\n                    defs.push(def);\n                    vars.set(name, def);\n                }\n            });\n            if (defs.length > 0) {\n                // try to merge in assignments\n                for (var i = 0; i < self.body.length;) {\n                    if (self.body[i] instanceof AST_SimpleStatement) {\n                        var expr = self.body[i].body, sym, assign;\n                        if (expr instanceof AST_Assign\n                            && expr.operator == \"=\"\n                            && (sym = expr.left) instanceof AST_Symbol\n                            && vars.has(sym.name)\n                        ) {\n                            var def = vars.get(sym.name);\n                            if (def.value) break;\n                            def.value = expr.right;\n                            remove(defs, def);\n                            defs.push(def);\n                            self.body.splice(i, 1);\n                            continue;\n                        }\n                        if (expr instanceof AST_Sequence\n                            && (assign = expr.expressions[0]) instanceof AST_Assign\n                            && assign.operator == \"=\"\n                            && (sym = assign.left) instanceof AST_Symbol\n                            && vars.has(sym.name)\n                        ) {\n                            var def = vars.get(sym.name);\n                            if (def.value) break;\n                            def.value = assign.right;\n                            remove(defs, def);\n                            defs.push(def);\n                            self.body[i].body = make_sequence(expr, expr.expressions.slice(1));\n                            continue;\n                        }\n                    }\n                    if (self.body[i] instanceof AST_EmptyStatement) {\n                        self.body.splice(i, 1);\n                        continue;\n                    }\n                    if (self.body[i] instanceof AST_BlockStatement) {\n                        self.body.splice(i, 1, ...self.body[i].body);\n                        continue;\n                    }\n                    break;\n                }\n                defs = make_node(AST_Var, self, {\n                    definitions: defs\n                });\n                hoisted.push(defs);\n            }\n        }\n        self.body = dirs.concat(hoisted, self.body);\n    }\n    return self;\n});\n\nAST_Scope.DEFMETHOD(\"hoist_properties\", function(compressor) {\n    var self = this;\n    if (!compressor.option(\"hoist_props\") || compressor.has_directive(\"use asm\")) return self;\n    var top_retain = self instanceof AST_Toplevel && compressor.top_retain || return_false;\n    var defs_by_id = new Map();\n    var hoister = new TreeTransformer(function(node, descend) {\n        if (node instanceof AST_VarDef) {\n            const sym = node.name;\n            let def;\n            let value;\n            if (sym.scope === self\n                && (def = sym.definition()).escaped != 1\n                && !def.assignments\n                && !def.direct_access\n                && !def.single_use\n                && !compressor.exposed(def)\n                && !top_retain(def)\n                && (value = sym.fixed_value()) === node.value\n                && value instanceof AST_Object\n                && !value.properties.some(prop =>\n                    prop instanceof AST_Expansion || prop.computed_key()\n                )\n            ) {\n                descend(node, this);\n                const defs = new Map();\n                const assignments = [];\n                value.properties.forEach(({ key, value }) => {\n                    const scope = hoister.find_scope();\n                    const symbol = self.create_symbol(sym.CTOR, {\n                        source: sym,\n                        scope,\n                        conflict_scopes: new Set([\n                            scope,\n                            ...sym.definition().references.map(ref => ref.scope)\n                        ]),\n                        tentative_name: sym.name + \"_\" + key\n                    });\n\n                    defs.set(String(key), symbol.definition());\n\n                    assignments.push(make_node(AST_VarDef, node, {\n                        name: symbol,\n                        value\n                    }));\n                });\n                defs_by_id.set(def.id, defs);\n                return MAP.splice(assignments);\n            }\n        } else if (node instanceof AST_PropAccess\n            && node.expression instanceof AST_SymbolRef\n        ) {\n            const defs = defs_by_id.get(node.expression.definition().id);\n            if (defs) {\n                const def = defs.get(String(get_simple_key(node.property)));\n                const sym = make_node(AST_SymbolRef, node, {\n                    name: def.name,\n                    scope: node.expression.scope,\n                    thedef: def\n                });\n                sym.reference({});\n                return sym;\n            }\n        }\n    });\n    return self.transform(hoister);\n});\n\ndef_optimize(AST_SimpleStatement, function(self, compressor) {\n    if (compressor.option(\"side_effects\")) {\n        var body = self.body;\n        var node = body.drop_side_effect_free(compressor, true);\n        if (!node) {\n            return make_node(AST_EmptyStatement, self);\n        }\n        if (node !== body) {\n            return make_node(AST_SimpleStatement, self, { body: node });\n        }\n    }\n    return self;\n});\n\ndef_optimize(AST_While, function(self, compressor) {\n    return compressor.option(\"loops\") ? make_node(AST_For, self, self).optimize(compressor) : self;\n});\n\ndef_optimize(AST_Do, function(self, compressor) {\n    if (!compressor.option(\"loops\")) return self;\n    var cond = self.condition.tail_node().evaluate(compressor);\n    if (!(cond instanceof AST_Node)) {\n        if (cond) return make_node(AST_For, self, {\n            body: make_node(AST_BlockStatement, self.body, {\n                body: [\n                    self.body,\n                    make_node(AST_SimpleStatement, self.condition, {\n                        body: self.condition\n                    })\n                ]\n            })\n        }).optimize(compressor);\n        if (!has_break_or_continue(self, compressor.parent())) {\n            return make_node(AST_BlockStatement, self.body, {\n                body: [\n                    self.body,\n                    make_node(AST_SimpleStatement, self.condition, {\n                        body: self.condition\n                    })\n                ]\n            }).optimize(compressor);\n        }\n    }\n    return self;\n});\n\nfunction if_break_in_loop(self, compressor) {\n    var first = self.body instanceof AST_BlockStatement ? self.body.body[0] : self.body;\n    if (compressor.option(\"dead_code\") && is_break(first)) {\n        var body = [];\n        if (self.init instanceof AST_Statement) {\n            body.push(self.init);\n        } else if (self.init) {\n            body.push(make_node(AST_SimpleStatement, self.init, {\n                body: self.init\n            }));\n        }\n        if (self.condition) {\n            body.push(make_node(AST_SimpleStatement, self.condition, {\n                body: self.condition\n            }));\n        }\n        trim_unreachable_code(compressor, self.body, body);\n        return make_node(AST_BlockStatement, self, {\n            body: body\n        });\n    }\n    if (first instanceof AST_If) {\n        if (is_break(first.body)) {\n            if (self.condition) {\n                self.condition = make_node(AST_Binary, self.condition, {\n                    left: self.condition,\n                    operator: \"&&\",\n                    right: first.condition.negate(compressor),\n                });\n            } else {\n                self.condition = first.condition.negate(compressor);\n            }\n            drop_it(first.alternative);\n        } else if (is_break(first.alternative)) {\n            if (self.condition) {\n                self.condition = make_node(AST_Binary, self.condition, {\n                    left: self.condition,\n                    operator: \"&&\",\n                    right: first.condition,\n                });\n            } else {\n                self.condition = first.condition;\n            }\n            drop_it(first.body);\n        }\n    }\n    return self;\n\n    function is_break(node) {\n        return node instanceof AST_Break\n            && compressor.loopcontrol_target(node) === compressor.self();\n    }\n\n    function drop_it(rest) {\n        rest = as_statement_array(rest);\n        if (self.body instanceof AST_BlockStatement) {\n            self.body = self.body.clone();\n            self.body.body = rest.concat(self.body.body.slice(1));\n            self.body = self.body.transform(compressor);\n        } else {\n            self.body = make_node(AST_BlockStatement, self.body, {\n                body: rest\n            }).transform(compressor);\n        }\n        self = if_break_in_loop(self, compressor);\n    }\n}\n\ndef_optimize(AST_For, function(self, compressor) {\n    if (!compressor.option(\"loops\")) return self;\n    if (compressor.option(\"side_effects\") && self.init) {\n        self.init = self.init.drop_side_effect_free(compressor);\n    }\n    if (self.condition) {\n        var cond = self.condition.evaluate(compressor);\n        if (!(cond instanceof AST_Node)) {\n            if (cond) self.condition = null;\n            else if (!compressor.option(\"dead_code\")) {\n                var orig = self.condition;\n                self.condition = make_node_from_constant(cond, self.condition);\n                self.condition = best_of_expression(self.condition.transform(compressor), orig);\n            }\n        }\n        if (compressor.option(\"dead_code\")) {\n            if (cond instanceof AST_Node) cond = self.condition.tail_node().evaluate(compressor);\n            if (!cond) {\n                var body = [];\n                trim_unreachable_code(compressor, self.body, body);\n                if (self.init instanceof AST_Statement) {\n                    body.push(self.init);\n                } else if (self.init) {\n                    body.push(make_node(AST_SimpleStatement, self.init, {\n                        body: self.init\n                    }));\n                }\n                body.push(make_node(AST_SimpleStatement, self.condition, {\n                    body: self.condition\n                }));\n                return make_node(AST_BlockStatement, self, { body: body }).optimize(compressor);\n            }\n        }\n    }\n    return if_break_in_loop(self, compressor);\n});\n\ndef_optimize(AST_If, function(self, compressor) {\n    if (is_empty(self.alternative)) self.alternative = null;\n\n    if (!compressor.option(\"conditionals\")) return self;\n    // if condition can be statically determined, drop\n    // one of the blocks.  note, statically determined implies\n    // “has no side effects”; also it doesn't work for cases like\n    // `x && true`, though it probably should.\n    var cond = self.condition.evaluate(compressor);\n    if (!compressor.option(\"dead_code\") && !(cond instanceof AST_Node)) {\n        var orig = self.condition;\n        self.condition = make_node_from_constant(cond, orig);\n        self.condition = best_of_expression(self.condition.transform(compressor), orig);\n    }\n    if (compressor.option(\"dead_code\")) {\n        if (cond instanceof AST_Node) cond = self.condition.tail_node().evaluate(compressor);\n        if (!cond) {\n            var body = [];\n            trim_unreachable_code(compressor, self.body, body);\n            body.push(make_node(AST_SimpleStatement, self.condition, {\n                body: self.condition\n            }));\n            if (self.alternative) body.push(self.alternative);\n            return make_node(AST_BlockStatement, self, { body: body }).optimize(compressor);\n        } else if (!(cond instanceof AST_Node)) {\n            var body = [];\n            body.push(make_node(AST_SimpleStatement, self.condition, {\n                body: self.condition\n            }));\n            body.push(self.body);\n            if (self.alternative) {\n                trim_unreachable_code(compressor, self.alternative, body);\n            }\n            return make_node(AST_BlockStatement, self, { body: body }).optimize(compressor);\n        }\n    }\n    var negated = self.condition.negate(compressor);\n    var self_condition_length = self.condition.size();\n    var negated_length = negated.size();\n    var negated_is_best = negated_length < self_condition_length;\n    if (self.alternative && negated_is_best) {\n        negated_is_best = false; // because we already do the switch here.\n        // no need to swap values of self_condition_length and negated_length\n        // here because they are only used in an equality comparison later on.\n        self.condition = negated;\n        var tmp = self.body;\n        self.body = self.alternative || make_node(AST_EmptyStatement, self);\n        self.alternative = tmp;\n    }\n    if (is_empty(self.body) && is_empty(self.alternative)) {\n        return make_node(AST_SimpleStatement, self.condition, {\n            body: self.condition.clone()\n        }).optimize(compressor);\n    }\n    if (self.body instanceof AST_SimpleStatement\n        && self.alternative instanceof AST_SimpleStatement) {\n        return make_node(AST_SimpleStatement, self, {\n            body: make_node(AST_Conditional, self, {\n                condition   : self.condition,\n                consequent  : self.body.body,\n                alternative : self.alternative.body\n            })\n        }).optimize(compressor);\n    }\n    if (is_empty(self.alternative) && self.body instanceof AST_SimpleStatement) {\n        if (self_condition_length === negated_length && !negated_is_best\n            && self.condition instanceof AST_Binary && self.condition.operator == \"||\") {\n            // although the code length of self.condition and negated are the same,\n            // negated does not require additional surrounding parentheses.\n            // see https://github.com/mishoo/UglifyJS2/issues/979\n            negated_is_best = true;\n        }\n        if (negated_is_best) return make_node(AST_SimpleStatement, self, {\n            body: make_node(AST_Binary, self, {\n                operator : \"||\",\n                left     : negated,\n                right    : self.body.body\n            })\n        }).optimize(compressor);\n        return make_node(AST_SimpleStatement, self, {\n            body: make_node(AST_Binary, self, {\n                operator : \"&&\",\n                left     : self.condition,\n                right    : self.body.body\n            })\n        }).optimize(compressor);\n    }\n    if (self.body instanceof AST_EmptyStatement\n        && self.alternative instanceof AST_SimpleStatement) {\n        return make_node(AST_SimpleStatement, self, {\n            body: make_node(AST_Binary, self, {\n                operator : \"||\",\n                left     : self.condition,\n                right    : self.alternative.body\n            })\n        }).optimize(compressor);\n    }\n    if (self.body instanceof AST_Exit\n        && self.alternative instanceof AST_Exit\n        && self.body.TYPE == self.alternative.TYPE) {\n        return make_node(self.body.CTOR, self, {\n            value: make_node(AST_Conditional, self, {\n                condition   : self.condition,\n                consequent  : self.body.value || make_node(AST_Undefined, self.body),\n                alternative : self.alternative.value || make_node(AST_Undefined, self.alternative)\n            }).transform(compressor)\n        }).optimize(compressor);\n    }\n    if (self.body instanceof AST_If\n        && !self.body.alternative\n        && !self.alternative) {\n        self = make_node(AST_If, self, {\n            condition: make_node(AST_Binary, self.condition, {\n                operator: \"&&\",\n                left: self.condition,\n                right: self.body.condition\n            }),\n            body: self.body.body,\n            alternative: null\n        });\n    }\n    if (aborts(self.body)) {\n        if (self.alternative) {\n            var alt = self.alternative;\n            self.alternative = null;\n            return make_node(AST_BlockStatement, self, {\n                body: [ self, alt ]\n            }).optimize(compressor);\n        }\n    }\n    if (aborts(self.alternative)) {\n        var body = self.body;\n        self.body = self.alternative;\n        self.condition = negated_is_best ? negated : self.condition.negate(compressor);\n        self.alternative = null;\n        return make_node(AST_BlockStatement, self, {\n            body: [ self, body ]\n        }).optimize(compressor);\n    }\n    return self;\n});\n\ndef_optimize(AST_Switch, function(self, compressor) {\n    if (!compressor.option(\"switches\")) return self;\n    var branch;\n    var value = self.expression.evaluate(compressor);\n    if (!(value instanceof AST_Node)) {\n        var orig = self.expression;\n        self.expression = make_node_from_constant(value, orig);\n        self.expression = best_of_expression(self.expression.transform(compressor), orig);\n    }\n    if (!compressor.option(\"dead_code\")) return self;\n    if (value instanceof AST_Node) {\n        value = self.expression.tail_node().evaluate(compressor);\n    }\n    var decl = [];\n    var body = [];\n    var default_branch;\n    var exact_match;\n    for (var i = 0, len = self.body.length; i < len && !exact_match; i++) {\n        branch = self.body[i];\n        if (branch instanceof AST_Default) {\n            if (!default_branch) {\n                default_branch = branch;\n            } else {\n                eliminate_branch(branch, body[body.length - 1]);\n            }\n        } else if (!(value instanceof AST_Node)) {\n            var exp = branch.expression.evaluate(compressor);\n            if (!(exp instanceof AST_Node) && exp !== value) {\n                eliminate_branch(branch, body[body.length - 1]);\n                continue;\n            }\n            if (exp instanceof AST_Node) exp = branch.expression.tail_node().evaluate(compressor);\n            if (exp === value) {\n                exact_match = branch;\n                if (default_branch) {\n                    var default_index = body.indexOf(default_branch);\n                    body.splice(default_index, 1);\n                    eliminate_branch(default_branch, body[default_index - 1]);\n                    default_branch = null;\n                }\n            }\n        }\n        body.push(branch);\n    }\n    while (i < len) eliminate_branch(self.body[i++], body[body.length - 1]);\n    self.body = body;\n\n    let default_or_exact = default_branch || exact_match;\n    default_branch = null;\n    exact_match = null;\n\n    // group equivalent branches so they will be located next to each other,\n    // that way the next micro-optimization will merge them.\n    // ** bail micro-optimization if not a simple switch case with breaks\n    if (body.every((branch, i) =>\n        (branch === default_or_exact || branch.expression instanceof AST_Constant)\n        && (branch.body.length === 0 || aborts(branch) || body.length - 1 === i))\n    ) {\n        for (let i = 0; i < body.length; i++) {\n            const branch = body[i];\n            for (let j = i + 1; j < body.length; j++) {\n                const next = body[j];\n                if (next.body.length === 0) continue;\n                const last_branch = j === (body.length - 1);\n                const equivalentBranch = branches_equivalent(next, branch, false);\n                if (equivalentBranch || (last_branch && branches_equivalent(next, branch, true))) {\n                    if (!equivalentBranch && last_branch) {\n                        next.body.push(make_node(AST_Break));\n                    }\n\n                    // let's find previous siblings with inert fallthrough...\n                    let x = j - 1;\n                    let fallthroughDepth = 0;\n                    while (x > i) {\n                        if (is_inert_body(body[x--])) {\n                            fallthroughDepth++;\n                        } else {\n                            break;\n                        }\n                    }\n\n                    const plucked = body.splice(j - fallthroughDepth, 1 + fallthroughDepth);\n                    body.splice(i + 1, 0, ...plucked);\n                    i += plucked.length;\n                }\n            }\n        }\n    }\n\n    // merge equivalent branches in a row\n    for (let i = 0; i < body.length; i++) {\n        let branch = body[i];\n        if (branch.body.length === 0) continue;\n        if (!aborts(branch)) continue;\n\n        for (let j = i + 1; j < body.length; i++, j++) {\n            let next = body[j];\n            if (next.body.length === 0) continue;\n            if (\n                branches_equivalent(next, branch, false)\n                || (j === body.length - 1 && branches_equivalent(next, branch, true))\n            ) {\n                branch.body = [];\n                branch = next;\n                continue;\n            }\n            break;\n        }\n    }\n\n    // Prune any empty branches at the end of the switch statement.\n    {\n        let i = body.length - 1;\n        for (; i >= 0; i--) {\n            let bbody = body[i].body;\n            if (is_break(bbody[bbody.length - 1], compressor)) bbody.pop();\n            if (!is_inert_body(body[i])) break;\n        }\n        // i now points to the index of a branch that contains a body. By incrementing, it's\n        // pointing to the first branch that's empty.\n        i++;\n        if (!default_or_exact || body.indexOf(default_or_exact) >= i) {\n            // The default behavior is to do nothing. We can take advantage of that to\n            // remove all case expressions that are side-effect free that also do\n            // nothing, since they'll default to doing nothing. But we can't remove any\n            // case expressions before one that would side-effect, since they may cause\n            // the side-effect to be skipped.\n            for (let j = body.length - 1; j >= i; j--) {\n                let branch = body[j];\n                if (branch === default_or_exact) {\n                    default_or_exact = null;\n                    body.pop();\n                } else if (!branch.expression.has_side_effects(compressor)) {\n                    body.pop();\n                } else {\n                    break;\n                }\n            }\n        }\n    }\n\n\n    // Prune side-effect free branches that fall into default.\n    DEFAULT: if (default_or_exact) {\n        let default_index = body.indexOf(default_or_exact);\n        let default_body_index = default_index;\n        for (; default_body_index < body.length - 1; default_body_index++) {\n            if (!is_inert_body(body[default_body_index])) break;\n        }\n        if (default_body_index < body.length - 1) {\n            break DEFAULT;\n        }\n\n        let side_effect_index = body.length - 1;\n        for (; side_effect_index >= 0; side_effect_index--) {\n            let branch = body[side_effect_index];\n            if (branch === default_or_exact) continue;\n            if (branch.expression.has_side_effects(compressor)) break;\n        }\n        // If the default behavior comes after any side-effect case expressions,\n        // then we can fold all side-effect free cases into the default branch.\n        // If the side-effect case is after the default, then any side-effect\n        // free cases could prevent the side-effect from occurring.\n        if (default_body_index > side_effect_index) {\n            let prev_body_index = default_index - 1;\n            for (; prev_body_index >= 0; prev_body_index--) {\n                if (!is_inert_body(body[prev_body_index])) break;\n            }\n            let before = Math.max(side_effect_index, prev_body_index) + 1;\n            let after = default_index;\n            if (side_effect_index > default_index) {\n                // If the default falls into the same body as a side-effect\n                // case, then we need preserve that case and only prune the\n                // cases after it.\n                after = side_effect_index;\n                body[side_effect_index].body = body[default_body_index].body;\n            } else {\n                // The default will be the last branch.\n                default_or_exact.body = body[default_body_index].body;\n            }\n\n            // Prune everything after the default (or last side-effect case)\n            // until the next case with a body.\n            body.splice(after + 1, default_body_index - after);\n            // Prune everything before the default that falls into it.\n            body.splice(before, default_index - before);\n        }\n    }\n\n    // See if we can remove the switch entirely if all cases (the default) fall into the same case body.\n    DEFAULT: if (default_or_exact) {\n        let i = body.findIndex(branch => !is_inert_body(branch));\n        let caseBody;\n        // `i` is equal to one of the following:\n        // - `-1`, there is no body in the switch statement.\n        // - `body.length - 1`, all cases fall into the same body.\n        // - anything else, there are multiple bodies in the switch.\n        if (i === body.length - 1) {\n            // All cases fall into the case body.\n            let branch = body[i];\n            if (has_nested_break(self)) break DEFAULT;\n\n            // This is the last case body, and we've already pruned any breaks, so it's\n            // safe to hoist.\n            caseBody = make_node(AST_BlockStatement, branch, {\n                body: branch.body\n            });\n            branch.body = [];\n        } else if (i !== -1) {\n            // If there are multiple bodies, then we cannot optimize anything.\n            break DEFAULT;\n        }\n\n        let sideEffect = body.find(branch => {\n            return (\n                branch !== default_or_exact\n                && branch.expression.has_side_effects(compressor)\n            );\n        });\n        // If no cases cause a side-effect, we can eliminate the switch entirely.\n        if (!sideEffect) {\n            return make_node(AST_BlockStatement, self, {\n                body: decl.concat(\n                    statement(self.expression),\n                    default_or_exact.expression ? statement(default_or_exact.expression) : [],\n                    caseBody || []\n                )\n            }).optimize(compressor);\n        }\n\n        // If we're this far, either there was no body or all cases fell into the same body.\n        // If there was no body, then we don't need a default branch (because the default is\n        // do nothing). If there was a body, we'll extract it to after the switch, so the\n        // switch's new default is to do nothing and we can still prune it.\n        const default_index = body.indexOf(default_or_exact);\n        body.splice(default_index, 1);\n        default_or_exact = null;\n\n        if (caseBody) {\n            // Recurse into switch statement one more time so that we can append the case body\n            // outside of the switch. This recursion will only happen once since we've pruned\n            // the default case.\n            return make_node(AST_BlockStatement, self, {\n                body: decl.concat(self, caseBody)\n            }).optimize(compressor);\n        }\n        // If we fall here, there is a default branch somewhere, there are no case bodies,\n        // and there's a side-effect somewhere. Just let the below paths take care of it.\n    }\n\n    if (body.length > 0) {\n        body[0].body = decl.concat(body[0].body);\n    }\n\n    if (body.length == 0) {\n        return make_node(AST_BlockStatement, self, {\n            body: decl.concat(statement(self.expression))\n        }).optimize(compressor);\n    }\n    if (body.length == 1 && !has_nested_break(self)) {\n        // This is the last case body, and we've already pruned any breaks, so it's\n        // safe to hoist.\n        let branch = body[0];\n        return make_node(AST_If, self, {\n            condition: make_node(AST_Binary, self, {\n                operator: \"===\",\n                left: self.expression,\n                right: branch.expression,\n            }),\n            body: make_node(AST_BlockStatement, branch, {\n                body: branch.body\n            }),\n            alternative: null\n        }).optimize(compressor);\n    }\n    if (body.length === 2 && default_or_exact && !has_nested_break(self)) {\n        let branch = body[0] === default_or_exact ? body[1] : body[0];\n        let exact_exp = default_or_exact.expression && statement(default_or_exact.expression);\n        if (aborts(body[0])) {\n            // Only the first branch body could have a break (at the last statement)\n            let first = body[0];\n            if (is_break(first.body[first.body.length - 1], compressor)) {\n                first.body.pop();\n            }\n            return make_node(AST_If, self, {\n                condition: make_node(AST_Binary, self, {\n                    operator: \"===\",\n                    left: self.expression,\n                    right: branch.expression,\n                }),\n                body: make_node(AST_BlockStatement, branch, {\n                    body: branch.body\n                }),\n                alternative: make_node(AST_BlockStatement, default_or_exact, {\n                    body: [].concat(\n                        exact_exp || [],\n                        default_or_exact.body\n                    )\n                })\n            }).optimize(compressor);\n        }\n        let operator = \"===\";\n        let consequent = make_node(AST_BlockStatement, branch, {\n            body: branch.body,\n        });\n        let always = make_node(AST_BlockStatement, default_or_exact, {\n            body: [].concat(\n                exact_exp || [],\n                default_or_exact.body\n            )\n        });\n        if (body[0] === default_or_exact) {\n            operator = \"!==\";\n            let tmp = always;\n            always = consequent;\n            consequent = tmp;\n        }\n        return make_node(AST_BlockStatement, self, {\n            body: [\n                make_node(AST_If, self, {\n                    condition: make_node(AST_Binary, self, {\n                        operator: operator,\n                        left: self.expression,\n                        right: branch.expression,\n                    }),\n                    body: consequent,\n                    alternative: null\n                })\n            ].concat(always)\n        }).optimize(compressor);\n    }\n    return self;\n\n    function eliminate_branch(branch, prev) {\n        if (prev && !aborts(prev)) {\n            prev.body = prev.body.concat(branch.body);\n        } else {\n            trim_unreachable_code(compressor, branch, decl);\n        }\n    }\n    function branches_equivalent(branch, prev, insertBreak) {\n        let bbody = branch.body;\n        let pbody = prev.body;\n        if (insertBreak) {\n            bbody = bbody.concat(make_node(AST_Break));\n        }\n        if (bbody.length !== pbody.length) return false;\n        let bblock = make_node(AST_BlockStatement, branch, { body: bbody });\n        let pblock = make_node(AST_BlockStatement, prev, { body: pbody });\n        return bblock.equivalent_to(pblock);\n    }\n    function statement(expression) {\n        return make_node(AST_SimpleStatement, expression, {\n            body: expression\n        });\n    }\n    function has_nested_break(root) {\n        let has_break = false;\n        let tw = new TreeWalker(node => {\n            if (has_break) return true;\n            if (node instanceof AST_Lambda) return true;\n            if (node instanceof AST_SimpleStatement) return true;\n            if (!is_break(node, tw)) return;\n            let parent = tw.parent();\n            if (\n                parent instanceof AST_SwitchBranch\n                && parent.body[parent.body.length - 1] === node\n            ) {\n                return;\n            }\n            has_break = true;\n        });\n        root.walk(tw);\n        return has_break;\n    }\n    function is_break(node, stack) {\n        return node instanceof AST_Break\n            && stack.loopcontrol_target(node) === self;\n    }\n    function is_inert_body(branch) {\n        return !aborts(branch) && !make_node(AST_BlockStatement, branch, {\n            body: branch.body\n        }).has_side_effects(compressor);\n    }\n});\n\ndef_optimize(AST_Try, function(self, compressor) {\n    if (self.bcatch && self.bfinally && self.bfinally.body.every(is_empty)) self.bfinally = null;\n\n    if (compressor.option(\"dead_code\") && self.body.body.every(is_empty)) {\n        var body = [];\n        if (self.bcatch) {\n            trim_unreachable_code(compressor, self.bcatch, body);\n        }\n        if (self.bfinally) body.push(...self.bfinally.body);\n        return make_node(AST_BlockStatement, self, {\n            body: body\n        }).optimize(compressor);\n    }\n    return self;\n});\n\nAST_Definitions.DEFMETHOD(\"to_assignments\", function(compressor) {\n    var reduce_vars = compressor.option(\"reduce_vars\");\n    var assignments = [];\n\n    for (const def of this.definitions) {\n        if (def.value) {\n            var name = make_node(AST_SymbolRef, def.name, def.name);\n            assignments.push(make_node(AST_Assign, def, {\n                operator : \"=\",\n                logical: false,\n                left     : name,\n                right    : def.value\n            }));\n            if (reduce_vars) name.definition().fixed = false;\n        }\n        const thedef = def.name.definition();\n        thedef.eliminated++;\n        thedef.replaced--;\n    }\n\n    if (assignments.length == 0) return null;\n    return make_sequence(this, assignments);\n});\n\ndef_optimize(AST_Definitions, function(self) {\n    if (self.definitions.length == 0) {\n        return make_node(AST_EmptyStatement, self);\n    }\n    return self;\n});\n\ndef_optimize(AST_VarDef, function(self, compressor) {\n    if (\n        self.name instanceof AST_SymbolLet\n        && self.value != null\n        && is_undefined(self.value, compressor)\n    ) {\n        self.value = null;\n    }\n    return self;\n});\n\ndef_optimize(AST_Import, function(self) {\n    return self;\n});\n\ndef_optimize(AST_Call, function(self, compressor) {\n    var exp = self.expression;\n    var fn = exp;\n    inline_array_like_spread(self.args);\n    var simple_args = self.args.every((arg) => !(arg instanceof AST_Expansion));\n\n    if (compressor.option(\"reduce_vars\") && fn instanceof AST_SymbolRef) {\n        fn = fn.fixed_value();\n    }\n\n    var is_func = fn instanceof AST_Lambda;\n\n    if (is_func && fn.pinned()) return self;\n\n    if (compressor.option(\"unused\")\n        && simple_args\n        && is_func\n        && !fn.uses_arguments) {\n        var pos = 0, last = 0;\n        for (var i = 0, len = self.args.length; i < len; i++) {\n            if (fn.argnames[i] instanceof AST_Expansion) {\n                if (has_flag(fn.argnames[i].expression, UNUSED)) while (i < len) {\n                    var node = self.args[i++].drop_side_effect_free(compressor);\n                    if (node) {\n                        self.args[pos++] = node;\n                    }\n                } else while (i < len) {\n                    self.args[pos++] = self.args[i++];\n                }\n                last = pos;\n                break;\n            }\n            var trim = i >= fn.argnames.length;\n            if (trim || has_flag(fn.argnames[i], UNUSED)) {\n                var node = self.args[i].drop_side_effect_free(compressor);\n                if (node) {\n                    self.args[pos++] = node;\n                } else if (!trim) {\n                    self.args[pos++] = make_node(AST_Number, self.args[i], {\n                        value: 0\n                    });\n                    continue;\n                }\n            } else {\n                self.args[pos++] = self.args[i];\n            }\n            last = pos;\n        }\n        self.args.length = last;\n    }\n\n    if (compressor.option(\"unsafe\") && !exp.contains_optional()) {\n        if (exp instanceof AST_Dot && exp.start.value === \"Array\" && exp.property === \"from\" && self.args.length === 1) {\n            const [argument] = self.args;\n            if (argument instanceof AST_Array) {\n                return make_node(AST_Array, argument, {\n                    elements: argument.elements\n                }).optimize(compressor);\n            }\n        }\n        if (is_undeclared_ref(exp)) switch (exp.name) {\n          case \"Array\":\n            if (self.args.length != 1) {\n                return make_node(AST_Array, self, {\n                    elements: self.args\n                }).optimize(compressor);\n            } else if (self.args[0] instanceof AST_Number && self.args[0].value <= 11) {\n                const elements = [];\n                for (let i = 0; i < self.args[0].value; i++) elements.push(new AST_Hole);\n                return new AST_Array({ elements });\n            }\n            break;\n          case \"Object\":\n            if (self.args.length == 0) {\n                return make_node(AST_Object, self, {\n                    properties: []\n                });\n            }\n            break;\n          case \"String\":\n            if (self.args.length == 0) return make_node(AST_String, self, {\n                value: \"\"\n            });\n            if (self.args.length <= 1) return make_node(AST_Binary, self, {\n                left: self.args[0],\n                operator: \"+\",\n                right: make_node(AST_String, self, { value: \"\" })\n            }).optimize(compressor);\n            break;\n          case \"Number\":\n            if (self.args.length == 0) return make_node(AST_Number, self, {\n                value: 0\n            });\n            if (self.args.length == 1 && compressor.option(\"unsafe_math\")) {\n                return make_node(AST_UnaryPrefix, self, {\n                    expression: self.args[0],\n                    operator: \"+\"\n                }).optimize(compressor);\n            }\n            break;\n          case \"Symbol\":\n            if (self.args.length == 1 && self.args[0] instanceof AST_String && compressor.option(\"unsafe_symbols\"))\n                self.args.length = 0;\n                break;\n          case \"Boolean\":\n            if (self.args.length == 0) return make_node(AST_False, self);\n            if (self.args.length == 1) return make_node(AST_UnaryPrefix, self, {\n                expression: make_node(AST_UnaryPrefix, self, {\n                    expression: self.args[0],\n                    operator: \"!\"\n                }),\n                operator: \"!\"\n            }).optimize(compressor);\n            break;\n          case \"RegExp\":\n            var params = [];\n            if (self.args.length >= 1\n                && self.args.length <= 2\n                && self.args.every((arg) => {\n                    var value = arg.evaluate(compressor);\n                    params.push(value);\n                    return arg !== value;\n                })\n                && regexp_is_safe(params[0])\n            ) {\n                let [ source, flags ] = params;\n                source = regexp_source_fix(new RegExp(source).source);\n                const rx = make_node(AST_RegExp, self, {\n                    value: { source, flags }\n                });\n                if (rx._eval(compressor) !== rx) {\n                    return rx;\n                }\n            }\n            break;\n        } else if (exp instanceof AST_Dot) switch(exp.property) {\n          case \"toString\":\n            if (self.args.length == 0 && !exp.expression.may_throw_on_access(compressor)) {\n                return make_node(AST_Binary, self, {\n                    left: make_node(AST_String, self, { value: \"\" }),\n                    operator: \"+\",\n                    right: exp.expression\n                }).optimize(compressor);\n            }\n            break;\n          case \"join\":\n            if (exp.expression instanceof AST_Array) EXIT: {\n                var separator;\n                if (self.args.length > 0) {\n                    separator = self.args[0].evaluate(compressor);\n                    if (separator === self.args[0]) break EXIT; // not a constant\n                }\n                var elements = [];\n                var consts = [];\n                for (var i = 0, len = exp.expression.elements.length; i < len; i++) {\n                    var el = exp.expression.elements[i];\n                    if (el instanceof AST_Expansion) break EXIT;\n                    var value = el.evaluate(compressor);\n                    if (value !== el) {\n                        consts.push(value);\n                    } else {\n                        if (consts.length > 0) {\n                            elements.push(make_node(AST_String, self, {\n                                value: consts.join(separator)\n                            }));\n                            consts.length = 0;\n                        }\n                        elements.push(el);\n                    }\n                }\n                if (consts.length > 0) {\n                    elements.push(make_node(AST_String, self, {\n                        value: consts.join(separator)\n                    }));\n                }\n                if (elements.length == 0) return make_node(AST_String, self, { value: \"\" });\n                if (elements.length == 1) {\n                    if (elements[0].is_string(compressor)) {\n                        return elements[0];\n                    }\n                    return make_node(AST_Binary, elements[0], {\n                        operator : \"+\",\n                        left     : make_node(AST_String, self, { value: \"\" }),\n                        right    : elements[0]\n                    });\n                }\n                if (separator == \"\") {\n                    var first;\n                    if (elements[0].is_string(compressor)\n                        || elements[1].is_string(compressor)) {\n                        first = elements.shift();\n                    } else {\n                        first = make_node(AST_String, self, { value: \"\" });\n                    }\n                    return elements.reduce(function(prev, el) {\n                        return make_node(AST_Binary, el, {\n                            operator : \"+\",\n                            left     : prev,\n                            right    : el\n                        });\n                    }, first).optimize(compressor);\n                }\n                // need this awkward cloning to not affect original element\n                // best_of will decide which one to get through.\n                var node = self.clone();\n                node.expression = node.expression.clone();\n                node.expression.expression = node.expression.expression.clone();\n                node.expression.expression.elements = elements;\n                return best_of(compressor, self, node);\n            }\n            break;\n          case \"charAt\":\n            if (exp.expression.is_string(compressor)) {\n                var arg = self.args[0];\n                var index = arg ? arg.evaluate(compressor) : 0;\n                if (index !== arg) {\n                    return make_node(AST_Sub, exp, {\n                        expression: exp.expression,\n                        property: make_node_from_constant(index | 0, arg || exp)\n                    }).optimize(compressor);\n                }\n            }\n            break;\n          case \"apply\":\n            if (self.args.length == 2 && self.args[1] instanceof AST_Array) {\n                var args = self.args[1].elements.slice();\n                args.unshift(self.args[0]);\n                return make_node(AST_Call, self, {\n                    expression: make_node(AST_Dot, exp, {\n                        expression: exp.expression,\n                        optional: false,\n                        property: \"call\"\n                    }),\n                    args: args\n                }).optimize(compressor);\n            }\n            break;\n          case \"call\":\n            var func = exp.expression;\n            if (func instanceof AST_SymbolRef) {\n                func = func.fixed_value();\n            }\n            if (func instanceof AST_Lambda && !func.contains_this()) {\n                return (self.args.length ? make_sequence(this, [\n                    self.args[0],\n                    make_node(AST_Call, self, {\n                        expression: exp.expression,\n                        args: self.args.slice(1)\n                    })\n                ]) : make_node(AST_Call, self, {\n                    expression: exp.expression,\n                    args: []\n                })).optimize(compressor);\n            }\n            break;\n        }\n    }\n\n    if (compressor.option(\"unsafe_Function\")\n        && is_undeclared_ref(exp)\n        && exp.name == \"Function\") {\n        // new Function() => function(){}\n        if (self.args.length == 0) return make_node(AST_Function, self, {\n            argnames: [],\n            body: []\n        }).optimize(compressor);\n        if (self.args.every((x) => x instanceof AST_String)) {\n            // quite a corner-case, but we can handle it:\n            //   https://github.com/mishoo/UglifyJS2/issues/203\n            // if the code argument is a constant, then we can minify it.\n            try {\n                var code = \"n(function(\" + self.args.slice(0, -1).map(function(arg) {\n                    return arg.value;\n                }).join(\",\") + \"){\" + self.args[self.args.length - 1].value + \"})\";\n                var ast = parse(code);\n                var mangle = compressor.mangle_options();\n                ast.figure_out_scope(mangle);\n                var comp = new Compressor(compressor.options, {\n                    mangle_options: compressor._mangle_options\n                });\n                ast = ast.transform(comp);\n                ast.figure_out_scope(mangle);\n                ast.compute_char_frequency(mangle);\n                ast.mangle_names(mangle);\n                var fun;\n                walk(ast, node => {\n                    if (is_func_expr(node)) {\n                        fun = node;\n                        return walk_abort;\n                    }\n                });\n                var code = OutputStream();\n                AST_BlockStatement.prototype._codegen.call(fun, fun, code);\n                self.args = [\n                    make_node(AST_String, self, {\n                        value: fun.argnames.map(function(arg) {\n                            return arg.print_to_string();\n                        }).join(\",\")\n                    }),\n                    make_node(AST_String, self.args[self.args.length - 1], {\n                        value: code.get().replace(/^{|}$/g, \"\")\n                    })\n                ];\n                return self;\n            } catch (ex) {\n                if (!(ex instanceof JS_Parse_Error)) {\n                    throw ex;\n                }\n\n                // Otherwise, it crashes at runtime. Or maybe it's nonstandard syntax.\n            }\n        }\n    }\n\n    return inline_into_call(self, compressor);\n});\n\n/** Does this node contain optional property access or optional call? */\nAST_Node.DEFMETHOD(\"contains_optional\", function() {\n    if (\n        this instanceof AST_PropAccess\n        || this instanceof AST_Call\n        || this instanceof AST_Chain\n    ) {\n        if (this.optional) {\n            return true;\n        } else {\n            return this.expression.contains_optional();\n        }\n    } else {\n        return false;\n    }\n});\n\ndef_optimize(AST_New, function(self, compressor) {\n    if (\n        compressor.option(\"unsafe\") &&\n        is_undeclared_ref(self.expression) &&\n        [\"Object\", \"RegExp\", \"Function\", \"Error\", \"Array\"].includes(self.expression.name)\n    ) return make_node(AST_Call, self, self).transform(compressor);\n    return self;\n});\n\ndef_optimize(AST_Sequence, function(self, compressor) {\n    if (!compressor.option(\"side_effects\")) return self;\n    var expressions = [];\n    filter_for_side_effects();\n    var end = expressions.length - 1;\n    trim_right_for_undefined();\n    if (end == 0) {\n        self = maintain_this_binding(compressor.parent(), compressor.self(), expressions[0]);\n        if (!(self instanceof AST_Sequence)) self = self.optimize(compressor);\n        return self;\n    }\n    self.expressions = expressions;\n    return self;\n\n    function filter_for_side_effects() {\n        var first = first_in_statement(compressor);\n        var last = self.expressions.length - 1;\n        self.expressions.forEach(function(expr, index) {\n            if (index < last) expr = expr.drop_side_effect_free(compressor, first);\n            if (expr) {\n                merge_sequence(expressions, expr);\n                first = false;\n            }\n        });\n    }\n\n    function trim_right_for_undefined() {\n        while (end > 0 && is_undefined(expressions[end], compressor)) end--;\n        if (end < expressions.length - 1) {\n            expressions[end] = make_node(AST_UnaryPrefix, self, {\n                operator   : \"void\",\n                expression : expressions[end]\n            });\n            expressions.length = end + 1;\n        }\n    }\n});\n\nAST_Unary.DEFMETHOD(\"lift_sequences\", function(compressor) {\n    if (compressor.option(\"sequences\")) {\n        if (this.expression instanceof AST_Sequence) {\n            var x = this.expression.expressions.slice();\n            var e = this.clone();\n            e.expression = x.pop();\n            x.push(e);\n            return make_sequence(this, x).optimize(compressor);\n        }\n    }\n    return this;\n});\n\ndef_optimize(AST_UnaryPostfix, function(self, compressor) {\n    return self.lift_sequences(compressor);\n});\n\ndef_optimize(AST_UnaryPrefix, function(self, compressor) {\n    var e = self.expression;\n    if (\n        self.operator == \"delete\" &&\n        !(\n            e instanceof AST_SymbolRef ||\n            e instanceof AST_PropAccess ||\n            e instanceof AST_Chain ||\n            is_identifier_atom(e)\n        )\n    ) {\n        return make_sequence(self, [e, make_node(AST_True, self)]).optimize(compressor);\n    }\n    var seq = self.lift_sequences(compressor);\n    if (seq !== self) {\n        return seq;\n    }\n    if (compressor.option(\"side_effects\") && self.operator == \"void\") {\n        e = e.drop_side_effect_free(compressor);\n        if (e) {\n            self.expression = e;\n            return self;\n        } else {\n            return make_node(AST_Undefined, self).optimize(compressor);\n        }\n    }\n    if (compressor.in_boolean_context()) {\n        switch (self.operator) {\n          case \"!\":\n            if (e instanceof AST_UnaryPrefix && e.operator == \"!\") {\n                // !!foo ==> foo, if we're in boolean context\n                return e.expression;\n            }\n            if (e instanceof AST_Binary) {\n                self = best_of(compressor, self, e.negate(compressor, first_in_statement(compressor)));\n            }\n            break;\n          case \"typeof\":\n            // typeof always returns a non-empty string, thus it's\n            // always true in booleans\n            // And we don't need to check if it's undeclared, because in typeof, that's OK\n            return (e instanceof AST_SymbolRef ? make_node(AST_True, self) : make_sequence(self, [\n                e,\n                make_node(AST_True, self)\n            ])).optimize(compressor);\n        }\n    }\n    if (self.operator == \"-\" && e instanceof AST_Infinity) {\n        e = e.transform(compressor);\n    }\n    if (e instanceof AST_Binary\n        && (self.operator == \"+\" || self.operator == \"-\")\n        && (e.operator == \"*\" || e.operator == \"/\" || e.operator == \"%\")) {\n        return make_node(AST_Binary, self, {\n            operator: e.operator,\n            left: make_node(AST_UnaryPrefix, e.left, {\n                operator: self.operator,\n                expression: e.left\n            }),\n            right: e.right\n        });\n    }\n\n    if (compressor.option(\"evaluate\")) {\n        // ~~x => x (in 32-bit context)\n        // ~~{32 bit integer} => {32 bit integer}\n        if (\n            self.operator === \"~\"\n            && self.expression instanceof AST_UnaryPrefix\n            && self.expression.operator === \"~\"\n            && (compressor.in_32_bit_context() || self.expression.expression.is_32_bit_integer())\n        ) {\n            return self.expression.expression;\n        }\n\n        // ~(x ^ y) => x ^ ~y\n        if (\n            self.operator === \"~\"\n            && e instanceof AST_Binary\n            && e.operator === \"^\"\n        ) {\n            if (e.left instanceof AST_UnaryPrefix && e.left.operator === \"~\") {\n                // ~(~x ^ y) => x ^ y\n                e.left = e.left.bitwise_negate(true);\n            } else {\n                e.right = e.right.bitwise_negate(true);\n            }\n            return e;\n        }\n    }\n\n    if (\n        self.operator != \"-\"\n        // avoid infinite recursion of numerals\n        || !(e instanceof AST_Number || e instanceof AST_Infinity || e instanceof AST_BigInt)\n    ) {\n        var ev = self.evaluate(compressor);\n        if (ev !== self) {\n            ev = make_node_from_constant(ev, self).optimize(compressor);\n            return best_of(compressor, ev, self);\n        }\n    }\n    return self;\n});\n\nAST_Binary.DEFMETHOD(\"lift_sequences\", function(compressor) {\n    if (compressor.option(\"sequences\")) {\n        if (this.left instanceof AST_Sequence) {\n            var x = this.left.expressions.slice();\n            var e = this.clone();\n            e.left = x.pop();\n            x.push(e);\n            return make_sequence(this, x).optimize(compressor);\n        }\n        if (this.right instanceof AST_Sequence && !this.left.has_side_effects(compressor)) {\n            var assign = this.operator == \"=\" && this.left instanceof AST_SymbolRef;\n            var x = this.right.expressions;\n            var last = x.length - 1;\n            for (var i = 0; i < last; i++) {\n                if (!assign && x[i].has_side_effects(compressor)) break;\n            }\n            if (i == last) {\n                x = x.slice();\n                var e = this.clone();\n                e.right = x.pop();\n                x.push(e);\n                return make_sequence(this, x).optimize(compressor);\n            } else if (i > 0) {\n                var e = this.clone();\n                e.right = make_sequence(this.right, x.slice(i));\n                x = x.slice(0, i);\n                x.push(e);\n                return make_sequence(this, x).optimize(compressor);\n            }\n        }\n    }\n    return this;\n});\n\nvar commutativeOperators = makePredicate(\"== === != !== * & | ^\");\nfunction is_object(node) {\n    return node instanceof AST_Array\n        || node instanceof AST_Lambda\n        || node instanceof AST_Object\n        || node instanceof AST_Class;\n}\n\ndef_optimize(AST_Binary, function(self, compressor) {\n    function reversible() {\n        return self.left.is_constant()\n            || self.right.is_constant()\n            || !self.left.has_side_effects(compressor)\n                && !self.right.has_side_effects(compressor);\n    }\n    function reverse(op) {\n        if (reversible()) {\n            if (op) self.operator = op;\n            var tmp = self.left;\n            self.left = self.right;\n            self.right = tmp;\n        }\n    }\n    if (compressor.option(\"lhs_constants\") && commutativeOperators.has(self.operator)) {\n        if (self.right.is_constant()\n            && !self.left.is_constant()) {\n            // if right is a constant, whatever side effects the\n            // left side might have could not influence the\n            // result.  hence, force switch.\n\n            if (!(self.left instanceof AST_Binary\n                  && PRECEDENCE[self.left.operator] >= PRECEDENCE[self.operator])) {\n                reverse();\n            }\n        }\n    }\n    self = self.lift_sequences(compressor);\n    if (compressor.option(\"comparisons\")) switch (self.operator) {\n      case \"===\":\n      case \"!==\":\n        var is_strict_comparison = true;\n        if ((self.left.is_string(compressor) && self.right.is_string(compressor)) ||\n            (self.left.is_number(compressor) && self.right.is_number(compressor)) ||\n            (self.left.is_boolean() && self.right.is_boolean()) ||\n            self.left.equivalent_to(self.right)) {\n            self.operator = self.operator.substr(0, 2);\n        }\n\n        // XXX: intentionally falling down to the next case\n      case \"==\":\n      case \"!=\":\n        // void 0 == x => null == x\n        if (!is_strict_comparison && is_undefined(self.left, compressor)) {\n            self.left = make_node(AST_Null, self.left);\n        // x == void 0 => x == null\n        } else if (!is_strict_comparison && is_undefined(self.right, compressor)) {\n            self.right = make_node(AST_Null, self.right);\n        } else if (compressor.option(\"typeofs\")\n            // \"undefined\" == typeof x => undefined === x\n            && self.left instanceof AST_String\n            && self.left.value == \"undefined\"\n            && self.right instanceof AST_UnaryPrefix\n            && self.right.operator == \"typeof\") {\n            var expr = self.right.expression;\n            if (expr instanceof AST_SymbolRef ? expr.is_declared(compressor)\n                : !(expr instanceof AST_PropAccess && compressor.option(\"ie8\"))) {\n                self.right = expr;\n                self.left = make_node(AST_Undefined, self.left).optimize(compressor);\n                if (self.operator.length == 2) self.operator += \"=\";\n            }\n        } else if (compressor.option(\"typeofs\")\n            // typeof x === \"undefined\" => x === undefined\n            && self.left instanceof AST_UnaryPrefix\n            && self.left.operator == \"typeof\"\n            && self.right instanceof AST_String\n            && self.right.value == \"undefined\") {\n            var expr = self.left.expression;\n            if (expr instanceof AST_SymbolRef ? expr.is_declared(compressor)\n                : !(expr instanceof AST_PropAccess && compressor.option(\"ie8\"))) {\n                self.left = expr;\n                self.right = make_node(AST_Undefined, self.right).optimize(compressor);\n                if (self.operator.length == 2) self.operator += \"=\";\n            }\n        } else if (self.left instanceof AST_SymbolRef\n            // obj !== obj => false\n            && self.right instanceof AST_SymbolRef\n            && self.left.definition() === self.right.definition()\n            && is_object(self.left.fixed_value())) {\n            return make_node(self.operator[0] == \"=\" ? AST_True : AST_False, self);\n        } else if (self.left.is_32_bit_integer() && self.right.is_32_bit_integer()) {\n            const not = node => make_node(AST_UnaryPrefix, node, {\n                operator: \"!\",\n                expression: node\n            });\n            const booleanify = (node, truthy) => {\n                if (truthy) {\n                    return compressor.in_boolean_context()\n                        ? node\n                        : not(not(node));\n                } else {\n                    return not(node);\n                }\n            };\n\n            // The only falsy 32-bit integer is 0\n            if (self.left instanceof AST_Number && self.left.value === 0) {\n                return booleanify(self.right, self.operator[0] === \"!\");\n            }\n            if (self.right instanceof AST_Number && self.right.value === 0) {\n                return booleanify(self.left, self.operator[0] === \"!\");\n            }\n\n            // Mask all-bits check\n            // (x & 0xFF) != 0xFF => !(~x & 0xFF)\n            let and_op, x, mask;\n            if (\n                (and_op =\n                    self.left instanceof AST_Binary ? self.left\n                    : self.right instanceof AST_Binary ? self.right : null)\n                && (mask = and_op === self.left ? self.right : self.left)\n                && and_op.operator === \"&\"\n                && mask instanceof AST_Number\n                && mask.is_32_bit_integer()\n                && (x =\n                    and_op.left.equivalent_to(mask) ? and_op.right\n                    : and_op.right.equivalent_to(mask) ? and_op.left : null)\n            ) {\n                let optimized = booleanify(make_node(AST_Binary, self, {\n                    operator: \"&\",\n                    left: mask,\n                    right: make_node(AST_UnaryPrefix, self, {\n                        operator: \"~\",\n                        expression: x\n                    })\n                }), self.operator[0] === \"=\");\n\n                return best_of(compressor, optimized, self);\n            }\n        }\n        break;\n      case \"&&\":\n      case \"||\":\n        var lhs = self.left;\n        if (lhs.operator == self.operator) {\n            lhs = lhs.right;\n        }\n        if (lhs instanceof AST_Binary\n            && lhs.operator == (self.operator == \"&&\" ? \"!==\" : \"===\")\n            && self.right instanceof AST_Binary\n            && lhs.operator == self.right.operator\n            && (is_undefined(lhs.left, compressor) && self.right.left instanceof AST_Null\n                || lhs.left instanceof AST_Null && is_undefined(self.right.left, compressor))\n            && !lhs.right.has_side_effects(compressor)\n            && lhs.right.equivalent_to(self.right.right)) {\n            var combined = make_node(AST_Binary, self, {\n                operator: lhs.operator.slice(0, -1),\n                left: make_node(AST_Null, self),\n                right: lhs.right\n            });\n            if (lhs !== self.left) {\n                combined = make_node(AST_Binary, self, {\n                    operator: self.operator,\n                    left: self.left.left,\n                    right: combined\n                });\n            }\n            return combined;\n        }\n        break;\n    }\n    if (self.operator == \"+\" && compressor.in_boolean_context()) {\n        var ll = self.left.evaluate(compressor);\n        var rr = self.right.evaluate(compressor);\n        if (ll && typeof ll == \"string\") {\n            return make_sequence(self, [\n                self.right,\n                make_node(AST_True, self)\n            ]).optimize(compressor);\n        }\n        if (rr && typeof rr == \"string\") {\n            return make_sequence(self, [\n                self.left,\n                make_node(AST_True, self)\n            ]).optimize(compressor);\n        }\n    }\n    if (compressor.option(\"comparisons\") && self.is_boolean()) {\n        if (!(compressor.parent() instanceof AST_Binary)\n            || compressor.parent() instanceof AST_Assign) {\n            var negated = make_node(AST_UnaryPrefix, self, {\n                operator: \"!\",\n                expression: self.negate(compressor, first_in_statement(compressor))\n            });\n            self = best_of(compressor, self, negated);\n        }\n        if (compressor.option(\"unsafe_comps\")) {\n            switch (self.operator) {\n              case \"<\": reverse(\">\"); break;\n              case \"<=\": reverse(\">=\"); break;\n            }\n        }\n    }\n    if (self.operator == \"+\") {\n        if (self.right instanceof AST_String\n            && self.right.getValue() == \"\"\n            && self.left.is_string(compressor)) {\n            return self.left;\n        }\n        if (self.left instanceof AST_String\n            && self.left.getValue() == \"\"\n            && self.right.is_string(compressor)) {\n            return self.right;\n        }\n        if (self.left instanceof AST_Binary\n            && self.left.operator == \"+\"\n            && self.left.left instanceof AST_String\n            && self.left.left.getValue() == \"\"\n            && self.right.is_string(compressor)) {\n            self.left = self.left.right;\n            return self;\n        }\n    }\n    if (compressor.option(\"evaluate\")) {\n        switch (self.operator) {\n          case \"&&\":\n            var ll = has_flag(self.left, TRUTHY)\n                ? true\n                : has_flag(self.left, FALSY)\n                    ? false\n                    : self.left.evaluate(compressor);\n            if (!ll) {\n                return maintain_this_binding(compressor.parent(), compressor.self(), self.left).optimize(compressor);\n            } else if (!(ll instanceof AST_Node)) {\n                return make_sequence(self, [ self.left, self.right ]).optimize(compressor);\n            }\n            var rr = self.right.evaluate(compressor);\n            if (!rr) {\n                if (compressor.in_boolean_context()) {\n                    return make_sequence(self, [\n                        self.left,\n                        make_node(AST_False, self)\n                    ]).optimize(compressor);\n                } else {\n                    set_flag(self, FALSY);\n                }\n            } else if (!(rr instanceof AST_Node)) {\n                var parent = compressor.parent();\n                if (parent.operator == \"&&\" && parent.left === compressor.self() || compressor.in_boolean_context()) {\n                    return self.left.optimize(compressor);\n                }\n            }\n            // x || false && y ---> x ? y : false\n            if (self.left.operator == \"||\") {\n                var lr = self.left.right.evaluate(compressor);\n                if (!lr) return make_node(AST_Conditional, self, {\n                    condition: self.left.left,\n                    consequent: self.right,\n                    alternative: self.left.right\n                }).optimize(compressor);\n            }\n            break;\n          case \"||\":\n            var ll = has_flag(self.left, TRUTHY)\n              ? true\n              : has_flag(self.left, FALSY)\n                ? false\n                : self.left.evaluate(compressor);\n            if (!ll) {\n                return make_sequence(self, [ self.left, self.right ]).optimize(compressor);\n            } else if (!(ll instanceof AST_Node)) {\n                return maintain_this_binding(compressor.parent(), compressor.self(), self.left).optimize(compressor);\n            }\n            var rr = self.right.evaluate(compressor);\n            if (!rr) {\n                var parent = compressor.parent();\n                if (parent.operator == \"||\" && parent.left === compressor.self() || compressor.in_boolean_context()) {\n                    return self.left.optimize(compressor);\n                }\n            } else if (!(rr instanceof AST_Node)) {\n                if (compressor.in_boolean_context()) {\n                    return make_sequence(self, [\n                        self.left,\n                        make_node(AST_True, self)\n                    ]).optimize(compressor);\n                } else {\n                    set_flag(self, TRUTHY);\n                }\n            }\n            if (self.left.operator == \"&&\") {\n                var lr = self.left.right.evaluate(compressor);\n                if (lr && !(lr instanceof AST_Node)) return make_node(AST_Conditional, self, {\n                    condition: self.left.left,\n                    consequent: self.left.right,\n                    alternative: self.right\n                }).optimize(compressor);\n            }\n            break;\n          case \"??\":\n            if (is_nullish(self.left, compressor)) {\n                return self.right;\n            }\n\n            var ll = self.left.evaluate(compressor);\n            if (!(ll instanceof AST_Node)) {\n                // if we know the value for sure we can simply compute right away.\n                return ll == null ? self.right : self.left;\n            }\n\n            if (compressor.in_boolean_context()) {\n                const rr = self.right.evaluate(compressor);\n                if (!(rr instanceof AST_Node) && !rr) {\n                    return self.left;\n                }\n            }\n        }\n        var associative = true;\n        switch (self.operator) {\n          case \"+\":\n            // (x + \"foo\") + \"bar\" => x + \"foobar\"\n            if (self.right instanceof AST_Constant\n                && self.left instanceof AST_Binary\n                && self.left.operator == \"+\"\n                && self.left.is_string(compressor)) {\n                var binary = make_node(AST_Binary, self, {\n                    operator: \"+\",\n                    left: self.left.right,\n                    right: self.right,\n                });\n                var r = binary.optimize(compressor);\n                if (binary !== r) {\n                    self = make_node(AST_Binary, self, {\n                        operator: \"+\",\n                        left: self.left.left,\n                        right: r\n                    });\n                }\n            }\n            // (x + \"foo\") + (\"bar\" + y) => (x + \"foobar\") + y\n            if (self.left instanceof AST_Binary\n                && self.left.operator == \"+\"\n                && self.left.is_string(compressor)\n                && self.right instanceof AST_Binary\n                && self.right.operator == \"+\"\n                && self.right.is_string(compressor)) {\n                var binary = make_node(AST_Binary, self, {\n                    operator: \"+\",\n                    left: self.left.right,\n                    right: self.right.left,\n                });\n                var m = binary.optimize(compressor);\n                if (binary !== m) {\n                    self = make_node(AST_Binary, self, {\n                        operator: \"+\",\n                        left: make_node(AST_Binary, self.left, {\n                            operator: \"+\",\n                            left: self.left.left,\n                            right: m\n                        }),\n                        right: self.right.right\n                    });\n                }\n            }\n            // a + -b => a - b\n            if (self.right instanceof AST_UnaryPrefix\n                && self.right.operator == \"-\"\n                && self.left.is_number(compressor)) {\n                self = make_node(AST_Binary, self, {\n                    operator: \"-\",\n                    left: self.left,\n                    right: self.right.expression\n                });\n                break;\n            }\n            // -a + b => b - a\n            if (self.left instanceof AST_UnaryPrefix\n                && self.left.operator == \"-\"\n                && reversible()\n                && self.right.is_number(compressor)) {\n                self = make_node(AST_Binary, self, {\n                    operator: \"-\",\n                    left: self.right,\n                    right: self.left.expression\n                });\n                break;\n            }\n            // `foo${bar}baz` + 1 => `foo${bar}baz1`\n            if (self.left instanceof AST_TemplateString) {\n                var l = self.left;\n                var r = self.right.evaluate(compressor);\n                if (r != self.right) {\n                    l.segments[l.segments.length - 1].value += String(r);\n                    return l;\n                }\n            }\n            // 1 + `foo${bar}baz` => `1foo${bar}baz`\n            if (self.right instanceof AST_TemplateString) {\n                var r = self.right;\n                var l = self.left.evaluate(compressor);\n                if (l != self.left) {\n                    r.segments[0].value = String(l) + r.segments[0].value;\n                    return r;\n                }\n            }\n            // `1${bar}2` + `foo${bar}baz` => `1${bar}2foo${bar}baz`\n            if (self.left instanceof AST_TemplateString\n                && self.right instanceof AST_TemplateString) {\n                var l = self.left;\n                var segments = l.segments;\n                var r = self.right;\n                segments[segments.length - 1].value += r.segments[0].value;\n                for (var i = 1; i < r.segments.length; i++) {\n                    segments.push(r.segments[i]);\n                }\n                return l;\n            }\n          case \"*\":\n            associative = compressor.option(\"unsafe_math\");\n          case \"&\":\n          case \"|\":\n          case \"^\":\n            // a + +b => +b + a\n            if (self.left.is_number(compressor)\n                && self.right.is_number(compressor)\n                && reversible()\n                && !(self.left instanceof AST_Binary\n                    && self.left.operator != self.operator\n                    && PRECEDENCE[self.left.operator] >= PRECEDENCE[self.operator])) {\n                var reversed = make_node(AST_Binary, self, {\n                    operator: self.operator,\n                    left: self.right,\n                    right: self.left\n                });\n                if (self.right instanceof AST_Constant\n                    && !(self.left instanceof AST_Constant)) {\n                    self = best_of(compressor, reversed, self);\n                } else {\n                    self = best_of(compressor, self, reversed);\n                }\n            }\n            if (associative && self.is_number(compressor)) {\n                // a + (b + c) => (a + b) + c\n                if (self.right instanceof AST_Binary\n                    && self.right.operator == self.operator) {\n                    self = make_node(AST_Binary, self, {\n                        operator: self.operator,\n                        left: make_node(AST_Binary, self.left, {\n                            operator: self.operator,\n                            left: self.left,\n                            right: self.right.left,\n                            start: self.left.start,\n                            end: self.right.left.end\n                        }),\n                        right: self.right.right\n                    });\n                }\n                // (n + 2) + 3 => 5 + n\n                // (2 * n) * 3 => 6 + n\n                if (self.right instanceof AST_Constant\n                    && self.left instanceof AST_Binary\n                    && self.left.operator == self.operator) {\n                    if (self.left.left instanceof AST_Constant) {\n                        self = make_node(AST_Binary, self, {\n                            operator: self.operator,\n                            left: make_node(AST_Binary, self.left, {\n                                operator: self.operator,\n                                left: self.left.left,\n                                right: self.right,\n                                start: self.left.left.start,\n                                end: self.right.end\n                            }),\n                            right: self.left.right\n                        });\n                    } else if (self.left.right instanceof AST_Constant) {\n                        self = make_node(AST_Binary, self, {\n                            operator: self.operator,\n                            left: make_node(AST_Binary, self.left, {\n                                operator: self.operator,\n                                left: self.left.right,\n                                right: self.right,\n                                start: self.left.right.start,\n                                end: self.right.end\n                            }),\n                            right: self.left.left\n                        });\n                    }\n                }\n                // (a | 1) | (2 | d) => (3 | a) | b\n                if (self.left instanceof AST_Binary\n                    && self.left.operator == self.operator\n                    && self.left.right instanceof AST_Constant\n                    && self.right instanceof AST_Binary\n                    && self.right.operator == self.operator\n                    && self.right.left instanceof AST_Constant) {\n                    self = make_node(AST_Binary, self, {\n                        operator: self.operator,\n                        left: make_node(AST_Binary, self.left, {\n                            operator: self.operator,\n                            left: make_node(AST_Binary, self.left.left, {\n                                operator: self.operator,\n                                left: self.left.right,\n                                right: self.right.left,\n                                start: self.left.right.start,\n                                end: self.right.left.end\n                            }),\n                            right: self.left.left\n                        }),\n                        right: self.right.right\n                    });\n                }\n            }\n        }\n\n        // bitwise ops\n        if (bitwise_binop.has(self.operator)) {\n            // Use De Morgan's laws\n            // z & (X | y)\n            // => z & X (given y & z === 0)\n            // => z & X | {y & z} (given y & z !== 0)\n            let y, z, x_node, y_node, z_node = self.left;\n            if (\n                self.operator === \"&\"\n                && self.right instanceof AST_Binary\n                && self.right.operator === \"|\"\n                && typeof (z = self.left.evaluate(compressor)) === \"number\"\n            ) {\n                if (typeof (y = self.right.right.evaluate(compressor)) === \"number\") {\n                    // z & (X | y)\n                    x_node = self.right.left;\n                    y_node = self.right.right;\n                } else if (typeof (y = self.right.left.evaluate(compressor)) === \"number\") {\n                    // z & (y | X)\n                    x_node = self.right.right;\n                    y_node = self.right.left;\n                }\n\n                if ((y & z) === 0) {\n                    self = make_node(AST_Binary, self, {\n                        operator: self.operator,\n                        left: z_node,\n                        right: x_node\n                    });\n                } else {\n                    const reordered_ops = make_node(AST_Binary, self, {\n                        operator: \"|\",\n                        left: make_node(AST_Binary, self, {\n                            operator: \"&\",\n                            left: x_node,\n                            right: z_node\n                        }),\n                        right: make_node_from_constant(y & z, y_node),\n                    });\n\n                    self = best_of(compressor, self, reordered_ops);\n                }\n            }\n\n            // x ^ x => 0\n            // x | x => 0 | x\n            // x & x => 0 | x\n            const same_operands = self.left.equivalent_to(self.right) && !self.left.has_side_effects(compressor);\n            if (same_operands) {\n                if (self.operator === \"^\") {\n                    return make_node(AST_Number, self, { value: 0 });\n                }\n                if (self.operator === \"|\" || self.operator === \"&\") {\n                    self.left = make_node(AST_Number, self, { value: 0 });\n                    self.operator = \"|\";\n                }\n            }\n\n\n            // Shifts that do nothing\n            // {anything} >> 0 => {anything} | 0\n            // {anything} << 0 => {anything} | 0\n            if (\n                (self.operator === \"<<\" || self.operator === \">>\")\n                && self.right instanceof AST_Number && self.right.value === 0\n            ) {\n                self.operator = \"|\";\n            }\n\n            // Find useless to-bitwise conversions\n            // {32 bit integer} | 0 => {32 bit integer}\n            // {32 bit integer} ^ 0 => {32 bit integer}\n            const zero_side = self.right instanceof AST_Number && self.right.value === 0 ? self.right\n                : self.left instanceof AST_Number && self.left.value === 0 ? self.left\n                : null;\n            const non_zero_side = zero_side && (zero_side === self.right ? self.left : self.right);\n            if (\n                zero_side\n                && (self.operator === \"|\" || self.operator === \"^\")\n                && (non_zero_side.is_32_bit_integer() || compressor.in_32_bit_context())\n            ) {\n                return non_zero_side;\n            }\n\n            // {anything} & 0 => 0\n            if (\n                zero_side\n                && self.operator === \"&\"\n                && !non_zero_side.has_side_effects(compressor)\n            ) {\n                return zero_side;\n            }\n\n            const is_full_mask = (node) =>\n                node instanceof AST_Number && node.value === -1\n                ||\n                    node instanceof AST_UnaryPrefix && (\n                        node.operator === \"-\"\n                            && node.expression instanceof AST_Number\n                            && node.expression.value === 1\n                        || node.operator === \"~\"\n                            && node.expression instanceof AST_Number\n                            && node.expression.value === 0);\n\n            const full_mask = is_full_mask(self.right) ? self.right\n                : is_full_mask(self.left) ? self.left\n                : null;\n            const non_full_mask_side = full_mask && (full_mask === self.right ? self.left : self.right);\n\n            switch (self.operator) {\n              case \"|\":\n                // {anything} | -1 => -1\n                if (full_mask && !non_full_mask_side.has_side_effects(compressor)) {\n                    return full_mask;\n                }\n\n                break;\n              case \"&\":\n                // {32 bit integer} & -1 => {32 bit integer}\n                if (\n                    full_mask\n                    && (non_full_mask_side.is_32_bit_integer() || compressor.in_32_bit_context())\n                ) {\n                    return non_full_mask_side;\n                }\n\n                break;\n              case \"^\":\n                // {anything} ^ -1 => ~{anything}\n                if (full_mask) {\n                    return non_full_mask_side.bitwise_negate(compressor.in_32_bit_context());\n                }\n\n                // ~x ^ ~y => x ^ y\n                if (\n                    self.left instanceof AST_UnaryPrefix\n                    && self.left.operator === \"~\"\n                    && self.right instanceof AST_UnaryPrefix\n                    && self.right.operator === \"~\"\n                ) {\n                    self = make_node(AST_Binary, self, {\n                        operator: \"^\",\n                        left: self.left.expression,\n                        right: self.right.expression\n                    });\n                }\n\n                break;\n            }\n        }\n    }\n    // x && (y && z)  ==>  x && y && z\n    // x || (y || z)  ==>  x || y || z\n    // x + (\"y\" + z)  ==>  x + \"y\" + z\n    // \"x\" + (y + \"z\")==>  \"x\" + y + \"z\"\n    if (self.right instanceof AST_Binary\n        && self.right.operator == self.operator\n        && (lazy_op.has(self.operator)\n            || (self.operator == \"+\"\n                && (self.right.left.is_string(compressor)\n                    || (self.left.is_string(compressor)\n                        && self.right.right.is_string(compressor)))))\n    ) {\n        self.left = make_node(AST_Binary, self.left, {\n            operator : self.operator,\n            left     : self.left.transform(compressor),\n            right    : self.right.left.transform(compressor)\n        });\n        self.right = self.right.right.transform(compressor);\n        return self.transform(compressor);\n    }\n    var ev = self.evaluate(compressor);\n    if (ev !== self) {\n        ev = make_node_from_constant(ev, self).optimize(compressor);\n        return best_of(compressor, ev, self);\n    }\n    return self;\n});\n\ndef_optimize(AST_SymbolExport, function(self) {\n    return self;\n});\n\ndef_optimize(AST_SymbolRef, function(self, compressor) {\n    if (\n        !compressor.option(\"ie8\")\n        && is_undeclared_ref(self)\n        && !compressor.find_parent(AST_With)\n    ) {\n        switch (self.name) {\n          case \"undefined\":\n            return make_node(AST_Undefined, self).optimize(compressor);\n          case \"NaN\":\n            return make_node(AST_NaN, self).optimize(compressor);\n          case \"Infinity\":\n            return make_node(AST_Infinity, self).optimize(compressor);\n        }\n    }\n\n    if (compressor.option(\"reduce_vars\") && !compressor.is_lhs()) {\n        return inline_into_symbolref(self, compressor);\n    } else {\n        return self;\n    }\n});\n\nfunction is_atomic(lhs, self) {\n    return lhs instanceof AST_SymbolRef || lhs.TYPE === self.TYPE;\n}\n\ndef_optimize(AST_Undefined, function(self, compressor) {\n    if (compressor.option(\"unsafe_undefined\")) {\n        var undef = find_variable(compressor, \"undefined\");\n        if (undef) {\n            var ref = make_node(AST_SymbolRef, self, {\n                name   : \"undefined\",\n                scope  : undef.scope,\n                thedef : undef\n            });\n            set_flag(ref, UNDEFINED);\n            return ref;\n        }\n    }\n    var lhs = compressor.is_lhs();\n    if (lhs && is_atomic(lhs, self)) return self;\n    return make_node(AST_UnaryPrefix, self, {\n        operator: \"void\",\n        expression: make_node(AST_Number, self, {\n            value: 0\n        })\n    });\n});\n\ndef_optimize(AST_Infinity, function(self, compressor) {\n    var lhs = compressor.is_lhs();\n    if (lhs && is_atomic(lhs, self)) return self;\n    if (\n        compressor.option(\"keep_infinity\")\n        && !(lhs && !is_atomic(lhs, self))\n        && !find_variable(compressor, \"Infinity\")\n    ) {\n        return self;\n    }\n    return make_node(AST_Binary, self, {\n        operator: \"/\",\n        left: make_node(AST_Number, self, {\n            value: 1\n        }),\n        right: make_node(AST_Number, self, {\n            value: 0\n        })\n    });\n});\n\ndef_optimize(AST_NaN, function(self, compressor) {\n    var lhs = compressor.is_lhs();\n    if (lhs && !is_atomic(lhs, self)\n        || find_variable(compressor, \"NaN\")) {\n        return make_node(AST_Binary, self, {\n            operator: \"/\",\n            left: make_node(AST_Number, self, {\n                value: 0\n            }),\n            right: make_node(AST_Number, self, {\n                value: 0\n            })\n        });\n    }\n    return self;\n});\n\nconst ASSIGN_OPS = makePredicate(\"+ - / * % >> << >>> | ^ &\");\nconst ASSIGN_OPS_COMMUTATIVE = makePredicate(\"* | ^ &\");\ndef_optimize(AST_Assign, function(self, compressor) {\n    if (self.logical) {\n        return self.lift_sequences(compressor);\n    }\n\n    var def;\n    // x = x ---> x\n    if (\n        self.operator === \"=\"\n        && self.left instanceof AST_SymbolRef\n        && self.left.name !== \"arguments\"\n        && !(def = self.left.definition()).undeclared\n        && self.right.equivalent_to(self.left)\n    ) {\n        return self.right;\n    }\n\n    if (compressor.option(\"dead_code\")\n        && self.left instanceof AST_SymbolRef\n        && (def = self.left.definition()).scope === compressor.find_parent(AST_Lambda)) {\n        var level = 0, node, parent = self;\n        do {\n            node = parent;\n            parent = compressor.parent(level++);\n            if (parent instanceof AST_Exit) {\n                if (in_try(level, parent)) break;\n                if (is_reachable(def.scope, [ def ])) break;\n                if (self.operator == \"=\") return self.right;\n                def.fixed = false;\n                return make_node(AST_Binary, self, {\n                    operator: self.operator.slice(0, -1),\n                    left: self.left,\n                    right: self.right\n                }).optimize(compressor);\n            }\n        } while (parent instanceof AST_Binary && parent.right === node\n            || parent instanceof AST_Sequence && parent.tail_node() === node);\n    }\n    self = self.lift_sequences(compressor);\n\n    if (self.operator == \"=\" && self.left instanceof AST_SymbolRef && self.right instanceof AST_Binary) {\n        // x = expr1 OP expr2\n        if (self.right.left instanceof AST_SymbolRef\n            && self.right.left.name == self.left.name\n            && ASSIGN_OPS.has(self.right.operator)) {\n            // x = x - 2  --->  x -= 2\n            self.operator = self.right.operator + \"=\";\n            self.right = self.right.right;\n        } else if (self.right.right instanceof AST_SymbolRef\n            && self.right.right.name == self.left.name\n            && ASSIGN_OPS_COMMUTATIVE.has(self.right.operator)\n            && !self.right.left.has_side_effects(compressor)) {\n            // x = 2 & x  --->  x &= 2\n            self.operator = self.right.operator + \"=\";\n            self.right = self.right.left;\n        }\n    }\n    return self;\n\n    function in_try(level, node) {\n        function may_assignment_throw() {\n            const right = self.right;\n            self.right = make_node(AST_Null, right);\n            const may_throw = node.may_throw(compressor);\n            self.right = right;\n\n            return may_throw;\n        }\n\n        var stop_at = self.left.definition().scope.get_defun_scope();\n        var parent;\n        while ((parent = compressor.parent(level++)) !== stop_at) {\n            if (parent instanceof AST_Try) {\n                if (parent.bfinally) return true;\n                if (parent.bcatch && may_assignment_throw()) return true;\n            }\n        }\n    }\n});\n\ndef_optimize(AST_DefaultAssign, function(self, compressor) {\n    if (!compressor.option(\"evaluate\")) {\n        return self;\n    }\n    var evaluateRight = self.right.evaluate(compressor);\n\n    // `[x = undefined] = foo` ---> `[x] = foo`\n    // `(arg = undefined) => ...` ---> `(arg) => ...` (unless `keep_fargs`)\n    // `((arg = undefined) => ...)()` ---> `((arg) => ...)()`\n    let lambda, iife;\n    if (evaluateRight === undefined) {\n        if (\n            (lambda = compressor.parent()) instanceof AST_Lambda\n                ? (\n                    compressor.option(\"keep_fargs\") === false\n                    || (iife = compressor.parent(1)).TYPE === \"Call\"\n                        && iife.expression === lambda\n                )\n                : true\n        ) {\n            self = self.left;\n        }\n    } else if (evaluateRight !== self.right) {\n        evaluateRight = make_node_from_constant(evaluateRight, self.right);\n        self.right = best_of_expression(evaluateRight, self.right);\n    }\n\n    return self;\n});\n\nfunction is_nullish_check(check, check_subject, compressor) {\n    if (check_subject.may_throw(compressor)) return false;\n\n    let nullish_side;\n\n    // foo == null\n    if (\n        check instanceof AST_Binary\n        && check.operator === \"==\"\n        // which side is nullish?\n        && (\n            (nullish_side = is_nullish(check.left, compressor) && check.left)\n            || (nullish_side = is_nullish(check.right, compressor) && check.right)\n        )\n        // is the other side the same as the check_subject\n        && (\n            nullish_side === check.left\n                ? check.right\n                : check.left\n        ).equivalent_to(check_subject)\n    ) {\n        return true;\n    }\n\n    // foo === null || foo === undefined\n    if (check instanceof AST_Binary && check.operator === \"||\") {\n        let null_cmp;\n        let undefined_cmp;\n\n        const find_comparison = cmp => {\n            if (!(\n                cmp instanceof AST_Binary\n                && (cmp.operator === \"===\" || cmp.operator === \"==\")\n            )) {\n                return false;\n            }\n\n            let found = 0;\n            let defined_side;\n\n            if (cmp.left instanceof AST_Null) {\n                found++;\n                null_cmp = cmp;\n                defined_side = cmp.right;\n            }\n            if (cmp.right instanceof AST_Null) {\n                found++;\n                null_cmp = cmp;\n                defined_side = cmp.left;\n            }\n            if (is_undefined(cmp.left, compressor)) {\n                found++;\n                undefined_cmp = cmp;\n                defined_side = cmp.right;\n            }\n            if (is_undefined(cmp.right, compressor)) {\n                found++;\n                undefined_cmp = cmp;\n                defined_side = cmp.left;\n            }\n\n            if (found !== 1) {\n                return false;\n            }\n\n            if (!defined_side.equivalent_to(check_subject)) {\n                return false;\n            }\n\n            return true;\n        };\n\n        if (!find_comparison(check.left)) return false;\n        if (!find_comparison(check.right)) return false;\n\n        if (null_cmp && undefined_cmp && null_cmp !== undefined_cmp) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\ndef_optimize(AST_Conditional, function(self, compressor) {\n    if (!compressor.option(\"conditionals\")) return self;\n    // This looks like lift_sequences(), should probably be under \"sequences\"\n    if (self.condition instanceof AST_Sequence) {\n        var expressions = self.condition.expressions.slice();\n        self.condition = expressions.pop();\n        expressions.push(self);\n        return make_sequence(self, expressions);\n    }\n    var cond = self.condition.evaluate(compressor);\n    if (cond !== self.condition) {\n        if (cond) {\n            return maintain_this_binding(compressor.parent(), compressor.self(), self.consequent);\n        } else {\n            return maintain_this_binding(compressor.parent(), compressor.self(), self.alternative);\n        }\n    }\n    var negated = cond.negate(compressor, first_in_statement(compressor));\n    if (best_of(compressor, cond, negated) === negated) {\n        self = make_node(AST_Conditional, self, {\n            condition: negated,\n            consequent: self.alternative,\n            alternative: self.consequent\n        });\n    }\n    var condition = self.condition;\n    var consequent = self.consequent;\n    var alternative = self.alternative;\n    // x?x:y --> x||y\n    if (condition instanceof AST_SymbolRef\n        && consequent instanceof AST_SymbolRef\n        && condition.definition() === consequent.definition()) {\n        return make_node(AST_Binary, self, {\n            operator: \"||\",\n            left: condition,\n            right: alternative\n        });\n    }\n    // if (foo) exp = something; else exp = something_else;\n    //                   |\n    //                   v\n    // exp = foo ? something : something_else;\n    if (\n        consequent instanceof AST_Assign\n        && alternative instanceof AST_Assign\n        && consequent.operator === alternative.operator\n        && consequent.logical === alternative.logical\n        && consequent.left.equivalent_to(alternative.left)\n        && (!self.condition.has_side_effects(compressor)\n            || consequent.operator == \"=\"\n                && !consequent.left.has_side_effects(compressor))\n    ) {\n        return make_node(AST_Assign, self, {\n            operator: consequent.operator,\n            left: consequent.left,\n            logical: consequent.logical,\n            right: make_node(AST_Conditional, self, {\n                condition: self.condition,\n                consequent: consequent.right,\n                alternative: alternative.right\n            })\n        });\n    }\n    // x ? y(a) : y(b) --> y(x ? a : b)\n    var arg_index;\n    if (consequent instanceof AST_Call\n        && alternative.TYPE === consequent.TYPE\n        && consequent.args.length > 0\n        && consequent.args.length == alternative.args.length\n        && consequent.expression.equivalent_to(alternative.expression)\n        && !self.condition.has_side_effects(compressor)\n        && !consequent.expression.has_side_effects(compressor)\n        && typeof (arg_index = single_arg_diff()) == \"number\") {\n        var node = consequent.clone();\n        node.args[arg_index] = make_node(AST_Conditional, self, {\n            condition: self.condition,\n            consequent: consequent.args[arg_index],\n            alternative: alternative.args[arg_index]\n        });\n        return node;\n    }\n    // a ? b : c ? b : d --> (a || c) ? b : d\n    if (alternative instanceof AST_Conditional\n        && consequent.equivalent_to(alternative.consequent)) {\n        return make_node(AST_Conditional, self, {\n            condition: make_node(AST_Binary, self, {\n                operator: \"||\",\n                left: condition,\n                right: alternative.condition\n            }),\n            consequent: consequent,\n            alternative: alternative.alternative\n        }).optimize(compressor);\n    }\n\n    // a == null ? b : a -> a ?? b\n    if (\n        compressor.option(\"ecma\") >= 2020 &&\n        is_nullish_check(condition, alternative, compressor)\n    ) {\n        return make_node(AST_Binary, self, {\n            operator: \"??\",\n            left: alternative,\n            right: consequent\n        }).optimize(compressor);\n    }\n\n    // a ? b : (c, b) --> (a || c), b\n    if (alternative instanceof AST_Sequence\n        && consequent.equivalent_to(alternative.expressions[alternative.expressions.length - 1])) {\n        return make_sequence(self, [\n            make_node(AST_Binary, self, {\n                operator: \"||\",\n                left: condition,\n                right: make_sequence(self, alternative.expressions.slice(0, -1))\n            }),\n            consequent\n        ]).optimize(compressor);\n    }\n    // a ? b : (c && b) --> (a || c) && b\n    if (alternative instanceof AST_Binary\n        && alternative.operator == \"&&\"\n        && consequent.equivalent_to(alternative.right)) {\n        return make_node(AST_Binary, self, {\n            operator: \"&&\",\n            left: make_node(AST_Binary, self, {\n                operator: \"||\",\n                left: condition,\n                right: alternative.left\n            }),\n            right: consequent\n        }).optimize(compressor);\n    }\n    // x?y?z:a:a --> x&&y?z:a\n    if (consequent instanceof AST_Conditional\n        && consequent.alternative.equivalent_to(alternative)) {\n        return make_node(AST_Conditional, self, {\n            condition: make_node(AST_Binary, self, {\n                left: self.condition,\n                operator: \"&&\",\n                right: consequent.condition\n            }),\n            consequent: consequent.consequent,\n            alternative: alternative\n        });\n    }\n    // x ? y : y --> x, y\n    if (consequent.equivalent_to(alternative)) {\n        return make_sequence(self, [\n            self.condition,\n            consequent\n        ]).optimize(compressor);\n    }\n    // x ? y || z : z --> x && y || z\n    if (consequent instanceof AST_Binary\n        && consequent.operator == \"||\"\n        && consequent.right.equivalent_to(alternative)) {\n        return make_node(AST_Binary, self, {\n            operator: \"||\",\n            left: make_node(AST_Binary, self, {\n                operator: \"&&\",\n                left: self.condition,\n                right: consequent.left\n            }),\n            right: alternative\n        }).optimize(compressor);\n    }\n\n    const in_bool = compressor.in_boolean_context();\n    if (is_true(self.consequent)) {\n        if (is_false(self.alternative)) {\n            // c ? true : false ---> !!c\n            return booleanize(self.condition);\n        }\n        // c ? true : x ---> !!c || x\n        return make_node(AST_Binary, self, {\n            operator: \"||\",\n            left: booleanize(self.condition),\n            right: self.alternative\n        });\n    }\n    if (is_false(self.consequent)) {\n        if (is_true(self.alternative)) {\n            // c ? false : true ---> !c\n            return booleanize(self.condition.negate(compressor));\n        }\n        // c ? false : x ---> !c && x\n        return make_node(AST_Binary, self, {\n            operator: \"&&\",\n            left: booleanize(self.condition.negate(compressor)),\n            right: self.alternative\n        });\n    }\n    if (is_true(self.alternative)) {\n        // c ? x : true ---> !c || x\n        return make_node(AST_Binary, self, {\n            operator: \"||\",\n            left: booleanize(self.condition.negate(compressor)),\n            right: self.consequent\n        });\n    }\n    if (is_false(self.alternative)) {\n        // c ? x : false ---> !!c && x\n        return make_node(AST_Binary, self, {\n            operator: \"&&\",\n            left: booleanize(self.condition),\n            right: self.consequent\n        });\n    }\n\n    return self;\n\n    function booleanize(node) {\n        if (node.is_boolean()) return node;\n        // !!expression\n        return make_node(AST_UnaryPrefix, node, {\n            operator: \"!\",\n            expression: node.negate(compressor)\n        });\n    }\n\n    // AST_True or !0\n    function is_true(node) {\n        return node instanceof AST_True\n            || in_bool\n                && node instanceof AST_Constant\n                && node.getValue()\n            || (node instanceof AST_UnaryPrefix\n                && node.operator == \"!\"\n                && node.expression instanceof AST_Constant\n                && !node.expression.getValue());\n    }\n    // AST_False or !1\n    function is_false(node) {\n        return node instanceof AST_False\n            || in_bool\n                && node instanceof AST_Constant\n                && !node.getValue()\n            || (node instanceof AST_UnaryPrefix\n                && node.operator == \"!\"\n                && node.expression instanceof AST_Constant\n                && node.expression.getValue());\n    }\n\n    function single_arg_diff() {\n        var a = consequent.args;\n        var b = alternative.args;\n        for (var i = 0, len = a.length; i < len; i++) {\n            if (a[i] instanceof AST_Expansion) return;\n            if (!a[i].equivalent_to(b[i])) {\n                if (b[i] instanceof AST_Expansion) return;\n                for (var j = i + 1; j < len; j++) {\n                    if (a[j] instanceof AST_Expansion) return;\n                    if (!a[j].equivalent_to(b[j])) return;\n                }\n                return i;\n            }\n        }\n    }\n});\n\ndef_optimize(AST_Boolean, function(self, compressor) {\n    if (compressor.in_boolean_context()) return make_node(AST_Number, self, {\n        value: +self.value\n    });\n    var p = compressor.parent();\n    if (compressor.option(\"booleans_as_integers\")) {\n        if (p instanceof AST_Binary && (p.operator == \"===\" || p.operator == \"!==\")) {\n            p.operator = p.operator.replace(/=$/, \"\");\n        }\n        return make_node(AST_Number, self, {\n            value: +self.value\n        });\n    }\n    if (compressor.option(\"booleans\")) {\n        if (p instanceof AST_Binary && (p.operator == \"==\"\n                                        || p.operator == \"!=\")) {\n            return make_node(AST_Number, self, {\n                value: +self.value\n            });\n        }\n        return make_node(AST_UnaryPrefix, self, {\n            operator: \"!\",\n            expression: make_node(AST_Number, self, {\n                value: 1 - self.value\n            })\n        });\n    }\n    return self;\n});\n\nfunction safe_to_flatten(value, compressor) {\n    if (value instanceof AST_SymbolRef) {\n        value = value.fixed_value();\n    }\n    if (!value) return false;\n    if (!(value instanceof AST_Lambda || value instanceof AST_Class)) return true;\n    if (!(value instanceof AST_Lambda && value.contains_this())) return true;\n    return compressor.parent() instanceof AST_New;\n}\n\nAST_PropAccess.DEFMETHOD(\"flatten_object\", function(key, compressor) {\n    if (!compressor.option(\"properties\")) return;\n    if (key === \"__proto__\") return;\n\n    var arrows = compressor.option(\"unsafe_arrows\") && compressor.option(\"ecma\") >= 2015;\n    var expr = this.expression;\n    if (expr instanceof AST_Object) {\n        var props = expr.properties;\n\n        for (var i = props.length; --i >= 0;) {\n            var prop = props[i];\n\n            if (\"\" + (prop instanceof AST_ConciseMethod ? prop.key.name : prop.key) == key) {\n                const all_props_flattenable = props.every((p) =>\n                    (p instanceof AST_ObjectKeyVal\n                        || arrows && p instanceof AST_ConciseMethod && !p.is_generator\n                    )\n                    && !p.computed_key()\n                );\n\n                if (!all_props_flattenable) return;\n                if (!safe_to_flatten(prop.value, compressor)) return;\n\n                return make_node(AST_Sub, this, {\n                    expression: make_node(AST_Array, expr, {\n                        elements: props.map(function(prop) {\n                            var v = prop.value;\n                            if (v instanceof AST_Accessor) {\n                                v = make_node(AST_Function, v, v);\n                            }\n\n                            var k = prop.key;\n                            if (k instanceof AST_Node && !(k instanceof AST_SymbolMethod)) {\n                                return make_sequence(prop, [ k, v ]);\n                            }\n\n                            return v;\n                        })\n                    }),\n                    property: make_node(AST_Number, this, {\n                        value: i\n                    })\n                });\n            }\n        }\n    }\n});\n\ndef_optimize(AST_Sub, function(self, compressor) {\n    var expr = self.expression;\n    var prop = self.property;\n    if (compressor.option(\"properties\")) {\n        var key = prop.evaluate(compressor);\n        if (key !== prop) {\n            if (typeof key == \"string\") {\n                if (key == \"undefined\") {\n                    key = undefined;\n                } else {\n                    var value = parseFloat(key);\n                    if (value.toString() == key) {\n                        key = value;\n                    }\n                }\n            }\n            prop = self.property = best_of_expression(\n                prop,\n                make_node_from_constant(key, prop).transform(compressor)\n            );\n            var property = \"\" + key;\n            if (is_basic_identifier_string(property)\n                && property.length <= prop.size() + 1) {\n                return make_node(AST_Dot, self, {\n                    expression: expr,\n                    optional: self.optional,\n                    property: property,\n                    quote: prop.quote,\n                }).optimize(compressor);\n            }\n        }\n    }\n    var fn;\n    OPT_ARGUMENTS: if (compressor.option(\"arguments\")\n        && expr instanceof AST_SymbolRef\n        && expr.name == \"arguments\"\n        && expr.definition().orig.length == 1\n        && (fn = expr.scope) instanceof AST_Lambda\n        && fn.uses_arguments\n        && !(fn instanceof AST_Arrow)\n        && prop instanceof AST_Number) {\n        var index = prop.getValue();\n        var params = new Set();\n        var argnames = fn.argnames;\n        for (var n = 0; n < argnames.length; n++) {\n            if (!(argnames[n] instanceof AST_SymbolFunarg)) {\n                break OPT_ARGUMENTS; // destructuring parameter - bail\n            }\n            var param = argnames[n].name;\n            if (params.has(param)) {\n                break OPT_ARGUMENTS; // duplicate parameter - bail\n            }\n            params.add(param);\n        }\n        var argname = fn.argnames[index];\n        if (argname && compressor.has_directive(\"use strict\")) {\n            var def = argname.definition();\n            if (!compressor.option(\"reduce_vars\") || def.assignments || def.orig.length > 1) {\n                argname = null;\n            }\n        } else if (!argname && !compressor.option(\"keep_fargs\") && index < fn.argnames.length + 5) {\n            while (index >= fn.argnames.length) {\n                argname = fn.create_symbol(AST_SymbolFunarg, {\n                    source: fn,\n                    scope: fn,\n                    tentative_name: \"argument_\" + fn.argnames.length,\n                });\n                fn.argnames.push(argname);\n            }\n        }\n        if (argname) {\n            var sym = make_node(AST_SymbolRef, self, argname);\n            sym.reference({});\n            clear_flag(argname, UNUSED);\n            return sym;\n        }\n    }\n    if (compressor.is_lhs()) return self;\n    if (key !== prop) {\n        var sub = self.flatten_object(property, compressor);\n        if (sub) {\n            expr = self.expression = sub.expression;\n            prop = self.property = sub.property;\n        }\n    }\n    if (compressor.option(\"properties\") && compressor.option(\"side_effects\")\n        && prop instanceof AST_Number && expr instanceof AST_Array) {\n        var index = prop.getValue();\n        var elements = expr.elements;\n        var retValue = elements[index];\n        FLATTEN: if (safe_to_flatten(retValue, compressor)) {\n            var flatten = true;\n            var values = [];\n            for (var i = elements.length; --i > index;) {\n                var value = elements[i].drop_side_effect_free(compressor);\n                if (value) {\n                    values.unshift(value);\n                    if (flatten && value.has_side_effects(compressor)) flatten = false;\n                }\n            }\n            if (retValue instanceof AST_Expansion) break FLATTEN;\n            retValue = retValue instanceof AST_Hole ? make_node(AST_Undefined, retValue) : retValue;\n            if (!flatten) values.unshift(retValue);\n            while (--i >= 0) {\n                var value = elements[i];\n                if (value instanceof AST_Expansion) break FLATTEN;\n                value = value.drop_side_effect_free(compressor);\n                if (value) values.unshift(value);\n                else index--;\n            }\n            if (flatten) {\n                values.push(retValue);\n                return make_sequence(self, values).optimize(compressor);\n            } else return make_node(AST_Sub, self, {\n                expression: make_node(AST_Array, expr, {\n                    elements: values\n                }),\n                property: make_node(AST_Number, prop, {\n                    value: index\n                })\n            });\n        }\n    }\n    var ev = self.evaluate(compressor);\n    if (ev !== self) {\n        ev = make_node_from_constant(ev, self).optimize(compressor);\n        return best_of(compressor, ev, self);\n    }\n    return self;\n});\n\ndef_optimize(AST_Chain, function (self, compressor) {\n    if (is_nullish(self.expression, compressor)) {\n        let parent = compressor.parent();\n        // It's valid to delete a nullish optional chain, but if we optimized\n        // this to `delete undefined` then it would appear to be a syntax error\n        // when we try to optimize the delete. Thankfully, `delete 0` is fine.\n        if (parent instanceof AST_UnaryPrefix && parent.operator === \"delete\") {\n            return make_node_from_constant(0, self);\n        }\n        return make_node(AST_Undefined, self);\n    }\n    return self;\n});\n\ndef_optimize(AST_Dot, function(self, compressor) {\n    const parent = compressor.parent();\n    if (compressor.is_lhs()) return self;\n    if (compressor.option(\"unsafe_proto\")\n        && self.expression instanceof AST_Dot\n        && self.expression.property == \"prototype\") {\n        var exp = self.expression.expression;\n        if (is_undeclared_ref(exp)) switch (exp.name) {\n          case \"Array\":\n            self.expression = make_node(AST_Array, self.expression, {\n                elements: []\n            });\n            break;\n          case \"Function\":\n            self.expression = make_node(AST_Function, self.expression, {\n                argnames: [],\n                body: []\n            });\n            break;\n          case \"Number\":\n            self.expression = make_node(AST_Number, self.expression, {\n                value: 0\n            });\n            break;\n          case \"Object\":\n            self.expression = make_node(AST_Object, self.expression, {\n                properties: []\n            });\n            break;\n          case \"RegExp\":\n            self.expression = make_node(AST_RegExp, self.expression, {\n                value: { source: \"t\", flags: \"\" }\n            });\n            break;\n          case \"String\":\n            self.expression = make_node(AST_String, self.expression, {\n                value: \"\"\n            });\n            break;\n        }\n    }\n    if (!(parent instanceof AST_Call) || !has_annotation(parent, _NOINLINE)) {\n        const sub = self.flatten_object(self.property, compressor);\n        if (sub) return sub.optimize(compressor);\n    }\n\n    if (self.expression instanceof AST_PropAccess\n        && parent instanceof AST_PropAccess) {\n        return self;\n    }\n\n    let ev = self.evaluate(compressor);\n    if (ev !== self) {\n        ev = make_node_from_constant(ev, self).optimize(compressor);\n        return best_of(compressor, ev, self);\n    }\n    return self;\n});\n\nfunction literals_in_boolean_context(self, compressor) {\n    if (compressor.in_boolean_context()) {\n        return best_of(compressor, self, make_sequence(self, [\n            self,\n            make_node(AST_True, self)\n        ]).optimize(compressor));\n    }\n    return self;\n}\n\nfunction inline_array_like_spread(elements) {\n    for (var i = 0; i < elements.length; i++) {\n        var el = elements[i];\n        if (el instanceof AST_Expansion) {\n            var expr = el.expression;\n            if (\n                expr instanceof AST_Array\n                && !expr.elements.some(elm => elm instanceof AST_Hole)\n            ) {\n                elements.splice(i, 1, ...expr.elements);\n                // Step back one, as the element at i is now new.\n                i--;\n            }\n            // In array-like spread, spreading a non-iterable value is TypeError.\n            // We therefore can’t optimize anything else, unlike with object spread.\n        }\n    }\n}\n\ndef_optimize(AST_Array, function(self, compressor) {\n    var optimized = literals_in_boolean_context(self, compressor);\n    if (optimized !== self) {\n        return optimized;\n    }\n    inline_array_like_spread(self.elements);\n    return self;\n});\n\nfunction inline_object_prop_spread(props, compressor) {\n    for (var i = 0; i < props.length; i++) {\n        var prop = props[i];\n        if (prop instanceof AST_Expansion) {\n            const expr = prop.expression;\n            if (\n                expr instanceof AST_Object\n                && expr.properties.every(prop => prop instanceof AST_ObjectKeyVal)\n            ) {\n                props.splice(i, 1, ...expr.properties);\n                // Step back one, as the property at i is now new.\n                i--;\n            } else if (expr instanceof AST_Constant\n                && !(expr instanceof AST_String)) {\n                // Unlike array-like spread, in object spread, spreading a\n                // non-iterable value silently does nothing; it is thus safe\n                // to remove. AST_String is the only iterable AST_Constant.\n                props.splice(i, 1);\n                i--;\n            } else if (is_nullish(expr, compressor)) {\n                // Likewise, null and undefined can be silently removed.\n                props.splice(i, 1);\n                i--;\n            }\n        }\n    }\n}\n\ndef_optimize(AST_Object, function(self, compressor) {\n    var optimized = literals_in_boolean_context(self, compressor);\n    if (optimized !== self) {\n        return optimized;\n    }\n    inline_object_prop_spread(self.properties, compressor);\n    return self;\n});\n\ndef_optimize(AST_RegExp, literals_in_boolean_context);\n\ndef_optimize(AST_Return, function(self, compressor) {\n    if (self.value && is_undefined(self.value, compressor)) {\n        self.value = null;\n    }\n    return self;\n});\n\ndef_optimize(AST_Arrow, opt_AST_Lambda);\n\ndef_optimize(AST_Function, function(self, compressor) {\n    self = opt_AST_Lambda(self, compressor);\n    if (compressor.option(\"unsafe_arrows\")\n        && compressor.option(\"ecma\") >= 2015\n        && !self.name\n        && !self.is_generator\n        && !self.uses_arguments\n        && !self.pinned()) {\n        const uses_this = walk(self, node => {\n            if (node instanceof AST_This) return walk_abort;\n        });\n        if (!uses_this) return make_node(AST_Arrow, self, self).optimize(compressor);\n    }\n    return self;\n});\n\ndef_optimize(AST_Class, function(self) {\n    for (let i = 0; i < self.properties.length; i++) {\n        const prop = self.properties[i];\n        if (prop instanceof AST_ClassStaticBlock && prop.body.length == 0) {\n            self.properties.splice(i, 1);\n            i--;\n        }\n    }\n\n    return self;\n});\n\ndef_optimize(AST_ClassStaticBlock, function(self, compressor) {\n    tighten_body(self.body, compressor);\n    return self;\n});\n\ndef_optimize(AST_Yield, function(self, compressor) {\n    if (self.expression && !self.is_star && is_undefined(self.expression, compressor)) {\n        self.expression = null;\n    }\n    return self;\n});\n\ndef_optimize(AST_TemplateString, function(self, compressor) {\n    if (\n        !compressor.option(\"evaluate\")\n        || compressor.parent() instanceof AST_PrefixedTemplateString\n    ) {\n        return self;\n    }\n\n    var segments = [];\n    for (var i = 0; i < self.segments.length; i++) {\n        var segment = self.segments[i];\n        if (segment instanceof AST_Node) {\n            var result = segment.evaluate(compressor);\n            // Evaluate to constant value\n            // Constant value shorter than ${segment}\n            if (result !== segment && (result + \"\").length <= segment.size() + \"${}\".length) {\n                // There should always be a previous and next segment if segment is a node\n                segments[segments.length - 1].value = segments[segments.length - 1].value + result + self.segments[++i].value;\n                continue;\n            }\n            // `before ${`innerBefore ${any} innerAfter`} after` => `before innerBefore ${any} innerAfter after`\n            // TODO:\n            // `before ${'test' + foo} after` => `before innerBefore ${any} innerAfter after`\n            // `before ${foo + 'test} after` => `before innerBefore ${any} innerAfter after`\n            if (segment instanceof AST_TemplateString) {\n                var inners = segment.segments;\n                segments[segments.length - 1].value += inners[0].value;\n                for (var j = 1; j < inners.length; j++) {\n                    segment = inners[j];\n                    segments.push(segment);\n                }\n                continue;\n            }\n        }\n        segments.push(segment);\n    }\n    self.segments = segments;\n\n    // `foo` => \"foo\"\n    if (segments.length == 1) {\n        return make_node(AST_String, self, segments[0]);\n    }\n\n    if (\n        segments.length === 3\n        && segments[1] instanceof AST_Node\n        && (\n            segments[1].is_string(compressor)\n            || segments[1].is_number(compressor)\n            || is_nullish(segments[1], compressor)\n            || compressor.option(\"unsafe\")\n        )\n    ) {\n        // `foo${bar}` => \"foo\" + bar\n        if (segments[2].value === \"\") {\n            return make_node(AST_Binary, self, {\n                operator: \"+\",\n                left: make_node(AST_String, self, {\n                    value: segments[0].value,\n                }),\n                right: segments[1],\n            });\n        }\n        // `${bar}baz` => bar + \"baz\"\n        if (segments[0].value === \"\") {\n            return make_node(AST_Binary, self, {\n                operator: \"+\",\n                left: segments[1],\n                right: make_node(AST_String, self, {\n                    value: segments[2].value,\n                }),\n            });\n        }\n    }\n    return self;\n});\n\ndef_optimize(AST_PrefixedTemplateString, function(self) {\n    return self;\n});\n\n// [\"p\"]:1 ---> p:1\n// [42]:1 ---> 42:1\nfunction lift_key(self, compressor) {\n    if (!compressor.option(\"computed_props\")) return self;\n    // save a comparison in the typical case\n    if (!(self.key instanceof AST_Constant)) return self;\n    // allow certain acceptable props as not all AST_Constants are true constants\n    if (self.key instanceof AST_String || self.key instanceof AST_Number) {\n        if (self.key.value === \"__proto__\") return self;\n        if (self.key.value == \"constructor\"\n            && compressor.parent() instanceof AST_Class) return self;\n        if (self instanceof AST_ObjectKeyVal) {\n            self.quote = self.key.quote;\n            self.key = self.key.value;\n        } else if (self instanceof AST_ClassProperty) {\n            self.quote = self.key.quote;\n            self.key = make_node(AST_SymbolClassProperty, self.key, {\n                name: self.key.value\n            });\n        } else {\n            self.quote = self.key.quote;\n            self.key = make_node(AST_SymbolMethod, self.key, {\n                name: self.key.value\n            });\n        }\n    }\n    return self;\n}\n\ndef_optimize(AST_ObjectProperty, lift_key);\n\ndef_optimize(AST_ConciseMethod, function(self, compressor) {\n    lift_key(self, compressor);\n    // p(){return x;} ---> p:()=>x\n    if (compressor.option(\"arrows\")\n        && compressor.parent() instanceof AST_Object\n        && !self.is_generator\n        && !self.value.uses_arguments\n        && !self.value.pinned()\n        && self.value.body.length == 1\n        && self.value.body[0] instanceof AST_Return\n        && self.value.body[0].value\n        && !self.value.contains_this()) {\n        var arrow = make_node(AST_Arrow, self.value, self.value);\n        arrow.async = self.async;\n        arrow.is_generator = self.is_generator;\n        return make_node(AST_ObjectKeyVal, self, {\n            key: self.key instanceof AST_SymbolMethod ? self.key.name : self.key,\n            value: arrow,\n            quote: self.quote,\n        });\n    }\n    return self;\n});\n\ndef_optimize(AST_ObjectKeyVal, function(self, compressor) {\n    lift_key(self, compressor);\n    // p:function(){} ---> p(){}\n    // p:function*(){} ---> *p(){}\n    // p:async function(){} ---> async p(){}\n    // p:()=>{} ---> p(){}\n    // p:async()=>{} ---> async p(){}\n    var unsafe_methods = compressor.option(\"unsafe_methods\");\n    if (unsafe_methods\n        && compressor.option(\"ecma\") >= 2015\n        && (!(unsafe_methods instanceof RegExp) || unsafe_methods.test(self.key + \"\"))) {\n        var key = self.key;\n        var value = self.value;\n        var is_arrow_with_block = value instanceof AST_Arrow\n            && Array.isArray(value.body)\n            && !value.contains_this();\n        if ((is_arrow_with_block || value instanceof AST_Function) && !value.name) {\n            return make_node(AST_ConciseMethod, self, {\n                async: value.async,\n                is_generator: value.is_generator,\n                key: key instanceof AST_Node ? key : make_node(AST_SymbolMethod, self, {\n                    name: key,\n                }),\n                value: make_node(AST_Accessor, value, value),\n                quote: self.quote,\n            });\n        }\n    }\n    return self;\n});\n\ndef_optimize(AST_Destructuring, function(self, compressor) {\n    if (compressor.option(\"pure_getters\") == true\n        && compressor.option(\"unused\")\n        && !self.is_array\n        && Array.isArray(self.names)\n        && !is_destructuring_export_decl(compressor)\n        && !(self.names[self.names.length - 1] instanceof AST_Expansion)) {\n        var keep = [];\n        for (var i = 0; i < self.names.length; i++) {\n            var elem = self.names[i];\n            if (!(elem instanceof AST_ObjectKeyVal\n                && typeof elem.key == \"string\"\n                && elem.value instanceof AST_SymbolDeclaration\n                && !should_retain(compressor, elem.value.definition()))) {\n                keep.push(elem);\n            }\n        }\n        if (keep.length != self.names.length) {\n            self.names = keep;\n        }\n    }\n    return self;\n\n    function is_destructuring_export_decl(compressor) {\n        var ancestors = [/^VarDef$/, /^(Const|Let|Var)$/, /^Export$/];\n        for (var a = 0, p = 0, len = ancestors.length; a < len; p++) {\n            var parent = compressor.parent(p);\n            if (!parent) return false;\n            if (a === 0 && parent.TYPE == \"Destructuring\") continue;\n            if (!ancestors[a].test(parent.TYPE)) {\n                return false;\n            }\n            a++;\n        }\n        return true;\n    }\n\n    function should_retain(compressor, def) {\n        if (def.references.length) return true;\n        if (!def.global) return false;\n        if (compressor.toplevel.vars) {\n            if (compressor.top_retain) {\n                return compressor.top_retain(def);\n            }\n            return false;\n        }\n        return true;\n    }\n});\n\n/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n// a small wrapper around source-map and @jridgewell/source-map\nfunction* SourceMap(options) {\n    options = defaults(options, {\n        file : null,\n        root : null,\n        orig : null,\n        files: {},\n    });\n\n    var orig_map;\n    var generator = new sourceMap.SourceMapGenerator({\n        file       : options.file,\n        sourceRoot : options.root\n    });\n\n    let sourcesContent = {__proto__: null};\n    let files = options.files;\n    for (var name in files) if (HOP(files, name)) {\n        sourcesContent[name] = files[name];\n    }\n    if (options.orig) {\n        // We support both @jridgewell/source-map (which has a sync\n        // SourceMapConsumer) and source-map (which has an async\n        // SourceMapConsumer).\n        orig_map = yield new sourceMap.SourceMapConsumer(options.orig);\n        if (orig_map.sourcesContent) {\n            orig_map.sources.forEach(function(source, i) {\n                var content = orig_map.sourcesContent[i];\n                if (content) {\n                    sourcesContent[source] = content;\n                }\n            });\n        }\n    }\n\n    function add(source, gen_line, gen_col, orig_line, orig_col, name) {\n        let generatedPos = { line: gen_line, column: gen_col };\n\n        if (orig_map) {\n            var info = orig_map.originalPositionFor({\n                line: orig_line,\n                column: orig_col\n            });\n            if (info.source === null) {\n                generator.addMapping({\n                    generated: generatedPos,\n                    original: null,\n                    source: null,\n                    name: null\n                });\n                return;\n            }\n            source = info.source;\n            orig_line = info.line;\n            orig_col = info.column;\n            name = info.name || name;\n        }\n        generator.addMapping({\n            generated : generatedPos,\n            original  : { line: orig_line, column: orig_col },\n            source    : source,\n            name      : name\n        });\n        generator.setSourceContent(source, sourcesContent[source]);\n    }\n\n    function clean(map) {\n        const allNull = map.sourcesContent && map.sourcesContent.every(c => c == null);\n        if (allNull) delete map.sourcesContent;\n        if (map.file === undefined) delete map.file;\n        if (map.sourceRoot === undefined) delete map.sourceRoot;\n        return map;\n    }\n\n    function getDecoded() {\n        if (!generator.toDecodedMap) return null;\n        return clean(generator.toDecodedMap());\n    }\n\n    function getEncoded() {\n        return clean(generator.toJSON());\n    }\n\n    function destroy() {\n        // @jridgewell/source-map's SourceMapConsumer does not need to be\n        // manually freed.\n        if (orig_map && orig_map.destroy) orig_map.destroy();\n    }\n\n    return {\n        add,\n        getDecoded,\n        getEncoded,\n        destroy,\n    };\n}\n\nvar domprops = [\n    \"$&\",\n    \"$'\",\n    \"$*\",\n    \"$+\",\n    \"$1\",\n    \"$2\",\n    \"$3\",\n    \"$4\",\n    \"$5\",\n    \"$6\",\n    \"$7\",\n    \"$8\",\n    \"$9\",\n    \"$_\",\n    \"$`\",\n    \"$input\",\n    \"-moz-animation\",\n    \"-moz-animation-delay\",\n    \"-moz-animation-direction\",\n    \"-moz-animation-duration\",\n    \"-moz-animation-fill-mode\",\n    \"-moz-animation-iteration-count\",\n    \"-moz-animation-name\",\n    \"-moz-animation-play-state\",\n    \"-moz-animation-timing-function\",\n    \"-moz-appearance\",\n    \"-moz-backface-visibility\",\n    \"-moz-border-end\",\n    \"-moz-border-end-color\",\n    \"-moz-border-end-style\",\n    \"-moz-border-end-width\",\n    \"-moz-border-image\",\n    \"-moz-border-start\",\n    \"-moz-border-start-color\",\n    \"-moz-border-start-style\",\n    \"-moz-border-start-width\",\n    \"-moz-box-align\",\n    \"-moz-box-direction\",\n    \"-moz-box-flex\",\n    \"-moz-box-ordinal-group\",\n    \"-moz-box-orient\",\n    \"-moz-box-pack\",\n    \"-moz-box-sizing\",\n    \"-moz-float-edge\",\n    \"-moz-font-feature-settings\",\n    \"-moz-font-language-override\",\n    \"-moz-force-broken-image-icon\",\n    \"-moz-hyphens\",\n    \"-moz-image-region\",\n    \"-moz-margin-end\",\n    \"-moz-margin-start\",\n    \"-moz-orient\",\n    \"-moz-osx-font-smoothing\",\n    \"-moz-outline-radius\",\n    \"-moz-outline-radius-bottomleft\",\n    \"-moz-outline-radius-bottomright\",\n    \"-moz-outline-radius-topleft\",\n    \"-moz-outline-radius-topright\",\n    \"-moz-padding-end\",\n    \"-moz-padding-start\",\n    \"-moz-perspective\",\n    \"-moz-perspective-origin\",\n    \"-moz-tab-size\",\n    \"-moz-text-size-adjust\",\n    \"-moz-transform\",\n    \"-moz-transform-origin\",\n    \"-moz-transform-style\",\n    \"-moz-transition\",\n    \"-moz-transition-delay\",\n    \"-moz-transition-duration\",\n    \"-moz-transition-property\",\n    \"-moz-transition-timing-function\",\n    \"-moz-user-focus\",\n    \"-moz-user-input\",\n    \"-moz-user-modify\",\n    \"-moz-user-select\",\n    \"-moz-window-dragging\",\n    \"-webkit-align-content\",\n    \"-webkit-align-items\",\n    \"-webkit-align-self\",\n    \"-webkit-animation\",\n    \"-webkit-animation-delay\",\n    \"-webkit-animation-direction\",\n    \"-webkit-animation-duration\",\n    \"-webkit-animation-fill-mode\",\n    \"-webkit-animation-iteration-count\",\n    \"-webkit-animation-name\",\n    \"-webkit-animation-play-state\",\n    \"-webkit-animation-timing-function\",\n    \"-webkit-appearance\",\n    \"-webkit-backface-visibility\",\n    \"-webkit-background-clip\",\n    \"-webkit-background-origin\",\n    \"-webkit-background-size\",\n    \"-webkit-border-bottom-left-radius\",\n    \"-webkit-border-bottom-right-radius\",\n    \"-webkit-border-image\",\n    \"-webkit-border-radius\",\n    \"-webkit-border-top-left-radius\",\n    \"-webkit-border-top-right-radius\",\n    \"-webkit-box-align\",\n    \"-webkit-box-direction\",\n    \"-webkit-box-flex\",\n    \"-webkit-box-ordinal-group\",\n    \"-webkit-box-orient\",\n    \"-webkit-box-pack\",\n    \"-webkit-box-shadow\",\n    \"-webkit-box-sizing\",\n    \"-webkit-filter\",\n    \"-webkit-flex\",\n    \"-webkit-flex-basis\",\n    \"-webkit-flex-direction\",\n    \"-webkit-flex-flow\",\n    \"-webkit-flex-grow\",\n    \"-webkit-flex-shrink\",\n    \"-webkit-flex-wrap\",\n    \"-webkit-justify-content\",\n    \"-webkit-line-clamp\",\n    \"-webkit-mask\",\n    \"-webkit-mask-clip\",\n    \"-webkit-mask-composite\",\n    \"-webkit-mask-image\",\n    \"-webkit-mask-origin\",\n    \"-webkit-mask-position\",\n    \"-webkit-mask-position-x\",\n    \"-webkit-mask-position-y\",\n    \"-webkit-mask-repeat\",\n    \"-webkit-mask-size\",\n    \"-webkit-order\",\n    \"-webkit-perspective\",\n    \"-webkit-perspective-origin\",\n    \"-webkit-text-fill-color\",\n    \"-webkit-text-size-adjust\",\n    \"-webkit-text-stroke\",\n    \"-webkit-text-stroke-color\",\n    \"-webkit-text-stroke-width\",\n    \"-webkit-transform\",\n    \"-webkit-transform-origin\",\n    \"-webkit-transform-style\",\n    \"-webkit-transition\",\n    \"-webkit-transition-delay\",\n    \"-webkit-transition-duration\",\n    \"-webkit-transition-property\",\n    \"-webkit-transition-timing-function\",\n    \"-webkit-user-select\",\n    \"0\",\n    \"1\",\n    \"10\",\n    \"11\",\n    \"12\",\n    \"13\",\n    \"14\",\n    \"15\",\n    \"16\",\n    \"17\",\n    \"18\",\n    \"19\",\n    \"2\",\n    \"20\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\",\n    \"@@iterator\",\n    \"ABORT_ERR\",\n    \"ACTIVE\",\n    \"ACTIVE_ATTRIBUTES\",\n    \"ACTIVE_TEXTURE\",\n    \"ACTIVE_UNIFORMS\",\n    \"ACTIVE_UNIFORM_BLOCKS\",\n    \"ADDITION\",\n    \"ALIASED_LINE_WIDTH_RANGE\",\n    \"ALIASED_POINT_SIZE_RANGE\",\n    \"ALL\",\n    \"ALLOW_KEYBOARD_INPUT\",\n    \"ALLPASS\",\n    \"ALPHA\",\n    \"ALPHA_BITS\",\n    \"ALREADY_SIGNALED\",\n    \"ALT_MASK\",\n    \"ALWAYS\",\n    \"ANY_SAMPLES_PASSED\",\n    \"ANY_SAMPLES_PASSED_CONSERVATIVE\",\n    \"ANY_TYPE\",\n    \"ANY_UNORDERED_NODE_TYPE\",\n    \"ARRAY_BUFFER\",\n    \"ARRAY_BUFFER_BINDING\",\n    \"ATTACHED_SHADERS\",\n    \"ATTRIBUTE_NODE\",\n    \"AT_TARGET\",\n    \"AbortController\",\n    \"AbortSignal\",\n    \"AbsoluteOrientationSensor\",\n    \"AbstractRange\",\n    \"Accelerometer\",\n    \"AddSearchProvider\",\n    \"AggregateError\",\n    \"AnalyserNode\",\n    \"Animation\",\n    \"AnimationEffect\",\n    \"AnimationEvent\",\n    \"AnimationPlaybackEvent\",\n    \"AnimationTimeline\",\n    \"AnonXMLHttpRequest\",\n    \"Any\",\n    \"ApplicationCache\",\n    \"ApplicationCacheErrorEvent\",\n    \"Array\",\n    \"ArrayBuffer\",\n    \"ArrayType\",\n    \"Atomics\",\n    \"Attr\",\n    \"Audio\",\n    \"AudioBuffer\",\n    \"AudioBufferSourceNode\",\n    \"AudioContext\",\n    \"AudioDestinationNode\",\n    \"AudioListener\",\n    \"AudioNode\",\n    \"AudioParam\",\n    \"AudioParamMap\",\n    \"AudioProcessingEvent\",\n    \"AudioScheduledSourceNode\",\n    \"AudioStreamTrack\",\n    \"AudioWorklet\",\n    \"AudioWorkletNode\",\n    \"AuthenticatorAssertionResponse\",\n    \"AuthenticatorAttestationResponse\",\n    \"AuthenticatorResponse\",\n    \"AutocompleteErrorEvent\",\n    \"BACK\",\n    \"BAD_BOUNDARYPOINTS_ERR\",\n    \"BAD_REQUEST\",\n    \"BANDPASS\",\n    \"BLEND\",\n    \"BLEND_COLOR\",\n    \"BLEND_DST_ALPHA\",\n    \"BLEND_DST_RGB\",\n    \"BLEND_EQUATION\",\n    \"BLEND_EQUATION_ALPHA\",\n    \"BLEND_EQUATION_RGB\",\n    \"BLEND_SRC_ALPHA\",\n    \"BLEND_SRC_RGB\",\n    \"BLUE\",\n    \"BLUE_BITS\",\n    \"BLUR\",\n    \"BOOL\",\n    \"BOOLEAN_TYPE\",\n    \"BOOL_VEC2\",\n    \"BOOL_VEC3\",\n    \"BOOL_VEC4\",\n    \"BOTH\",\n    \"BROWSER_DEFAULT_WEBGL\",\n    \"BUBBLING_PHASE\",\n    \"BUFFER_SIZE\",\n    \"BUFFER_USAGE\",\n    \"BYTE\",\n    \"BYTES_PER_ELEMENT\",\n    \"BackgroundFetchManager\",\n    \"BackgroundFetchRecord\",\n    \"BackgroundFetchRegistration\",\n    \"BarProp\",\n    \"BarcodeDetector\",\n    \"BaseAudioContext\",\n    \"BaseHref\",\n    \"BatteryManager\",\n    \"BeforeInstallPromptEvent\",\n    \"BeforeLoadEvent\",\n    \"BeforeUnloadEvent\",\n    \"BigInt\",\n    \"BigInt64Array\",\n    \"BigUint64Array\",\n    \"BiquadFilterNode\",\n    \"Blob\",\n    \"BlobEvent\",\n    \"Bluetooth\",\n    \"BluetoothCharacteristicProperties\",\n    \"BluetoothDevice\",\n    \"BluetoothRemoteGATTCharacteristic\",\n    \"BluetoothRemoteGATTDescriptor\",\n    \"BluetoothRemoteGATTServer\",\n    \"BluetoothRemoteGATTService\",\n    \"BluetoothUUID\",\n    \"Boolean\",\n    \"BroadcastChannel\",\n    \"ByteLengthQueuingStrategy\",\n    \"CAPTURING_PHASE\",\n    \"CCW\",\n    \"CDATASection\",\n    \"CDATA_SECTION_NODE\",\n    \"CHANGE\",\n    \"CHARSET_RULE\",\n    \"CHECKING\",\n    \"CLAMP_TO_EDGE\",\n    \"CLICK\",\n    \"CLOSED\",\n    \"CLOSING\",\n    \"COLOR\",\n    \"COLOR_ATTACHMENT0\",\n    \"COLOR_ATTACHMENT1\",\n    \"COLOR_ATTACHMENT10\",\n    \"COLOR_ATTACHMENT11\",\n    \"COLOR_ATTACHMENT12\",\n    \"COLOR_ATTACHMENT13\",\n    \"COLOR_ATTACHMENT14\",\n    \"COLOR_ATTACHMENT15\",\n    \"COLOR_ATTACHMENT2\",\n    \"COLOR_ATTACHMENT3\",\n    \"COLOR_ATTACHMENT4\",\n    \"COLOR_ATTACHMENT5\",\n    \"COLOR_ATTACHMENT6\",\n    \"COLOR_ATTACHMENT7\",\n    \"COLOR_ATTACHMENT8\",\n    \"COLOR_ATTACHMENT9\",\n    \"COLOR_BUFFER_BIT\",\n    \"COLOR_CLEAR_VALUE\",\n    \"COLOR_WRITEMASK\",\n    \"COMMENT_NODE\",\n    \"COMPARE_REF_TO_TEXTURE\",\n    \"COMPILE_STATUS\",\n    \"COMPLETION_STATUS_KHR\",\n    \"COMPRESSED_RGBA_S3TC_DXT1_EXT\",\n    \"COMPRESSED_RGBA_S3TC_DXT3_EXT\",\n    \"COMPRESSED_RGBA_S3TC_DXT5_EXT\",\n    \"COMPRESSED_RGB_S3TC_DXT1_EXT\",\n    \"COMPRESSED_TEXTURE_FORMATS\",\n    \"COMPUTE\",\n    \"CONDITION_SATISFIED\",\n    \"CONFIGURATION_UNSUPPORTED\",\n    \"CONNECTING\",\n    \"CONSTANT_ALPHA\",\n    \"CONSTANT_COLOR\",\n    \"CONSTRAINT_ERR\",\n    \"CONTEXT_LOST_WEBGL\",\n    \"CONTROL_MASK\",\n    \"COPY_DST\",\n    \"COPY_READ_BUFFER\",\n    \"COPY_READ_BUFFER_BINDING\",\n    \"COPY_SRC\",\n    \"COPY_WRITE_BUFFER\",\n    \"COPY_WRITE_BUFFER_BINDING\",\n    \"COUNTER_STYLE_RULE\",\n    \"CSS\",\n    \"CSS2Properties\",\n    \"CSSAnimation\",\n    \"CSSCharsetRule\",\n    \"CSSConditionRule\",\n    \"CSSCounterStyleRule\",\n    \"CSSFontFaceRule\",\n    \"CSSFontFeatureValuesRule\",\n    \"CSSGroupingRule\",\n    \"CSSImageValue\",\n    \"CSSImportRule\",\n    \"CSSKeyframeRule\",\n    \"CSSKeyframesRule\",\n    \"CSSKeywordValue\",\n    \"CSSMathInvert\",\n    \"CSSMathMax\",\n    \"CSSMathMin\",\n    \"CSSMathNegate\",\n    \"CSSMathProduct\",\n    \"CSSMathSum\",\n    \"CSSMathValue\",\n    \"CSSMatrixComponent\",\n    \"CSSMediaRule\",\n    \"CSSMozDocumentRule\",\n    \"CSSNameSpaceRule\",\n    \"CSSNamespaceRule\",\n    \"CSSNumericArray\",\n    \"CSSNumericValue\",\n    \"CSSPageRule\",\n    \"CSSPerspective\",\n    \"CSSPositionValue\",\n    \"CSSPrimitiveValue\",\n    \"CSSRotate\",\n    \"CSSRule\",\n    \"CSSRuleList\",\n    \"CSSScale\",\n    \"CSSSkew\",\n    \"CSSSkewX\",\n    \"CSSSkewY\",\n    \"CSSStyleDeclaration\",\n    \"CSSStyleRule\",\n    \"CSSStyleSheet\",\n    \"CSSStyleValue\",\n    \"CSSSupportsRule\",\n    \"CSSTransformComponent\",\n    \"CSSTransformValue\",\n    \"CSSTransition\",\n    \"CSSTranslate\",\n    \"CSSUnitValue\",\n    \"CSSUnknownRule\",\n    \"CSSUnparsedValue\",\n    \"CSSValue\",\n    \"CSSValueList\",\n    \"CSSVariableReferenceValue\",\n    \"CSSVariablesDeclaration\",\n    \"CSSVariablesRule\",\n    \"CSSViewportRule\",\n    \"CSS_ATTR\",\n    \"CSS_CM\",\n    \"CSS_COUNTER\",\n    \"CSS_CUSTOM\",\n    \"CSS_DEG\",\n    \"CSS_DIMENSION\",\n    \"CSS_EMS\",\n    \"CSS_EXS\",\n    \"CSS_FILTER_BLUR\",\n    \"CSS_FILTER_BRIGHTNESS\",\n    \"CSS_FILTER_CONTRAST\",\n    \"CSS_FILTER_CUSTOM\",\n    \"CSS_FILTER_DROP_SHADOW\",\n    \"CSS_FILTER_GRAYSCALE\",\n    \"CSS_FILTER_HUE_ROTATE\",\n    \"CSS_FILTER_INVERT\",\n    \"CSS_FILTER_OPACITY\",\n    \"CSS_FILTER_REFERENCE\",\n    \"CSS_FILTER_SATURATE\",\n    \"CSS_FILTER_SEPIA\",\n    \"CSS_GRAD\",\n    \"CSS_HZ\",\n    \"CSS_IDENT\",\n    \"CSS_IN\",\n    \"CSS_INHERIT\",\n    \"CSS_KHZ\",\n    \"CSS_MATRIX\",\n    \"CSS_MATRIX3D\",\n    \"CSS_MM\",\n    \"CSS_MS\",\n    \"CSS_NUMBER\",\n    \"CSS_PC\",\n    \"CSS_PERCENTAGE\",\n    \"CSS_PERSPECTIVE\",\n    \"CSS_PRIMITIVE_VALUE\",\n    \"CSS_PT\",\n    \"CSS_PX\",\n    \"CSS_RAD\",\n    \"CSS_RECT\",\n    \"CSS_RGBCOLOR\",\n    \"CSS_ROTATE\",\n    \"CSS_ROTATE3D\",\n    \"CSS_ROTATEX\",\n    \"CSS_ROTATEY\",\n    \"CSS_ROTATEZ\",\n    \"CSS_S\",\n    \"CSS_SCALE\",\n    \"CSS_SCALE3D\",\n    \"CSS_SCALEX\",\n    \"CSS_SCALEY\",\n    \"CSS_SCALEZ\",\n    \"CSS_SKEW\",\n    \"CSS_SKEWX\",\n    \"CSS_SKEWY\",\n    \"CSS_STRING\",\n    \"CSS_TRANSLATE\",\n    \"CSS_TRANSLATE3D\",\n    \"CSS_TRANSLATEX\",\n    \"CSS_TRANSLATEY\",\n    \"CSS_TRANSLATEZ\",\n    \"CSS_UNKNOWN\",\n    \"CSS_URI\",\n    \"CSS_VALUE_LIST\",\n    \"CSS_VH\",\n    \"CSS_VMAX\",\n    \"CSS_VMIN\",\n    \"CSS_VW\",\n    \"CULL_FACE\",\n    \"CULL_FACE_MODE\",\n    \"CURRENT_PROGRAM\",\n    \"CURRENT_QUERY\",\n    \"CURRENT_VERTEX_ATTRIB\",\n    \"CUSTOM\",\n    \"CW\",\n    \"Cache\",\n    \"CacheStorage\",\n    \"CanvasCaptureMediaStream\",\n    \"CanvasCaptureMediaStreamTrack\",\n    \"CanvasGradient\",\n    \"CanvasPattern\",\n    \"CanvasRenderingContext2D\",\n    \"CaretPosition\",\n    \"ChannelMergerNode\",\n    \"ChannelSplitterNode\",\n    \"CharacterData\",\n    \"ClientRect\",\n    \"ClientRectList\",\n    \"Clipboard\",\n    \"ClipboardEvent\",\n    \"ClipboardItem\",\n    \"CloseEvent\",\n    \"Collator\",\n    \"CommandEvent\",\n    \"Comment\",\n    \"CompileError\",\n    \"CompositionEvent\",\n    \"CompressionStream\",\n    \"Console\",\n    \"ConstantSourceNode\",\n    \"Controllers\",\n    \"ConvolverNode\",\n    \"CountQueuingStrategy\",\n    \"Counter\",\n    \"Credential\",\n    \"CredentialsContainer\",\n    \"Crypto\",\n    \"CryptoKey\",\n    \"CustomElementRegistry\",\n    \"CustomEvent\",\n    \"DATABASE_ERR\",\n    \"DATA_CLONE_ERR\",\n    \"DATA_ERR\",\n    \"DBLCLICK\",\n    \"DECR\",\n    \"DECR_WRAP\",\n    \"DELETE_STATUS\",\n    \"DEPTH\",\n    \"DEPTH24_STENCIL8\",\n    \"DEPTH32F_STENCIL8\",\n    \"DEPTH_ATTACHMENT\",\n    \"DEPTH_BITS\",\n    \"DEPTH_BUFFER_BIT\",\n    \"DEPTH_CLEAR_VALUE\",\n    \"DEPTH_COMPONENT\",\n    \"DEPTH_COMPONENT16\",\n    \"DEPTH_COMPONENT24\",\n    \"DEPTH_COMPONENT32F\",\n    \"DEPTH_FUNC\",\n    \"DEPTH_RANGE\",\n    \"DEPTH_STENCIL\",\n    \"DEPTH_STENCIL_ATTACHMENT\",\n    \"DEPTH_TEST\",\n    \"DEPTH_WRITEMASK\",\n    \"DEVICE_INELIGIBLE\",\n    \"DIRECTION_DOWN\",\n    \"DIRECTION_LEFT\",\n    \"DIRECTION_RIGHT\",\n    \"DIRECTION_UP\",\n    \"DISABLED\",\n    \"DISPATCH_REQUEST_ERR\",\n    \"DITHER\",\n    \"DOCUMENT_FRAGMENT_NODE\",\n    \"DOCUMENT_NODE\",\n    \"DOCUMENT_POSITION_CONTAINED_BY\",\n    \"DOCUMENT_POSITION_CONTAINS\",\n    \"DOCUMENT_POSITION_DISCONNECTED\",\n    \"DOCUMENT_POSITION_FOLLOWING\",\n    \"DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC\",\n    \"DOCUMENT_POSITION_PRECEDING\",\n    \"DOCUMENT_TYPE_NODE\",\n    \"DOMCursor\",\n    \"DOMError\",\n    \"DOMException\",\n    \"DOMImplementation\",\n    \"DOMImplementationLS\",\n    \"DOMMatrix\",\n    \"DOMMatrixReadOnly\",\n    \"DOMParser\",\n    \"DOMPoint\",\n    \"DOMPointReadOnly\",\n    \"DOMQuad\",\n    \"DOMRect\",\n    \"DOMRectList\",\n    \"DOMRectReadOnly\",\n    \"DOMRequest\",\n    \"DOMSTRING_SIZE_ERR\",\n    \"DOMSettableTokenList\",\n    \"DOMStringList\",\n    \"DOMStringMap\",\n    \"DOMTokenList\",\n    \"DOMTransactionEvent\",\n    \"DOM_DELTA_LINE\",\n    \"DOM_DELTA_PAGE\",\n    \"DOM_DELTA_PIXEL\",\n    \"DOM_INPUT_METHOD_DROP\",\n    \"DOM_INPUT_METHOD_HANDWRITING\",\n    \"DOM_INPUT_METHOD_IME\",\n    \"DOM_INPUT_METHOD_KEYBOARD\",\n    \"DOM_INPUT_METHOD_MULTIMODAL\",\n    \"DOM_INPUT_METHOD_OPTION\",\n    \"DOM_INPUT_METHOD_PASTE\",\n    \"DOM_INPUT_METHOD_SCRIPT\",\n    \"DOM_INPUT_METHOD_UNKNOWN\",\n    \"DOM_INPUT_METHOD_VOICE\",\n    \"DOM_KEY_LOCATION_JOYSTICK\",\n    \"DOM_KEY_LOCATION_LEFT\",\n    \"DOM_KEY_LOCATION_MOBILE\",\n    \"DOM_KEY_LOCATION_NUMPAD\",\n    \"DOM_KEY_LOCATION_RIGHT\",\n    \"DOM_KEY_LOCATION_STANDARD\",\n    \"DOM_VK_0\",\n    \"DOM_VK_1\",\n    \"DOM_VK_2\",\n    \"DOM_VK_3\",\n    \"DOM_VK_4\",\n    \"DOM_VK_5\",\n    \"DOM_VK_6\",\n    \"DOM_VK_7\",\n    \"DOM_VK_8\",\n    \"DOM_VK_9\",\n    \"DOM_VK_A\",\n    \"DOM_VK_ACCEPT\",\n    \"DOM_VK_ADD\",\n    \"DOM_VK_ALT\",\n    \"DOM_VK_ALTGR\",\n    \"DOM_VK_AMPERSAND\",\n    \"DOM_VK_ASTERISK\",\n    \"DOM_VK_AT\",\n    \"DOM_VK_ATTN\",\n    \"DOM_VK_B\",\n    \"DOM_VK_BACKSPACE\",\n    \"DOM_VK_BACK_QUOTE\",\n    \"DOM_VK_BACK_SLASH\",\n    \"DOM_VK_BACK_SPACE\",\n    \"DOM_VK_C\",\n    \"DOM_VK_CANCEL\",\n    \"DOM_VK_CAPS_LOCK\",\n    \"DOM_VK_CIRCUMFLEX\",\n    \"DOM_VK_CLEAR\",\n    \"DOM_VK_CLOSE_BRACKET\",\n    \"DOM_VK_CLOSE_CURLY_BRACKET\",\n    \"DOM_VK_CLOSE_PAREN\",\n    \"DOM_VK_COLON\",\n    \"DOM_VK_COMMA\",\n    \"DOM_VK_CONTEXT_MENU\",\n    \"DOM_VK_CONTROL\",\n    \"DOM_VK_CONVERT\",\n    \"DOM_VK_CRSEL\",\n    \"DOM_VK_CTRL\",\n    \"DOM_VK_D\",\n    \"DOM_VK_DECIMAL\",\n    \"DOM_VK_DELETE\",\n    \"DOM_VK_DIVIDE\",\n    \"DOM_VK_DOLLAR\",\n    \"DOM_VK_DOUBLE_QUOTE\",\n    \"DOM_VK_DOWN\",\n    \"DOM_VK_E\",\n    \"DOM_VK_EISU\",\n    \"DOM_VK_END\",\n    \"DOM_VK_ENTER\",\n    \"DOM_VK_EQUALS\",\n    \"DOM_VK_EREOF\",\n    \"DOM_VK_ESCAPE\",\n    \"DOM_VK_EXCLAMATION\",\n    \"DOM_VK_EXECUTE\",\n    \"DOM_VK_EXSEL\",\n    \"DOM_VK_F\",\n    \"DOM_VK_F1\",\n    \"DOM_VK_F10\",\n    \"DOM_VK_F11\",\n    \"DOM_VK_F12\",\n    \"DOM_VK_F13\",\n    \"DOM_VK_F14\",\n    \"DOM_VK_F15\",\n    \"DOM_VK_F16\",\n    \"DOM_VK_F17\",\n    \"DOM_VK_F18\",\n    \"DOM_VK_F19\",\n    \"DOM_VK_F2\",\n    \"DOM_VK_F20\",\n    \"DOM_VK_F21\",\n    \"DOM_VK_F22\",\n    \"DOM_VK_F23\",\n    \"DOM_VK_F24\",\n    \"DOM_VK_F25\",\n    \"DOM_VK_F26\",\n    \"DOM_VK_F27\",\n    \"DOM_VK_F28\",\n    \"DOM_VK_F29\",\n    \"DOM_VK_F3\",\n    \"DOM_VK_F30\",\n    \"DOM_VK_F31\",\n    \"DOM_VK_F32\",\n    \"DOM_VK_F33\",\n    \"DOM_VK_F34\",\n    \"DOM_VK_F35\",\n    \"DOM_VK_F36\",\n    \"DOM_VK_F4\",\n    \"DOM_VK_F5\",\n    \"DOM_VK_F6\",\n    \"DOM_VK_F7\",\n    \"DOM_VK_F8\",\n    \"DOM_VK_F9\",\n    \"DOM_VK_FINAL\",\n    \"DOM_VK_FRONT\",\n    \"DOM_VK_G\",\n    \"DOM_VK_GREATER_THAN\",\n    \"DOM_VK_H\",\n    \"DOM_VK_HANGUL\",\n    \"DOM_VK_HANJA\",\n    \"DOM_VK_HASH\",\n    \"DOM_VK_HELP\",\n    \"DOM_VK_HK_TOGGLE\",\n    \"DOM_VK_HOME\",\n    \"DOM_VK_HYPHEN_MINUS\",\n    \"DOM_VK_I\",\n    \"DOM_VK_INSERT\",\n    \"DOM_VK_J\",\n    \"DOM_VK_JUNJA\",\n    \"DOM_VK_K\",\n    \"DOM_VK_KANA\",\n    \"DOM_VK_KANJI\",\n    \"DOM_VK_L\",\n    \"DOM_VK_LEFT\",\n    \"DOM_VK_LEFT_TAB\",\n    \"DOM_VK_LESS_THAN\",\n    \"DOM_VK_M\",\n    \"DOM_VK_META\",\n    \"DOM_VK_MODECHANGE\",\n    \"DOM_VK_MULTIPLY\",\n    \"DOM_VK_N\",\n    \"DOM_VK_NONCONVERT\",\n    \"DOM_VK_NUMPAD0\",\n    \"DOM_VK_NUMPAD1\",\n    \"DOM_VK_NUMPAD2\",\n    \"DOM_VK_NUMPAD3\",\n    \"DOM_VK_NUMPAD4\",\n    \"DOM_VK_NUMPAD5\",\n    \"DOM_VK_NUMPAD6\",\n    \"DOM_VK_NUMPAD7\",\n    \"DOM_VK_NUMPAD8\",\n    \"DOM_VK_NUMPAD9\",\n    \"DOM_VK_NUM_LOCK\",\n    \"DOM_VK_O\",\n    \"DOM_VK_OEM_1\",\n    \"DOM_VK_OEM_102\",\n    \"DOM_VK_OEM_2\",\n    \"DOM_VK_OEM_3\",\n    \"DOM_VK_OEM_4\",\n    \"DOM_VK_OEM_5\",\n    \"DOM_VK_OEM_6\",\n    \"DOM_VK_OEM_7\",\n    \"DOM_VK_OEM_8\",\n    \"DOM_VK_OEM_COMMA\",\n    \"DOM_VK_OEM_MINUS\",\n    \"DOM_VK_OEM_PERIOD\",\n    \"DOM_VK_OEM_PLUS\",\n    \"DOM_VK_OPEN_BRACKET\",\n    \"DOM_VK_OPEN_CURLY_BRACKET\",\n    \"DOM_VK_OPEN_PAREN\",\n    \"DOM_VK_P\",\n    \"DOM_VK_PA1\",\n    \"DOM_VK_PAGEDOWN\",\n    \"DOM_VK_PAGEUP\",\n    \"DOM_VK_PAGE_DOWN\",\n    \"DOM_VK_PAGE_UP\",\n    \"DOM_VK_PAUSE\",\n    \"DOM_VK_PERCENT\",\n    \"DOM_VK_PERIOD\",\n    \"DOM_VK_PIPE\",\n    \"DOM_VK_PLAY\",\n    \"DOM_VK_PLUS\",\n    \"DOM_VK_PRINT\",\n    \"DOM_VK_PRINTSCREEN\",\n    \"DOM_VK_PROCESSKEY\",\n    \"DOM_VK_PROPERITES\",\n    \"DOM_VK_Q\",\n    \"DOM_VK_QUESTION_MARK\",\n    \"DOM_VK_QUOTE\",\n    \"DOM_VK_R\",\n    \"DOM_VK_REDO\",\n    \"DOM_VK_RETURN\",\n    \"DOM_VK_RIGHT\",\n    \"DOM_VK_S\",\n    \"DOM_VK_SCROLL_LOCK\",\n    \"DOM_VK_SELECT\",\n    \"DOM_VK_SEMICOLON\",\n    \"DOM_VK_SEPARATOR\",\n    \"DOM_VK_SHIFT\",\n    \"DOM_VK_SLASH\",\n    \"DOM_VK_SLEEP\",\n    \"DOM_VK_SPACE\",\n    \"DOM_VK_SUBTRACT\",\n    \"DOM_VK_T\",\n    \"DOM_VK_TAB\",\n    \"DOM_VK_TILDE\",\n    \"DOM_VK_U\",\n    \"DOM_VK_UNDERSCORE\",\n    \"DOM_VK_UNDO\",\n    \"DOM_VK_UNICODE\",\n    \"DOM_VK_UP\",\n    \"DOM_VK_V\",\n    \"DOM_VK_VOLUME_DOWN\",\n    \"DOM_VK_VOLUME_MUTE\",\n    \"DOM_VK_VOLUME_UP\",\n    \"DOM_VK_W\",\n    \"DOM_VK_WIN\",\n    \"DOM_VK_WINDOW\",\n    \"DOM_VK_WIN_ICO_00\",\n    \"DOM_VK_WIN_ICO_CLEAR\",\n    \"DOM_VK_WIN_ICO_HELP\",\n    \"DOM_VK_WIN_OEM_ATTN\",\n    \"DOM_VK_WIN_OEM_AUTO\",\n    \"DOM_VK_WIN_OEM_BACKTAB\",\n    \"DOM_VK_WIN_OEM_CLEAR\",\n    \"DOM_VK_WIN_OEM_COPY\",\n    \"DOM_VK_WIN_OEM_CUSEL\",\n    \"DOM_VK_WIN_OEM_ENLW\",\n    \"DOM_VK_WIN_OEM_FINISH\",\n    \"DOM_VK_WIN_OEM_FJ_JISHO\",\n    \"DOM_VK_WIN_OEM_FJ_LOYA\",\n    \"DOM_VK_WIN_OEM_FJ_MASSHOU\",\n    \"DOM_VK_WIN_OEM_FJ_ROYA\",\n    \"DOM_VK_WIN_OEM_FJ_TOUROKU\",\n    \"DOM_VK_WIN_OEM_JUMP\",\n    \"DOM_VK_WIN_OEM_PA1\",\n    \"DOM_VK_WIN_OEM_PA2\",\n    \"DOM_VK_WIN_OEM_PA3\",\n    \"DOM_VK_WIN_OEM_RESET\",\n    \"DOM_VK_WIN_OEM_WSCTRL\",\n    \"DOM_VK_X\",\n    \"DOM_VK_XF86XK_ADD_FAVORITE\",\n    \"DOM_VK_XF86XK_APPLICATION_LEFT\",\n    \"DOM_VK_XF86XK_APPLICATION_RIGHT\",\n    \"DOM_VK_XF86XK_AUDIO_CYCLE_TRACK\",\n    \"DOM_VK_XF86XK_AUDIO_FORWARD\",\n    \"DOM_VK_XF86XK_AUDIO_LOWER_VOLUME\",\n    \"DOM_VK_XF86XK_AUDIO_MEDIA\",\n    \"DOM_VK_XF86XK_AUDIO_MUTE\",\n    \"DOM_VK_XF86XK_AUDIO_NEXT\",\n    \"DOM_VK_XF86XK_AUDIO_PAUSE\",\n    \"DOM_VK_XF86XK_AUDIO_PLAY\",\n    \"DOM_VK_XF86XK_AUDIO_PREV\",\n    \"DOM_VK_XF86XK_AUDIO_RAISE_VOLUME\",\n    \"DOM_VK_XF86XK_AUDIO_RANDOM_PLAY\",\n    \"DOM_VK_XF86XK_AUDIO_RECORD\",\n    \"DOM_VK_XF86XK_AUDIO_REPEAT\",\n    \"DOM_VK_XF86XK_AUDIO_REWIND\",\n    \"DOM_VK_XF86XK_AUDIO_STOP\",\n    \"DOM_VK_XF86XK_AWAY\",\n    \"DOM_VK_XF86XK_BACK\",\n    \"DOM_VK_XF86XK_BACK_FORWARD\",\n    \"DOM_VK_XF86XK_BATTERY\",\n    \"DOM_VK_XF86XK_BLUE\",\n    \"DOM_VK_XF86XK_BLUETOOTH\",\n    \"DOM_VK_XF86XK_BOOK\",\n    \"DOM_VK_XF86XK_BRIGHTNESS_ADJUST\",\n    \"DOM_VK_XF86XK_CALCULATOR\",\n    \"DOM_VK_XF86XK_CALENDAR\",\n    \"DOM_VK_XF86XK_CD\",\n    \"DOM_VK_XF86XK_CLOSE\",\n    \"DOM_VK_XF86XK_COMMUNITY\",\n    \"DOM_VK_XF86XK_CONTRAST_ADJUST\",\n    \"DOM_VK_XF86XK_COPY\",\n    \"DOM_VK_XF86XK_CUT\",\n    \"DOM_VK_XF86XK_CYCLE_ANGLE\",\n    \"DOM_VK_XF86XK_DISPLAY\",\n    \"DOM_VK_XF86XK_DOCUMENTS\",\n    \"DOM_VK_XF86XK_DOS\",\n    \"DOM_VK_XF86XK_EJECT\",\n    \"DOM_VK_XF86XK_EXCEL\",\n    \"DOM_VK_XF86XK_EXPLORER\",\n    \"DOM_VK_XF86XK_FAVORITES\",\n    \"DOM_VK_XF86XK_FINANCE\",\n    \"DOM_VK_XF86XK_FORWARD\",\n    \"DOM_VK_XF86XK_FRAME_BACK\",\n    \"DOM_VK_XF86XK_FRAME_FORWARD\",\n    \"DOM_VK_XF86XK_GAME\",\n    \"DOM_VK_XF86XK_GO\",\n    \"DOM_VK_XF86XK_GREEN\",\n    \"DOM_VK_XF86XK_HIBERNATE\",\n    \"DOM_VK_XF86XK_HISTORY\",\n    \"DOM_VK_XF86XK_HOME_PAGE\",\n    \"DOM_VK_XF86XK_HOT_LINKS\",\n    \"DOM_VK_XF86XK_I_TOUCH\",\n    \"DOM_VK_XF86XK_KBD_BRIGHTNESS_DOWN\",\n    \"DOM_VK_XF86XK_KBD_BRIGHTNESS_UP\",\n    \"DOM_VK_XF86XK_KBD_LIGHT_ON_OFF\",\n    \"DOM_VK_XF86XK_LAUNCH0\",\n    \"DOM_VK_XF86XK_LAUNCH1\",\n    \"DOM_VK_XF86XK_LAUNCH2\",\n    \"DOM_VK_XF86XK_LAUNCH3\",\n    \"DOM_VK_XF86XK_LAUNCH4\",\n    \"DOM_VK_XF86XK_LAUNCH5\",\n    \"DOM_VK_XF86XK_LAUNCH6\",\n    \"DOM_VK_XF86XK_LAUNCH7\",\n    \"DOM_VK_XF86XK_LAUNCH8\",\n    \"DOM_VK_XF86XK_LAUNCH9\",\n    \"DOM_VK_XF86XK_LAUNCH_A\",\n    \"DOM_VK_XF86XK_LAUNCH_B\",\n    \"DOM_VK_XF86XK_LAUNCH_C\",\n    \"DOM_VK_XF86XK_LAUNCH_D\",\n    \"DOM_VK_XF86XK_LAUNCH_E\",\n    \"DOM_VK_XF86XK_LAUNCH_F\",\n    \"DOM_VK_XF86XK_LIGHT_BULB\",\n    \"DOM_VK_XF86XK_LOG_OFF\",\n    \"DOM_VK_XF86XK_MAIL\",\n    \"DOM_VK_XF86XK_MAIL_FORWARD\",\n    \"DOM_VK_XF86XK_MARKET\",\n    \"DOM_VK_XF86XK_MEETING\",\n    \"DOM_VK_XF86XK_MEMO\",\n    \"DOM_VK_XF86XK_MENU_KB\",\n    \"DOM_VK_XF86XK_MENU_PB\",\n    \"DOM_VK_XF86XK_MESSENGER\",\n    \"DOM_VK_XF86XK_MON_BRIGHTNESS_DOWN\",\n    \"DOM_VK_XF86XK_MON_BRIGHTNESS_UP\",\n    \"DOM_VK_XF86XK_MUSIC\",\n    \"DOM_VK_XF86XK_MY_COMPUTER\",\n    \"DOM_VK_XF86XK_MY_SITES\",\n    \"DOM_VK_XF86XK_NEW\",\n    \"DOM_VK_XF86XK_NEWS\",\n    \"DOM_VK_XF86XK_OFFICE_HOME\",\n    \"DOM_VK_XF86XK_OPEN\",\n    \"DOM_VK_XF86XK_OPEN_URL\",\n    \"DOM_VK_XF86XK_OPTION\",\n    \"DOM_VK_XF86XK_PASTE\",\n    \"DOM_VK_XF86XK_PHONE\",\n    \"DOM_VK_XF86XK_PICTURES\",\n    \"DOM_VK_XF86XK_POWER_DOWN\",\n    \"DOM_VK_XF86XK_POWER_OFF\",\n    \"DOM_VK_XF86XK_RED\",\n    \"DOM_VK_XF86XK_REFRESH\",\n    \"DOM_VK_XF86XK_RELOAD\",\n    \"DOM_VK_XF86XK_REPLY\",\n    \"DOM_VK_XF86XK_ROCKER_DOWN\",\n    \"DOM_VK_XF86XK_ROCKER_ENTER\",\n    \"DOM_VK_XF86XK_ROCKER_UP\",\n    \"DOM_VK_XF86XK_ROTATE_WINDOWS\",\n    \"DOM_VK_XF86XK_ROTATION_KB\",\n    \"DOM_VK_XF86XK_ROTATION_PB\",\n    \"DOM_VK_XF86XK_SAVE\",\n    \"DOM_VK_XF86XK_SCREEN_SAVER\",\n    \"DOM_VK_XF86XK_SCROLL_CLICK\",\n    \"DOM_VK_XF86XK_SCROLL_DOWN\",\n    \"DOM_VK_XF86XK_SCROLL_UP\",\n    \"DOM_VK_XF86XK_SEARCH\",\n    \"DOM_VK_XF86XK_SEND\",\n    \"DOM_VK_XF86XK_SHOP\",\n    \"DOM_VK_XF86XK_SPELL\",\n    \"DOM_VK_XF86XK_SPLIT_SCREEN\",\n    \"DOM_VK_XF86XK_STANDBY\",\n    \"DOM_VK_XF86XK_START\",\n    \"DOM_VK_XF86XK_STOP\",\n    \"DOM_VK_XF86XK_SUBTITLE\",\n    \"DOM_VK_XF86XK_SUPPORT\",\n    \"DOM_VK_XF86XK_SUSPEND\",\n    \"DOM_VK_XF86XK_TASK_PANE\",\n    \"DOM_VK_XF86XK_TERMINAL\",\n    \"DOM_VK_XF86XK_TIME\",\n    \"DOM_VK_XF86XK_TOOLS\",\n    \"DOM_VK_XF86XK_TOP_MENU\",\n    \"DOM_VK_XF86XK_TO_DO_LIST\",\n    \"DOM_VK_XF86XK_TRAVEL\",\n    \"DOM_VK_XF86XK_USER1KB\",\n    \"DOM_VK_XF86XK_USER2KB\",\n    \"DOM_VK_XF86XK_USER_PB\",\n    \"DOM_VK_XF86XK_UWB\",\n    \"DOM_VK_XF86XK_VENDOR_HOME\",\n    \"DOM_VK_XF86XK_VIDEO\",\n    \"DOM_VK_XF86XK_VIEW\",\n    \"DOM_VK_XF86XK_WAKE_UP\",\n    \"DOM_VK_XF86XK_WEB_CAM\",\n    \"DOM_VK_XF86XK_WHEEL_BUTTON\",\n    \"DOM_VK_XF86XK_WLAN\",\n    \"DOM_VK_XF86XK_WORD\",\n    \"DOM_VK_XF86XK_WWW\",\n    \"DOM_VK_XF86XK_XFER\",\n    \"DOM_VK_XF86XK_YELLOW\",\n    \"DOM_VK_XF86XK_ZOOM_IN\",\n    \"DOM_VK_XF86XK_ZOOM_OUT\",\n    \"DOM_VK_Y\",\n    \"DOM_VK_Z\",\n    \"DOM_VK_ZOOM\",\n    \"DONE\",\n    \"DONT_CARE\",\n    \"DOWNLOADING\",\n    \"DRAGDROP\",\n    \"DRAW_BUFFER0\",\n    \"DRAW_BUFFER1\",\n    \"DRAW_BUFFER10\",\n    \"DRAW_BUFFER11\",\n    \"DRAW_BUFFER12\",\n    \"DRAW_BUFFER13\",\n    \"DRAW_BUFFER14\",\n    \"DRAW_BUFFER15\",\n    \"DRAW_BUFFER2\",\n    \"DRAW_BUFFER3\",\n    \"DRAW_BUFFER4\",\n    \"DRAW_BUFFER5\",\n    \"DRAW_BUFFER6\",\n    \"DRAW_BUFFER7\",\n    \"DRAW_BUFFER8\",\n    \"DRAW_BUFFER9\",\n    \"DRAW_FRAMEBUFFER\",\n    \"DRAW_FRAMEBUFFER_BINDING\",\n    \"DST_ALPHA\",\n    \"DST_COLOR\",\n    \"DYNAMIC_COPY\",\n    \"DYNAMIC_DRAW\",\n    \"DYNAMIC_READ\",\n    \"DataChannel\",\n    \"DataTransfer\",\n    \"DataTransferItem\",\n    \"DataTransferItemList\",\n    \"DataView\",\n    \"Date\",\n    \"DateTimeFormat\",\n    \"DecompressionStream\",\n    \"DelayNode\",\n    \"DeprecationReportBody\",\n    \"DesktopNotification\",\n    \"DesktopNotificationCenter\",\n    \"DeviceLightEvent\",\n    \"DeviceMotionEvent\",\n    \"DeviceMotionEventAcceleration\",\n    \"DeviceMotionEventRotationRate\",\n    \"DeviceOrientationEvent\",\n    \"DeviceProximityEvent\",\n    \"DeviceStorage\",\n    \"DeviceStorageChangeEvent\",\n    \"Directory\",\n    \"DisplayNames\",\n    \"Document\",\n    \"DocumentFragment\",\n    \"DocumentTimeline\",\n    \"DocumentType\",\n    \"DragEvent\",\n    \"DynamicsCompressorNode\",\n    \"E\",\n    \"ELEMENT_ARRAY_BUFFER\",\n    \"ELEMENT_ARRAY_BUFFER_BINDING\",\n    \"ELEMENT_NODE\",\n    \"EMPTY\",\n    \"ENCODING_ERR\",\n    \"ENDED\",\n    \"END_TO_END\",\n    \"END_TO_START\",\n    \"ENTITY_NODE\",\n    \"ENTITY_REFERENCE_NODE\",\n    \"EPSILON\",\n    \"EQUAL\",\n    \"EQUALPOWER\",\n    \"ERROR\",\n    \"EXPONENTIAL_DISTANCE\",\n    \"Element\",\n    \"ElementInternals\",\n    \"ElementQuery\",\n    \"EnterPictureInPictureEvent\",\n    \"Entity\",\n    \"EntityReference\",\n    \"Error\",\n    \"ErrorEvent\",\n    \"EvalError\",\n    \"Event\",\n    \"EventException\",\n    \"EventSource\",\n    \"EventTarget\",\n    \"External\",\n    \"FASTEST\",\n    \"FIDOSDK\",\n    \"FILTER_ACCEPT\",\n    \"FILTER_INTERRUPT\",\n    \"FILTER_REJECT\",\n    \"FILTER_SKIP\",\n    \"FINISHED_STATE\",\n    \"FIRST_ORDERED_NODE_TYPE\",\n    \"FLOAT\",\n    \"FLOAT_32_UNSIGNED_INT_24_8_REV\",\n    \"FLOAT_MAT2\",\n    \"FLOAT_MAT2x3\",\n    \"FLOAT_MAT2x4\",\n    \"FLOAT_MAT3\",\n    \"FLOAT_MAT3x2\",\n    \"FLOAT_MAT3x4\",\n    \"FLOAT_MAT4\",\n    \"FLOAT_MAT4x2\",\n    \"FLOAT_MAT4x3\",\n    \"FLOAT_VEC2\",\n    \"FLOAT_VEC3\",\n    \"FLOAT_VEC4\",\n    \"FOCUS\",\n    \"FONT_FACE_RULE\",\n    \"FONT_FEATURE_VALUES_RULE\",\n    \"FRAGMENT\",\n    \"FRAGMENT_SHADER\",\n    \"FRAGMENT_SHADER_DERIVATIVE_HINT\",\n    \"FRAGMENT_SHADER_DERIVATIVE_HINT_OES\",\n    \"FRAMEBUFFER\",\n    \"FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE\",\n    \"FRAMEBUFFER_ATTACHMENT_BLUE_SIZE\",\n    \"FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING\",\n    \"FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE\",\n    \"FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE\",\n    \"FRAMEBUFFER_ATTACHMENT_GREEN_SIZE\",\n    \"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME\",\n    \"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE\",\n    \"FRAMEBUFFER_ATTACHMENT_RED_SIZE\",\n    \"FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE\",\n    \"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE\",\n    \"FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER\",\n    \"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL\",\n    \"FRAMEBUFFER_BINDING\",\n    \"FRAMEBUFFER_COMPLETE\",\n    \"FRAMEBUFFER_DEFAULT\",\n    \"FRAMEBUFFER_INCOMPLETE_ATTACHMENT\",\n    \"FRAMEBUFFER_INCOMPLETE_DIMENSIONS\",\n    \"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT\",\n    \"FRAMEBUFFER_INCOMPLETE_MULTISAMPLE\",\n    \"FRAMEBUFFER_UNSUPPORTED\",\n    \"FRONT\",\n    \"FRONT_AND_BACK\",\n    \"FRONT_FACE\",\n    \"FUNC_ADD\",\n    \"FUNC_REVERSE_SUBTRACT\",\n    \"FUNC_SUBTRACT\",\n    \"FeaturePolicy\",\n    \"FeaturePolicyViolationReportBody\",\n    \"FederatedCredential\",\n    \"Feed\",\n    \"FeedEntry\",\n    \"File\",\n    \"FileError\",\n    \"FileList\",\n    \"FileReader\",\n    \"FileSystem\",\n    \"FileSystemDirectoryEntry\",\n    \"FileSystemDirectoryReader\",\n    \"FileSystemEntry\",\n    \"FileSystemFileEntry\",\n    \"FinalizationRegistry\",\n    \"FindInPage\",\n    \"Float32Array\",\n    \"Float64Array\",\n    \"FocusEvent\",\n    \"FontFace\",\n    \"FontFaceSet\",\n    \"FontFaceSetLoadEvent\",\n    \"FormData\",\n    \"FormDataEvent\",\n    \"FragmentDirective\",\n    \"Function\",\n    \"GENERATE_MIPMAP_HINT\",\n    \"GEQUAL\",\n    \"GREATER\",\n    \"GREEN\",\n    \"GREEN_BITS\",\n    \"GainNode\",\n    \"Gamepad\",\n    \"GamepadAxisMoveEvent\",\n    \"GamepadButton\",\n    \"GamepadButtonEvent\",\n    \"GamepadEvent\",\n    \"GamepadHapticActuator\",\n    \"GamepadPose\",\n    \"Geolocation\",\n    \"GeolocationCoordinates\",\n    \"GeolocationPosition\",\n    \"GeolocationPositionError\",\n    \"GestureEvent\",\n    \"Global\",\n    \"Gyroscope\",\n    \"HALF_FLOAT\",\n    \"HAVE_CURRENT_DATA\",\n    \"HAVE_ENOUGH_DATA\",\n    \"HAVE_FUTURE_DATA\",\n    \"HAVE_METADATA\",\n    \"HAVE_NOTHING\",\n    \"HEADERS_RECEIVED\",\n    \"HIDDEN\",\n    \"HIERARCHY_REQUEST_ERR\",\n    \"HIGHPASS\",\n    \"HIGHSHELF\",\n    \"HIGH_FLOAT\",\n    \"HIGH_INT\",\n    \"HORIZONTAL\",\n    \"HORIZONTAL_AXIS\",\n    \"HRTF\",\n    \"HTMLAllCollection\",\n    \"HTMLAnchorElement\",\n    \"HTMLAppletElement\",\n    \"HTMLAreaElement\",\n    \"HTMLAudioElement\",\n    \"HTMLBRElement\",\n    \"HTMLBaseElement\",\n    \"HTMLBaseFontElement\",\n    \"HTMLBlockquoteElement\",\n    \"HTMLBodyElement\",\n    \"HTMLButtonElement\",\n    \"HTMLCanvasElement\",\n    \"HTMLCollection\",\n    \"HTMLCommandElement\",\n    \"HTMLContentElement\",\n    \"HTMLDListElement\",\n    \"HTMLDataElement\",\n    \"HTMLDataListElement\",\n    \"HTMLDetailsElement\",\n    \"HTMLDialogElement\",\n    \"HTMLDirectoryElement\",\n    \"HTMLDivElement\",\n    \"HTMLDocument\",\n    \"HTMLElement\",\n    \"HTMLEmbedElement\",\n    \"HTMLFieldSetElement\",\n    \"HTMLFontElement\",\n    \"HTMLFormControlsCollection\",\n    \"HTMLFormElement\",\n    \"HTMLFrameElement\",\n    \"HTMLFrameSetElement\",\n    \"HTMLHRElement\",\n    \"HTMLHeadElement\",\n    \"HTMLHeadingElement\",\n    \"HTMLHtmlElement\",\n    \"HTMLIFrameElement\",\n    \"HTMLImageElement\",\n    \"HTMLInputElement\",\n    \"HTMLIsIndexElement\",\n    \"HTMLKeygenElement\",\n    \"HTMLLIElement\",\n    \"HTMLLabelElement\",\n    \"HTMLLegendElement\",\n    \"HTMLLinkElement\",\n    \"HTMLMapElement\",\n    \"HTMLMarqueeElement\",\n    \"HTMLMediaElement\",\n    \"HTMLMenuElement\",\n    \"HTMLMenuItemElement\",\n    \"HTMLMetaElement\",\n    \"HTMLMeterElement\",\n    \"HTMLModElement\",\n    \"HTMLOListElement\",\n    \"HTMLObjectElement\",\n    \"HTMLOptGroupElement\",\n    \"HTMLOptionElement\",\n    \"HTMLOptionsCollection\",\n    \"HTMLOutputElement\",\n    \"HTMLParagraphElement\",\n    \"HTMLParamElement\",\n    \"HTMLPictureElement\",\n    \"HTMLPreElement\",\n    \"HTMLProgressElement\",\n    \"HTMLPropertiesCollection\",\n    \"HTMLQuoteElement\",\n    \"HTMLScriptElement\",\n    \"HTMLSelectElement\",\n    \"HTMLShadowElement\",\n    \"HTMLSlotElement\",\n    \"HTMLSourceElement\",\n    \"HTMLSpanElement\",\n    \"HTMLStyleElement\",\n    \"HTMLTableCaptionElement\",\n    \"HTMLTableCellElement\",\n    \"HTMLTableColElement\",\n    \"HTMLTableElement\",\n    \"HTMLTableRowElement\",\n    \"HTMLTableSectionElement\",\n    \"HTMLTemplateElement\",\n    \"HTMLTextAreaElement\",\n    \"HTMLTimeElement\",\n    \"HTMLTitleElement\",\n    \"HTMLTrackElement\",\n    \"HTMLUListElement\",\n    \"HTMLUnknownElement\",\n    \"HTMLVideoElement\",\n    \"HashChangeEvent\",\n    \"Headers\",\n    \"History\",\n    \"Hz\",\n    \"ICE_CHECKING\",\n    \"ICE_CLOSED\",\n    \"ICE_COMPLETED\",\n    \"ICE_CONNECTED\",\n    \"ICE_FAILED\",\n    \"ICE_GATHERING\",\n    \"ICE_WAITING\",\n    \"IDBCursor\",\n    \"IDBCursorWithValue\",\n    \"IDBDatabase\",\n    \"IDBDatabaseException\",\n    \"IDBFactory\",\n    \"IDBFileHandle\",\n    \"IDBFileRequest\",\n    \"IDBIndex\",\n    \"IDBKeyRange\",\n    \"IDBMutableFile\",\n    \"IDBObjectStore\",\n    \"IDBOpenDBRequest\",\n    \"IDBRequest\",\n    \"IDBTransaction\",\n    \"IDBVersionChangeEvent\",\n    \"IDLE\",\n    \"IIRFilterNode\",\n    \"IMPLEMENTATION_COLOR_READ_FORMAT\",\n    \"IMPLEMENTATION_COLOR_READ_TYPE\",\n    \"IMPORT_RULE\",\n    \"INCR\",\n    \"INCR_WRAP\",\n    \"INDEX\",\n    \"INDEX_SIZE_ERR\",\n    \"INDIRECT\",\n    \"INT\",\n    \"INTERLEAVED_ATTRIBS\",\n    \"INT_2_10_10_10_REV\",\n    \"INT_SAMPLER_2D\",\n    \"INT_SAMPLER_2D_ARRAY\",\n    \"INT_SAMPLER_3D\",\n    \"INT_SAMPLER_CUBE\",\n    \"INT_VEC2\",\n    \"INT_VEC3\",\n    \"INT_VEC4\",\n    \"INUSE_ATTRIBUTE_ERR\",\n    \"INVALID_ACCESS_ERR\",\n    \"INVALID_CHARACTER_ERR\",\n    \"INVALID_ENUM\",\n    \"INVALID_EXPRESSION_ERR\",\n    \"INVALID_FRAMEBUFFER_OPERATION\",\n    \"INVALID_INDEX\",\n    \"INVALID_MODIFICATION_ERR\",\n    \"INVALID_NODE_TYPE_ERR\",\n    \"INVALID_OPERATION\",\n    \"INVALID_STATE_ERR\",\n    \"INVALID_VALUE\",\n    \"INVERSE_DISTANCE\",\n    \"INVERT\",\n    \"IceCandidate\",\n    \"IdleDeadline\",\n    \"Image\",\n    \"ImageBitmap\",\n    \"ImageBitmapRenderingContext\",\n    \"ImageCapture\",\n    \"ImageData\",\n    \"Infinity\",\n    \"InputDeviceCapabilities\",\n    \"InputDeviceInfo\",\n    \"InputEvent\",\n    \"InputMethodContext\",\n    \"InstallTrigger\",\n    \"InstallTriggerImpl\",\n    \"Instance\",\n    \"Int16Array\",\n    \"Int32Array\",\n    \"Int8Array\",\n    \"Intent\",\n    \"InternalError\",\n    \"IntersectionObserver\",\n    \"IntersectionObserverEntry\",\n    \"Intl\",\n    \"IsSearchProviderInstalled\",\n    \"Iterator\",\n    \"JSON\",\n    \"KEEP\",\n    \"KEYDOWN\",\n    \"KEYFRAMES_RULE\",\n    \"KEYFRAME_RULE\",\n    \"KEYPRESS\",\n    \"KEYUP\",\n    \"KeyEvent\",\n    \"Keyboard\",\n    \"KeyboardEvent\",\n    \"KeyboardLayoutMap\",\n    \"KeyframeEffect\",\n    \"LENGTHADJUST_SPACING\",\n    \"LENGTHADJUST_SPACINGANDGLYPHS\",\n    \"LENGTHADJUST_UNKNOWN\",\n    \"LEQUAL\",\n    \"LESS\",\n    \"LINEAR\",\n    \"LINEAR_DISTANCE\",\n    \"LINEAR_MIPMAP_LINEAR\",\n    \"LINEAR_MIPMAP_NEAREST\",\n    \"LINES\",\n    \"LINE_LOOP\",\n    \"LINE_STRIP\",\n    \"LINE_WIDTH\",\n    \"LINK_STATUS\",\n    \"LIVE\",\n    \"LN10\",\n    \"LN2\",\n    \"LOADED\",\n    \"LOADING\",\n    \"LOG10E\",\n    \"LOG2E\",\n    \"LOWPASS\",\n    \"LOWSHELF\",\n    \"LOW_FLOAT\",\n    \"LOW_INT\",\n    \"LSException\",\n    \"LSParserFilter\",\n    \"LUMINANCE\",\n    \"LUMINANCE_ALPHA\",\n    \"LargestContentfulPaint\",\n    \"LayoutShift\",\n    \"LayoutShiftAttribution\",\n    \"LinearAccelerationSensor\",\n    \"LinkError\",\n    \"ListFormat\",\n    \"LocalMediaStream\",\n    \"Locale\",\n    \"Location\",\n    \"Lock\",\n    \"LockManager\",\n    \"MAP_READ\",\n    \"MAP_WRITE\",\n    \"MAX\",\n    \"MAX_3D_TEXTURE_SIZE\",\n    \"MAX_ARRAY_TEXTURE_LAYERS\",\n    \"MAX_CLIENT_WAIT_TIMEOUT_WEBGL\",\n    \"MAX_COLOR_ATTACHMENTS\",\n    \"MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS\",\n    \"MAX_COMBINED_TEXTURE_IMAGE_UNITS\",\n    \"MAX_COMBINED_UNIFORM_BLOCKS\",\n    \"MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS\",\n    \"MAX_CUBE_MAP_TEXTURE_SIZE\",\n    \"MAX_DRAW_BUFFERS\",\n    \"MAX_ELEMENTS_INDICES\",\n    \"MAX_ELEMENTS_VERTICES\",\n    \"MAX_ELEMENT_INDEX\",\n    \"MAX_FRAGMENT_INPUT_COMPONENTS\",\n    \"MAX_FRAGMENT_UNIFORM_BLOCKS\",\n    \"MAX_FRAGMENT_UNIFORM_COMPONENTS\",\n    \"MAX_FRAGMENT_UNIFORM_VECTORS\",\n    \"MAX_PROGRAM_TEXEL_OFFSET\",\n    \"MAX_RENDERBUFFER_SIZE\",\n    \"MAX_SAFE_INTEGER\",\n    \"MAX_SAMPLES\",\n    \"MAX_SERVER_WAIT_TIMEOUT\",\n    \"MAX_TEXTURE_IMAGE_UNITS\",\n    \"MAX_TEXTURE_LOD_BIAS\",\n    \"MAX_TEXTURE_MAX_ANISOTROPY_EXT\",\n    \"MAX_TEXTURE_SIZE\",\n    \"MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS\",\n    \"MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS\",\n    \"MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS\",\n    \"MAX_UNIFORM_BLOCK_SIZE\",\n    \"MAX_UNIFORM_BUFFER_BINDINGS\",\n    \"MAX_VALUE\",\n    \"MAX_VARYING_COMPONENTS\",\n    \"MAX_VARYING_VECTORS\",\n    \"MAX_VERTEX_ATTRIBS\",\n    \"MAX_VERTEX_OUTPUT_COMPONENTS\",\n    \"MAX_VERTEX_TEXTURE_IMAGE_UNITS\",\n    \"MAX_VERTEX_UNIFORM_BLOCKS\",\n    \"MAX_VERTEX_UNIFORM_COMPONENTS\",\n    \"MAX_VERTEX_UNIFORM_VECTORS\",\n    \"MAX_VIEWPORT_DIMS\",\n    \"MEDIA_ERR_ABORTED\",\n    \"MEDIA_ERR_DECODE\",\n    \"MEDIA_ERR_ENCRYPTED\",\n    \"MEDIA_ERR_NETWORK\",\n    \"MEDIA_ERR_SRC_NOT_SUPPORTED\",\n    \"MEDIA_KEYERR_CLIENT\",\n    \"MEDIA_KEYERR_DOMAIN\",\n    \"MEDIA_KEYERR_HARDWARECHANGE\",\n    \"MEDIA_KEYERR_OUTPUT\",\n    \"MEDIA_KEYERR_SERVICE\",\n    \"MEDIA_KEYERR_UNKNOWN\",\n    \"MEDIA_RULE\",\n    \"MEDIUM_FLOAT\",\n    \"MEDIUM_INT\",\n    \"META_MASK\",\n    \"MIDIAccess\",\n    \"MIDIConnectionEvent\",\n    \"MIDIInput\",\n    \"MIDIInputMap\",\n    \"MIDIMessageEvent\",\n    \"MIDIOutput\",\n    \"MIDIOutputMap\",\n    \"MIDIPort\",\n    \"MIN\",\n    \"MIN_PROGRAM_TEXEL_OFFSET\",\n    \"MIN_SAFE_INTEGER\",\n    \"MIN_VALUE\",\n    \"MIRRORED_REPEAT\",\n    \"MODE_ASYNCHRONOUS\",\n    \"MODE_SYNCHRONOUS\",\n    \"MODIFICATION\",\n    \"MOUSEDOWN\",\n    \"MOUSEDRAG\",\n    \"MOUSEMOVE\",\n    \"MOUSEOUT\",\n    \"MOUSEOVER\",\n    \"MOUSEUP\",\n    \"MOZ_KEYFRAMES_RULE\",\n    \"MOZ_KEYFRAME_RULE\",\n    \"MOZ_SOURCE_CURSOR\",\n    \"MOZ_SOURCE_ERASER\",\n    \"MOZ_SOURCE_KEYBOARD\",\n    \"MOZ_SOURCE_MOUSE\",\n    \"MOZ_SOURCE_PEN\",\n    \"MOZ_SOURCE_TOUCH\",\n    \"MOZ_SOURCE_UNKNOWN\",\n    \"MSGESTURE_FLAG_BEGIN\",\n    \"MSGESTURE_FLAG_CANCEL\",\n    \"MSGESTURE_FLAG_END\",\n    \"MSGESTURE_FLAG_INERTIA\",\n    \"MSGESTURE_FLAG_NONE\",\n    \"MSPOINTER_TYPE_MOUSE\",\n    \"MSPOINTER_TYPE_PEN\",\n    \"MSPOINTER_TYPE_TOUCH\",\n    \"MS_ASYNC_CALLBACK_STATUS_ASSIGN_DELEGATE\",\n    \"MS_ASYNC_CALLBACK_STATUS_CANCEL\",\n    \"MS_ASYNC_CALLBACK_STATUS_CHOOSEANY\",\n    \"MS_ASYNC_CALLBACK_STATUS_ERROR\",\n    \"MS_ASYNC_CALLBACK_STATUS_JOIN\",\n    \"MS_ASYNC_OP_STATUS_CANCELED\",\n    \"MS_ASYNC_OP_STATUS_ERROR\",\n    \"MS_ASYNC_OP_STATUS_SUCCESS\",\n    \"MS_MANIPULATION_STATE_ACTIVE\",\n    \"MS_MANIPULATION_STATE_CANCELLED\",\n    \"MS_MANIPULATION_STATE_COMMITTED\",\n    \"MS_MANIPULATION_STATE_DRAGGING\",\n    \"MS_MANIPULATION_STATE_INERTIA\",\n    \"MS_MANIPULATION_STATE_PRESELECT\",\n    \"MS_MANIPULATION_STATE_SELECTING\",\n    \"MS_MANIPULATION_STATE_STOPPED\",\n    \"MS_MEDIA_ERR_ENCRYPTED\",\n    \"MS_MEDIA_KEYERR_CLIENT\",\n    \"MS_MEDIA_KEYERR_DOMAIN\",\n    \"MS_MEDIA_KEYERR_HARDWARECHANGE\",\n    \"MS_MEDIA_KEYERR_OUTPUT\",\n    \"MS_MEDIA_KEYERR_SERVICE\",\n    \"MS_MEDIA_KEYERR_UNKNOWN\",\n    \"Map\",\n    \"Math\",\n    \"MathMLElement\",\n    \"MediaCapabilities\",\n    \"MediaCapabilitiesInfo\",\n    \"MediaController\",\n    \"MediaDeviceInfo\",\n    \"MediaDevices\",\n    \"MediaElementAudioSourceNode\",\n    \"MediaEncryptedEvent\",\n    \"MediaError\",\n    \"MediaKeyError\",\n    \"MediaKeyEvent\",\n    \"MediaKeyMessageEvent\",\n    \"MediaKeyNeededEvent\",\n    \"MediaKeySession\",\n    \"MediaKeyStatusMap\",\n    \"MediaKeySystemAccess\",\n    \"MediaKeys\",\n    \"MediaList\",\n    \"MediaMetadata\",\n    \"MediaQueryList\",\n    \"MediaQueryListEvent\",\n    \"MediaRecorder\",\n    \"MediaRecorderErrorEvent\",\n    \"MediaSession\",\n    \"MediaSettingsRange\",\n    \"MediaSource\",\n    \"MediaStream\",\n    \"MediaStreamAudioDestinationNode\",\n    \"MediaStreamAudioSourceNode\",\n    \"MediaStreamEvent\",\n    \"MediaStreamTrack\",\n    \"MediaStreamTrackAudioSourceNode\",\n    \"MediaStreamTrackEvent\",\n    \"Memory\",\n    \"MessageChannel\",\n    \"MessageEvent\",\n    \"MessagePort\",\n    \"Methods\",\n    \"MimeType\",\n    \"MimeTypeArray\",\n    \"Module\",\n    \"MouseEvent\",\n    \"MouseScrollEvent\",\n    \"MozAnimation\",\n    \"MozAnimationDelay\",\n    \"MozAnimationDirection\",\n    \"MozAnimationDuration\",\n    \"MozAnimationFillMode\",\n    \"MozAnimationIterationCount\",\n    \"MozAnimationName\",\n    \"MozAnimationPlayState\",\n    \"MozAnimationTimingFunction\",\n    \"MozAppearance\",\n    \"MozBackfaceVisibility\",\n    \"MozBinding\",\n    \"MozBorderBottomColors\",\n    \"MozBorderEnd\",\n    \"MozBorderEndColor\",\n    \"MozBorderEndStyle\",\n    \"MozBorderEndWidth\",\n    \"MozBorderImage\",\n    \"MozBorderLeftColors\",\n    \"MozBorderRightColors\",\n    \"MozBorderStart\",\n    \"MozBorderStartColor\",\n    \"MozBorderStartStyle\",\n    \"MozBorderStartWidth\",\n    \"MozBorderTopColors\",\n    \"MozBoxAlign\",\n    \"MozBoxDirection\",\n    \"MozBoxFlex\",\n    \"MozBoxOrdinalGroup\",\n    \"MozBoxOrient\",\n    \"MozBoxPack\",\n    \"MozBoxSizing\",\n    \"MozCSSKeyframeRule\",\n    \"MozCSSKeyframesRule\",\n    \"MozColumnCount\",\n    \"MozColumnFill\",\n    \"MozColumnGap\",\n    \"MozColumnRule\",\n    \"MozColumnRuleColor\",\n    \"MozColumnRuleStyle\",\n    \"MozColumnRuleWidth\",\n    \"MozColumnWidth\",\n    \"MozColumns\",\n    \"MozContactChangeEvent\",\n    \"MozFloatEdge\",\n    \"MozFontFeatureSettings\",\n    \"MozFontLanguageOverride\",\n    \"MozForceBrokenImageIcon\",\n    \"MozHyphens\",\n    \"MozImageRegion\",\n    \"MozMarginEnd\",\n    \"MozMarginStart\",\n    \"MozMmsEvent\",\n    \"MozMmsMessage\",\n    \"MozMobileMessageThread\",\n    \"MozOSXFontSmoothing\",\n    \"MozOrient\",\n    \"MozOsxFontSmoothing\",\n    \"MozOutlineRadius\",\n    \"MozOutlineRadiusBottomleft\",\n    \"MozOutlineRadiusBottomright\",\n    \"MozOutlineRadiusTopleft\",\n    \"MozOutlineRadiusTopright\",\n    \"MozPaddingEnd\",\n    \"MozPaddingStart\",\n    \"MozPerspective\",\n    \"MozPerspectiveOrigin\",\n    \"MozPowerManager\",\n    \"MozSettingsEvent\",\n    \"MozSmsEvent\",\n    \"MozSmsMessage\",\n    \"MozStackSizing\",\n    \"MozTabSize\",\n    \"MozTextAlignLast\",\n    \"MozTextDecorationColor\",\n    \"MozTextDecorationLine\",\n    \"MozTextDecorationStyle\",\n    \"MozTextSizeAdjust\",\n    \"MozTransform\",\n    \"MozTransformOrigin\",\n    \"MozTransformStyle\",\n    \"MozTransition\",\n    \"MozTransitionDelay\",\n    \"MozTransitionDuration\",\n    \"MozTransitionProperty\",\n    \"MozTransitionTimingFunction\",\n    \"MozUserFocus\",\n    \"MozUserInput\",\n    \"MozUserModify\",\n    \"MozUserSelect\",\n    \"MozWindowDragging\",\n    \"MozWindowShadow\",\n    \"MutationEvent\",\n    \"MutationObserver\",\n    \"MutationRecord\",\n    \"NAMESPACE_ERR\",\n    \"NAMESPACE_RULE\",\n    \"NEAREST\",\n    \"NEAREST_MIPMAP_LINEAR\",\n    \"NEAREST_MIPMAP_NEAREST\",\n    \"NEGATIVE_INFINITY\",\n    \"NETWORK_EMPTY\",\n    \"NETWORK_ERR\",\n    \"NETWORK_IDLE\",\n    \"NETWORK_LOADED\",\n    \"NETWORK_LOADING\",\n    \"NETWORK_NO_SOURCE\",\n    \"NEVER\",\n    \"NEW\",\n    \"NEXT\",\n    \"NEXT_NO_DUPLICATE\",\n    \"NICEST\",\n    \"NODE_AFTER\",\n    \"NODE_BEFORE\",\n    \"NODE_BEFORE_AND_AFTER\",\n    \"NODE_INSIDE\",\n    \"NONE\",\n    \"NON_TRANSIENT_ERR\",\n    \"NOTATION_NODE\",\n    \"NOTCH\",\n    \"NOTEQUAL\",\n    \"NOT_ALLOWED_ERR\",\n    \"NOT_FOUND_ERR\",\n    \"NOT_READABLE_ERR\",\n    \"NOT_SUPPORTED_ERR\",\n    \"NO_DATA_ALLOWED_ERR\",\n    \"NO_ERR\",\n    \"NO_ERROR\",\n    \"NO_MODIFICATION_ALLOWED_ERR\",\n    \"NUMBER_TYPE\",\n    \"NUM_COMPRESSED_TEXTURE_FORMATS\",\n    \"NaN\",\n    \"NamedNodeMap\",\n    \"NavigationPreloadManager\",\n    \"Navigator\",\n    \"NearbyLinks\",\n    \"NetworkInformation\",\n    \"Node\",\n    \"NodeFilter\",\n    \"NodeIterator\",\n    \"NodeList\",\n    \"Notation\",\n    \"Notification\",\n    \"NotifyPaintEvent\",\n    \"Number\",\n    \"NumberFormat\",\n    \"OBJECT_TYPE\",\n    \"OBSOLETE\",\n    \"OK\",\n    \"ONE\",\n    \"ONE_MINUS_CONSTANT_ALPHA\",\n    \"ONE_MINUS_CONSTANT_COLOR\",\n    \"ONE_MINUS_DST_ALPHA\",\n    \"ONE_MINUS_DST_COLOR\",\n    \"ONE_MINUS_SRC_ALPHA\",\n    \"ONE_MINUS_SRC_COLOR\",\n    \"OPEN\",\n    \"OPENED\",\n    \"OPENING\",\n    \"ORDERED_NODE_ITERATOR_TYPE\",\n    \"ORDERED_NODE_SNAPSHOT_TYPE\",\n    \"OTHER_ERROR\",\n    \"OUT_OF_MEMORY\",\n    \"Object\",\n    \"OfflineAudioCompletionEvent\",\n    \"OfflineAudioContext\",\n    \"OfflineResourceList\",\n    \"OffscreenCanvas\",\n    \"OffscreenCanvasRenderingContext2D\",\n    \"Option\",\n    \"OrientationSensor\",\n    \"OscillatorNode\",\n    \"OverconstrainedError\",\n    \"OverflowEvent\",\n    \"PACK_ALIGNMENT\",\n    \"PACK_ROW_LENGTH\",\n    \"PACK_SKIP_PIXELS\",\n    \"PACK_SKIP_ROWS\",\n    \"PAGE_RULE\",\n    \"PARSE_ERR\",\n    \"PATHSEG_ARC_ABS\",\n    \"PATHSEG_ARC_REL\",\n    \"PATHSEG_CLOSEPATH\",\n    \"PATHSEG_CURVETO_CUBIC_ABS\",\n    \"PATHSEG_CURVETO_CUBIC_REL\",\n    \"PATHSEG_CURVETO_CUBIC_SMOOTH_ABS\",\n    \"PATHSEG_CURVETO_CUBIC_SMOOTH_REL\",\n    \"PATHSEG_CURVETO_QUADRATIC_ABS\",\n    \"PATHSEG_CURVETO_QUADRATIC_REL\",\n    \"PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS\",\n    \"PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL\",\n    \"PATHSEG_LINETO_ABS\",\n    \"PATHSEG_LINETO_HORIZONTAL_ABS\",\n    \"PATHSEG_LINETO_HORIZONTAL_REL\",\n    \"PATHSEG_LINETO_REL\",\n    \"PATHSEG_LINETO_VERTICAL_ABS\",\n    \"PATHSEG_LINETO_VERTICAL_REL\",\n    \"PATHSEG_MOVETO_ABS\",\n    \"PATHSEG_MOVETO_REL\",\n    \"PATHSEG_UNKNOWN\",\n    \"PATH_EXISTS_ERR\",\n    \"PEAKING\",\n    \"PERMISSION_DENIED\",\n    \"PERSISTENT\",\n    \"PI\",\n    \"PIXEL_PACK_BUFFER\",\n    \"PIXEL_PACK_BUFFER_BINDING\",\n    \"PIXEL_UNPACK_BUFFER\",\n    \"PIXEL_UNPACK_BUFFER_BINDING\",\n    \"PLAYING_STATE\",\n    \"POINTS\",\n    \"POLYGON_OFFSET_FACTOR\",\n    \"POLYGON_OFFSET_FILL\",\n    \"POLYGON_OFFSET_UNITS\",\n    \"POSITION_UNAVAILABLE\",\n    \"POSITIVE_INFINITY\",\n    \"PREV\",\n    \"PREV_NO_DUPLICATE\",\n    \"PROCESSING_INSTRUCTION_NODE\",\n    \"PageChangeEvent\",\n    \"PageTransitionEvent\",\n    \"PaintRequest\",\n    \"PaintRequestList\",\n    \"PannerNode\",\n    \"PasswordCredential\",\n    \"Path2D\",\n    \"PaymentAddress\",\n    \"PaymentInstruments\",\n    \"PaymentManager\",\n    \"PaymentMethodChangeEvent\",\n    \"PaymentRequest\",\n    \"PaymentRequestUpdateEvent\",\n    \"PaymentResponse\",\n    \"Performance\",\n    \"PerformanceElementTiming\",\n    \"PerformanceEntry\",\n    \"PerformanceEventTiming\",\n    \"PerformanceLongTaskTiming\",\n    \"PerformanceMark\",\n    \"PerformanceMeasure\",\n    \"PerformanceNavigation\",\n    \"PerformanceNavigationTiming\",\n    \"PerformanceObserver\",\n    \"PerformanceObserverEntryList\",\n    \"PerformancePaintTiming\",\n    \"PerformanceResourceTiming\",\n    \"PerformanceServerTiming\",\n    \"PerformanceTiming\",\n    \"PeriodicSyncManager\",\n    \"PeriodicWave\",\n    \"PermissionStatus\",\n    \"Permissions\",\n    \"PhotoCapabilities\",\n    \"PictureInPictureWindow\",\n    \"Plugin\",\n    \"PluginArray\",\n    \"PluralRules\",\n    \"PointerEvent\",\n    \"PopStateEvent\",\n    \"PopupBlockedEvent\",\n    \"Presentation\",\n    \"PresentationAvailability\",\n    \"PresentationConnection\",\n    \"PresentationConnectionAvailableEvent\",\n    \"PresentationConnectionCloseEvent\",\n    \"PresentationConnectionList\",\n    \"PresentationReceiver\",\n    \"PresentationRequest\",\n    \"ProcessingInstruction\",\n    \"ProgressEvent\",\n    \"Promise\",\n    \"PromiseRejectionEvent\",\n    \"PropertyNodeList\",\n    \"Proxy\",\n    \"PublicKeyCredential\",\n    \"PushManager\",\n    \"PushSubscription\",\n    \"PushSubscriptionOptions\",\n    \"Q\",\n    \"QUERY_RESOLVE\",\n    \"QUERY_RESULT\",\n    \"QUERY_RESULT_AVAILABLE\",\n    \"QUOTA_ERR\",\n    \"QUOTA_EXCEEDED_ERR\",\n    \"QueryInterface\",\n    \"R11F_G11F_B10F\",\n    \"R16F\",\n    \"R16I\",\n    \"R16UI\",\n    \"R32F\",\n    \"R32I\",\n    \"R32UI\",\n    \"R8\",\n    \"R8I\",\n    \"R8UI\",\n    \"R8_SNORM\",\n    \"RASTERIZER_DISCARD\",\n    \"READ\",\n    \"READ_BUFFER\",\n    \"READ_FRAMEBUFFER\",\n    \"READ_FRAMEBUFFER_BINDING\",\n    \"READ_ONLY\",\n    \"READ_ONLY_ERR\",\n    \"READ_WRITE\",\n    \"RED\",\n    \"RED_BITS\",\n    \"RED_INTEGER\",\n    \"REMOVAL\",\n    \"RENDERBUFFER\",\n    \"RENDERBUFFER_ALPHA_SIZE\",\n    \"RENDERBUFFER_BINDING\",\n    \"RENDERBUFFER_BLUE_SIZE\",\n    \"RENDERBUFFER_DEPTH_SIZE\",\n    \"RENDERBUFFER_GREEN_SIZE\",\n    \"RENDERBUFFER_HEIGHT\",\n    \"RENDERBUFFER_INTERNAL_FORMAT\",\n    \"RENDERBUFFER_RED_SIZE\",\n    \"RENDERBUFFER_SAMPLES\",\n    \"RENDERBUFFER_STENCIL_SIZE\",\n    \"RENDERBUFFER_WIDTH\",\n    \"RENDERER\",\n    \"RENDERING_INTENT_ABSOLUTE_COLORIMETRIC\",\n    \"RENDERING_INTENT_AUTO\",\n    \"RENDERING_INTENT_PERCEPTUAL\",\n    \"RENDERING_INTENT_RELATIVE_COLORIMETRIC\",\n    \"RENDERING_INTENT_SATURATION\",\n    \"RENDERING_INTENT_UNKNOWN\",\n    \"RENDER_ATTACHMENT\",\n    \"REPEAT\",\n    \"REPLACE\",\n    \"RG\",\n    \"RG16F\",\n    \"RG16I\",\n    \"RG16UI\",\n    \"RG32F\",\n    \"RG32I\",\n    \"RG32UI\",\n    \"RG8\",\n    \"RG8I\",\n    \"RG8UI\",\n    \"RG8_SNORM\",\n    \"RGB\",\n    \"RGB10_A2\",\n    \"RGB10_A2UI\",\n    \"RGB16F\",\n    \"RGB16I\",\n    \"RGB16UI\",\n    \"RGB32F\",\n    \"RGB32I\",\n    \"RGB32UI\",\n    \"RGB565\",\n    \"RGB5_A1\",\n    \"RGB8\",\n    \"RGB8I\",\n    \"RGB8UI\",\n    \"RGB8_SNORM\",\n    \"RGB9_E5\",\n    \"RGBA\",\n    \"RGBA16F\",\n    \"RGBA16I\",\n    \"RGBA16UI\",\n    \"RGBA32F\",\n    \"RGBA32I\",\n    \"RGBA32UI\",\n    \"RGBA4\",\n    \"RGBA8\",\n    \"RGBA8I\",\n    \"RGBA8UI\",\n    \"RGBA8_SNORM\",\n    \"RGBA_INTEGER\",\n    \"RGBColor\",\n    \"RGB_INTEGER\",\n    \"RG_INTEGER\",\n    \"ROTATION_CLOCKWISE\",\n    \"ROTATION_COUNTERCLOCKWISE\",\n    \"RTCCertificate\",\n    \"RTCDTMFSender\",\n    \"RTCDTMFToneChangeEvent\",\n    \"RTCDataChannel\",\n    \"RTCDataChannelEvent\",\n    \"RTCDtlsTransport\",\n    \"RTCError\",\n    \"RTCErrorEvent\",\n    \"RTCIceCandidate\",\n    \"RTCIceTransport\",\n    \"RTCPeerConnection\",\n    \"RTCPeerConnectionIceErrorEvent\",\n    \"RTCPeerConnectionIceEvent\",\n    \"RTCRtpReceiver\",\n    \"RTCRtpSender\",\n    \"RTCRtpTransceiver\",\n    \"RTCSctpTransport\",\n    \"RTCSessionDescription\",\n    \"RTCStatsReport\",\n    \"RTCTrackEvent\",\n    \"RadioNodeList\",\n    \"Range\",\n    \"RangeError\",\n    \"RangeException\",\n    \"ReadableStream\",\n    \"ReadableStreamDefaultReader\",\n    \"RecordErrorEvent\",\n    \"Rect\",\n    \"ReferenceError\",\n    \"Reflect\",\n    \"RegExp\",\n    \"RelativeOrientationSensor\",\n    \"RelativeTimeFormat\",\n    \"RemotePlayback\",\n    \"Report\",\n    \"ReportBody\",\n    \"ReportingObserver\",\n    \"Request\",\n    \"ResizeObserver\",\n    \"ResizeObserverEntry\",\n    \"ResizeObserverSize\",\n    \"Response\",\n    \"RuntimeError\",\n    \"SAMPLER_2D\",\n    \"SAMPLER_2D_ARRAY\",\n    \"SAMPLER_2D_ARRAY_SHADOW\",\n    \"SAMPLER_2D_SHADOW\",\n    \"SAMPLER_3D\",\n    \"SAMPLER_BINDING\",\n    \"SAMPLER_CUBE\",\n    \"SAMPLER_CUBE_SHADOW\",\n    \"SAMPLES\",\n    \"SAMPLE_ALPHA_TO_COVERAGE\",\n    \"SAMPLE_BUFFERS\",\n    \"SAMPLE_COVERAGE\",\n    \"SAMPLE_COVERAGE_INVERT\",\n    \"SAMPLE_COVERAGE_VALUE\",\n    \"SAWTOOTH\",\n    \"SCHEDULED_STATE\",\n    \"SCISSOR_BOX\",\n    \"SCISSOR_TEST\",\n    \"SCROLL_PAGE_DOWN\",\n    \"SCROLL_PAGE_UP\",\n    \"SDP_ANSWER\",\n    \"SDP_OFFER\",\n    \"SDP_PRANSWER\",\n    \"SECURITY_ERR\",\n    \"SELECT\",\n    \"SEPARATE_ATTRIBS\",\n    \"SERIALIZE_ERR\",\n    \"SEVERITY_ERROR\",\n    \"SEVERITY_FATAL_ERROR\",\n    \"SEVERITY_WARNING\",\n    \"SHADER_COMPILER\",\n    \"SHADER_TYPE\",\n    \"SHADING_LANGUAGE_VERSION\",\n    \"SHIFT_MASK\",\n    \"SHORT\",\n    \"SHOWING\",\n    \"SHOW_ALL\",\n    \"SHOW_ATTRIBUTE\",\n    \"SHOW_CDATA_SECTION\",\n    \"SHOW_COMMENT\",\n    \"SHOW_DOCUMENT\",\n    \"SHOW_DOCUMENT_FRAGMENT\",\n    \"SHOW_DOCUMENT_TYPE\",\n    \"SHOW_ELEMENT\",\n    \"SHOW_ENTITY\",\n    \"SHOW_ENTITY_REFERENCE\",\n    \"SHOW_NOTATION\",\n    \"SHOW_PROCESSING_INSTRUCTION\",\n    \"SHOW_TEXT\",\n    \"SIGNALED\",\n    \"SIGNED_NORMALIZED\",\n    \"SINE\",\n    \"SOUNDFIELD\",\n    \"SQLException\",\n    \"SQRT1_2\",\n    \"SQRT2\",\n    \"SQUARE\",\n    \"SRC_ALPHA\",\n    \"SRC_ALPHA_SATURATE\",\n    \"SRC_COLOR\",\n    \"SRGB\",\n    \"SRGB8\",\n    \"SRGB8_ALPHA8\",\n    \"START_TO_END\",\n    \"START_TO_START\",\n    \"STATIC_COPY\",\n    \"STATIC_DRAW\",\n    \"STATIC_READ\",\n    \"STENCIL\",\n    \"STENCIL_ATTACHMENT\",\n    \"STENCIL_BACK_FAIL\",\n    \"STENCIL_BACK_FUNC\",\n    \"STENCIL_BACK_PASS_DEPTH_FAIL\",\n    \"STENCIL_BACK_PASS_DEPTH_PASS\",\n    \"STENCIL_BACK_REF\",\n    \"STENCIL_BACK_VALUE_MASK\",\n    \"STENCIL_BACK_WRITEMASK\",\n    \"STENCIL_BITS\",\n    \"STENCIL_BUFFER_BIT\",\n    \"STENCIL_CLEAR_VALUE\",\n    \"STENCIL_FAIL\",\n    \"STENCIL_FUNC\",\n    \"STENCIL_INDEX\",\n    \"STENCIL_INDEX8\",\n    \"STENCIL_PASS_DEPTH_FAIL\",\n    \"STENCIL_PASS_DEPTH_PASS\",\n    \"STENCIL_REF\",\n    \"STENCIL_TEST\",\n    \"STENCIL_VALUE_MASK\",\n    \"STENCIL_WRITEMASK\",\n    \"STORAGE\",\n    \"STORAGE_BINDING\",\n    \"STREAM_COPY\",\n    \"STREAM_DRAW\",\n    \"STREAM_READ\",\n    \"STRING_TYPE\",\n    \"STYLE_RULE\",\n    \"SUBPIXEL_BITS\",\n    \"SUPPORTS_RULE\",\n    \"SVGAElement\",\n    \"SVGAltGlyphDefElement\",\n    \"SVGAltGlyphElement\",\n    \"SVGAltGlyphItemElement\",\n    \"SVGAngle\",\n    \"SVGAnimateColorElement\",\n    \"SVGAnimateElement\",\n    \"SVGAnimateMotionElement\",\n    \"SVGAnimateTransformElement\",\n    \"SVGAnimatedAngle\",\n    \"SVGAnimatedBoolean\",\n    \"SVGAnimatedEnumeration\",\n    \"SVGAnimatedInteger\",\n    \"SVGAnimatedLength\",\n    \"SVGAnimatedLengthList\",\n    \"SVGAnimatedNumber\",\n    \"SVGAnimatedNumberList\",\n    \"SVGAnimatedPreserveAspectRatio\",\n    \"SVGAnimatedRect\",\n    \"SVGAnimatedString\",\n    \"SVGAnimatedTransformList\",\n    \"SVGAnimationElement\",\n    \"SVGCircleElement\",\n    \"SVGClipPathElement\",\n    \"SVGColor\",\n    \"SVGComponentTransferFunctionElement\",\n    \"SVGCursorElement\",\n    \"SVGDefsElement\",\n    \"SVGDescElement\",\n    \"SVGDiscardElement\",\n    \"SVGDocument\",\n    \"SVGElement\",\n    \"SVGElementInstance\",\n    \"SVGElementInstanceList\",\n    \"SVGEllipseElement\",\n    \"SVGException\",\n    \"SVGFEBlendElement\",\n    \"SVGFEColorMatrixElement\",\n    \"SVGFEComponentTransferElement\",\n    \"SVGFECompositeElement\",\n    \"SVGFEConvolveMatrixElement\",\n    \"SVGFEDiffuseLightingElement\",\n    \"SVGFEDisplacementMapElement\",\n    \"SVGFEDistantLightElement\",\n    \"SVGFEDropShadowElement\",\n    \"SVGFEFloodElement\",\n    \"SVGFEFuncAElement\",\n    \"SVGFEFuncBElement\",\n    \"SVGFEFuncGElement\",\n    \"SVGFEFuncRElement\",\n    \"SVGFEGaussianBlurElement\",\n    \"SVGFEImageElement\",\n    \"SVGFEMergeElement\",\n    \"SVGFEMergeNodeElement\",\n    \"SVGFEMorphologyElement\",\n    \"SVGFEOffsetElement\",\n    \"SVGFEPointLightElement\",\n    \"SVGFESpecularLightingElement\",\n    \"SVGFESpotLightElement\",\n    \"SVGFETileElement\",\n    \"SVGFETurbulenceElement\",\n    \"SVGFilterElement\",\n    \"SVGFontElement\",\n    \"SVGFontFaceElement\",\n    \"SVGFontFaceFormatElement\",\n    \"SVGFontFaceNameElement\",\n    \"SVGFontFaceSrcElement\",\n    \"SVGFontFaceUriElement\",\n    \"SVGForeignObjectElement\",\n    \"SVGGElement\",\n    \"SVGGeometryElement\",\n    \"SVGGlyphElement\",\n    \"SVGGlyphRefElement\",\n    \"SVGGradientElement\",\n    \"SVGGraphicsElement\",\n    \"SVGHKernElement\",\n    \"SVGImageElement\",\n    \"SVGLength\",\n    \"SVGLengthList\",\n    \"SVGLineElement\",\n    \"SVGLinearGradientElement\",\n    \"SVGMPathElement\",\n    \"SVGMarkerElement\",\n    \"SVGMaskElement\",\n    \"SVGMatrix\",\n    \"SVGMetadataElement\",\n    \"SVGMissingGlyphElement\",\n    \"SVGNumber\",\n    \"SVGNumberList\",\n    \"SVGPaint\",\n    \"SVGPathElement\",\n    \"SVGPathSeg\",\n    \"SVGPathSegArcAbs\",\n    \"SVGPathSegArcRel\",\n    \"SVGPathSegClosePath\",\n    \"SVGPathSegCurvetoCubicAbs\",\n    \"SVGPathSegCurvetoCubicRel\",\n    \"SVGPathSegCurvetoCubicSmoothAbs\",\n    \"SVGPathSegCurvetoCubicSmoothRel\",\n    \"SVGPathSegCurvetoQuadraticAbs\",\n    \"SVGPathSegCurvetoQuadraticRel\",\n    \"SVGPathSegCurvetoQuadraticSmoothAbs\",\n    \"SVGPathSegCurvetoQuadraticSmoothRel\",\n    \"SVGPathSegLinetoAbs\",\n    \"SVGPathSegLinetoHorizontalAbs\",\n    \"SVGPathSegLinetoHorizontalRel\",\n    \"SVGPathSegLinetoRel\",\n    \"SVGPathSegLinetoVerticalAbs\",\n    \"SVGPathSegLinetoVerticalRel\",\n    \"SVGPathSegList\",\n    \"SVGPathSegMovetoAbs\",\n    \"SVGPathSegMovetoRel\",\n    \"SVGPatternElement\",\n    \"SVGPoint\",\n    \"SVGPointList\",\n    \"SVGPolygonElement\",\n    \"SVGPolylineElement\",\n    \"SVGPreserveAspectRatio\",\n    \"SVGRadialGradientElement\",\n    \"SVGRect\",\n    \"SVGRectElement\",\n    \"SVGRenderingIntent\",\n    \"SVGSVGElement\",\n    \"SVGScriptElement\",\n    \"SVGSetElement\",\n    \"SVGStopElement\",\n    \"SVGStringList\",\n    \"SVGStyleElement\",\n    \"SVGSwitchElement\",\n    \"SVGSymbolElement\",\n    \"SVGTRefElement\",\n    \"SVGTSpanElement\",\n    \"SVGTextContentElement\",\n    \"SVGTextElement\",\n    \"SVGTextPathElement\",\n    \"SVGTextPositioningElement\",\n    \"SVGTitleElement\",\n    \"SVGTransform\",\n    \"SVGTransformList\",\n    \"SVGUnitTypes\",\n    \"SVGUseElement\",\n    \"SVGVKernElement\",\n    \"SVGViewElement\",\n    \"SVGViewSpec\",\n    \"SVGZoomAndPan\",\n    \"SVGZoomEvent\",\n    \"SVG_ANGLETYPE_DEG\",\n    \"SVG_ANGLETYPE_GRAD\",\n    \"SVG_ANGLETYPE_RAD\",\n    \"SVG_ANGLETYPE_UNKNOWN\",\n    \"SVG_ANGLETYPE_UNSPECIFIED\",\n    \"SVG_CHANNEL_A\",\n    \"SVG_CHANNEL_B\",\n    \"SVG_CHANNEL_G\",\n    \"SVG_CHANNEL_R\",\n    \"SVG_CHANNEL_UNKNOWN\",\n    \"SVG_COLORTYPE_CURRENTCOLOR\",\n    \"SVG_COLORTYPE_RGBCOLOR\",\n    \"SVG_COLORTYPE_RGBCOLOR_ICCCOLOR\",\n    \"SVG_COLORTYPE_UNKNOWN\",\n    \"SVG_EDGEMODE_DUPLICATE\",\n    \"SVG_EDGEMODE_NONE\",\n    \"SVG_EDGEMODE_UNKNOWN\",\n    \"SVG_EDGEMODE_WRAP\",\n    \"SVG_FEBLEND_MODE_COLOR\",\n    \"SVG_FEBLEND_MODE_COLOR_BURN\",\n    \"SVG_FEBLEND_MODE_COLOR_DODGE\",\n    \"SVG_FEBLEND_MODE_DARKEN\",\n    \"SVG_FEBLEND_MODE_DIFFERENCE\",\n    \"SVG_FEBLEND_MODE_EXCLUSION\",\n    \"SVG_FEBLEND_MODE_HARD_LIGHT\",\n    \"SVG_FEBLEND_MODE_HUE\",\n    \"SVG_FEBLEND_MODE_LIGHTEN\",\n    \"SVG_FEBLEND_MODE_LUMINOSITY\",\n    \"SVG_FEBLEND_MODE_MULTIPLY\",\n    \"SVG_FEBLEND_MODE_NORMAL\",\n    \"SVG_FEBLEND_MODE_OVERLAY\",\n    \"SVG_FEBLEND_MODE_SATURATION\",\n    \"SVG_FEBLEND_MODE_SCREEN\",\n    \"SVG_FEBLEND_MODE_SOFT_LIGHT\",\n    \"SVG_FEBLEND_MODE_UNKNOWN\",\n    \"SVG_FECOLORMATRIX_TYPE_HUEROTATE\",\n    \"SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA\",\n    \"SVG_FECOLORMATRIX_TYPE_MATRIX\",\n    \"SVG_FECOLORMATRIX_TYPE_SATURATE\",\n    \"SVG_FECOLORMATRIX_TYPE_UNKNOWN\",\n    \"SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE\",\n    \"SVG_FECOMPONENTTRANSFER_TYPE_GAMMA\",\n    \"SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY\",\n    \"SVG_FECOMPONENTTRANSFER_TYPE_LINEAR\",\n    \"SVG_FECOMPONENTTRANSFER_TYPE_TABLE\",\n    \"SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN\",\n    \"SVG_FECOMPOSITE_OPERATOR_ARITHMETIC\",\n    \"SVG_FECOMPOSITE_OPERATOR_ATOP\",\n    \"SVG_FECOMPOSITE_OPERATOR_IN\",\n    \"SVG_FECOMPOSITE_OPERATOR_OUT\",\n    \"SVG_FECOMPOSITE_OPERATOR_OVER\",\n    \"SVG_FECOMPOSITE_OPERATOR_UNKNOWN\",\n    \"SVG_FECOMPOSITE_OPERATOR_XOR\",\n    \"SVG_INVALID_VALUE_ERR\",\n    \"SVG_LENGTHTYPE_CM\",\n    \"SVG_LENGTHTYPE_EMS\",\n    \"SVG_LENGTHTYPE_EXS\",\n    \"SVG_LENGTHTYPE_IN\",\n    \"SVG_LENGTHTYPE_MM\",\n    \"SVG_LENGTHTYPE_NUMBER\",\n    \"SVG_LENGTHTYPE_PC\",\n    \"SVG_LENGTHTYPE_PERCENTAGE\",\n    \"SVG_LENGTHTYPE_PT\",\n    \"SVG_LENGTHTYPE_PX\",\n    \"SVG_LENGTHTYPE_UNKNOWN\",\n    \"SVG_MARKERUNITS_STROKEWIDTH\",\n    \"SVG_MARKERUNITS_UNKNOWN\",\n    \"SVG_MARKERUNITS_USERSPACEONUSE\",\n    \"SVG_MARKER_ORIENT_ANGLE\",\n    \"SVG_MARKER_ORIENT_AUTO\",\n    \"SVG_MARKER_ORIENT_UNKNOWN\",\n    \"SVG_MASKTYPE_ALPHA\",\n    \"SVG_MASKTYPE_LUMINANCE\",\n    \"SVG_MATRIX_NOT_INVERTABLE\",\n    \"SVG_MEETORSLICE_MEET\",\n    \"SVG_MEETORSLICE_SLICE\",\n    \"SVG_MEETORSLICE_UNKNOWN\",\n    \"SVG_MORPHOLOGY_OPERATOR_DILATE\",\n    \"SVG_MORPHOLOGY_OPERATOR_ERODE\",\n    \"SVG_MORPHOLOGY_OPERATOR_UNKNOWN\",\n    \"SVG_PAINTTYPE_CURRENTCOLOR\",\n    \"SVG_PAINTTYPE_NONE\",\n    \"SVG_PAINTTYPE_RGBCOLOR\",\n    \"SVG_PAINTTYPE_RGBCOLOR_ICCCOLOR\",\n    \"SVG_PAINTTYPE_UNKNOWN\",\n    \"SVG_PAINTTYPE_URI\",\n    \"SVG_PAINTTYPE_URI_CURRENTCOLOR\",\n    \"SVG_PAINTTYPE_URI_NONE\",\n    \"SVG_PAINTTYPE_URI_RGBCOLOR\",\n    \"SVG_PAINTTYPE_URI_RGBCOLOR_ICCCOLOR\",\n    \"SVG_PRESERVEASPECTRATIO_NONE\",\n    \"SVG_PRESERVEASPECTRATIO_UNKNOWN\",\n    \"SVG_PRESERVEASPECTRATIO_XMAXYMAX\",\n    \"SVG_PRESERVEASPECTRATIO_XMAXYMID\",\n    \"SVG_PRESERVEASPECTRATIO_XMAXYMIN\",\n    \"SVG_PRESERVEASPECTRATIO_XMIDYMAX\",\n    \"SVG_PRESERVEASPECTRATIO_XMIDYMID\",\n    \"SVG_PRESERVEASPECTRATIO_XMIDYMIN\",\n    \"SVG_PRESERVEASPECTRATIO_XMINYMAX\",\n    \"SVG_PRESERVEASPECTRATIO_XMINYMID\",\n    \"SVG_PRESERVEASPECTRATIO_XMINYMIN\",\n    \"SVG_SPREADMETHOD_PAD\",\n    \"SVG_SPREADMETHOD_REFLECT\",\n    \"SVG_SPREADMETHOD_REPEAT\",\n    \"SVG_SPREADMETHOD_UNKNOWN\",\n    \"SVG_STITCHTYPE_NOSTITCH\",\n    \"SVG_STITCHTYPE_STITCH\",\n    \"SVG_STITCHTYPE_UNKNOWN\",\n    \"SVG_TRANSFORM_MATRIX\",\n    \"SVG_TRANSFORM_ROTATE\",\n    \"SVG_TRANSFORM_SCALE\",\n    \"SVG_TRANSFORM_SKEWX\",\n    \"SVG_TRANSFORM_SKEWY\",\n    \"SVG_TRANSFORM_TRANSLATE\",\n    \"SVG_TRANSFORM_UNKNOWN\",\n    \"SVG_TURBULENCE_TYPE_FRACTALNOISE\",\n    \"SVG_TURBULENCE_TYPE_TURBULENCE\",\n    \"SVG_TURBULENCE_TYPE_UNKNOWN\",\n    \"SVG_UNIT_TYPE_OBJECTBOUNDINGBOX\",\n    \"SVG_UNIT_TYPE_UNKNOWN\",\n    \"SVG_UNIT_TYPE_USERSPACEONUSE\",\n    \"SVG_WRONG_TYPE_ERR\",\n    \"SVG_ZOOMANDPAN_DISABLE\",\n    \"SVG_ZOOMANDPAN_MAGNIFY\",\n    \"SVG_ZOOMANDPAN_UNKNOWN\",\n    \"SYNC_CONDITION\",\n    \"SYNC_FENCE\",\n    \"SYNC_FLAGS\",\n    \"SYNC_FLUSH_COMMANDS_BIT\",\n    \"SYNC_GPU_COMMANDS_COMPLETE\",\n    \"SYNC_STATUS\",\n    \"SYNTAX_ERR\",\n    \"SavedPages\",\n    \"Screen\",\n    \"ScreenOrientation\",\n    \"Script\",\n    \"ScriptProcessorNode\",\n    \"ScrollAreaEvent\",\n    \"SecurityPolicyViolationEvent\",\n    \"Selection\",\n    \"Sensor\",\n    \"SensorErrorEvent\",\n    \"ServiceWorker\",\n    \"ServiceWorkerContainer\",\n    \"ServiceWorkerRegistration\",\n    \"SessionDescription\",\n    \"Set\",\n    \"ShadowRoot\",\n    \"SharedArrayBuffer\",\n    \"SharedWorker\",\n    \"SimpleGestureEvent\",\n    \"SourceBuffer\",\n    \"SourceBufferList\",\n    \"SpeechSynthesis\",\n    \"SpeechSynthesisErrorEvent\",\n    \"SpeechSynthesisEvent\",\n    \"SpeechSynthesisUtterance\",\n    \"SpeechSynthesisVoice\",\n    \"StaticRange\",\n    \"StereoPannerNode\",\n    \"StopIteration\",\n    \"Storage\",\n    \"StorageEvent\",\n    \"StorageManager\",\n    \"String\",\n    \"StructType\",\n    \"StylePropertyMap\",\n    \"StylePropertyMapReadOnly\",\n    \"StyleSheet\",\n    \"StyleSheetList\",\n    \"SubmitEvent\",\n    \"SubtleCrypto\",\n    \"Symbol\",\n    \"SyncManager\",\n    \"SyntaxError\",\n    \"TEMPORARY\",\n    \"TEXTPATH_METHODTYPE_ALIGN\",\n    \"TEXTPATH_METHODTYPE_STRETCH\",\n    \"TEXTPATH_METHODTYPE_UNKNOWN\",\n    \"TEXTPATH_SPACINGTYPE_AUTO\",\n    \"TEXTPATH_SPACINGTYPE_EXACT\",\n    \"TEXTPATH_SPACINGTYPE_UNKNOWN\",\n    \"TEXTURE\",\n    \"TEXTURE0\",\n    \"TEXTURE1\",\n    \"TEXTURE10\",\n    \"TEXTURE11\",\n    \"TEXTURE12\",\n    \"TEXTURE13\",\n    \"TEXTURE14\",\n    \"TEXTURE15\",\n    \"TEXTURE16\",\n    \"TEXTURE17\",\n    \"TEXTURE18\",\n    \"TEXTURE19\",\n    \"TEXTURE2\",\n    \"TEXTURE20\",\n    \"TEXTURE21\",\n    \"TEXTURE22\",\n    \"TEXTURE23\",\n    \"TEXTURE24\",\n    \"TEXTURE25\",\n    \"TEXTURE26\",\n    \"TEXTURE27\",\n    \"TEXTURE28\",\n    \"TEXTURE29\",\n    \"TEXTURE3\",\n    \"TEXTURE30\",\n    \"TEXTURE31\",\n    \"TEXTURE4\",\n    \"TEXTURE5\",\n    \"TEXTURE6\",\n    \"TEXTURE7\",\n    \"TEXTURE8\",\n    \"TEXTURE9\",\n    \"TEXTURE_2D\",\n    \"TEXTURE_2D_ARRAY\",\n    \"TEXTURE_3D\",\n    \"TEXTURE_BASE_LEVEL\",\n    \"TEXTURE_BINDING\",\n    \"TEXTURE_BINDING_2D\",\n    \"TEXTURE_BINDING_2D_ARRAY\",\n    \"TEXTURE_BINDING_3D\",\n    \"TEXTURE_BINDING_CUBE_MAP\",\n    \"TEXTURE_COMPARE_FUNC\",\n    \"TEXTURE_COMPARE_MODE\",\n    \"TEXTURE_CUBE_MAP\",\n    \"TEXTURE_CUBE_MAP_NEGATIVE_X\",\n    \"TEXTURE_CUBE_MAP_NEGATIVE_Y\",\n    \"TEXTURE_CUBE_MAP_NEGATIVE_Z\",\n    \"TEXTURE_CUBE_MAP_POSITIVE_X\",\n    \"TEXTURE_CUBE_MAP_POSITIVE_Y\",\n    \"TEXTURE_CUBE_MAP_POSITIVE_Z\",\n    \"TEXTURE_IMMUTABLE_FORMAT\",\n    \"TEXTURE_IMMUTABLE_LEVELS\",\n    \"TEXTURE_MAG_FILTER\",\n    \"TEXTURE_MAX_ANISOTROPY_EXT\",\n    \"TEXTURE_MAX_LEVEL\",\n    \"TEXTURE_MAX_LOD\",\n    \"TEXTURE_MIN_FILTER\",\n    \"TEXTURE_MIN_LOD\",\n    \"TEXTURE_WRAP_R\",\n    \"TEXTURE_WRAP_S\",\n    \"TEXTURE_WRAP_T\",\n    \"TEXT_NODE\",\n    \"TIMEOUT\",\n    \"TIMEOUT_ERR\",\n    \"TIMEOUT_EXPIRED\",\n    \"TIMEOUT_IGNORED\",\n    \"TOO_LARGE_ERR\",\n    \"TRANSACTION_INACTIVE_ERR\",\n    \"TRANSFORM_FEEDBACK\",\n    \"TRANSFORM_FEEDBACK_ACTIVE\",\n    \"TRANSFORM_FEEDBACK_BINDING\",\n    \"TRANSFORM_FEEDBACK_BUFFER\",\n    \"TRANSFORM_FEEDBACK_BUFFER_BINDING\",\n    \"TRANSFORM_FEEDBACK_BUFFER_MODE\",\n    \"TRANSFORM_FEEDBACK_BUFFER_SIZE\",\n    \"TRANSFORM_FEEDBACK_BUFFER_START\",\n    \"TRANSFORM_FEEDBACK_PAUSED\",\n    \"TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN\",\n    \"TRANSFORM_FEEDBACK_VARYINGS\",\n    \"TRIANGLE\",\n    \"TRIANGLES\",\n    \"TRIANGLE_FAN\",\n    \"TRIANGLE_STRIP\",\n    \"TYPE_BACK_FORWARD\",\n    \"TYPE_ERR\",\n    \"TYPE_MISMATCH_ERR\",\n    \"TYPE_NAVIGATE\",\n    \"TYPE_RELOAD\",\n    \"TYPE_RESERVED\",\n    \"Table\",\n    \"TaskAttributionTiming\",\n    \"Text\",\n    \"TextDecoder\",\n    \"TextDecoderStream\",\n    \"TextEncoder\",\n    \"TextEncoderStream\",\n    \"TextEvent\",\n    \"TextMetrics\",\n    \"TextTrack\",\n    \"TextTrackCue\",\n    \"TextTrackCueList\",\n    \"TextTrackList\",\n    \"TimeEvent\",\n    \"TimeRanges\",\n    \"Touch\",\n    \"TouchEvent\",\n    \"TouchList\",\n    \"TrackEvent\",\n    \"TransformStream\",\n    \"TransitionEvent\",\n    \"TreeWalker\",\n    \"TrustedHTML\",\n    \"TrustedScript\",\n    \"TrustedScriptURL\",\n    \"TrustedTypePolicy\",\n    \"TrustedTypePolicyFactory\",\n    \"TypeError\",\n    \"TypedObject\",\n    \"U2F\",\n    \"UIEvent\",\n    \"UNCACHED\",\n    \"UNIFORM\",\n    \"UNIFORM_ARRAY_STRIDE\",\n    \"UNIFORM_BLOCK_ACTIVE_UNIFORMS\",\n    \"UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES\",\n    \"UNIFORM_BLOCK_BINDING\",\n    \"UNIFORM_BLOCK_DATA_SIZE\",\n    \"UNIFORM_BLOCK_INDEX\",\n    \"UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER\",\n    \"UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER\",\n    \"UNIFORM_BUFFER\",\n    \"UNIFORM_BUFFER_BINDING\",\n    \"UNIFORM_BUFFER_OFFSET_ALIGNMENT\",\n    \"UNIFORM_BUFFER_SIZE\",\n    \"UNIFORM_BUFFER_START\",\n    \"UNIFORM_IS_ROW_MAJOR\",\n    \"UNIFORM_MATRIX_STRIDE\",\n    \"UNIFORM_OFFSET\",\n    \"UNIFORM_SIZE\",\n    \"UNIFORM_TYPE\",\n    \"UNKNOWN_ERR\",\n    \"UNKNOWN_RULE\",\n    \"UNMASKED_RENDERER_WEBGL\",\n    \"UNMASKED_VENDOR_WEBGL\",\n    \"UNORDERED_NODE_ITERATOR_TYPE\",\n    \"UNORDERED_NODE_SNAPSHOT_TYPE\",\n    \"UNPACK_ALIGNMENT\",\n    \"UNPACK_COLORSPACE_CONVERSION_WEBGL\",\n    \"UNPACK_FLIP_Y_WEBGL\",\n    \"UNPACK_IMAGE_HEIGHT\",\n    \"UNPACK_PREMULTIPLY_ALPHA_WEBGL\",\n    \"UNPACK_ROW_LENGTH\",\n    \"UNPACK_SKIP_IMAGES\",\n    \"UNPACK_SKIP_PIXELS\",\n    \"UNPACK_SKIP_ROWS\",\n    \"UNSCHEDULED_STATE\",\n    \"UNSENT\",\n    \"UNSIGNALED\",\n    \"UNSIGNED_BYTE\",\n    \"UNSIGNED_INT\",\n    \"UNSIGNED_INT_10F_11F_11F_REV\",\n    \"UNSIGNED_INT_24_8\",\n    \"UNSIGNED_INT_2_10_10_10_REV\",\n    \"UNSIGNED_INT_5_9_9_9_REV\",\n    \"UNSIGNED_INT_SAMPLER_2D\",\n    \"UNSIGNED_INT_SAMPLER_2D_ARRAY\",\n    \"UNSIGNED_INT_SAMPLER_3D\",\n    \"UNSIGNED_INT_SAMPLER_CUBE\",\n    \"UNSIGNED_INT_VEC2\",\n    \"UNSIGNED_INT_VEC3\",\n    \"UNSIGNED_INT_VEC4\",\n    \"UNSIGNED_NORMALIZED\",\n    \"UNSIGNED_SHORT\",\n    \"UNSIGNED_SHORT_4_4_4_4\",\n    \"UNSIGNED_SHORT_5_5_5_1\",\n    \"UNSIGNED_SHORT_5_6_5\",\n    \"UNSPECIFIED_EVENT_TYPE_ERR\",\n    \"UPDATEREADY\",\n    \"URIError\",\n    \"URL\",\n    \"URLSearchParams\",\n    \"URLUnencoded\",\n    \"URL_MISMATCH_ERR\",\n    \"USB\",\n    \"USBAlternateInterface\",\n    \"USBConfiguration\",\n    \"USBConnectionEvent\",\n    \"USBDevice\",\n    \"USBEndpoint\",\n    \"USBInTransferResult\",\n    \"USBInterface\",\n    \"USBIsochronousInTransferPacket\",\n    \"USBIsochronousInTransferResult\",\n    \"USBIsochronousOutTransferPacket\",\n    \"USBIsochronousOutTransferResult\",\n    \"USBOutTransferResult\",\n    \"UTC\",\n    \"Uint16Array\",\n    \"Uint32Array\",\n    \"Uint8Array\",\n    \"Uint8ClampedArray\",\n    \"UserActivation\",\n    \"UserMessageHandler\",\n    \"UserMessageHandlersNamespace\",\n    \"UserProximityEvent\",\n    \"VALIDATE_STATUS\",\n    \"VALIDATION_ERR\",\n    \"VARIABLES_RULE\",\n    \"VENDOR\",\n    \"VERSION\",\n    \"VERSION_CHANGE\",\n    \"VERSION_ERR\",\n    \"VERTEX\",\n    \"VERTEX_ARRAY_BINDING\",\n    \"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING\",\n    \"VERTEX_ATTRIB_ARRAY_DIVISOR\",\n    \"VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE\",\n    \"VERTEX_ATTRIB_ARRAY_ENABLED\",\n    \"VERTEX_ATTRIB_ARRAY_INTEGER\",\n    \"VERTEX_ATTRIB_ARRAY_NORMALIZED\",\n    \"VERTEX_ATTRIB_ARRAY_POINTER\",\n    \"VERTEX_ATTRIB_ARRAY_SIZE\",\n    \"VERTEX_ATTRIB_ARRAY_STRIDE\",\n    \"VERTEX_ATTRIB_ARRAY_TYPE\",\n    \"VERTEX_SHADER\",\n    \"VERTICAL\",\n    \"VERTICAL_AXIS\",\n    \"VER_ERR\",\n    \"VIEWPORT\",\n    \"VIEWPORT_RULE\",\n    \"VRDisplay\",\n    \"VRDisplayCapabilities\",\n    \"VRDisplayEvent\",\n    \"VREyeParameters\",\n    \"VRFieldOfView\",\n    \"VRFrameData\",\n    \"VRPose\",\n    \"VRStageParameters\",\n    \"VTTCue\",\n    \"VTTRegion\",\n    \"ValidityState\",\n    \"VideoPlaybackQuality\",\n    \"VideoStreamTrack\",\n    \"VisualViewport\",\n    \"WAIT_FAILED\",\n    \"WEBKIT_FILTER_RULE\",\n    \"WEBKIT_KEYFRAMES_RULE\",\n    \"WEBKIT_KEYFRAME_RULE\",\n    \"WEBKIT_REGION_RULE\",\n    \"WRITE\",\n    \"WRONG_DOCUMENT_ERR\",\n    \"WakeLock\",\n    \"WakeLockSentinel\",\n    \"WasmAnyRef\",\n    \"WaveShaperNode\",\n    \"WeakMap\",\n    \"WeakRef\",\n    \"WeakSet\",\n    \"WebAssembly\",\n    \"WebGL2RenderingContext\",\n    \"WebGLActiveInfo\",\n    \"WebGLBuffer\",\n    \"WebGLContextEvent\",\n    \"WebGLFramebuffer\",\n    \"WebGLProgram\",\n    \"WebGLQuery\",\n    \"WebGLRenderbuffer\",\n    \"WebGLRenderingContext\",\n    \"WebGLSampler\",\n    \"WebGLShader\",\n    \"WebGLShaderPrecisionFormat\",\n    \"WebGLSync\",\n    \"WebGLTexture\",\n    \"WebGLTransformFeedback\",\n    \"WebGLUniformLocation\",\n    \"WebGLVertexArray\",\n    \"WebGLVertexArrayObject\",\n    \"WebKitAnimationEvent\",\n    \"WebKitBlobBuilder\",\n    \"WebKitCSSFilterRule\",\n    \"WebKitCSSFilterValue\",\n    \"WebKitCSSKeyframeRule\",\n    \"WebKitCSSKeyframesRule\",\n    \"WebKitCSSMatrix\",\n    \"WebKitCSSRegionRule\",\n    \"WebKitCSSTransformValue\",\n    \"WebKitDataCue\",\n    \"WebKitGamepad\",\n    \"WebKitMediaKeyError\",\n    \"WebKitMediaKeyMessageEvent\",\n    \"WebKitMediaKeySession\",\n    \"WebKitMediaKeys\",\n    \"WebKitMediaSource\",\n    \"WebKitMutationObserver\",\n    \"WebKitNamespace\",\n    \"WebKitPlaybackTargetAvailabilityEvent\",\n    \"WebKitPoint\",\n    \"WebKitShadowRoot\",\n    \"WebKitSourceBuffer\",\n    \"WebKitSourceBufferList\",\n    \"WebKitTransitionEvent\",\n    \"WebSocket\",\n    \"WebkitAlignContent\",\n    \"WebkitAlignItems\",\n    \"WebkitAlignSelf\",\n    \"WebkitAnimation\",\n    \"WebkitAnimationDelay\",\n    \"WebkitAnimationDirection\",\n    \"WebkitAnimationDuration\",\n    \"WebkitAnimationFillMode\",\n    \"WebkitAnimationIterationCount\",\n    \"WebkitAnimationName\",\n    \"WebkitAnimationPlayState\",\n    \"WebkitAnimationTimingFunction\",\n    \"WebkitAppearance\",\n    \"WebkitBackfaceVisibility\",\n    \"WebkitBackgroundClip\",\n    \"WebkitBackgroundOrigin\",\n    \"WebkitBackgroundSize\",\n    \"WebkitBorderBottomLeftRadius\",\n    \"WebkitBorderBottomRightRadius\",\n    \"WebkitBorderImage\",\n    \"WebkitBorderRadius\",\n    \"WebkitBorderTopLeftRadius\",\n    \"WebkitBorderTopRightRadius\",\n    \"WebkitBoxAlign\",\n    \"WebkitBoxDirection\",\n    \"WebkitBoxFlex\",\n    \"WebkitBoxOrdinalGroup\",\n    \"WebkitBoxOrient\",\n    \"WebkitBoxPack\",\n    \"WebkitBoxShadow\",\n    \"WebkitBoxSizing\",\n    \"WebkitFilter\",\n    \"WebkitFlex\",\n    \"WebkitFlexBasis\",\n    \"WebkitFlexDirection\",\n    \"WebkitFlexFlow\",\n    \"WebkitFlexGrow\",\n    \"WebkitFlexShrink\",\n    \"WebkitFlexWrap\",\n    \"WebkitJustifyContent\",\n    \"WebkitLineClamp\",\n    \"WebkitMask\",\n    \"WebkitMaskClip\",\n    \"WebkitMaskComposite\",\n    \"WebkitMaskImage\",\n    \"WebkitMaskOrigin\",\n    \"WebkitMaskPosition\",\n    \"WebkitMaskPositionX\",\n    \"WebkitMaskPositionY\",\n    \"WebkitMaskRepeat\",\n    \"WebkitMaskSize\",\n    \"WebkitOrder\",\n    \"WebkitPerspective\",\n    \"WebkitPerspectiveOrigin\",\n    \"WebkitTextFillColor\",\n    \"WebkitTextSizeAdjust\",\n    \"WebkitTextStroke\",\n    \"WebkitTextStrokeColor\",\n    \"WebkitTextStrokeWidth\",\n    \"WebkitTransform\",\n    \"WebkitTransformOrigin\",\n    \"WebkitTransformStyle\",\n    \"WebkitTransition\",\n    \"WebkitTransitionDelay\",\n    \"WebkitTransitionDuration\",\n    \"WebkitTransitionProperty\",\n    \"WebkitTransitionTimingFunction\",\n    \"WebkitUserSelect\",\n    \"WheelEvent\",\n    \"Window\",\n    \"Worker\",\n    \"Worklet\",\n    \"WritableStream\",\n    \"WritableStreamDefaultWriter\",\n    \"XMLDocument\",\n    \"XMLHttpRequest\",\n    \"XMLHttpRequestEventTarget\",\n    \"XMLHttpRequestException\",\n    \"XMLHttpRequestProgressEvent\",\n    \"XMLHttpRequestUpload\",\n    \"XMLSerializer\",\n    \"XMLStylesheetProcessingInstruction\",\n    \"XPathEvaluator\",\n    \"XPathException\",\n    \"XPathExpression\",\n    \"XPathNSResolver\",\n    \"XPathResult\",\n    \"XRBoundedReferenceSpace\",\n    \"XRDOMOverlayState\",\n    \"XRFrame\",\n    \"XRHitTestResult\",\n    \"XRHitTestSource\",\n    \"XRInputSource\",\n    \"XRInputSourceArray\",\n    \"XRInputSourceEvent\",\n    \"XRInputSourcesChangeEvent\",\n    \"XRLayer\",\n    \"XRPose\",\n    \"XRRay\",\n    \"XRReferenceSpace\",\n    \"XRReferenceSpaceEvent\",\n    \"XRRenderState\",\n    \"XRRigidTransform\",\n    \"XRSession\",\n    \"XRSessionEvent\",\n    \"XRSpace\",\n    \"XRSystem\",\n    \"XRTransientInputHitTestResult\",\n    \"XRTransientInputHitTestSource\",\n    \"XRView\",\n    \"XRViewerPose\",\n    \"XRViewport\",\n    \"XRWebGLLayer\",\n    \"XSLTProcessor\",\n    \"ZERO\",\n    \"_XD0M_\",\n    \"_YD0M_\",\n    \"__brand\",\n    \"__defineGetter__\",\n    \"__defineSetter__\",\n    \"__lookupGetter__\",\n    \"__lookupSetter__\",\n    \"__opera\",\n    \"__proto__\",\n    \"_browserjsran\",\n    \"a\",\n    \"aLink\",\n    \"abbr\",\n    \"abort\",\n    \"aborted\",\n    \"abs\",\n    \"absolute\",\n    \"acceleration\",\n    \"accelerationIncludingGravity\",\n    \"accelerator\",\n    \"accept\",\n    \"acceptCharset\",\n    \"acceptNode\",\n    \"access\",\n    \"accessKey\",\n    \"accessKeyLabel\",\n    \"accuracy\",\n    \"acos\",\n    \"acosh\",\n    \"action\",\n    \"actionURL\",\n    \"actions\",\n    \"activated\",\n    \"active\",\n    \"activeCues\",\n    \"activeElement\",\n    \"activeSourceBuffers\",\n    \"activeSourceCount\",\n    \"activeTexture\",\n    \"activeVRDisplays\",\n    \"actualBoundingBoxAscent\",\n    \"actualBoundingBoxDescent\",\n    \"actualBoundingBoxLeft\",\n    \"actualBoundingBoxRight\",\n    \"add\",\n    \"addAll\",\n    \"addBehavior\",\n    \"addCandidate\",\n    \"addColorStop\",\n    \"addCue\",\n    \"addElement\",\n    \"addEventListener\",\n    \"addFilter\",\n    \"addFromString\",\n    \"addFromUri\",\n    \"addIceCandidate\",\n    \"addImport\",\n    \"addListener\",\n    \"addModule\",\n    \"addNamed\",\n    \"addPageRule\",\n    \"addPath\",\n    \"addPointer\",\n    \"addRange\",\n    \"addRegion\",\n    \"addRule\",\n    \"addSearchEngine\",\n    \"addSourceBuffer\",\n    \"addStream\",\n    \"addTextTrack\",\n    \"addTrack\",\n    \"addTransceiver\",\n    \"addWakeLockListener\",\n    \"added\",\n    \"addedNodes\",\n    \"additionalName\",\n    \"additiveSymbols\",\n    \"addons\",\n    \"address\",\n    \"addressLine\",\n    \"addressModeU\",\n    \"addressModeV\",\n    \"addressModeW\",\n    \"adoptNode\",\n    \"adoptedStyleSheets\",\n    \"adr\",\n    \"advance\",\n    \"after\",\n    \"album\",\n    \"alert\",\n    \"algorithm\",\n    \"align\",\n    \"align-content\",\n    \"align-items\",\n    \"align-self\",\n    \"alignContent\",\n    \"alignItems\",\n    \"alignSelf\",\n    \"alignmentBaseline\",\n    \"alinkColor\",\n    \"all\",\n    \"allSettled\",\n    \"allow\",\n    \"allowFullscreen\",\n    \"allowPaymentRequest\",\n    \"allowedDirections\",\n    \"allowedFeatures\",\n    \"allowedToPlay\",\n    \"allowsFeature\",\n    \"alpha\",\n    \"alphaMode\",\n    \"alphaToCoverageEnabled\",\n    \"alt\",\n    \"altGraphKey\",\n    \"altHtml\",\n    \"altKey\",\n    \"altLeft\",\n    \"alternate\",\n    \"alternateSetting\",\n    \"alternates\",\n    \"altitude\",\n    \"altitudeAccuracy\",\n    \"amplitude\",\n    \"ancestorOrigins\",\n    \"anchor\",\n    \"anchorNode\",\n    \"anchorOffset\",\n    \"anchors\",\n    \"and\",\n    \"angle\",\n    \"angularAcceleration\",\n    \"angularVelocity\",\n    \"animVal\",\n    \"animate\",\n    \"animatedInstanceRoot\",\n    \"animatedNormalizedPathSegList\",\n    \"animatedPathSegList\",\n    \"animatedPoints\",\n    \"animation\",\n    \"animation-delay\",\n    \"animation-direction\",\n    \"animation-duration\",\n    \"animation-fill-mode\",\n    \"animation-iteration-count\",\n    \"animation-name\",\n    \"animation-play-state\",\n    \"animation-timing-function\",\n    \"animationDelay\",\n    \"animationDirection\",\n    \"animationDuration\",\n    \"animationFillMode\",\n    \"animationIterationCount\",\n    \"animationName\",\n    \"animationPlayState\",\n    \"animationStartTime\",\n    \"animationTimingFunction\",\n    \"animationsPaused\",\n    \"anniversary\",\n    \"antialias\",\n    \"anticipatedRemoval\",\n    \"any\",\n    \"app\",\n    \"appCodeName\",\n    \"appMinorVersion\",\n    \"appName\",\n    \"appNotifications\",\n    \"appVersion\",\n    \"appearance\",\n    \"append\",\n    \"appendBuffer\",\n    \"appendChild\",\n    \"appendData\",\n    \"appendItem\",\n    \"appendMedium\",\n    \"appendNamed\",\n    \"appendRule\",\n    \"appendStream\",\n    \"appendWindowEnd\",\n    \"appendWindowStart\",\n    \"applets\",\n    \"applicationCache\",\n    \"applicationServerKey\",\n    \"apply\",\n    \"applyConstraints\",\n    \"applyElement\",\n    \"arc\",\n    \"arcTo\",\n    \"architecture\",\n    \"archive\",\n    \"areas\",\n    \"arguments\",\n    \"ariaAtomic\",\n    \"ariaAutoComplete\",\n    \"ariaBusy\",\n    \"ariaChecked\",\n    \"ariaColCount\",\n    \"ariaColIndex\",\n    \"ariaColSpan\",\n    \"ariaCurrent\",\n    \"ariaDescription\",\n    \"ariaDisabled\",\n    \"ariaExpanded\",\n    \"ariaHasPopup\",\n    \"ariaHidden\",\n    \"ariaKeyShortcuts\",\n    \"ariaLabel\",\n    \"ariaLevel\",\n    \"ariaLive\",\n    \"ariaModal\",\n    \"ariaMultiLine\",\n    \"ariaMultiSelectable\",\n    \"ariaOrientation\",\n    \"ariaPlaceholder\",\n    \"ariaPosInSet\",\n    \"ariaPressed\",\n    \"ariaReadOnly\",\n    \"ariaRelevant\",\n    \"ariaRequired\",\n    \"ariaRoleDescription\",\n    \"ariaRowCount\",\n    \"ariaRowIndex\",\n    \"ariaRowSpan\",\n    \"ariaSelected\",\n    \"ariaSetSize\",\n    \"ariaSort\",\n    \"ariaValueMax\",\n    \"ariaValueMin\",\n    \"ariaValueNow\",\n    \"ariaValueText\",\n    \"arrayBuffer\",\n    \"arrayLayerCount\",\n    \"arrayStride\",\n    \"artist\",\n    \"artwork\",\n    \"as\",\n    \"asIntN\",\n    \"asUintN\",\n    \"asin\",\n    \"asinh\",\n    \"aspect\",\n    \"assert\",\n    \"assign\",\n    \"assignedElements\",\n    \"assignedNodes\",\n    \"assignedSlot\",\n    \"async\",\n    \"asyncIterator\",\n    \"atEnd\",\n    \"atan\",\n    \"atan2\",\n    \"atanh\",\n    \"atob\",\n    \"attachEvent\",\n    \"attachInternals\",\n    \"attachShader\",\n    \"attachShadow\",\n    \"attachments\",\n    \"attack\",\n    \"attestationObject\",\n    \"attrChange\",\n    \"attrName\",\n    \"attributeFilter\",\n    \"attributeName\",\n    \"attributeNamespace\",\n    \"attributeOldValue\",\n    \"attributeStyleMap\",\n    \"attributes\",\n    \"attribution\",\n    \"audioBitsPerSecond\",\n    \"audioTracks\",\n    \"audioWorklet\",\n    \"authenticatedSignedWrites\",\n    \"authenticatorData\",\n    \"autoIncrement\",\n    \"autobuffer\",\n    \"autocapitalize\",\n    \"autocomplete\",\n    \"autocorrect\",\n    \"autofocus\",\n    \"automationRate\",\n    \"autoplay\",\n    \"availHeight\",\n    \"availLeft\",\n    \"availTop\",\n    \"availWidth\",\n    \"availability\",\n    \"available\",\n    \"aversion\",\n    \"ax\",\n    \"axes\",\n    \"axis\",\n    \"ay\",\n    \"azimuth\",\n    \"b\",\n    \"back\",\n    \"backface-visibility\",\n    \"backfaceVisibility\",\n    \"background\",\n    \"background-attachment\",\n    \"background-blend-mode\",\n    \"background-clip\",\n    \"background-color\",\n    \"background-image\",\n    \"background-origin\",\n    \"background-position\",\n    \"background-position-x\",\n    \"background-position-y\",\n    \"background-repeat\",\n    \"background-size\",\n    \"backgroundAttachment\",\n    \"backgroundBlendMode\",\n    \"backgroundClip\",\n    \"backgroundColor\",\n    \"backgroundFetch\",\n    \"backgroundImage\",\n    \"backgroundOrigin\",\n    \"backgroundPosition\",\n    \"backgroundPositionX\",\n    \"backgroundPositionY\",\n    \"backgroundRepeat\",\n    \"backgroundSize\",\n    \"badInput\",\n    \"badge\",\n    \"balance\",\n    \"baseArrayLayer\",\n    \"baseFrequencyX\",\n    \"baseFrequencyY\",\n    \"baseLatency\",\n    \"baseLayer\",\n    \"baseMipLevel\",\n    \"baseNode\",\n    \"baseOffset\",\n    \"baseURI\",\n    \"baseVal\",\n    \"baselineShift\",\n    \"battery\",\n    \"bday\",\n    \"before\",\n    \"beginComputePass\",\n    \"beginElement\",\n    \"beginElementAt\",\n    \"beginOcclusionQuery\",\n    \"beginPath\",\n    \"beginQuery\",\n    \"beginRenderPass\",\n    \"beginTransformFeedback\",\n    \"beginningOfPassWriteIndex\",\n    \"behavior\",\n    \"behaviorCookie\",\n    \"behaviorPart\",\n    \"behaviorUrns\",\n    \"beta\",\n    \"bezierCurveTo\",\n    \"bgColor\",\n    \"bgProperties\",\n    \"bias\",\n    \"big\",\n    \"bigint64\",\n    \"biguint64\",\n    \"binaryType\",\n    \"bind\",\n    \"bindAttribLocation\",\n    \"bindBuffer\",\n    \"bindBufferBase\",\n    \"bindBufferRange\",\n    \"bindFramebuffer\",\n    \"bindGroupLayouts\",\n    \"bindRenderbuffer\",\n    \"bindSampler\",\n    \"bindTexture\",\n    \"bindTransformFeedback\",\n    \"bindVertexArray\",\n    \"binding\",\n    \"bitness\",\n    \"blend\",\n    \"blendColor\",\n    \"blendEquation\",\n    \"blendEquationSeparate\",\n    \"blendFunc\",\n    \"blendFuncSeparate\",\n    \"blink\",\n    \"blitFramebuffer\",\n    \"blob\",\n    \"block-size\",\n    \"blockDirection\",\n    \"blockSize\",\n    \"blockedURI\",\n    \"blue\",\n    \"bluetooth\",\n    \"blur\",\n    \"body\",\n    \"bodyUsed\",\n    \"bold\",\n    \"bookmarks\",\n    \"booleanValue\",\n    \"border\",\n    \"border-block\",\n    \"border-block-color\",\n    \"border-block-end\",\n    \"border-block-end-color\",\n    \"border-block-end-style\",\n    \"border-block-end-width\",\n    \"border-block-start\",\n    \"border-block-start-color\",\n    \"border-block-start-style\",\n    \"border-block-start-width\",\n    \"border-block-style\",\n    \"border-block-width\",\n    \"border-bottom\",\n    \"border-bottom-color\",\n    \"border-bottom-left-radius\",\n    \"border-bottom-right-radius\",\n    \"border-bottom-style\",\n    \"border-bottom-width\",\n    \"border-collapse\",\n    \"border-color\",\n    \"border-end-end-radius\",\n    \"border-end-start-radius\",\n    \"border-image\",\n    \"border-image-outset\",\n    \"border-image-repeat\",\n    \"border-image-slice\",\n    \"border-image-source\",\n    \"border-image-width\",\n    \"border-inline\",\n    \"border-inline-color\",\n    \"border-inline-end\",\n    \"border-inline-end-color\",\n    \"border-inline-end-style\",\n    \"border-inline-end-width\",\n    \"border-inline-start\",\n    \"border-inline-start-color\",\n    \"border-inline-start-style\",\n    \"border-inline-start-width\",\n    \"border-inline-style\",\n    \"border-inline-width\",\n    \"border-left\",\n    \"border-left-color\",\n    \"border-left-style\",\n    \"border-left-width\",\n    \"border-radius\",\n    \"border-right\",\n    \"border-right-color\",\n    \"border-right-style\",\n    \"border-right-width\",\n    \"border-spacing\",\n    \"border-start-end-radius\",\n    \"border-start-start-radius\",\n    \"border-style\",\n    \"border-top\",\n    \"border-top-color\",\n    \"border-top-left-radius\",\n    \"border-top-right-radius\",\n    \"border-top-style\",\n    \"border-top-width\",\n    \"border-width\",\n    \"borderBlock\",\n    \"borderBlockColor\",\n    \"borderBlockEnd\",\n    \"borderBlockEndColor\",\n    \"borderBlockEndStyle\",\n    \"borderBlockEndWidth\",\n    \"borderBlockStart\",\n    \"borderBlockStartColor\",\n    \"borderBlockStartStyle\",\n    \"borderBlockStartWidth\",\n    \"borderBlockStyle\",\n    \"borderBlockWidth\",\n    \"borderBottom\",\n    \"borderBottomColor\",\n    \"borderBottomLeftRadius\",\n    \"borderBottomRightRadius\",\n    \"borderBottomStyle\",\n    \"borderBottomWidth\",\n    \"borderBoxSize\",\n    \"borderCollapse\",\n    \"borderColor\",\n    \"borderColorDark\",\n    \"borderColorLight\",\n    \"borderEndEndRadius\",\n    \"borderEndStartRadius\",\n    \"borderImage\",\n    \"borderImageOutset\",\n    \"borderImageRepeat\",\n    \"borderImageSlice\",\n    \"borderImageSource\",\n    \"borderImageWidth\",\n    \"borderInline\",\n    \"borderInlineColor\",\n    \"borderInlineEnd\",\n    \"borderInlineEndColor\",\n    \"borderInlineEndStyle\",\n    \"borderInlineEndWidth\",\n    \"borderInlineStart\",\n    \"borderInlineStartColor\",\n    \"borderInlineStartStyle\",\n    \"borderInlineStartWidth\",\n    \"borderInlineStyle\",\n    \"borderInlineWidth\",\n    \"borderLeft\",\n    \"borderLeftColor\",\n    \"borderLeftStyle\",\n    \"borderLeftWidth\",\n    \"borderRadius\",\n    \"borderRight\",\n    \"borderRightColor\",\n    \"borderRightStyle\",\n    \"borderRightWidth\",\n    \"borderSpacing\",\n    \"borderStartEndRadius\",\n    \"borderStartStartRadius\",\n    \"borderStyle\",\n    \"borderTop\",\n    \"borderTopColor\",\n    \"borderTopLeftRadius\",\n    \"borderTopRightRadius\",\n    \"borderTopStyle\",\n    \"borderTopWidth\",\n    \"borderWidth\",\n    \"bottom\",\n    \"bottomMargin\",\n    \"bound\",\n    \"boundElements\",\n    \"boundingClientRect\",\n    \"boundingHeight\",\n    \"boundingLeft\",\n    \"boundingTop\",\n    \"boundingWidth\",\n    \"bounds\",\n    \"boundsGeometry\",\n    \"box-decoration-break\",\n    \"box-shadow\",\n    \"box-sizing\",\n    \"boxDecorationBreak\",\n    \"boxShadow\",\n    \"boxSizing\",\n    \"brand\",\n    \"brands\",\n    \"break-after\",\n    \"break-before\",\n    \"break-inside\",\n    \"breakAfter\",\n    \"breakBefore\",\n    \"breakInside\",\n    \"broadcast\",\n    \"browserLanguage\",\n    \"btoa\",\n    \"bubbles\",\n    \"buffer\",\n    \"bufferData\",\n    \"bufferDepth\",\n    \"bufferSize\",\n    \"bufferSubData\",\n    \"buffered\",\n    \"bufferedAmount\",\n    \"bufferedAmountLowThreshold\",\n    \"buffers\",\n    \"buildID\",\n    \"buildNumber\",\n    \"button\",\n    \"buttonID\",\n    \"buttons\",\n    \"byteLength\",\n    \"byteOffset\",\n    \"bytesPerRow\",\n    \"bytesWritten\",\n    \"c\",\n    \"cache\",\n    \"caches\",\n    \"call\",\n    \"caller\",\n    \"canBeFormatted\",\n    \"canBeMounted\",\n    \"canBeShared\",\n    \"canHaveChildren\",\n    \"canHaveHTML\",\n    \"canInsertDTMF\",\n    \"canMakePayment\",\n    \"canPlayType\",\n    \"canPresent\",\n    \"canTrickleIceCandidates\",\n    \"cancel\",\n    \"cancelAndHoldAtTime\",\n    \"cancelAnimationFrame\",\n    \"cancelBubble\",\n    \"cancelIdleCallback\",\n    \"cancelScheduledValues\",\n    \"cancelVideoFrameCallback\",\n    \"cancelWatchAvailability\",\n    \"cancelable\",\n    \"candidate\",\n    \"canonicalUUID\",\n    \"canvas\",\n    \"capabilities\",\n    \"caption\",\n    \"caption-side\",\n    \"captionSide\",\n    \"capture\",\n    \"captureEvents\",\n    \"captureStackTrace\",\n    \"captureStream\",\n    \"caret-color\",\n    \"caretBidiLevel\",\n    \"caretColor\",\n    \"caretPositionFromPoint\",\n    \"caretRangeFromPoint\",\n    \"cast\",\n    \"catch\",\n    \"category\",\n    \"cbrt\",\n    \"cd\",\n    \"ceil\",\n    \"cellIndex\",\n    \"cellPadding\",\n    \"cellSpacing\",\n    \"cells\",\n    \"ch\",\n    \"chOff\",\n    \"chain\",\n    \"challenge\",\n    \"changeType\",\n    \"changedTouches\",\n    \"channel\",\n    \"channelCount\",\n    \"channelCountMode\",\n    \"channelInterpretation\",\n    \"char\",\n    \"charAt\",\n    \"charCode\",\n    \"charCodeAt\",\n    \"charIndex\",\n    \"charLength\",\n    \"characterData\",\n    \"characterDataOldValue\",\n    \"characterSet\",\n    \"characteristic\",\n    \"charging\",\n    \"chargingTime\",\n    \"charset\",\n    \"check\",\n    \"checkEnclosure\",\n    \"checkFramebufferStatus\",\n    \"checkIntersection\",\n    \"checkValidity\",\n    \"checked\",\n    \"childElementCount\",\n    \"childList\",\n    \"childNodes\",\n    \"children\",\n    \"chrome\",\n    \"ciphertext\",\n    \"cite\",\n    \"city\",\n    \"claimInterface\",\n    \"claimed\",\n    \"classList\",\n    \"className\",\n    \"classid\",\n    \"clear\",\n    \"clearAppBadge\",\n    \"clearAttributes\",\n    \"clearBuffer\",\n    \"clearBufferfi\",\n    \"clearBufferfv\",\n    \"clearBufferiv\",\n    \"clearBufferuiv\",\n    \"clearColor\",\n    \"clearData\",\n    \"clearDepth\",\n    \"clearHalt\",\n    \"clearImmediate\",\n    \"clearInterval\",\n    \"clearLiveSeekableRange\",\n    \"clearMarks\",\n    \"clearMaxGCPauseAccumulator\",\n    \"clearMeasures\",\n    \"clearParameters\",\n    \"clearRect\",\n    \"clearResourceTimings\",\n    \"clearShadow\",\n    \"clearStencil\",\n    \"clearTimeout\",\n    \"clearValue\",\n    \"clearWatch\",\n    \"click\",\n    \"clickCount\",\n    \"clientDataJSON\",\n    \"clientHeight\",\n    \"clientInformation\",\n    \"clientLeft\",\n    \"clientRect\",\n    \"clientRects\",\n    \"clientTop\",\n    \"clientWaitSync\",\n    \"clientWidth\",\n    \"clientX\",\n    \"clientY\",\n    \"clip\",\n    \"clip-path\",\n    \"clip-rule\",\n    \"clipBottom\",\n    \"clipLeft\",\n    \"clipPath\",\n    \"clipPathUnits\",\n    \"clipRight\",\n    \"clipRule\",\n    \"clipTop\",\n    \"clipboard\",\n    \"clipboardData\",\n    \"clone\",\n    \"cloneContents\",\n    \"cloneNode\",\n    \"cloneRange\",\n    \"close\",\n    \"closePath\",\n    \"closed\",\n    \"closest\",\n    \"clz\",\n    \"clz32\",\n    \"cm\",\n    \"cmp\",\n    \"code\",\n    \"codeBase\",\n    \"codePointAt\",\n    \"codeType\",\n    \"colSpan\",\n    \"collapse\",\n    \"collapseToEnd\",\n    \"collapseToStart\",\n    \"collapsed\",\n    \"collect\",\n    \"colno\",\n    \"color\",\n    \"color-adjust\",\n    \"color-interpolation\",\n    \"color-interpolation-filters\",\n    \"colorAdjust\",\n    \"colorAttachments\",\n    \"colorDepth\",\n    \"colorFormats\",\n    \"colorInterpolation\",\n    \"colorInterpolationFilters\",\n    \"colorMask\",\n    \"colorSpace\",\n    \"colorType\",\n    \"cols\",\n    \"column-count\",\n    \"column-fill\",\n    \"column-gap\",\n    \"column-rule\",\n    \"column-rule-color\",\n    \"column-rule-style\",\n    \"column-rule-width\",\n    \"column-span\",\n    \"column-width\",\n    \"columnCount\",\n    \"columnFill\",\n    \"columnGap\",\n    \"columnNumber\",\n    \"columnRule\",\n    \"columnRuleColor\",\n    \"columnRuleStyle\",\n    \"columnRuleWidth\",\n    \"columnSpan\",\n    \"columnWidth\",\n    \"columns\",\n    \"command\",\n    \"commit\",\n    \"commitPreferences\",\n    \"commitStyles\",\n    \"commonAncestorContainer\",\n    \"compact\",\n    \"compare\",\n    \"compareBoundaryPoints\",\n    \"compareDocumentPosition\",\n    \"compareEndPoints\",\n    \"compareExchange\",\n    \"compareNode\",\n    \"comparePoint\",\n    \"compatMode\",\n    \"compatible\",\n    \"compile\",\n    \"compileShader\",\n    \"compileStreaming\",\n    \"complete\",\n    \"component\",\n    \"componentFromPoint\",\n    \"composed\",\n    \"composedPath\",\n    \"composite\",\n    \"compositionEndOffset\",\n    \"compositionStartOffset\",\n    \"compressedTexImage2D\",\n    \"compressedTexImage3D\",\n    \"compressedTexSubImage2D\",\n    \"compressedTexSubImage3D\",\n    \"compute\",\n    \"computedStyleMap\",\n    \"concat\",\n    \"conditionText\",\n    \"coneInnerAngle\",\n    \"coneOuterAngle\",\n    \"coneOuterGain\",\n    \"configurable\",\n    \"configuration\",\n    \"configurationName\",\n    \"configurationValue\",\n    \"configurations\",\n    \"configure\",\n    \"confirm\",\n    \"confirmComposition\",\n    \"confirmSiteSpecificTrackingException\",\n    \"confirmWebWideTrackingException\",\n    \"connect\",\n    \"connectEnd\",\n    \"connectShark\",\n    \"connectStart\",\n    \"connected\",\n    \"connection\",\n    \"connectionList\",\n    \"connectionSpeed\",\n    \"connectionState\",\n    \"connections\",\n    \"console\",\n    \"consolidate\",\n    \"constants\",\n    \"constraint\",\n    \"constrictionActive\",\n    \"construct\",\n    \"constructor\",\n    \"contactID\",\n    \"contain\",\n    \"containerId\",\n    \"containerName\",\n    \"containerSrc\",\n    \"containerType\",\n    \"contains\",\n    \"containsNode\",\n    \"content\",\n    \"contentBoxSize\",\n    \"contentDocument\",\n    \"contentEditable\",\n    \"contentHint\",\n    \"contentOverflow\",\n    \"contentRect\",\n    \"contentScriptType\",\n    \"contentStyleType\",\n    \"contentType\",\n    \"contentWindow\",\n    \"context\",\n    \"contextMenu\",\n    \"contextmenu\",\n    \"continue\",\n    \"continuePrimaryKey\",\n    \"continuous\",\n    \"control\",\n    \"controlTransferIn\",\n    \"controlTransferOut\",\n    \"controller\",\n    \"controls\",\n    \"controlsList\",\n    \"convertPointFromNode\",\n    \"convertQuadFromNode\",\n    \"convertRectFromNode\",\n    \"convertToBlob\",\n    \"convertToSpecifiedUnits\",\n    \"cookie\",\n    \"cookieEnabled\",\n    \"coords\",\n    \"copyBufferSubData\",\n    \"copyBufferToBuffer\",\n    \"copyBufferToTexture\",\n    \"copyExternalImageToTexture\",\n    \"copyFromChannel\",\n    \"copyTexImage2D\",\n    \"copyTexSubImage2D\",\n    \"copyTexSubImage3D\",\n    \"copyTextureToBuffer\",\n    \"copyTextureToTexture\",\n    \"copyToChannel\",\n    \"copyWithin\",\n    \"correspondingElement\",\n    \"correspondingUseElement\",\n    \"corruptedVideoFrames\",\n    \"cos\",\n    \"cosh\",\n    \"count\",\n    \"countReset\",\n    \"counter-increment\",\n    \"counter-reset\",\n    \"counter-set\",\n    \"counterIncrement\",\n    \"counterReset\",\n    \"counterSet\",\n    \"country\",\n    \"cpuClass\",\n    \"cpuSleepAllowed\",\n    \"create\",\n    \"createAnalyser\",\n    \"createAnswer\",\n    \"createAttribute\",\n    \"createAttributeNS\",\n    \"createBindGroup\",\n    \"createBindGroupLayout\",\n    \"createBiquadFilter\",\n    \"createBuffer\",\n    \"createBufferSource\",\n    \"createCDATASection\",\n    \"createCSSStyleSheet\",\n    \"createCaption\",\n    \"createChannelMerger\",\n    \"createChannelSplitter\",\n    \"createCommandEncoder\",\n    \"createComment\",\n    \"createComputePipeline\",\n    \"createComputePipelineAsync\",\n    \"createConstantSource\",\n    \"createContextualFragment\",\n    \"createControlRange\",\n    \"createConvolver\",\n    \"createDTMFSender\",\n    \"createDataChannel\",\n    \"createDelay\",\n    \"createDelayNode\",\n    \"createDocument\",\n    \"createDocumentFragment\",\n    \"createDocumentType\",\n    \"createDynamicsCompressor\",\n    \"createElement\",\n    \"createElementNS\",\n    \"createEntityReference\",\n    \"createEvent\",\n    \"createEventObject\",\n    \"createExpression\",\n    \"createFramebuffer\",\n    \"createFunction\",\n    \"createGain\",\n    \"createGainNode\",\n    \"createHTML\",\n    \"createHTMLDocument\",\n    \"createIIRFilter\",\n    \"createImageBitmap\",\n    \"createImageData\",\n    \"createIndex\",\n    \"createJavaScriptNode\",\n    \"createLinearGradient\",\n    \"createMediaElementSource\",\n    \"createMediaKeys\",\n    \"createMediaStreamDestination\",\n    \"createMediaStreamSource\",\n    \"createMediaStreamTrackSource\",\n    \"createMutableFile\",\n    \"createNSResolver\",\n    \"createNodeIterator\",\n    \"createNotification\",\n    \"createObjectStore\",\n    \"createObjectURL\",\n    \"createOffer\",\n    \"createOscillator\",\n    \"createPanner\",\n    \"createPattern\",\n    \"createPeriodicWave\",\n    \"createPipelineLayout\",\n    \"createPolicy\",\n    \"createPopup\",\n    \"createProcessingInstruction\",\n    \"createProgram\",\n    \"createQuery\",\n    \"createQuerySet\",\n    \"createRadialGradient\",\n    \"createRange\",\n    \"createRangeCollection\",\n    \"createReader\",\n    \"createRenderBundleEncoder\",\n    \"createRenderPipeline\",\n    \"createRenderPipelineAsync\",\n    \"createRenderbuffer\",\n    \"createSVGAngle\",\n    \"createSVGLength\",\n    \"createSVGMatrix\",\n    \"createSVGNumber\",\n    \"createSVGPathSegArcAbs\",\n    \"createSVGPathSegArcRel\",\n    \"createSVGPathSegClosePath\",\n    \"createSVGPathSegCurvetoCubicAbs\",\n    \"createSVGPathSegCurvetoCubicRel\",\n    \"createSVGPathSegCurvetoCubicSmoothAbs\",\n    \"createSVGPathSegCurvetoCubicSmoothRel\",\n    \"createSVGPathSegCurvetoQuadraticAbs\",\n    \"createSVGPathSegCurvetoQuadraticRel\",\n    \"createSVGPathSegCurvetoQuadraticSmoothAbs\",\n    \"createSVGPathSegCurvetoQuadraticSmoothRel\",\n    \"createSVGPathSegLinetoAbs\",\n    \"createSVGPathSegLinetoHorizontalAbs\",\n    \"createSVGPathSegLinetoHorizontalRel\",\n    \"createSVGPathSegLinetoRel\",\n    \"createSVGPathSegLinetoVerticalAbs\",\n    \"createSVGPathSegLinetoVerticalRel\",\n    \"createSVGPathSegMovetoAbs\",\n    \"createSVGPathSegMovetoRel\",\n    \"createSVGPoint\",\n    \"createSVGRect\",\n    \"createSVGTransform\",\n    \"createSVGTransformFromMatrix\",\n    \"createSampler\",\n    \"createScript\",\n    \"createScriptProcessor\",\n    \"createScriptURL\",\n    \"createSession\",\n    \"createShader\",\n    \"createShaderModule\",\n    \"createShadowRoot\",\n    \"createStereoPanner\",\n    \"createStyleSheet\",\n    \"createTBody\",\n    \"createTFoot\",\n    \"createTHead\",\n    \"createTextNode\",\n    \"createTextRange\",\n    \"createTexture\",\n    \"createTouch\",\n    \"createTouchList\",\n    \"createTransformFeedback\",\n    \"createTreeWalker\",\n    \"createVertexArray\",\n    \"createView\",\n    \"createWaveShaper\",\n    \"creationTime\",\n    \"credentials\",\n    \"crossOrigin\",\n    \"crossOriginIsolated\",\n    \"crypto\",\n    \"csi\",\n    \"csp\",\n    \"cssFloat\",\n    \"cssRules\",\n    \"cssText\",\n    \"cssValueType\",\n    \"ctrlKey\",\n    \"ctrlLeft\",\n    \"cues\",\n    \"cullFace\",\n    \"cullMode\",\n    \"currentDirection\",\n    \"currentLocalDescription\",\n    \"currentNode\",\n    \"currentPage\",\n    \"currentRect\",\n    \"currentRemoteDescription\",\n    \"currentScale\",\n    \"currentScript\",\n    \"currentSrc\",\n    \"currentState\",\n    \"currentStyle\",\n    \"currentTarget\",\n    \"currentTime\",\n    \"currentTranslate\",\n    \"currentView\",\n    \"cursor\",\n    \"curve\",\n    \"customElements\",\n    \"customError\",\n    \"cx\",\n    \"cy\",\n    \"d\",\n    \"data\",\n    \"dataFld\",\n    \"dataFormatAs\",\n    \"dataLoss\",\n    \"dataLossMessage\",\n    \"dataPageSize\",\n    \"dataSrc\",\n    \"dataTransfer\",\n    \"database\",\n    \"databases\",\n    \"dataset\",\n    \"dateTime\",\n    \"db\",\n    \"debug\",\n    \"debuggerEnabled\",\n    \"declare\",\n    \"decode\",\n    \"decodeAudioData\",\n    \"decodeURI\",\n    \"decodeURIComponent\",\n    \"decodedBodySize\",\n    \"decoding\",\n    \"decodingInfo\",\n    \"decrypt\",\n    \"default\",\n    \"defaultCharset\",\n    \"defaultChecked\",\n    \"defaultMuted\",\n    \"defaultPlaybackRate\",\n    \"defaultPolicy\",\n    \"defaultPrevented\",\n    \"defaultQueue\",\n    \"defaultRequest\",\n    \"defaultSelected\",\n    \"defaultStatus\",\n    \"defaultURL\",\n    \"defaultValue\",\n    \"defaultView\",\n    \"defaultstatus\",\n    \"defer\",\n    \"define\",\n    \"defineMagicFunction\",\n    \"defineMagicVariable\",\n    \"defineProperties\",\n    \"defineProperty\",\n    \"deg\",\n    \"delay\",\n    \"delayTime\",\n    \"delegatesFocus\",\n    \"delete\",\n    \"deleteBuffer\",\n    \"deleteCaption\",\n    \"deleteCell\",\n    \"deleteContents\",\n    \"deleteData\",\n    \"deleteDatabase\",\n    \"deleteFramebuffer\",\n    \"deleteFromDocument\",\n    \"deleteIndex\",\n    \"deleteMedium\",\n    \"deleteObjectStore\",\n    \"deleteProgram\",\n    \"deleteProperty\",\n    \"deleteQuery\",\n    \"deleteRenderbuffer\",\n    \"deleteRow\",\n    \"deleteRule\",\n    \"deleteSampler\",\n    \"deleteShader\",\n    \"deleteSync\",\n    \"deleteTFoot\",\n    \"deleteTHead\",\n    \"deleteTexture\",\n    \"deleteTransformFeedback\",\n    \"deleteVertexArray\",\n    \"deliverChangeRecords\",\n    \"delivery\",\n    \"deliveryInfo\",\n    \"deliveryStatus\",\n    \"deliveryTimestamp\",\n    \"delta\",\n    \"deltaMode\",\n    \"deltaX\",\n    \"deltaY\",\n    \"deltaZ\",\n    \"dependentLocality\",\n    \"depthBias\",\n    \"depthBiasClamp\",\n    \"depthBiasSlopeScale\",\n    \"depthClearValue\",\n    \"depthCompare\",\n    \"depthFailOp\",\n    \"depthFar\",\n    \"depthFunc\",\n    \"depthLoadOp\",\n    \"depthMask\",\n    \"depthNear\",\n    \"depthOrArrayLayers\",\n    \"depthRange\",\n    \"depthReadOnly\",\n    \"depthStencil\",\n    \"depthStencilAttachment\",\n    \"depthStencilFormat\",\n    \"depthStoreOp\",\n    \"depthWriteEnabled\",\n    \"deref\",\n    \"deriveBits\",\n    \"deriveKey\",\n    \"description\",\n    \"deselectAll\",\n    \"designMode\",\n    \"desiredSize\",\n    \"destination\",\n    \"destinationURL\",\n    \"destroy\",\n    \"detach\",\n    \"detachEvent\",\n    \"detachShader\",\n    \"detail\",\n    \"details\",\n    \"detect\",\n    \"detune\",\n    \"device\",\n    \"deviceClass\",\n    \"deviceId\",\n    \"deviceMemory\",\n    \"devicePixelContentBoxSize\",\n    \"devicePixelRatio\",\n    \"deviceProtocol\",\n    \"deviceSubclass\",\n    \"deviceVersionMajor\",\n    \"deviceVersionMinor\",\n    \"deviceVersionSubminor\",\n    \"deviceXDPI\",\n    \"deviceYDPI\",\n    \"didTimeout\",\n    \"diffuseConstant\",\n    \"digest\",\n    \"dimension\",\n    \"dimensions\",\n    \"dir\",\n    \"dirName\",\n    \"direction\",\n    \"dirxml\",\n    \"disable\",\n    \"disablePictureInPicture\",\n    \"disableRemotePlayback\",\n    \"disableVertexAttribArray\",\n    \"disabled\",\n    \"dischargingTime\",\n    \"disconnect\",\n    \"disconnectShark\",\n    \"dispatchEvent\",\n    \"dispatchWorkgroups\",\n    \"dispatchWorkgroupsIndirect\",\n    \"display\",\n    \"displayId\",\n    \"displayName\",\n    \"disposition\",\n    \"distanceModel\",\n    \"div\",\n    \"divisor\",\n    \"djsapi\",\n    \"djsproxy\",\n    \"doImport\",\n    \"doNotTrack\",\n    \"doScroll\",\n    \"doctype\",\n    \"document\",\n    \"documentElement\",\n    \"documentMode\",\n    \"documentURI\",\n    \"dolphin\",\n    \"dolphinGameCenter\",\n    \"dolphininfo\",\n    \"dolphinmeta\",\n    \"domComplete\",\n    \"domContentLoadedEventEnd\",\n    \"domContentLoadedEventStart\",\n    \"domInteractive\",\n    \"domLoading\",\n    \"domOverlayState\",\n    \"domain\",\n    \"domainLookupEnd\",\n    \"domainLookupStart\",\n    \"dominant-baseline\",\n    \"dominantBaseline\",\n    \"done\",\n    \"dopplerFactor\",\n    \"dotAll\",\n    \"downDegrees\",\n    \"downlink\",\n    \"download\",\n    \"downloadTotal\",\n    \"downloaded\",\n    \"dpcm\",\n    \"dpi\",\n    \"dppx\",\n    \"dragDrop\",\n    \"draggable\",\n    \"draw\",\n    \"drawArrays\",\n    \"drawArraysInstanced\",\n    \"drawArraysInstancedANGLE\",\n    \"drawBuffers\",\n    \"drawCustomFocusRing\",\n    \"drawElements\",\n    \"drawElementsInstanced\",\n    \"drawElementsInstancedANGLE\",\n    \"drawFocusIfNeeded\",\n    \"drawImage\",\n    \"drawImageFromRect\",\n    \"drawIndexed\",\n    \"drawIndexedIndirect\",\n    \"drawIndirect\",\n    \"drawRangeElements\",\n    \"drawSystemFocusRing\",\n    \"drawingBufferHeight\",\n    \"drawingBufferWidth\",\n    \"dropEffect\",\n    \"droppedVideoFrames\",\n    \"dropzone\",\n    \"dstFactor\",\n    \"dtmf\",\n    \"dump\",\n    \"dumpProfile\",\n    \"duplicate\",\n    \"durability\",\n    \"duration\",\n    \"dvname\",\n    \"dvnum\",\n    \"dx\",\n    \"dy\",\n    \"dynsrc\",\n    \"e\",\n    \"edgeMode\",\n    \"effect\",\n    \"effectAllowed\",\n    \"effectiveDirective\",\n    \"effectiveType\",\n    \"elapsedTime\",\n    \"element\",\n    \"elementFromPoint\",\n    \"elementTiming\",\n    \"elements\",\n    \"elementsFromPoint\",\n    \"elevation\",\n    \"ellipse\",\n    \"em\",\n    \"email\",\n    \"embeds\",\n    \"emma\",\n    \"empty\",\n    \"empty-cells\",\n    \"emptyCells\",\n    \"emptyHTML\",\n    \"emptyScript\",\n    \"emulatedPosition\",\n    \"enable\",\n    \"enableBackground\",\n    \"enableDelegations\",\n    \"enableStyleSheetsForSet\",\n    \"enableVertexAttribArray\",\n    \"enabled\",\n    \"enabledPlugin\",\n    \"encode\",\n    \"encodeInto\",\n    \"encodeURI\",\n    \"encodeURIComponent\",\n    \"encodedBodySize\",\n    \"encoding\",\n    \"encodingInfo\",\n    \"encrypt\",\n    \"enctype\",\n    \"end\",\n    \"endContainer\",\n    \"endElement\",\n    \"endElementAt\",\n    \"endOcclusionQuery\",\n    \"endOfPassWriteIndex\",\n    \"endOfStream\",\n    \"endOffset\",\n    \"endQuery\",\n    \"endTime\",\n    \"endTransformFeedback\",\n    \"ended\",\n    \"endpoint\",\n    \"endpointNumber\",\n    \"endpoints\",\n    \"endsWith\",\n    \"enterKeyHint\",\n    \"entities\",\n    \"entries\",\n    \"entryPoint\",\n    \"entryType\",\n    \"enumerable\",\n    \"enumerate\",\n    \"enumerateDevices\",\n    \"enumerateEditable\",\n    \"environmentBlendMode\",\n    \"equals\",\n    \"error\",\n    \"errorCode\",\n    \"errorDetail\",\n    \"errorText\",\n    \"escape\",\n    \"estimate\",\n    \"eval\",\n    \"evaluate\",\n    \"event\",\n    \"eventPhase\",\n    \"every\",\n    \"ex\",\n    \"exception\",\n    \"exchange\",\n    \"exec\",\n    \"execCommand\",\n    \"execCommandShowHelp\",\n    \"execScript\",\n    \"executeBundles\",\n    \"exitFullscreen\",\n    \"exitPictureInPicture\",\n    \"exitPointerLock\",\n    \"exitPresent\",\n    \"exp\",\n    \"expand\",\n    \"expandEntityReferences\",\n    \"expando\",\n    \"expansion\",\n    \"expiration\",\n    \"expirationTime\",\n    \"expires\",\n    \"expiryDate\",\n    \"explicitOriginalTarget\",\n    \"expm1\",\n    \"exponent\",\n    \"exponentialRampToValueAtTime\",\n    \"exportKey\",\n    \"exports\",\n    \"extend\",\n    \"extensions\",\n    \"extentNode\",\n    \"extentOffset\",\n    \"external\",\n    \"externalResourcesRequired\",\n    \"externalTexture\",\n    \"extractContents\",\n    \"extractable\",\n    \"eye\",\n    \"f\",\n    \"face\",\n    \"factoryReset\",\n    \"failOp\",\n    \"failureReason\",\n    \"fallback\",\n    \"family\",\n    \"familyName\",\n    \"farthestViewportElement\",\n    \"fastSeek\",\n    \"fatal\",\n    \"featureId\",\n    \"featurePolicy\",\n    \"featureSettings\",\n    \"features\",\n    \"fenceSync\",\n    \"fetch\",\n    \"fetchStart\",\n    \"fftSize\",\n    \"fgColor\",\n    \"fieldOfView\",\n    \"file\",\n    \"fileCreatedDate\",\n    \"fileHandle\",\n    \"fileModifiedDate\",\n    \"fileName\",\n    \"fileSize\",\n    \"fileUpdatedDate\",\n    \"filename\",\n    \"files\",\n    \"filesystem\",\n    \"fill\",\n    \"fill-opacity\",\n    \"fill-rule\",\n    \"fillLightMode\",\n    \"fillOpacity\",\n    \"fillRect\",\n    \"fillRule\",\n    \"fillStyle\",\n    \"fillText\",\n    \"filter\",\n    \"filterResX\",\n    \"filterResY\",\n    \"filterUnits\",\n    \"filters\",\n    \"finally\",\n    \"find\",\n    \"findIndex\",\n    \"findRule\",\n    \"findText\",\n    \"finish\",\n    \"finished\",\n    \"fireEvent\",\n    \"firesTouchEvents\",\n    \"firstChild\",\n    \"firstElementChild\",\n    \"firstPage\",\n    \"fixed\",\n    \"flags\",\n    \"flat\",\n    \"flatMap\",\n    \"flex\",\n    \"flex-basis\",\n    \"flex-direction\",\n    \"flex-flow\",\n    \"flex-grow\",\n    \"flex-shrink\",\n    \"flex-wrap\",\n    \"flexBasis\",\n    \"flexDirection\",\n    \"flexFlow\",\n    \"flexGrow\",\n    \"flexShrink\",\n    \"flexWrap\",\n    \"flipX\",\n    \"flipY\",\n    \"float\",\n    \"float32\",\n    \"float64\",\n    \"flood-color\",\n    \"flood-opacity\",\n    \"floodColor\",\n    \"floodOpacity\",\n    \"floor\",\n    \"flush\",\n    \"focus\",\n    \"focusNode\",\n    \"focusOffset\",\n    \"font\",\n    \"font-family\",\n    \"font-feature-settings\",\n    \"font-kerning\",\n    \"font-language-override\",\n    \"font-optical-sizing\",\n    \"font-size\",\n    \"font-size-adjust\",\n    \"font-stretch\",\n    \"font-style\",\n    \"font-synthesis\",\n    \"font-variant\",\n    \"font-variant-alternates\",\n    \"font-variant-caps\",\n    \"font-variant-east-asian\",\n    \"font-variant-ligatures\",\n    \"font-variant-numeric\",\n    \"font-variant-position\",\n    \"font-variation-settings\",\n    \"font-weight\",\n    \"fontFamily\",\n    \"fontFeatureSettings\",\n    \"fontKerning\",\n    \"fontLanguageOverride\",\n    \"fontOpticalSizing\",\n    \"fontSize\",\n    \"fontSizeAdjust\",\n    \"fontSmoothingEnabled\",\n    \"fontStretch\",\n    \"fontStyle\",\n    \"fontSynthesis\",\n    \"fontVariant\",\n    \"fontVariantAlternates\",\n    \"fontVariantCaps\",\n    \"fontVariantEastAsian\",\n    \"fontVariantLigatures\",\n    \"fontVariantNumeric\",\n    \"fontVariantPosition\",\n    \"fontVariationSettings\",\n    \"fontWeight\",\n    \"fontcolor\",\n    \"fontfaces\",\n    \"fonts\",\n    \"fontsize\",\n    \"for\",\n    \"forEach\",\n    \"force\",\n    \"forceFallbackAdapter\",\n    \"forceRedraw\",\n    \"form\",\n    \"formAction\",\n    \"formData\",\n    \"formEnctype\",\n    \"formMethod\",\n    \"formNoValidate\",\n    \"formTarget\",\n    \"format\",\n    \"formatToParts\",\n    \"forms\",\n    \"forward\",\n    \"forwardX\",\n    \"forwardY\",\n    \"forwardZ\",\n    \"foundation\",\n    \"fr\",\n    \"fragment\",\n    \"fragmentDirective\",\n    \"frame\",\n    \"frameBorder\",\n    \"frameElement\",\n    \"frameSpacing\",\n    \"framebuffer\",\n    \"framebufferHeight\",\n    \"framebufferRenderbuffer\",\n    \"framebufferTexture2D\",\n    \"framebufferTextureLayer\",\n    \"framebufferWidth\",\n    \"frames\",\n    \"freeSpace\",\n    \"freeze\",\n    \"frequency\",\n    \"frequencyBinCount\",\n    \"from\",\n    \"fromCharCode\",\n    \"fromCodePoint\",\n    \"fromElement\",\n    \"fromEntries\",\n    \"fromFloat32Array\",\n    \"fromFloat64Array\",\n    \"fromMatrix\",\n    \"fromPoint\",\n    \"fromQuad\",\n    \"fromRect\",\n    \"frontFace\",\n    \"fround\",\n    \"fullPath\",\n    \"fullScreen\",\n    \"fullVersionList\",\n    \"fullscreen\",\n    \"fullscreenElement\",\n    \"fullscreenEnabled\",\n    \"fx\",\n    \"fy\",\n    \"g\",\n    \"gain\",\n    \"gamepad\",\n    \"gamma\",\n    \"gap\",\n    \"gatheringState\",\n    \"gatt\",\n    \"genderIdentity\",\n    \"generateCertificate\",\n    \"generateKey\",\n    \"generateMipmap\",\n    \"generateRequest\",\n    \"geolocation\",\n    \"gestureObject\",\n    \"get\",\n    \"getActiveAttrib\",\n    \"getActiveUniform\",\n    \"getActiveUniformBlockName\",\n    \"getActiveUniformBlockParameter\",\n    \"getActiveUniforms\",\n    \"getAdjacentText\",\n    \"getAll\",\n    \"getAllKeys\",\n    \"getAllResponseHeaders\",\n    \"getAllowlistForFeature\",\n    \"getAnimations\",\n    \"getAsFile\",\n    \"getAsString\",\n    \"getAttachedShaders\",\n    \"getAttribLocation\",\n    \"getAttribute\",\n    \"getAttributeNS\",\n    \"getAttributeNames\",\n    \"getAttributeNode\",\n    \"getAttributeNodeNS\",\n    \"getAttributeType\",\n    \"getAudioTracks\",\n    \"getAvailability\",\n    \"getBBox\",\n    \"getBattery\",\n    \"getBigInt64\",\n    \"getBigUint64\",\n    \"getBindGroupLayout\",\n    \"getBlob\",\n    \"getBookmark\",\n    \"getBoundingClientRect\",\n    \"getBounds\",\n    \"getBoxQuads\",\n    \"getBufferParameter\",\n    \"getBufferSubData\",\n    \"getByteFrequencyData\",\n    \"getByteTimeDomainData\",\n    \"getCSSCanvasContext\",\n    \"getCTM\",\n    \"getCandidateWindowClientRect\",\n    \"getCanonicalLocales\",\n    \"getCapabilities\",\n    \"getChannelData\",\n    \"getCharNumAtPosition\",\n    \"getCharacteristic\",\n    \"getCharacteristics\",\n    \"getClientExtensionResults\",\n    \"getClientRect\",\n    \"getClientRects\",\n    \"getCoalescedEvents\",\n    \"getCompilationInfo\",\n    \"getCompositionAlternatives\",\n    \"getComputedStyle\",\n    \"getComputedTextLength\",\n    \"getComputedTiming\",\n    \"getConfiguration\",\n    \"getConstraints\",\n    \"getContext\",\n    \"getContextAttributes\",\n    \"getContributingSources\",\n    \"getCounterValue\",\n    \"getCueAsHTML\",\n    \"getCueById\",\n    \"getCurrentPosition\",\n    \"getCurrentTexture\",\n    \"getCurrentTime\",\n    \"getData\",\n    \"getDatabaseNames\",\n    \"getDate\",\n    \"getDay\",\n    \"getDefaultComputedStyle\",\n    \"getDescriptor\",\n    \"getDescriptors\",\n    \"getDestinationInsertionPoints\",\n    \"getDevices\",\n    \"getDirectory\",\n    \"getDisplayMedia\",\n    \"getDistributedNodes\",\n    \"getEditable\",\n    \"getElementById\",\n    \"getElementsByClassName\",\n    \"getElementsByName\",\n    \"getElementsByTagName\",\n    \"getElementsByTagNameNS\",\n    \"getEnclosureList\",\n    \"getEndPositionOfChar\",\n    \"getEntries\",\n    \"getEntriesByName\",\n    \"getEntriesByType\",\n    \"getError\",\n    \"getExtension\",\n    \"getExtentOfChar\",\n    \"getEyeParameters\",\n    \"getFeature\",\n    \"getFile\",\n    \"getFiles\",\n    \"getFilesAndDirectories\",\n    \"getFingerprints\",\n    \"getFloat32\",\n    \"getFloat64\",\n    \"getFloatFrequencyData\",\n    \"getFloatTimeDomainData\",\n    \"getFloatValue\",\n    \"getFragDataLocation\",\n    \"getFrameData\",\n    \"getFramebufferAttachmentParameter\",\n    \"getFrequencyResponse\",\n    \"getFullYear\",\n    \"getGamepads\",\n    \"getHighEntropyValues\",\n    \"getHitTestResults\",\n    \"getHitTestResultsForTransientInput\",\n    \"getHours\",\n    \"getIdentityAssertion\",\n    \"getIds\",\n    \"getImageData\",\n    \"getIndexedParameter\",\n    \"getInstalledRelatedApps\",\n    \"getInt16\",\n    \"getInt32\",\n    \"getInt8\",\n    \"getInternalformatParameter\",\n    \"getIntersectionList\",\n    \"getItem\",\n    \"getItems\",\n    \"getKey\",\n    \"getKeyframes\",\n    \"getLayers\",\n    \"getLayoutMap\",\n    \"getLineDash\",\n    \"getLocalCandidates\",\n    \"getLocalParameters\",\n    \"getLocalStreams\",\n    \"getMappedRange\",\n    \"getMarks\",\n    \"getMatchedCSSRules\",\n    \"getMaxGCPauseSinceClear\",\n    \"getMeasures\",\n    \"getMetadata\",\n    \"getMilliseconds\",\n    \"getMinutes\",\n    \"getModifierState\",\n    \"getMonth\",\n    \"getNamedItem\",\n    \"getNamedItemNS\",\n    \"getNativeFramebufferScaleFactor\",\n    \"getNotifications\",\n    \"getNotifier\",\n    \"getNumberOfChars\",\n    \"getOffsetReferenceSpace\",\n    \"getOutputTimestamp\",\n    \"getOverrideHistoryNavigationMode\",\n    \"getOverrideStyle\",\n    \"getOwnPropertyDescriptor\",\n    \"getOwnPropertyDescriptors\",\n    \"getOwnPropertyNames\",\n    \"getOwnPropertySymbols\",\n    \"getParameter\",\n    \"getParameters\",\n    \"getParent\",\n    \"getPathSegAtLength\",\n    \"getPhotoCapabilities\",\n    \"getPhotoSettings\",\n    \"getPointAtLength\",\n    \"getPose\",\n    \"getPredictedEvents\",\n    \"getPreference\",\n    \"getPreferenceDefault\",\n    \"getPreferredCanvasFormat\",\n    \"getPresentationAttribute\",\n    \"getPreventDefault\",\n    \"getPrimaryService\",\n    \"getPrimaryServices\",\n    \"getProgramInfoLog\",\n    \"getProgramParameter\",\n    \"getPropertyCSSValue\",\n    \"getPropertyPriority\",\n    \"getPropertyShorthand\",\n    \"getPropertyType\",\n    \"getPropertyValue\",\n    \"getPrototypeOf\",\n    \"getQuery\",\n    \"getQueryParameter\",\n    \"getRGBColorValue\",\n    \"getRandomValues\",\n    \"getRangeAt\",\n    \"getReader\",\n    \"getReceivers\",\n    \"getRectValue\",\n    \"getRegistration\",\n    \"getRegistrations\",\n    \"getRemoteCandidates\",\n    \"getRemoteCertificates\",\n    \"getRemoteParameters\",\n    \"getRemoteStreams\",\n    \"getRenderbufferParameter\",\n    \"getResponseHeader\",\n    \"getRoot\",\n    \"getRootNode\",\n    \"getRotationOfChar\",\n    \"getSVGDocument\",\n    \"getSamplerParameter\",\n    \"getScreenCTM\",\n    \"getSeconds\",\n    \"getSelectedCandidatePair\",\n    \"getSelection\",\n    \"getSenders\",\n    \"getService\",\n    \"getSettings\",\n    \"getShaderInfoLog\",\n    \"getShaderParameter\",\n    \"getShaderPrecisionFormat\",\n    \"getShaderSource\",\n    \"getSimpleDuration\",\n    \"getSiteIcons\",\n    \"getSources\",\n    \"getSpeculativeParserUrls\",\n    \"getStartPositionOfChar\",\n    \"getStartTime\",\n    \"getState\",\n    \"getStats\",\n    \"getStatusForPolicy\",\n    \"getStorageUpdates\",\n    \"getStreamById\",\n    \"getStringValue\",\n    \"getSubStringLength\",\n    \"getSubscription\",\n    \"getSupportedConstraints\",\n    \"getSupportedExtensions\",\n    \"getSupportedFormats\",\n    \"getSyncParameter\",\n    \"getSynchronizationSources\",\n    \"getTags\",\n    \"getTargetRanges\",\n    \"getTexParameter\",\n    \"getTime\",\n    \"getTimezoneOffset\",\n    \"getTiming\",\n    \"getTotalLength\",\n    \"getTrackById\",\n    \"getTracks\",\n    \"getTransceivers\",\n    \"getTransform\",\n    \"getTransformFeedbackVarying\",\n    \"getTransformToElement\",\n    \"getTransports\",\n    \"getType\",\n    \"getTypeMapping\",\n    \"getUTCDate\",\n    \"getUTCDay\",\n    \"getUTCFullYear\",\n    \"getUTCHours\",\n    \"getUTCMilliseconds\",\n    \"getUTCMinutes\",\n    \"getUTCMonth\",\n    \"getUTCSeconds\",\n    \"getUint16\",\n    \"getUint32\",\n    \"getUint8\",\n    \"getUniform\",\n    \"getUniformBlockIndex\",\n    \"getUniformIndices\",\n    \"getUniformLocation\",\n    \"getUserMedia\",\n    \"getVRDisplays\",\n    \"getValues\",\n    \"getVarDate\",\n    \"getVariableValue\",\n    \"getVertexAttrib\",\n    \"getVertexAttribOffset\",\n    \"getVideoPlaybackQuality\",\n    \"getVideoTracks\",\n    \"getViewerPose\",\n    \"getViewport\",\n    \"getVoices\",\n    \"getWakeLockState\",\n    \"getWriter\",\n    \"getYear\",\n    \"givenName\",\n    \"global\",\n    \"globalAlpha\",\n    \"globalCompositeOperation\",\n    \"globalThis\",\n    \"glyphOrientationHorizontal\",\n    \"glyphOrientationVertical\",\n    \"glyphRef\",\n    \"go\",\n    \"gpu\",\n    \"grabFrame\",\n    \"grad\",\n    \"gradientTransform\",\n    \"gradientUnits\",\n    \"grammars\",\n    \"green\",\n    \"grid\",\n    \"grid-area\",\n    \"grid-auto-columns\",\n    \"grid-auto-flow\",\n    \"grid-auto-rows\",\n    \"grid-column\",\n    \"grid-column-end\",\n    \"grid-column-gap\",\n    \"grid-column-start\",\n    \"grid-gap\",\n    \"grid-row\",\n    \"grid-row-end\",\n    \"grid-row-gap\",\n    \"grid-row-start\",\n    \"grid-template\",\n    \"grid-template-areas\",\n    \"grid-template-columns\",\n    \"grid-template-rows\",\n    \"gridArea\",\n    \"gridAutoColumns\",\n    \"gridAutoFlow\",\n    \"gridAutoRows\",\n    \"gridColumn\",\n    \"gridColumnEnd\",\n    \"gridColumnGap\",\n    \"gridColumnStart\",\n    \"gridGap\",\n    \"gridRow\",\n    \"gridRowEnd\",\n    \"gridRowGap\",\n    \"gridRowStart\",\n    \"gridTemplate\",\n    \"gridTemplateAreas\",\n    \"gridTemplateColumns\",\n    \"gridTemplateRows\",\n    \"gripSpace\",\n    \"group\",\n    \"groups\",\n    \"groupCollapsed\",\n    \"groupEnd\",\n    \"groupId\",\n    \"hadRecentInput\",\n    \"hand\",\n    \"handedness\",\n    \"hapticActuators\",\n    \"hardwareConcurrency\",\n    \"has\",\n    \"hasAttribute\",\n    \"hasAttributeNS\",\n    \"hasAttributes\",\n    \"hasBeenActive\",\n    \"hasChildNodes\",\n    \"hasComposition\",\n    \"hasDynamicOffset\",\n    \"hasEnrolledInstrument\",\n    \"hasExtension\",\n    \"hasExternalDisplay\",\n    \"hasFeature\",\n    \"hasFocus\",\n    \"hasInstance\",\n    \"hasLayout\",\n    \"hasOrientation\",\n    \"hasOwnProperty\",\n    \"hasPointerCapture\",\n    \"hasPosition\",\n    \"hasReading\",\n    \"hasStorageAccess\",\n    \"hash\",\n    \"head\",\n    \"headers\",\n    \"heading\",\n    \"height\",\n    \"hidden\",\n    \"hide\",\n    \"hideFocus\",\n    \"high\",\n    \"highWaterMark\",\n    \"hint\",\n    \"hints\",\n    \"history\",\n    \"honorificPrefix\",\n    \"honorificSuffix\",\n    \"horizontalOverflow\",\n    \"host\",\n    \"hostCandidate\",\n    \"hostname\",\n    \"href\",\n    \"hrefTranslate\",\n    \"hreflang\",\n    \"hspace\",\n    \"html5TagCheckInerface\",\n    \"htmlFor\",\n    \"htmlText\",\n    \"httpEquiv\",\n    \"httpRequestStatusCode\",\n    \"hwTimestamp\",\n    \"hyphens\",\n    \"hypot\",\n    \"iccId\",\n    \"iceConnectionState\",\n    \"iceGatheringState\",\n    \"iceTransport\",\n    \"icon\",\n    \"iconURL\",\n    \"id\",\n    \"identifier\",\n    \"identity\",\n    \"idpLoginUrl\",\n    \"ignoreBOM\",\n    \"ignoreCase\",\n    \"ignoreDepthValues\",\n    \"image-orientation\",\n    \"image-rendering\",\n    \"imageHeight\",\n    \"imageOrientation\",\n    \"imageRendering\",\n    \"imageSizes\",\n    \"imageSmoothingEnabled\",\n    \"imageSmoothingQuality\",\n    \"imageSrcset\",\n    \"imageWidth\",\n    \"images\",\n    \"ime-mode\",\n    \"imeMode\",\n    \"implementation\",\n    \"importExternalTexture\",\n    \"importKey\",\n    \"importNode\",\n    \"importStylesheet\",\n    \"imports\",\n    \"impp\",\n    \"imul\",\n    \"in\",\n    \"in1\",\n    \"in2\",\n    \"inBandMetadataTrackDispatchType\",\n    \"inRange\",\n    \"includes\",\n    \"incremental\",\n    \"indeterminate\",\n    \"index\",\n    \"indexNames\",\n    \"indexOf\",\n    \"indexedDB\",\n    \"indicate\",\n    \"indices\",\n    \"inert\",\n    \"inertiaDestinationX\",\n    \"inertiaDestinationY\",\n    \"info\",\n    \"init\",\n    \"initAnimationEvent\",\n    \"initBeforeLoadEvent\",\n    \"initClipboardEvent\",\n    \"initCloseEvent\",\n    \"initCommandEvent\",\n    \"initCompositionEvent\",\n    \"initCustomEvent\",\n    \"initData\",\n    \"initDataType\",\n    \"initDeviceMotionEvent\",\n    \"initDeviceOrientationEvent\",\n    \"initDragEvent\",\n    \"initErrorEvent\",\n    \"initEvent\",\n    \"initFocusEvent\",\n    \"initGestureEvent\",\n    \"initHashChangeEvent\",\n    \"initKeyEvent\",\n    \"initKeyboardEvent\",\n    \"initMSManipulationEvent\",\n    \"initMessageEvent\",\n    \"initMouseEvent\",\n    \"initMouseScrollEvent\",\n    \"initMouseWheelEvent\",\n    \"initMutationEvent\",\n    \"initNSMouseEvent\",\n    \"initOverflowEvent\",\n    \"initPageEvent\",\n    \"initPageTransitionEvent\",\n    \"initPointerEvent\",\n    \"initPopStateEvent\",\n    \"initProgressEvent\",\n    \"initScrollAreaEvent\",\n    \"initSimpleGestureEvent\",\n    \"initStorageEvent\",\n    \"initTextEvent\",\n    \"initTimeEvent\",\n    \"initTouchEvent\",\n    \"initTransitionEvent\",\n    \"initUIEvent\",\n    \"initWebKitAnimationEvent\",\n    \"initWebKitTransitionEvent\",\n    \"initWebKitWheelEvent\",\n    \"initWheelEvent\",\n    \"initialTime\",\n    \"initialize\",\n    \"initiatorType\",\n    \"inline-size\",\n    \"inlineSize\",\n    \"inlineVerticalFieldOfView\",\n    \"inner\",\n    \"innerHTML\",\n    \"innerHeight\",\n    \"innerText\",\n    \"innerWidth\",\n    \"input\",\n    \"inputBuffer\",\n    \"inputEncoding\",\n    \"inputMethod\",\n    \"inputMode\",\n    \"inputSource\",\n    \"inputSources\",\n    \"inputType\",\n    \"inputs\",\n    \"insertAdjacentElement\",\n    \"insertAdjacentHTML\",\n    \"insertAdjacentText\",\n    \"insertBefore\",\n    \"insertCell\",\n    \"insertDTMF\",\n    \"insertData\",\n    \"insertDebugMarker\",\n    \"insertItemBefore\",\n    \"insertNode\",\n    \"insertRow\",\n    \"insertRule\",\n    \"inset\",\n    \"inset-block\",\n    \"inset-block-end\",\n    \"inset-block-start\",\n    \"inset-inline\",\n    \"inset-inline-end\",\n    \"inset-inline-start\",\n    \"insetBlock\",\n    \"insetBlockEnd\",\n    \"insetBlockStart\",\n    \"insetInline\",\n    \"insetInlineEnd\",\n    \"insetInlineStart\",\n    \"installing\",\n    \"instanceRoot\",\n    \"instantiate\",\n    \"instantiateStreaming\",\n    \"instruments\",\n    \"int16\",\n    \"int32\",\n    \"int8\",\n    \"integrity\",\n    \"interactionMode\",\n    \"intercept\",\n    \"interfaceClass\",\n    \"interfaceName\",\n    \"interfaceNumber\",\n    \"interfaceProtocol\",\n    \"interfaceSubclass\",\n    \"interfaces\",\n    \"interimResults\",\n    \"internalSubset\",\n    \"interpretation\",\n    \"intersectionRatio\",\n    \"intersectionRect\",\n    \"intersectsNode\",\n    \"interval\",\n    \"invalidIteratorState\",\n    \"invalidateFramebuffer\",\n    \"invalidateSubFramebuffer\",\n    \"inverse\",\n    \"invertSelf\",\n    \"is\",\n    \"is2D\",\n    \"isActive\",\n    \"isAlternate\",\n    \"isArray\",\n    \"isBingCurrentSearchDefault\",\n    \"isBuffer\",\n    \"isCandidateWindowVisible\",\n    \"isChar\",\n    \"isCollapsed\",\n    \"isComposing\",\n    \"isConcatSpreadable\",\n    \"isConnected\",\n    \"isContentEditable\",\n    \"isContentHandlerRegistered\",\n    \"isContextLost\",\n    \"isDefaultNamespace\",\n    \"isDirectory\",\n    \"isDisabled\",\n    \"isEnabled\",\n    \"isEqual\",\n    \"isEqualNode\",\n    \"isExtensible\",\n    \"isExternalCTAP2SecurityKeySupported\",\n    \"isFallbackAdapter\",\n    \"isFile\",\n    \"isFinite\",\n    \"isFramebuffer\",\n    \"isFrozen\",\n    \"isGenerator\",\n    \"isHTML\",\n    \"isHistoryNavigation\",\n    \"isId\",\n    \"isIdentity\",\n    \"isInjected\",\n    \"isInteger\",\n    \"isIntersecting\",\n    \"isLockFree\",\n    \"isMap\",\n    \"isMultiLine\",\n    \"isNaN\",\n    \"isOpen\",\n    \"isPointInFill\",\n    \"isPointInPath\",\n    \"isPointInRange\",\n    \"isPointInStroke\",\n    \"isPrefAlternate\",\n    \"isPresenting\",\n    \"isPrimary\",\n    \"isProgram\",\n    \"isPropertyImplicit\",\n    \"isProtocolHandlerRegistered\",\n    \"isPrototypeOf\",\n    \"isQuery\",\n    \"isRenderbuffer\",\n    \"isSafeInteger\",\n    \"isSameNode\",\n    \"isSampler\",\n    \"isScript\",\n    \"isScriptURL\",\n    \"isSealed\",\n    \"isSecureContext\",\n    \"isSessionSupported\",\n    \"isShader\",\n    \"isSupported\",\n    \"isSync\",\n    \"isTextEdit\",\n    \"isTexture\",\n    \"isTransformFeedback\",\n    \"isTrusted\",\n    \"isTypeSupported\",\n    \"isUserVerifyingPlatformAuthenticatorAvailable\",\n    \"isVertexArray\",\n    \"isView\",\n    \"isVisible\",\n    \"isochronousTransferIn\",\n    \"isochronousTransferOut\",\n    \"isolation\",\n    \"italics\",\n    \"item\",\n    \"itemId\",\n    \"itemProp\",\n    \"itemRef\",\n    \"itemScope\",\n    \"itemType\",\n    \"itemValue\",\n    \"items\",\n    \"iterateNext\",\n    \"iterationComposite\",\n    \"iterator\",\n    \"javaEnabled\",\n    \"jobTitle\",\n    \"join\",\n    \"json\",\n    \"justify-content\",\n    \"justify-items\",\n    \"justify-self\",\n    \"justifyContent\",\n    \"justifyItems\",\n    \"justifySelf\",\n    \"k1\",\n    \"k2\",\n    \"k3\",\n    \"k4\",\n    \"kHz\",\n    \"keepalive\",\n    \"kernelMatrix\",\n    \"kernelUnitLengthX\",\n    \"kernelUnitLengthY\",\n    \"kerning\",\n    \"key\",\n    \"keyCode\",\n    \"keyFor\",\n    \"keyIdentifier\",\n    \"keyLightEnabled\",\n    \"keyLocation\",\n    \"keyPath\",\n    \"keyStatuses\",\n    \"keySystem\",\n    \"keyText\",\n    \"keyUsage\",\n    \"keyboard\",\n    \"keys\",\n    \"keytype\",\n    \"kind\",\n    \"knee\",\n    \"label\",\n    \"labels\",\n    \"lang\",\n    \"language\",\n    \"languages\",\n    \"largeArcFlag\",\n    \"lastChild\",\n    \"lastElementChild\",\n    \"lastEventId\",\n    \"lastIndex\",\n    \"lastIndexOf\",\n    \"lastInputTime\",\n    \"lastMatch\",\n    \"lastMessageSubject\",\n    \"lastMessageType\",\n    \"lastModified\",\n    \"lastModifiedDate\",\n    \"lastPage\",\n    \"lastParen\",\n    \"lastState\",\n    \"lastStyleSheetSet\",\n    \"latitude\",\n    \"layerX\",\n    \"layerY\",\n    \"layout\",\n    \"layoutFlow\",\n    \"layoutGrid\",\n    \"layoutGridChar\",\n    \"layoutGridLine\",\n    \"layoutGridMode\",\n    \"layoutGridType\",\n    \"lbound\",\n    \"left\",\n    \"leftContext\",\n    \"leftDegrees\",\n    \"leftMargin\",\n    \"leftProjectionMatrix\",\n    \"leftViewMatrix\",\n    \"length\",\n    \"lengthAdjust\",\n    \"lengthComputable\",\n    \"letter-spacing\",\n    \"letterSpacing\",\n    \"level\",\n    \"lighting-color\",\n    \"lightingColor\",\n    \"limitingConeAngle\",\n    \"limits\",\n    \"line\",\n    \"line-break\",\n    \"line-height\",\n    \"lineAlign\",\n    \"lineBreak\",\n    \"lineCap\",\n    \"lineDashOffset\",\n    \"lineHeight\",\n    \"lineJoin\",\n    \"lineNum\",\n    \"lineNumber\",\n    \"linePos\",\n    \"lineTo\",\n    \"lineWidth\",\n    \"linearAcceleration\",\n    \"linearRampToValueAtTime\",\n    \"linearVelocity\",\n    \"lineno\",\n    \"lines\",\n    \"link\",\n    \"linkColor\",\n    \"linkProgram\",\n    \"links\",\n    \"list\",\n    \"list-style\",\n    \"list-style-image\",\n    \"list-style-position\",\n    \"list-style-type\",\n    \"listStyle\",\n    \"listStyleImage\",\n    \"listStylePosition\",\n    \"listStyleType\",\n    \"listener\",\n    \"load\",\n    \"loadEventEnd\",\n    \"loadEventStart\",\n    \"loadOp\",\n    \"loadTime\",\n    \"loadTimes\",\n    \"loaded\",\n    \"loading\",\n    \"localDescription\",\n    \"localName\",\n    \"localService\",\n    \"localStorage\",\n    \"locale\",\n    \"localeCompare\",\n    \"location\",\n    \"locationbar\",\n    \"lock\",\n    \"locked\",\n    \"lockedFile\",\n    \"locks\",\n    \"lodMaxClamp\",\n    \"lodMinClamp\",\n    \"log\",\n    \"log10\",\n    \"log1p\",\n    \"log2\",\n    \"logicalXDPI\",\n    \"logicalYDPI\",\n    \"longDesc\",\n    \"longitude\",\n    \"lookupNamespaceURI\",\n    \"lookupPrefix\",\n    \"loop\",\n    \"loopEnd\",\n    \"loopStart\",\n    \"looping\",\n    \"lost\",\n    \"low\",\n    \"lower\",\n    \"lowerBound\",\n    \"lowerOpen\",\n    \"lowsrc\",\n    \"m11\",\n    \"m12\",\n    \"m13\",\n    \"m14\",\n    \"m21\",\n    \"m22\",\n    \"m23\",\n    \"m24\",\n    \"m31\",\n    \"m32\",\n    \"m33\",\n    \"m34\",\n    \"m41\",\n    \"m42\",\n    \"m43\",\n    \"m44\",\n    \"magFilter\",\n    \"makeXRCompatible\",\n    \"manifest\",\n    \"manufacturer\",\n    \"manufacturerName\",\n    \"map\",\n    \"mapAsync\",\n    \"mapState\",\n    \"mappedAtCreation\",\n    \"mapping\",\n    \"margin\",\n    \"margin-block\",\n    \"margin-block-end\",\n    \"margin-block-start\",\n    \"margin-bottom\",\n    \"margin-inline\",\n    \"margin-inline-end\",\n    \"margin-inline-start\",\n    \"margin-left\",\n    \"margin-right\",\n    \"margin-top\",\n    \"marginBlock\",\n    \"marginBlockEnd\",\n    \"marginBlockStart\",\n    \"marginBottom\",\n    \"marginHeight\",\n    \"marginInline\",\n    \"marginInlineEnd\",\n    \"marginInlineStart\",\n    \"marginLeft\",\n    \"marginRight\",\n    \"marginTop\",\n    \"marginWidth\",\n    \"mark\",\n    \"marker\",\n    \"marker-end\",\n    \"marker-mid\",\n    \"marker-offset\",\n    \"marker-start\",\n    \"markerEnd\",\n    \"markerHeight\",\n    \"markerMid\",\n    \"markerOffset\",\n    \"markerStart\",\n    \"markerUnits\",\n    \"markerWidth\",\n    \"marks\",\n    \"mask\",\n    \"mask-clip\",\n    \"mask-composite\",\n    \"mask-image\",\n    \"mask-mode\",\n    \"mask-origin\",\n    \"mask-position\",\n    \"mask-position-x\",\n    \"mask-position-y\",\n    \"mask-repeat\",\n    \"mask-size\",\n    \"mask-type\",\n    \"maskClip\",\n    \"maskComposite\",\n    \"maskContentUnits\",\n    \"maskImage\",\n    \"maskMode\",\n    \"maskOrigin\",\n    \"maskPosition\",\n    \"maskPositionX\",\n    \"maskPositionY\",\n    \"maskRepeat\",\n    \"maskSize\",\n    \"maskType\",\n    \"maskUnits\",\n    \"match\",\n    \"matchAll\",\n    \"matchMedia\",\n    \"matchMedium\",\n    \"matches\",\n    \"matrix\",\n    \"matrixTransform\",\n    \"max\",\n    \"max-block-size\",\n    \"max-height\",\n    \"max-inline-size\",\n    \"max-width\",\n    \"maxActions\",\n    \"maxAlternatives\",\n    \"maxAnisotropy\",\n    \"maxBindGroups\",\n    \"maxBindGroupsPlusVertexBuffers\",\n    \"maxBindingsPerBindGroup\",\n    \"maxBlockSize\",\n    \"maxBufferSize\",\n    \"maxChannelCount\",\n    \"maxChannels\",\n    \"maxColorAttachmentBytesPerSample\",\n    \"maxColorAttachments\",\n    \"maxComputeInvocationsPerWorkgroup\",\n    \"maxComputeWorkgroupSizeX\",\n    \"maxComputeWorkgroupSizeY\",\n    \"maxComputeWorkgroupSizeZ\",\n    \"maxComputeWorkgroupStorageSize\",\n    \"maxComputeWorkgroupsPerDimension\",\n    \"maxConnectionsPerServer\",\n    \"maxDecibels\",\n    \"maxDistance\",\n    \"maxDrawCount\",\n    \"maxDynamicStorageBuffersPerPipelineLayout\",\n    \"maxDynamicUniformBuffersPerPipelineLayout\",\n    \"maxHeight\",\n    \"maxInlineSize\",\n    \"maxInterStageShaderComponents\",\n    \"maxInterStageShaderVariables\",\n    \"maxLayers\",\n    \"maxLength\",\n    \"maxMessageSize\",\n    \"maxPacketLifeTime\",\n    \"maxRetransmits\",\n    \"maxSampledTexturesPerShaderStage\",\n    \"maxSamplersPerShaderStage\",\n    \"maxStorageBufferBindingSize\",\n    \"maxStorageBuffersPerShaderStage\",\n    \"maxStorageTexturesPerShaderStage\",\n    \"maxTextureArrayLayers\",\n    \"maxTextureDimension1D\",\n    \"maxTextureDimension2D\",\n    \"maxTextureDimension3D\",\n    \"maxTouchPoints\",\n    \"maxUniformBufferBindingSize\",\n    \"maxUniformBuffersPerShaderStage\",\n    \"maxValue\",\n    \"maxVertexAttributes\",\n    \"maxVertexBufferArrayStride\",\n    \"maxVertexBuffers\",\n    \"maxWidth\",\n    \"measure\",\n    \"measureText\",\n    \"media\",\n    \"mediaCapabilities\",\n    \"mediaDevices\",\n    \"mediaElement\",\n    \"mediaGroup\",\n    \"mediaKeys\",\n    \"mediaSession\",\n    \"mediaStream\",\n    \"mediaText\",\n    \"meetOrSlice\",\n    \"memory\",\n    \"menubar\",\n    \"mergeAttributes\",\n    \"message\",\n    \"messageClass\",\n    \"messageHandlers\",\n    \"messageType\",\n    \"messages\",\n    \"metaKey\",\n    \"metadata\",\n    \"method\",\n    \"methodDetails\",\n    \"methodName\",\n    \"mid\",\n    \"mimeType\",\n    \"mimeTypes\",\n    \"min\",\n    \"min-block-size\",\n    \"min-height\",\n    \"min-inline-size\",\n    \"min-width\",\n    \"minBindingSize\",\n    \"minBlockSize\",\n    \"minDecibels\",\n    \"minFilter\",\n    \"minHeight\",\n    \"minInlineSize\",\n    \"minLength\",\n    \"minStorageBufferOffsetAlignment\",\n    \"minUniformBufferOffsetAlignment\",\n    \"minValue\",\n    \"minWidth\",\n    \"mipLevel\",\n    \"mipLevelCount\",\n    \"mipmapFilter\",\n    \"miterLimit\",\n    \"mix-blend-mode\",\n    \"mixBlendMode\",\n    \"mm\",\n    \"mobile\",\n    \"mode\",\n    \"model\",\n    \"modify\",\n    \"module\",\n    \"mount\",\n    \"move\",\n    \"moveBy\",\n    \"moveEnd\",\n    \"moveFirst\",\n    \"moveFocusDown\",\n    \"moveFocusLeft\",\n    \"moveFocusRight\",\n    \"moveFocusUp\",\n    \"moveNext\",\n    \"moveRow\",\n    \"moveStart\",\n    \"moveTo\",\n    \"moveToBookmark\",\n    \"moveToElementText\",\n    \"moveToPoint\",\n    \"movementX\",\n    \"movementY\",\n    \"mozAdd\",\n    \"mozAnimationStartTime\",\n    \"mozAnon\",\n    \"mozApps\",\n    \"mozAudioCaptured\",\n    \"mozAudioChannelType\",\n    \"mozAutoplayEnabled\",\n    \"mozCancelAnimationFrame\",\n    \"mozCancelFullScreen\",\n    \"mozCancelRequestAnimationFrame\",\n    \"mozCaptureStream\",\n    \"mozCaptureStreamUntilEnded\",\n    \"mozClearDataAt\",\n    \"mozContact\",\n    \"mozContacts\",\n    \"mozCreateFileHandle\",\n    \"mozCurrentTransform\",\n    \"mozCurrentTransformInverse\",\n    \"mozCursor\",\n    \"mozDash\",\n    \"mozDashOffset\",\n    \"mozDecodedFrames\",\n    \"mozExitPointerLock\",\n    \"mozFillRule\",\n    \"mozFragmentEnd\",\n    \"mozFrameDelay\",\n    \"mozFullScreen\",\n    \"mozFullScreenElement\",\n    \"mozFullScreenEnabled\",\n    \"mozGetAll\",\n    \"mozGetAllKeys\",\n    \"mozGetAsFile\",\n    \"mozGetDataAt\",\n    \"mozGetMetadata\",\n    \"mozGetUserMedia\",\n    \"mozHasAudio\",\n    \"mozHasItem\",\n    \"mozHidden\",\n    \"mozImageSmoothingEnabled\",\n    \"mozIndexedDB\",\n    \"mozInnerScreenX\",\n    \"mozInnerScreenY\",\n    \"mozInputSource\",\n    \"mozIsTextField\",\n    \"mozItem\",\n    \"mozItemCount\",\n    \"mozItems\",\n    \"mozLength\",\n    \"mozLockOrientation\",\n    \"mozMatchesSelector\",\n    \"mozMovementX\",\n    \"mozMovementY\",\n    \"mozOpaque\",\n    \"mozOrientation\",\n    \"mozPaintCount\",\n    \"mozPaintedFrames\",\n    \"mozParsedFrames\",\n    \"mozPay\",\n    \"mozPointerLockElement\",\n    \"mozPresentedFrames\",\n    \"mozPreservesPitch\",\n    \"mozPressure\",\n    \"mozPrintCallback\",\n    \"mozRTCIceCandidate\",\n    \"mozRTCPeerConnection\",\n    \"mozRTCSessionDescription\",\n    \"mozRemove\",\n    \"mozRequestAnimationFrame\",\n    \"mozRequestFullScreen\",\n    \"mozRequestPointerLock\",\n    \"mozSetDataAt\",\n    \"mozSetImageElement\",\n    \"mozSourceNode\",\n    \"mozSrcObject\",\n    \"mozSystem\",\n    \"mozTCPSocket\",\n    \"mozTextStyle\",\n    \"mozTypesAt\",\n    \"mozUnlockOrientation\",\n    \"mozUserCancelled\",\n    \"mozVisibilityState\",\n    \"ms\",\n    \"msAnimation\",\n    \"msAnimationDelay\",\n    \"msAnimationDirection\",\n    \"msAnimationDuration\",\n    \"msAnimationFillMode\",\n    \"msAnimationIterationCount\",\n    \"msAnimationName\",\n    \"msAnimationPlayState\",\n    \"msAnimationStartTime\",\n    \"msAnimationTimingFunction\",\n    \"msBackfaceVisibility\",\n    \"msBlockProgression\",\n    \"msCSSOMElementFloatMetrics\",\n    \"msCaching\",\n    \"msCachingEnabled\",\n    \"msCancelRequestAnimationFrame\",\n    \"msCapsLockWarningOff\",\n    \"msClearImmediate\",\n    \"msClose\",\n    \"msContentZoomChaining\",\n    \"msContentZoomFactor\",\n    \"msContentZoomLimit\",\n    \"msContentZoomLimitMax\",\n    \"msContentZoomLimitMin\",\n    \"msContentZoomSnap\",\n    \"msContentZoomSnapPoints\",\n    \"msContentZoomSnapType\",\n    \"msContentZooming\",\n    \"msConvertURL\",\n    \"msCrypto\",\n    \"msDoNotTrack\",\n    \"msElementsFromPoint\",\n    \"msElementsFromRect\",\n    \"msExitFullscreen\",\n    \"msExtendedCode\",\n    \"msFillRule\",\n    \"msFirstPaint\",\n    \"msFlex\",\n    \"msFlexAlign\",\n    \"msFlexDirection\",\n    \"msFlexFlow\",\n    \"msFlexItemAlign\",\n    \"msFlexLinePack\",\n    \"msFlexNegative\",\n    \"msFlexOrder\",\n    \"msFlexPack\",\n    \"msFlexPositive\",\n    \"msFlexPreferredSize\",\n    \"msFlexWrap\",\n    \"msFlowFrom\",\n    \"msFlowInto\",\n    \"msFontFeatureSettings\",\n    \"msFullscreenElement\",\n    \"msFullscreenEnabled\",\n    \"msGetInputContext\",\n    \"msGetRegionContent\",\n    \"msGetUntransformedBounds\",\n    \"msGraphicsTrustStatus\",\n    \"msGridColumn\",\n    \"msGridColumnAlign\",\n    \"msGridColumnSpan\",\n    \"msGridColumns\",\n    \"msGridRow\",\n    \"msGridRowAlign\",\n    \"msGridRowSpan\",\n    \"msGridRows\",\n    \"msHidden\",\n    \"msHighContrastAdjust\",\n    \"msHyphenateLimitChars\",\n    \"msHyphenateLimitLines\",\n    \"msHyphenateLimitZone\",\n    \"msHyphens\",\n    \"msImageSmoothingEnabled\",\n    \"msImeAlign\",\n    \"msIndexedDB\",\n    \"msInterpolationMode\",\n    \"msIsStaticHTML\",\n    \"msKeySystem\",\n    \"msKeys\",\n    \"msLaunchUri\",\n    \"msLockOrientation\",\n    \"msManipulationViewsEnabled\",\n    \"msMatchMedia\",\n    \"msMatchesSelector\",\n    \"msMaxTouchPoints\",\n    \"msOrientation\",\n    \"msOverflowStyle\",\n    \"msPerspective\",\n    \"msPerspectiveOrigin\",\n    \"msPlayToDisabled\",\n    \"msPlayToPreferredSourceUri\",\n    \"msPlayToPrimary\",\n    \"msPointerEnabled\",\n    \"msRegionOverflow\",\n    \"msReleasePointerCapture\",\n    \"msRequestAnimationFrame\",\n    \"msRequestFullscreen\",\n    \"msSaveBlob\",\n    \"msSaveOrOpenBlob\",\n    \"msScrollChaining\",\n    \"msScrollLimit\",\n    \"msScrollLimitXMax\",\n    \"msScrollLimitXMin\",\n    \"msScrollLimitYMax\",\n    \"msScrollLimitYMin\",\n    \"msScrollRails\",\n    \"msScrollSnapPointsX\",\n    \"msScrollSnapPointsY\",\n    \"msScrollSnapType\",\n    \"msScrollSnapX\",\n    \"msScrollSnapY\",\n    \"msScrollTranslation\",\n    \"msSetImmediate\",\n    \"msSetMediaKeys\",\n    \"msSetPointerCapture\",\n    \"msTextCombineHorizontal\",\n    \"msTextSizeAdjust\",\n    \"msToBlob\",\n    \"msTouchAction\",\n    \"msTouchSelect\",\n    \"msTraceAsyncCallbackCompleted\",\n    \"msTraceAsyncCallbackStarting\",\n    \"msTraceAsyncOperationCompleted\",\n    \"msTraceAsyncOperationStarting\",\n    \"msTransform\",\n    \"msTransformOrigin\",\n    \"msTransformStyle\",\n    \"msTransition\",\n    \"msTransitionDelay\",\n    \"msTransitionDuration\",\n    \"msTransitionProperty\",\n    \"msTransitionTimingFunction\",\n    \"msUnlockOrientation\",\n    \"msUpdateAsyncCallbackRelation\",\n    \"msUserSelect\",\n    \"msVisibilityState\",\n    \"msWrapFlow\",\n    \"msWrapMargin\",\n    \"msWrapThrough\",\n    \"msWriteProfilerMark\",\n    \"msZoom\",\n    \"msZoomTo\",\n    \"mt\",\n    \"mul\",\n    \"multiEntry\",\n    \"multiSelectionObj\",\n    \"multiline\",\n    \"multiple\",\n    \"multiply\",\n    \"multiplySelf\",\n    \"multisample\",\n    \"multisampled\",\n    \"mutableFile\",\n    \"muted\",\n    \"n\",\n    \"name\",\n    \"nameProp\",\n    \"namedItem\",\n    \"namedRecordset\",\n    \"names\",\n    \"namespaceURI\",\n    \"namespaces\",\n    \"naturalHeight\",\n    \"naturalWidth\",\n    \"navigate\",\n    \"navigation\",\n    \"navigationMode\",\n    \"navigationPreload\",\n    \"navigationStart\",\n    \"navigator\",\n    \"near\",\n    \"nearestViewportElement\",\n    \"negative\",\n    \"negotiated\",\n    \"netscape\",\n    \"networkState\",\n    \"newScale\",\n    \"newTranslate\",\n    \"newURL\",\n    \"newValue\",\n    \"newValueSpecifiedUnits\",\n    \"newVersion\",\n    \"newhome\",\n    \"next\",\n    \"nextElementSibling\",\n    \"nextHopProtocol\",\n    \"nextNode\",\n    \"nextPage\",\n    \"nextSibling\",\n    \"nickname\",\n    \"noHref\",\n    \"noModule\",\n    \"noResize\",\n    \"noShade\",\n    \"noValidate\",\n    \"noWrap\",\n    \"node\",\n    \"nodeName\",\n    \"nodeType\",\n    \"nodeValue\",\n    \"nonce\",\n    \"normalize\",\n    \"normalizedPathSegList\",\n    \"notationName\",\n    \"notations\",\n    \"note\",\n    \"noteGrainOn\",\n    \"noteOff\",\n    \"noteOn\",\n    \"notify\",\n    \"now\",\n    \"numOctaves\",\n    \"number\",\n    \"numberOfChannels\",\n    \"numberOfInputs\",\n    \"numberOfItems\",\n    \"numberOfOutputs\",\n    \"numberValue\",\n    \"oMatchesSelector\",\n    \"object\",\n    \"object-fit\",\n    \"object-position\",\n    \"objectFit\",\n    \"objectPosition\",\n    \"objectStore\",\n    \"objectStoreNames\",\n    \"objectType\",\n    \"observe\",\n    \"occlusionQuerySet\",\n    \"of\",\n    \"offscreenBuffering\",\n    \"offset\",\n    \"offset-anchor\",\n    \"offset-distance\",\n    \"offset-path\",\n    \"offset-rotate\",\n    \"offsetAnchor\",\n    \"offsetDistance\",\n    \"offsetHeight\",\n    \"offsetLeft\",\n    \"offsetNode\",\n    \"offsetParent\",\n    \"offsetPath\",\n    \"offsetRotate\",\n    \"offsetTop\",\n    \"offsetWidth\",\n    \"offsetX\",\n    \"offsetY\",\n    \"ok\",\n    \"oldURL\",\n    \"oldValue\",\n    \"oldVersion\",\n    \"olderShadowRoot\",\n    \"onLine\",\n    \"onSubmittedWorkDone\",\n    \"onabort\",\n    \"onabsolutedeviceorientation\",\n    \"onactivate\",\n    \"onactive\",\n    \"onaddsourcebuffer\",\n    \"onaddstream\",\n    \"onaddtrack\",\n    \"onafterprint\",\n    \"onafterscriptexecute\",\n    \"onafterupdate\",\n    \"onanimationcancel\",\n    \"onanimationend\",\n    \"onanimationiteration\",\n    \"onanimationstart\",\n    \"onappinstalled\",\n    \"onaudioend\",\n    \"onaudioprocess\",\n    \"onaudiostart\",\n    \"onautocomplete\",\n    \"onautocompleteerror\",\n    \"onauxclick\",\n    \"onbeforeactivate\",\n    \"onbeforecopy\",\n    \"onbeforecut\",\n    \"onbeforedeactivate\",\n    \"onbeforeeditfocus\",\n    \"onbeforeinstallprompt\",\n    \"onbeforepaste\",\n    \"onbeforeprint\",\n    \"onbeforescriptexecute\",\n    \"onbeforeunload\",\n    \"onbeforeupdate\",\n    \"onbeforexrselect\",\n    \"onbegin\",\n    \"onblocked\",\n    \"onblur\",\n    \"onbounce\",\n    \"onboundary\",\n    \"onbufferedamountlow\",\n    \"oncached\",\n    \"oncancel\",\n    \"oncandidatewindowhide\",\n    \"oncandidatewindowshow\",\n    \"oncandidatewindowupdate\",\n    \"oncanplay\",\n    \"oncanplaythrough\",\n    \"once\",\n    \"oncellchange\",\n    \"onchange\",\n    \"oncharacteristicvaluechanged\",\n    \"onchargingchange\",\n    \"onchargingtimechange\",\n    \"onchecking\",\n    \"onclick\",\n    \"onclose\",\n    \"onclosing\",\n    \"oncompassneedscalibration\",\n    \"oncomplete\",\n    \"onconnect\",\n    \"onconnecting\",\n    \"onconnectionavailable\",\n    \"onconnectionstatechange\",\n    \"oncontextmenu\",\n    \"oncontrollerchange\",\n    \"oncontrolselect\",\n    \"oncopy\",\n    \"oncuechange\",\n    \"oncut\",\n    \"ondataavailable\",\n    \"ondatachannel\",\n    \"ondatasetchanged\",\n    \"ondatasetcomplete\",\n    \"ondblclick\",\n    \"ondeactivate\",\n    \"ondevicechange\",\n    \"ondevicelight\",\n    \"ondevicemotion\",\n    \"ondeviceorientation\",\n    \"ondeviceorientationabsolute\",\n    \"ondeviceproximity\",\n    \"ondischargingtimechange\",\n    \"ondisconnect\",\n    \"ondisplay\",\n    \"ondownloading\",\n    \"ondrag\",\n    \"ondragend\",\n    \"ondragenter\",\n    \"ondragexit\",\n    \"ondragleave\",\n    \"ondragover\",\n    \"ondragstart\",\n    \"ondrop\",\n    \"ondurationchange\",\n    \"onemptied\",\n    \"onencrypted\",\n    \"onend\",\n    \"onended\",\n    \"onenter\",\n    \"onenterpictureinpicture\",\n    \"onerror\",\n    \"onerrorupdate\",\n    \"onexit\",\n    \"onfilterchange\",\n    \"onfinish\",\n    \"onfocus\",\n    \"onfocusin\",\n    \"onfocusout\",\n    \"onformdata\",\n    \"onfreeze\",\n    \"onfullscreenchange\",\n    \"onfullscreenerror\",\n    \"ongatheringstatechange\",\n    \"ongattserverdisconnected\",\n    \"ongesturechange\",\n    \"ongestureend\",\n    \"ongesturestart\",\n    \"ongotpointercapture\",\n    \"onhashchange\",\n    \"onhelp\",\n    \"onicecandidate\",\n    \"onicecandidateerror\",\n    \"oniceconnectionstatechange\",\n    \"onicegatheringstatechange\",\n    \"oninactive\",\n    \"oninput\",\n    \"oninputsourceschange\",\n    \"oninvalid\",\n    \"onkeydown\",\n    \"onkeypress\",\n    \"onkeystatuseschange\",\n    \"onkeyup\",\n    \"onlanguagechange\",\n    \"onlayoutcomplete\",\n    \"onleavepictureinpicture\",\n    \"onlevelchange\",\n    \"onload\",\n    \"onloadeddata\",\n    \"onloadedmetadata\",\n    \"onloadend\",\n    \"onloading\",\n    \"onloadingdone\",\n    \"onloadingerror\",\n    \"onloadstart\",\n    \"onlosecapture\",\n    \"onlostpointercapture\",\n    \"only\",\n    \"onmark\",\n    \"onmessage\",\n    \"onmessageerror\",\n    \"onmidimessage\",\n    \"onmousedown\",\n    \"onmouseenter\",\n    \"onmouseleave\",\n    \"onmousemove\",\n    \"onmouseout\",\n    \"onmouseover\",\n    \"onmouseup\",\n    \"onmousewheel\",\n    \"onmove\",\n    \"onmoveend\",\n    \"onmovestart\",\n    \"onmozfullscreenchange\",\n    \"onmozfullscreenerror\",\n    \"onmozorientationchange\",\n    \"onmozpointerlockchange\",\n    \"onmozpointerlockerror\",\n    \"onmscontentzoom\",\n    \"onmsfullscreenchange\",\n    \"onmsfullscreenerror\",\n    \"onmsgesturechange\",\n    \"onmsgesturedoubletap\",\n    \"onmsgestureend\",\n    \"onmsgesturehold\",\n    \"onmsgesturestart\",\n    \"onmsgesturetap\",\n    \"onmsgotpointercapture\",\n    \"onmsinertiastart\",\n    \"onmslostpointercapture\",\n    \"onmsmanipulationstatechanged\",\n    \"onmsneedkey\",\n    \"onmsorientationchange\",\n    \"onmspointercancel\",\n    \"onmspointerdown\",\n    \"onmspointerenter\",\n    \"onmspointerhover\",\n    \"onmspointerleave\",\n    \"onmspointermove\",\n    \"onmspointerout\",\n    \"onmspointerover\",\n    \"onmspointerup\",\n    \"onmssitemodejumplistitemremoved\",\n    \"onmsthumbnailclick\",\n    \"onmute\",\n    \"onnegotiationneeded\",\n    \"onnomatch\",\n    \"onnoupdate\",\n    \"onobsolete\",\n    \"onoffline\",\n    \"ononline\",\n    \"onopen\",\n    \"onorientationchange\",\n    \"onpagechange\",\n    \"onpagehide\",\n    \"onpageshow\",\n    \"onpaste\",\n    \"onpause\",\n    \"onpayerdetailchange\",\n    \"onpaymentmethodchange\",\n    \"onplay\",\n    \"onplaying\",\n    \"onpluginstreamstart\",\n    \"onpointercancel\",\n    \"onpointerdown\",\n    \"onpointerenter\",\n    \"onpointerleave\",\n    \"onpointerlockchange\",\n    \"onpointerlockerror\",\n    \"onpointermove\",\n    \"onpointerout\",\n    \"onpointerover\",\n    \"onpointerrawupdate\",\n    \"onpointerup\",\n    \"onpopstate\",\n    \"onprocessorerror\",\n    \"onprogress\",\n    \"onpropertychange\",\n    \"onratechange\",\n    \"onreading\",\n    \"onreadystatechange\",\n    \"onrejectionhandled\",\n    \"onrelease\",\n    \"onremove\",\n    \"onremovesourcebuffer\",\n    \"onremovestream\",\n    \"onremovetrack\",\n    \"onrepeat\",\n    \"onreset\",\n    \"onresize\",\n    \"onresizeend\",\n    \"onresizestart\",\n    \"onresourcetimingbufferfull\",\n    \"onresult\",\n    \"onresume\",\n    \"onrowenter\",\n    \"onrowexit\",\n    \"onrowsdelete\",\n    \"onrowsinserted\",\n    \"onscroll\",\n    \"onsearch\",\n    \"onsecuritypolicyviolation\",\n    \"onseeked\",\n    \"onseeking\",\n    \"onselect\",\n    \"onselectedcandidatepairchange\",\n    \"onselectend\",\n    \"onselectionchange\",\n    \"onselectstart\",\n    \"onshippingaddresschange\",\n    \"onshippingoptionchange\",\n    \"onshow\",\n    \"onsignalingstatechange\",\n    \"onsoundend\",\n    \"onsoundstart\",\n    \"onsourceclose\",\n    \"onsourceclosed\",\n    \"onsourceended\",\n    \"onsourceopen\",\n    \"onspeechend\",\n    \"onspeechstart\",\n    \"onsqueeze\",\n    \"onsqueezeend\",\n    \"onsqueezestart\",\n    \"onstalled\",\n    \"onstart\",\n    \"onstatechange\",\n    \"onstop\",\n    \"onstorage\",\n    \"onstoragecommit\",\n    \"onsubmit\",\n    \"onsuccess\",\n    \"onsuspend\",\n    \"onterminate\",\n    \"ontextinput\",\n    \"ontimeout\",\n    \"ontimeupdate\",\n    \"ontoggle\",\n    \"ontonechange\",\n    \"ontouchcancel\",\n    \"ontouchend\",\n    \"ontouchmove\",\n    \"ontouchstart\",\n    \"ontrack\",\n    \"ontransitioncancel\",\n    \"ontransitionend\",\n    \"ontransitionrun\",\n    \"ontransitionstart\",\n    \"onuncapturederror\",\n    \"onunhandledrejection\",\n    \"onunload\",\n    \"onunmute\",\n    \"onupdate\",\n    \"onupdateend\",\n    \"onupdatefound\",\n    \"onupdateready\",\n    \"onupdatestart\",\n    \"onupgradeneeded\",\n    \"onuserproximity\",\n    \"onversionchange\",\n    \"onvisibilitychange\",\n    \"onvoiceschanged\",\n    \"onvolumechange\",\n    \"onvrdisplayactivate\",\n    \"onvrdisplayconnect\",\n    \"onvrdisplaydeactivate\",\n    \"onvrdisplaydisconnect\",\n    \"onvrdisplaypresentchange\",\n    \"onwaiting\",\n    \"onwaitingforkey\",\n    \"onwarning\",\n    \"onwebkitanimationend\",\n    \"onwebkitanimationiteration\",\n    \"onwebkitanimationstart\",\n    \"onwebkitcurrentplaybacktargetiswirelesschanged\",\n    \"onwebkitfullscreenchange\",\n    \"onwebkitfullscreenerror\",\n    \"onwebkitkeyadded\",\n    \"onwebkitkeyerror\",\n    \"onwebkitkeymessage\",\n    \"onwebkitneedkey\",\n    \"onwebkitorientationchange\",\n    \"onwebkitplaybacktargetavailabilitychanged\",\n    \"onwebkitpointerlockchange\",\n    \"onwebkitpointerlockerror\",\n    \"onwebkitresourcetimingbufferfull\",\n    \"onwebkittransitionend\",\n    \"onwheel\",\n    \"onzoom\",\n    \"opacity\",\n    \"open\",\n    \"openCursor\",\n    \"openDatabase\",\n    \"openKeyCursor\",\n    \"opened\",\n    \"opener\",\n    \"opera\",\n    \"operation\",\n    \"operationType\",\n    \"operator\",\n    \"opr\",\n    \"optimum\",\n    \"options\",\n    \"or\",\n    \"order\",\n    \"orderX\",\n    \"orderY\",\n    \"ordered\",\n    \"org\",\n    \"organization\",\n    \"orient\",\n    \"orientAngle\",\n    \"orientType\",\n    \"orientation\",\n    \"orientationX\",\n    \"orientationY\",\n    \"orientationZ\",\n    \"origin\",\n    \"originalPolicy\",\n    \"originalTarget\",\n    \"orphans\",\n    \"oscpu\",\n    \"outerHTML\",\n    \"outerHeight\",\n    \"outerText\",\n    \"outerWidth\",\n    \"outline\",\n    \"outline-color\",\n    \"outline-offset\",\n    \"outline-style\",\n    \"outline-width\",\n    \"outlineColor\",\n    \"outlineOffset\",\n    \"outlineStyle\",\n    \"outlineWidth\",\n    \"outputBuffer\",\n    \"outputChannelCount\",\n    \"outputLatency\",\n    \"outputs\",\n    \"overflow\",\n    \"overflow-anchor\",\n    \"overflow-block\",\n    \"overflow-inline\",\n    \"overflow-wrap\",\n    \"overflow-x\",\n    \"overflow-y\",\n    \"overflowAnchor\",\n    \"overflowBlock\",\n    \"overflowInline\",\n    \"overflowWrap\",\n    \"overflowX\",\n    \"overflowY\",\n    \"overrideMimeType\",\n    \"oversample\",\n    \"overscroll-behavior\",\n    \"overscroll-behavior-block\",\n    \"overscroll-behavior-inline\",\n    \"overscroll-behavior-x\",\n    \"overscroll-behavior-y\",\n    \"overscrollBehavior\",\n    \"overscrollBehaviorBlock\",\n    \"overscrollBehaviorInline\",\n    \"overscrollBehaviorX\",\n    \"overscrollBehaviorY\",\n    \"ownKeys\",\n    \"ownerDocument\",\n    \"ownerElement\",\n    \"ownerNode\",\n    \"ownerRule\",\n    \"ownerSVGElement\",\n    \"owningElement\",\n    \"p1\",\n    \"p2\",\n    \"p3\",\n    \"p4\",\n    \"packetSize\",\n    \"packets\",\n    \"pad\",\n    \"padEnd\",\n    \"padStart\",\n    \"padding\",\n    \"padding-block\",\n    \"padding-block-end\",\n    \"padding-block-start\",\n    \"padding-bottom\",\n    \"padding-inline\",\n    \"padding-inline-end\",\n    \"padding-inline-start\",\n    \"padding-left\",\n    \"padding-right\",\n    \"padding-top\",\n    \"paddingBlock\",\n    \"paddingBlockEnd\",\n    \"paddingBlockStart\",\n    \"paddingBottom\",\n    \"paddingInline\",\n    \"paddingInlineEnd\",\n    \"paddingInlineStart\",\n    \"paddingLeft\",\n    \"paddingRight\",\n    \"paddingTop\",\n    \"page\",\n    \"page-break-after\",\n    \"page-break-before\",\n    \"page-break-inside\",\n    \"pageBreakAfter\",\n    \"pageBreakBefore\",\n    \"pageBreakInside\",\n    \"pageCount\",\n    \"pageLeft\",\n    \"pageTop\",\n    \"pageX\",\n    \"pageXOffset\",\n    \"pageY\",\n    \"pageYOffset\",\n    \"pages\",\n    \"paint-order\",\n    \"paintOrder\",\n    \"paintRequests\",\n    \"paintType\",\n    \"paintWorklet\",\n    \"palette\",\n    \"pan\",\n    \"panningModel\",\n    \"parameterData\",\n    \"parameters\",\n    \"parent\",\n    \"parentElement\",\n    \"parentNode\",\n    \"parentRule\",\n    \"parentStyleSheet\",\n    \"parentTextEdit\",\n    \"parentWindow\",\n    \"parse\",\n    \"parseAll\",\n    \"parseFloat\",\n    \"parseFromString\",\n    \"parseInt\",\n    \"part\",\n    \"participants\",\n    \"passOp\",\n    \"passive\",\n    \"password\",\n    \"pasteHTML\",\n    \"path\",\n    \"pathLength\",\n    \"pathSegList\",\n    \"pathSegType\",\n    \"pathSegTypeAsLetter\",\n    \"pathname\",\n    \"pattern\",\n    \"patternContentUnits\",\n    \"patternMismatch\",\n    \"patternTransform\",\n    \"patternUnits\",\n    \"pause\",\n    \"pauseAnimations\",\n    \"pauseOnExit\",\n    \"pauseProfilers\",\n    \"pauseTransformFeedback\",\n    \"paused\",\n    \"payerEmail\",\n    \"payerName\",\n    \"payerPhone\",\n    \"paymentManager\",\n    \"pc\",\n    \"peerIdentity\",\n    \"pending\",\n    \"pendingLocalDescription\",\n    \"pendingRemoteDescription\",\n    \"percent\",\n    \"performance\",\n    \"periodicSync\",\n    \"permission\",\n    \"permissionState\",\n    \"permissions\",\n    \"persist\",\n    \"persisted\",\n    \"personalbar\",\n    \"perspective\",\n    \"perspective-origin\",\n    \"perspectiveOrigin\",\n    \"phone\",\n    \"phoneticFamilyName\",\n    \"phoneticGivenName\",\n    \"photo\",\n    \"pictureInPictureElement\",\n    \"pictureInPictureEnabled\",\n    \"pictureInPictureWindow\",\n    \"ping\",\n    \"pipeThrough\",\n    \"pipeTo\",\n    \"pitch\",\n    \"pixelBottom\",\n    \"pixelDepth\",\n    \"pixelHeight\",\n    \"pixelLeft\",\n    \"pixelRight\",\n    \"pixelStorei\",\n    \"pixelTop\",\n    \"pixelUnitToMillimeterX\",\n    \"pixelUnitToMillimeterY\",\n    \"pixelWidth\",\n    \"place-content\",\n    \"place-items\",\n    \"place-self\",\n    \"placeContent\",\n    \"placeItems\",\n    \"placeSelf\",\n    \"placeholder\",\n    \"platform\",\n    \"platformVersion\",\n    \"platforms\",\n    \"play\",\n    \"playEffect\",\n    \"playState\",\n    \"playbackRate\",\n    \"playbackState\",\n    \"playbackTime\",\n    \"played\",\n    \"playoutDelayHint\",\n    \"playsInline\",\n    \"plugins\",\n    \"pluginspage\",\n    \"pname\",\n    \"pointer-events\",\n    \"pointerBeforeReferenceNode\",\n    \"pointerEnabled\",\n    \"pointerEvents\",\n    \"pointerId\",\n    \"pointerLockElement\",\n    \"pointerType\",\n    \"points\",\n    \"pointsAtX\",\n    \"pointsAtY\",\n    \"pointsAtZ\",\n    \"polygonOffset\",\n    \"pop\",\n    \"popDebugGroup\",\n    \"popErrorScope\",\n    \"populateMatrix\",\n    \"popupWindowFeatures\",\n    \"popupWindowName\",\n    \"popupWindowURI\",\n    \"port\",\n    \"port1\",\n    \"port2\",\n    \"ports\",\n    \"posBottom\",\n    \"posHeight\",\n    \"posLeft\",\n    \"posRight\",\n    \"posTop\",\n    \"posWidth\",\n    \"pose\",\n    \"position\",\n    \"positionAlign\",\n    \"positionX\",\n    \"positionY\",\n    \"positionZ\",\n    \"postError\",\n    \"postMessage\",\n    \"postalCode\",\n    \"poster\",\n    \"pow\",\n    \"powerEfficient\",\n    \"powerOff\",\n    \"powerPreference\",\n    \"preMultiplySelf\",\n    \"precision\",\n    \"preferredStyleSheetSet\",\n    \"preferredStylesheetSet\",\n    \"prefix\",\n    \"preload\",\n    \"premultipliedAlpha\",\n    \"prepend\",\n    \"presentation\",\n    \"preserveAlpha\",\n    \"preserveAspectRatio\",\n    \"preserveAspectRatioString\",\n    \"pressed\",\n    \"pressure\",\n    \"prevValue\",\n    \"preventDefault\",\n    \"preventExtensions\",\n    \"preventSilentAccess\",\n    \"previousElementSibling\",\n    \"previousNode\",\n    \"previousPage\",\n    \"previousRect\",\n    \"previousScale\",\n    \"previousSibling\",\n    \"previousTranslate\",\n    \"primaryKey\",\n    \"primitive\",\n    \"primitiveType\",\n    \"primitiveUnits\",\n    \"principals\",\n    \"print\",\n    \"priority\",\n    \"privateKey\",\n    \"probablySupportsContext\",\n    \"process\",\n    \"processIceMessage\",\n    \"processingEnd\",\n    \"processingStart\",\n    \"processorOptions\",\n    \"product\",\n    \"productId\",\n    \"productName\",\n    \"productSub\",\n    \"profile\",\n    \"profileEnd\",\n    \"profiles\",\n    \"projectionMatrix\",\n    \"promise\",\n    \"prompt\",\n    \"properties\",\n    \"propertyIsEnumerable\",\n    \"propertyName\",\n    \"protocol\",\n    \"protocolLong\",\n    \"prototype\",\n    \"provider\",\n    \"pseudoClass\",\n    \"pseudoElement\",\n    \"pt\",\n    \"publicId\",\n    \"publicKey\",\n    \"published\",\n    \"pulse\",\n    \"push\",\n    \"pushDebugGroup\",\n    \"pushErrorScope\",\n    \"pushManager\",\n    \"pushNotification\",\n    \"pushState\",\n    \"put\",\n    \"putImageData\",\n    \"px\",\n    \"quadraticCurveTo\",\n    \"qualifier\",\n    \"quaternion\",\n    \"query\",\n    \"queryCommandEnabled\",\n    \"queryCommandIndeterm\",\n    \"queryCommandState\",\n    \"queryCommandSupported\",\n    \"queryCommandText\",\n    \"queryCommandValue\",\n    \"querySelector\",\n    \"querySelectorAll\",\n    \"querySet\",\n    \"queue\",\n    \"queueMicrotask\",\n    \"quote\",\n    \"quotes\",\n    \"r\",\n    \"r1\",\n    \"r2\",\n    \"race\",\n    \"rad\",\n    \"radiogroup\",\n    \"radiusX\",\n    \"radiusY\",\n    \"random\",\n    \"range\",\n    \"rangeCount\",\n    \"rangeMax\",\n    \"rangeMin\",\n    \"rangeOffset\",\n    \"rangeOverflow\",\n    \"rangeParent\",\n    \"rangeUnderflow\",\n    \"rate\",\n    \"ratio\",\n    \"raw\",\n    \"rawId\",\n    \"read\",\n    \"readAsArrayBuffer\",\n    \"readAsBinaryString\",\n    \"readAsBlob\",\n    \"readAsDataURL\",\n    \"readAsText\",\n    \"readBuffer\",\n    \"readEntries\",\n    \"readOnly\",\n    \"readPixels\",\n    \"readReportRequested\",\n    \"readText\",\n    \"readValue\",\n    \"readable\",\n    \"ready\",\n    \"readyState\",\n    \"reason\",\n    \"reboot\",\n    \"receivedAlert\",\n    \"receiver\",\n    \"receivers\",\n    \"recipient\",\n    \"reconnect\",\n    \"recordNumber\",\n    \"recordsAvailable\",\n    \"recordset\",\n    \"rect\",\n    \"red\",\n    \"redEyeReduction\",\n    \"redirect\",\n    \"redirectCount\",\n    \"redirectEnd\",\n    \"redirectStart\",\n    \"redirected\",\n    \"reduce\",\n    \"reduceRight\",\n    \"reduction\",\n    \"refDistance\",\n    \"refX\",\n    \"refY\",\n    \"referenceNode\",\n    \"referenceSpace\",\n    \"referrer\",\n    \"referrerPolicy\",\n    \"refresh\",\n    \"region\",\n    \"regionAnchorX\",\n    \"regionAnchorY\",\n    \"regionId\",\n    \"regions\",\n    \"register\",\n    \"registerContentHandler\",\n    \"registerElement\",\n    \"registerProperty\",\n    \"registerProtocolHandler\",\n    \"reject\",\n    \"rel\",\n    \"relList\",\n    \"relatedAddress\",\n    \"relatedNode\",\n    \"relatedPort\",\n    \"relatedTarget\",\n    \"release\",\n    \"releaseCapture\",\n    \"releaseEvents\",\n    \"releaseInterface\",\n    \"releaseLock\",\n    \"releasePointerCapture\",\n    \"releaseShaderCompiler\",\n    \"reliable\",\n    \"reliableWrite\",\n    \"reload\",\n    \"rem\",\n    \"remainingSpace\",\n    \"remote\",\n    \"remoteDescription\",\n    \"remove\",\n    \"removeAllRanges\",\n    \"removeAttribute\",\n    \"removeAttributeNS\",\n    \"removeAttributeNode\",\n    \"removeBehavior\",\n    \"removeChild\",\n    \"removeCue\",\n    \"removeEventListener\",\n    \"removeFilter\",\n    \"removeImport\",\n    \"removeItem\",\n    \"removeListener\",\n    \"removeNamedItem\",\n    \"removeNamedItemNS\",\n    \"removeNode\",\n    \"removeParameter\",\n    \"removeProperty\",\n    \"removeRange\",\n    \"removeRegion\",\n    \"removeRule\",\n    \"removeSiteSpecificTrackingException\",\n    \"removeSourceBuffer\",\n    \"removeStream\",\n    \"removeTrack\",\n    \"removeVariable\",\n    \"removeWakeLockListener\",\n    \"removeWebWideTrackingException\",\n    \"removed\",\n    \"removedNodes\",\n    \"renderHeight\",\n    \"renderState\",\n    \"renderTime\",\n    \"renderWidth\",\n    \"renderbufferStorage\",\n    \"renderbufferStorageMultisample\",\n    \"renderedBuffer\",\n    \"renderingMode\",\n    \"renotify\",\n    \"repeat\",\n    \"replace\",\n    \"replaceAdjacentText\",\n    \"replaceAll\",\n    \"replaceChild\",\n    \"replaceChildren\",\n    \"replaceData\",\n    \"replaceId\",\n    \"replaceItem\",\n    \"replaceNode\",\n    \"replaceState\",\n    \"replaceSync\",\n    \"replaceTrack\",\n    \"replaceWholeText\",\n    \"replaceWith\",\n    \"reportValidity\",\n    \"request\",\n    \"requestAdapter\",\n    \"requestAdapterInfo\",\n    \"requestAnimationFrame\",\n    \"requestAutocomplete\",\n    \"requestData\",\n    \"requestDevice\",\n    \"requestFrame\",\n    \"requestFullscreen\",\n    \"requestHitTestSource\",\n    \"requestHitTestSourceForTransientInput\",\n    \"requestId\",\n    \"requestIdleCallback\",\n    \"requestMIDIAccess\",\n    \"requestMediaKeySystemAccess\",\n    \"requestPermission\",\n    \"requestPictureInPicture\",\n    \"requestPointerLock\",\n    \"requestPresent\",\n    \"requestReferenceSpace\",\n    \"requestSession\",\n    \"requestStart\",\n    \"requestStorageAccess\",\n    \"requestSubmit\",\n    \"requestVideoFrameCallback\",\n    \"requestingWindow\",\n    \"requireInteraction\",\n    \"required\",\n    \"requiredExtensions\",\n    \"requiredFeatures\",\n    \"requiredLimits\",\n    \"reset\",\n    \"resetPose\",\n    \"resetTransform\",\n    \"resize\",\n    \"resizeBy\",\n    \"resizeTo\",\n    \"resolve\",\n    \"resolveQuerySet\",\n    \"resolveTarget\",\n    \"resource\",\n    \"response\",\n    \"responseBody\",\n    \"responseEnd\",\n    \"responseReady\",\n    \"responseStart\",\n    \"responseText\",\n    \"responseType\",\n    \"responseURL\",\n    \"responseXML\",\n    \"restartIce\",\n    \"restore\",\n    \"result\",\n    \"resultIndex\",\n    \"resultType\",\n    \"results\",\n    \"resume\",\n    \"resumeProfilers\",\n    \"resumeTransformFeedback\",\n    \"retry\",\n    \"returnValue\",\n    \"rev\",\n    \"reverse\",\n    \"reversed\",\n    \"revocable\",\n    \"revokeObjectURL\",\n    \"rgbColor\",\n    \"right\",\n    \"rightContext\",\n    \"rightDegrees\",\n    \"rightMargin\",\n    \"rightProjectionMatrix\",\n    \"rightViewMatrix\",\n    \"role\",\n    \"rolloffFactor\",\n    \"root\",\n    \"rootBounds\",\n    \"rootElement\",\n    \"rootMargin\",\n    \"rotate\",\n    \"rotateAxisAngle\",\n    \"rotateAxisAngleSelf\",\n    \"rotateFromVector\",\n    \"rotateFromVectorSelf\",\n    \"rotateSelf\",\n    \"rotation\",\n    \"rotationAngle\",\n    \"rotationRate\",\n    \"round\",\n    \"roundRect\",\n    \"row-gap\",\n    \"rowGap\",\n    \"rowIndex\",\n    \"rowSpan\",\n    \"rows\",\n    \"rowsPerImage\",\n    \"rtcpTransport\",\n    \"rtt\",\n    \"ruby-align\",\n    \"ruby-position\",\n    \"rubyAlign\",\n    \"rubyOverhang\",\n    \"rubyPosition\",\n    \"rules\",\n    \"runtime\",\n    \"runtimeStyle\",\n    \"rx\",\n    \"ry\",\n    \"s\",\n    \"safari\",\n    \"sample\",\n    \"sampleCount\",\n    \"sampleCoverage\",\n    \"sampleRate\",\n    \"sampleType\",\n    \"sampler\",\n    \"samplerParameterf\",\n    \"samplerParameteri\",\n    \"sandbox\",\n    \"save\",\n    \"saveData\",\n    \"scale\",\n    \"scale3d\",\n    \"scale3dSelf\",\n    \"scaleNonUniform\",\n    \"scaleNonUniformSelf\",\n    \"scaleSelf\",\n    \"scheme\",\n    \"scissor\",\n    \"scope\",\n    \"scopeName\",\n    \"scoped\",\n    \"screen\",\n    \"screenBrightness\",\n    \"screenEnabled\",\n    \"screenLeft\",\n    \"screenPixelToMillimeterX\",\n    \"screenPixelToMillimeterY\",\n    \"screenTop\",\n    \"screenX\",\n    \"screenY\",\n    \"scriptURL\",\n    \"scripts\",\n    \"scroll\",\n    \"scroll-behavior\",\n    \"scroll-margin\",\n    \"scroll-margin-block\",\n    \"scroll-margin-block-end\",\n    \"scroll-margin-block-start\",\n    \"scroll-margin-bottom\",\n    \"scroll-margin-inline\",\n    \"scroll-margin-inline-end\",\n    \"scroll-margin-inline-start\",\n    \"scroll-margin-left\",\n    \"scroll-margin-right\",\n    \"scroll-margin-top\",\n    \"scroll-padding\",\n    \"scroll-padding-block\",\n    \"scroll-padding-block-end\",\n    \"scroll-padding-block-start\",\n    \"scroll-padding-bottom\",\n    \"scroll-padding-inline\",\n    \"scroll-padding-inline-end\",\n    \"scroll-padding-inline-start\",\n    \"scroll-padding-left\",\n    \"scroll-padding-right\",\n    \"scroll-padding-top\",\n    \"scroll-snap-align\",\n    \"scroll-snap-type\",\n    \"scrollAmount\",\n    \"scrollBehavior\",\n    \"scrollBy\",\n    \"scrollByLines\",\n    \"scrollByPages\",\n    \"scrollDelay\",\n    \"scrollHeight\",\n    \"scrollIntoView\",\n    \"scrollIntoViewIfNeeded\",\n    \"scrollLeft\",\n    \"scrollLeftMax\",\n    \"scrollMargin\",\n    \"scrollMarginBlock\",\n    \"scrollMarginBlockEnd\",\n    \"scrollMarginBlockStart\",\n    \"scrollMarginBottom\",\n    \"scrollMarginInline\",\n    \"scrollMarginInlineEnd\",\n    \"scrollMarginInlineStart\",\n    \"scrollMarginLeft\",\n    \"scrollMarginRight\",\n    \"scrollMarginTop\",\n    \"scrollMaxX\",\n    \"scrollMaxY\",\n    \"scrollPadding\",\n    \"scrollPaddingBlock\",\n    \"scrollPaddingBlockEnd\",\n    \"scrollPaddingBlockStart\",\n    \"scrollPaddingBottom\",\n    \"scrollPaddingInline\",\n    \"scrollPaddingInlineEnd\",\n    \"scrollPaddingInlineStart\",\n    \"scrollPaddingLeft\",\n    \"scrollPaddingRight\",\n    \"scrollPaddingTop\",\n    \"scrollRestoration\",\n    \"scrollSnapAlign\",\n    \"scrollSnapType\",\n    \"scrollTo\",\n    \"scrollTop\",\n    \"scrollTopMax\",\n    \"scrollWidth\",\n    \"scrollX\",\n    \"scrollY\",\n    \"scrollbar-color\",\n    \"scrollbar-width\",\n    \"scrollbar3dLightColor\",\n    \"scrollbarArrowColor\",\n    \"scrollbarBaseColor\",\n    \"scrollbarColor\",\n    \"scrollbarDarkShadowColor\",\n    \"scrollbarFaceColor\",\n    \"scrollbarHighlightColor\",\n    \"scrollbarShadowColor\",\n    \"scrollbarTrackColor\",\n    \"scrollbarWidth\",\n    \"scrollbars\",\n    \"scrolling\",\n    \"scrollingElement\",\n    \"sctp\",\n    \"sctpCauseCode\",\n    \"sdp\",\n    \"sdpLineNumber\",\n    \"sdpMLineIndex\",\n    \"sdpMid\",\n    \"seal\",\n    \"search\",\n    \"searchBox\",\n    \"searchBoxJavaBridge_\",\n    \"searchParams\",\n    \"sectionRowIndex\",\n    \"secureConnectionStart\",\n    \"security\",\n    \"seed\",\n    \"seekToNextFrame\",\n    \"seekable\",\n    \"seeking\",\n    \"select\",\n    \"selectAllChildren\",\n    \"selectAlternateInterface\",\n    \"selectConfiguration\",\n    \"selectNode\",\n    \"selectNodeContents\",\n    \"selectNodes\",\n    \"selectSingleNode\",\n    \"selectSubString\",\n    \"selected\",\n    \"selectedIndex\",\n    \"selectedOptions\",\n    \"selectedStyleSheetSet\",\n    \"selectedStylesheetSet\",\n    \"selection\",\n    \"selectionDirection\",\n    \"selectionEnd\",\n    \"selectionStart\",\n    \"selector\",\n    \"selectorText\",\n    \"self\",\n    \"send\",\n    \"sendAsBinary\",\n    \"sendBeacon\",\n    \"sender\",\n    \"sentAlert\",\n    \"sentTimestamp\",\n    \"separator\",\n    \"serialNumber\",\n    \"serializeToString\",\n    \"serverTiming\",\n    \"service\",\n    \"serviceWorker\",\n    \"session\",\n    \"sessionId\",\n    \"sessionStorage\",\n    \"set\",\n    \"setActionHandler\",\n    \"setActive\",\n    \"setAlpha\",\n    \"setAppBadge\",\n    \"setAttribute\",\n    \"setAttributeNS\",\n    \"setAttributeNode\",\n    \"setAttributeNodeNS\",\n    \"setBaseAndExtent\",\n    \"setBigInt64\",\n    \"setBigUint64\",\n    \"setBindGroup\",\n    \"setBingCurrentSearchDefault\",\n    \"setBlendConstant\",\n    \"setCapture\",\n    \"setCodecPreferences\",\n    \"setColor\",\n    \"setCompositeOperation\",\n    \"setConfiguration\",\n    \"setCurrentTime\",\n    \"setCustomValidity\",\n    \"setData\",\n    \"setDate\",\n    \"setDragImage\",\n    \"setEnd\",\n    \"setEndAfter\",\n    \"setEndBefore\",\n    \"setEndPoint\",\n    \"setFillColor\",\n    \"setFilterRes\",\n    \"setFloat32\",\n    \"setFloat64\",\n    \"setFloatValue\",\n    \"setFormValue\",\n    \"setFullYear\",\n    \"setHeaderValue\",\n    \"setHours\",\n    \"setIdentityProvider\",\n    \"setImmediate\",\n    \"setIndexBuffer\",\n    \"setInt16\",\n    \"setInt32\",\n    \"setInt8\",\n    \"setInterval\",\n    \"setItem\",\n    \"setKeyframes\",\n    \"setLineCap\",\n    \"setLineDash\",\n    \"setLineJoin\",\n    \"setLineWidth\",\n    \"setLiveSeekableRange\",\n    \"setLocalDescription\",\n    \"setMatrix\",\n    \"setMatrixValue\",\n    \"setMediaKeys\",\n    \"setMilliseconds\",\n    \"setMinutes\",\n    \"setMiterLimit\",\n    \"setMonth\",\n    \"setNamedItem\",\n    \"setNamedItemNS\",\n    \"setNonUserCodeExceptions\",\n    \"setOrientToAngle\",\n    \"setOrientToAuto\",\n    \"setOrientation\",\n    \"setOverrideHistoryNavigationMode\",\n    \"setPaint\",\n    \"setParameter\",\n    \"setParameters\",\n    \"setPeriodicWave\",\n    \"setPipeline\",\n    \"setPointerCapture\",\n    \"setPosition\",\n    \"setPositionState\",\n    \"setPreference\",\n    \"setProperty\",\n    \"setPrototypeOf\",\n    \"setRGBColor\",\n    \"setRGBColorICCColor\",\n    \"setRadius\",\n    \"setRangeText\",\n    \"setRemoteDescription\",\n    \"setRequestHeader\",\n    \"setResizable\",\n    \"setResourceTimingBufferSize\",\n    \"setRotate\",\n    \"setScale\",\n    \"setScissorRect\",\n    \"setSeconds\",\n    \"setSelectionRange\",\n    \"setServerCertificate\",\n    \"setShadow\",\n    \"setSinkId\",\n    \"setSkewX\",\n    \"setSkewY\",\n    \"setStart\",\n    \"setStartAfter\",\n    \"setStartBefore\",\n    \"setStdDeviation\",\n    \"setStencilReference\",\n    \"setStreams\",\n    \"setStringValue\",\n    \"setStrokeColor\",\n    \"setSuggestResult\",\n    \"setTargetAtTime\",\n    \"setTargetValueAtTime\",\n    \"setTime\",\n    \"setTimeout\",\n    \"setTransform\",\n    \"setTranslate\",\n    \"setUTCDate\",\n    \"setUTCFullYear\",\n    \"setUTCHours\",\n    \"setUTCMilliseconds\",\n    \"setUTCMinutes\",\n    \"setUTCMonth\",\n    \"setUTCSeconds\",\n    \"setUint16\",\n    \"setUint32\",\n    \"setUint8\",\n    \"setUri\",\n    \"setValidity\",\n    \"setValueAtTime\",\n    \"setValueCurveAtTime\",\n    \"setVariable\",\n    \"setVelocity\",\n    \"setVersion\",\n    \"setVertexBuffer\",\n    \"setViewport\",\n    \"setYear\",\n    \"settingName\",\n    \"settingValue\",\n    \"sex\",\n    \"shaderLocation\",\n    \"shaderSource\",\n    \"shadowBlur\",\n    \"shadowColor\",\n    \"shadowOffsetX\",\n    \"shadowOffsetY\",\n    \"shadowRoot\",\n    \"shape\",\n    \"shape-image-threshold\",\n    \"shape-margin\",\n    \"shape-outside\",\n    \"shape-rendering\",\n    \"shapeImageThreshold\",\n    \"shapeMargin\",\n    \"shapeOutside\",\n    \"shapeRendering\",\n    \"sheet\",\n    \"shift\",\n    \"shiftKey\",\n    \"shiftLeft\",\n    \"shippingAddress\",\n    \"shippingOption\",\n    \"shippingType\",\n    \"show\",\n    \"showHelp\",\n    \"showModal\",\n    \"showModalDialog\",\n    \"showModelessDialog\",\n    \"showNotification\",\n    \"sidebar\",\n    \"sign\",\n    \"signal\",\n    \"signalingState\",\n    \"signature\",\n    \"silent\",\n    \"sin\",\n    \"singleNodeValue\",\n    \"sinh\",\n    \"sinkId\",\n    \"sittingToStandingTransform\",\n    \"size\",\n    \"sizeToContent\",\n    \"sizeX\",\n    \"sizeZ\",\n    \"sizes\",\n    \"skewX\",\n    \"skewXSelf\",\n    \"skewY\",\n    \"skewYSelf\",\n    \"slice\",\n    \"slope\",\n    \"slot\",\n    \"small\",\n    \"smil\",\n    \"smooth\",\n    \"smoothingTimeConstant\",\n    \"snapToLines\",\n    \"snapshotItem\",\n    \"snapshotLength\",\n    \"some\",\n    \"sort\",\n    \"sortingCode\",\n    \"source\",\n    \"sourceBuffer\",\n    \"sourceBuffers\",\n    \"sourceCapabilities\",\n    \"sourceFile\",\n    \"sourceIndex\",\n    \"sourceMap\",\n    \"sources\",\n    \"spacing\",\n    \"span\",\n    \"speak\",\n    \"speakAs\",\n    \"speaking\",\n    \"species\",\n    \"specified\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"speechSynthesis\",\n    \"speed\",\n    \"speedOfSound\",\n    \"spellcheck\",\n    \"splice\",\n    \"split\",\n    \"splitText\",\n    \"spreadMethod\",\n    \"sqrt\",\n    \"src\",\n    \"srcElement\",\n    \"srcFactor\",\n    \"srcFilter\",\n    \"srcObject\",\n    \"srcUrn\",\n    \"srcdoc\",\n    \"srclang\",\n    \"srcset\",\n    \"stack\",\n    \"stackTraceLimit\",\n    \"stacktrace\",\n    \"stageParameters\",\n    \"standalone\",\n    \"standby\",\n    \"start\",\n    \"startContainer\",\n    \"startIce\",\n    \"startMessages\",\n    \"startNotifications\",\n    \"startOffset\",\n    \"startProfiling\",\n    \"startRendering\",\n    \"startShark\",\n    \"startTime\",\n    \"startsWith\",\n    \"state\",\n    \"status\",\n    \"statusCode\",\n    \"statusMessage\",\n    \"statusText\",\n    \"statusbar\",\n    \"stdDeviationX\",\n    \"stdDeviationY\",\n    \"stencilBack\",\n    \"stencilClearValue\",\n    \"stencilFront\",\n    \"stencilFunc\",\n    \"stencilFuncSeparate\",\n    \"stencilLoadOp\",\n    \"stencilMask\",\n    \"stencilMaskSeparate\",\n    \"stencilOp\",\n    \"stencilOpSeparate\",\n    \"stencilReadMask\",\n    \"stencilReadOnly\",\n    \"stencilStoreOp\",\n    \"stencilWriteMask\",\n    \"step\",\n    \"stepDown\",\n    \"stepMismatch\",\n    \"stepMode\",\n    \"stepUp\",\n    \"sticky\",\n    \"stitchTiles\",\n    \"stop\",\n    \"stop-color\",\n    \"stop-opacity\",\n    \"stopColor\",\n    \"stopImmediatePropagation\",\n    \"stopNotifications\",\n    \"stopOpacity\",\n    \"stopProfiling\",\n    \"stopPropagation\",\n    \"stopShark\",\n    \"stopped\",\n    \"storage\",\n    \"storageArea\",\n    \"storageName\",\n    \"storageStatus\",\n    \"storageTexture\",\n    \"store\",\n    \"storeOp\",\n    \"storeSiteSpecificTrackingException\",\n    \"storeWebWideTrackingException\",\n    \"stpVersion\",\n    \"stream\",\n    \"streams\",\n    \"stretch\",\n    \"strike\",\n    \"string\",\n    \"stringValue\",\n    \"stringify\",\n    \"stripIndexFormat\",\n    \"stroke\",\n    \"stroke-dasharray\",\n    \"stroke-dashoffset\",\n    \"stroke-linecap\",\n    \"stroke-linejoin\",\n    \"stroke-miterlimit\",\n    \"stroke-opacity\",\n    \"stroke-width\",\n    \"strokeDasharray\",\n    \"strokeDashoffset\",\n    \"strokeLinecap\",\n    \"strokeLinejoin\",\n    \"strokeMiterlimit\",\n    \"strokeOpacity\",\n    \"strokeRect\",\n    \"strokeStyle\",\n    \"strokeText\",\n    \"strokeWidth\",\n    \"style\",\n    \"styleFloat\",\n    \"styleMap\",\n    \"styleMedia\",\n    \"styleSheet\",\n    \"styleSheetSets\",\n    \"styleSheets\",\n    \"sub\",\n    \"subarray\",\n    \"subject\",\n    \"submit\",\n    \"submitFrame\",\n    \"submitter\",\n    \"subscribe\",\n    \"substr\",\n    \"substring\",\n    \"substringData\",\n    \"subtle\",\n    \"subtree\",\n    \"suffix\",\n    \"suffixes\",\n    \"summary\",\n    \"sup\",\n    \"supported\",\n    \"supportedContentEncodings\",\n    \"supportedEntryTypes\",\n    \"supports\",\n    \"supportsSession\",\n    \"surfaceScale\",\n    \"surroundContents\",\n    \"suspend\",\n    \"suspendRedraw\",\n    \"swapCache\",\n    \"swapNode\",\n    \"sweepFlag\",\n    \"symbols\",\n    \"sync\",\n    \"sysexEnabled\",\n    \"system\",\n    \"systemCode\",\n    \"systemId\",\n    \"systemLanguage\",\n    \"systemXDPI\",\n    \"systemYDPI\",\n    \"tBodies\",\n    \"tFoot\",\n    \"tHead\",\n    \"tabIndex\",\n    \"table\",\n    \"table-layout\",\n    \"tableLayout\",\n    \"tableValues\",\n    \"tag\",\n    \"tagName\",\n    \"tagUrn\",\n    \"tags\",\n    \"taintEnabled\",\n    \"takePhoto\",\n    \"takeRecords\",\n    \"tan\",\n    \"tangentialPressure\",\n    \"tanh\",\n    \"target\",\n    \"targetElement\",\n    \"targetRayMode\",\n    \"targetRaySpace\",\n    \"targetTouches\",\n    \"targetX\",\n    \"targetY\",\n    \"targets\",\n    \"tcpType\",\n    \"tee\",\n    \"tel\",\n    \"terminate\",\n    \"test\",\n    \"texImage2D\",\n    \"texImage3D\",\n    \"texParameterf\",\n    \"texParameteri\",\n    \"texStorage2D\",\n    \"texStorage3D\",\n    \"texSubImage2D\",\n    \"texSubImage3D\",\n    \"text\",\n    \"text-align\",\n    \"text-align-last\",\n    \"text-anchor\",\n    \"text-combine-upright\",\n    \"text-decoration\",\n    \"text-decoration-color\",\n    \"text-decoration-line\",\n    \"text-decoration-skip-ink\",\n    \"text-decoration-style\",\n    \"text-decoration-thickness\",\n    \"text-emphasis\",\n    \"text-emphasis-color\",\n    \"text-emphasis-position\",\n    \"text-emphasis-style\",\n    \"text-indent\",\n    \"text-justify\",\n    \"text-orientation\",\n    \"text-overflow\",\n    \"text-rendering\",\n    \"text-shadow\",\n    \"text-transform\",\n    \"text-underline-offset\",\n    \"text-underline-position\",\n    \"textAlign\",\n    \"textAlignLast\",\n    \"textAnchor\",\n    \"textAutospace\",\n    \"textBaseline\",\n    \"textCombineUpright\",\n    \"textContent\",\n    \"textDecoration\",\n    \"textDecorationBlink\",\n    \"textDecorationColor\",\n    \"textDecorationLine\",\n    \"textDecorationLineThrough\",\n    \"textDecorationNone\",\n    \"textDecorationOverline\",\n    \"textDecorationSkipInk\",\n    \"textDecorationStyle\",\n    \"textDecorationThickness\",\n    \"textDecorationUnderline\",\n    \"textEmphasis\",\n    \"textEmphasisColor\",\n    \"textEmphasisPosition\",\n    \"textEmphasisStyle\",\n    \"textIndent\",\n    \"textJustify\",\n    \"textJustifyTrim\",\n    \"textKashida\",\n    \"textKashidaSpace\",\n    \"textLength\",\n    \"textOrientation\",\n    \"textOverflow\",\n    \"textRendering\",\n    \"textShadow\",\n    \"textTracks\",\n    \"textTransform\",\n    \"textUnderlineOffset\",\n    \"textUnderlinePosition\",\n    \"texture\",\n    \"then\",\n    \"threadId\",\n    \"threshold\",\n    \"thresholds\",\n    \"tiltX\",\n    \"tiltY\",\n    \"time\",\n    \"timeEnd\",\n    \"timeLog\",\n    \"timeOrigin\",\n    \"timeRemaining\",\n    \"timeStamp\",\n    \"timecode\",\n    \"timeline\",\n    \"timelineTime\",\n    \"timeout\",\n    \"timestamp\",\n    \"timestampOffset\",\n    \"timestampWrites\",\n    \"timing\",\n    \"title\",\n    \"to\",\n    \"toArray\",\n    \"toBlob\",\n    \"toDataURL\",\n    \"toDateString\",\n    \"toElement\",\n    \"toExponential\",\n    \"toFixed\",\n    \"toFloat32Array\",\n    \"toFloat64Array\",\n    \"toGMTString\",\n    \"toISOString\",\n    \"toJSON\",\n    \"toLocaleDateString\",\n    \"toLocaleFormat\",\n    \"toLocaleLowerCase\",\n    \"toLocaleString\",\n    \"toLocaleTimeString\",\n    \"toLocaleUpperCase\",\n    \"toLowerCase\",\n    \"toMatrix\",\n    \"toMethod\",\n    \"toPrecision\",\n    \"toPrimitive\",\n    \"toSdp\",\n    \"toSource\",\n    \"toStaticHTML\",\n    \"toString\",\n    \"toStringTag\",\n    \"toSum\",\n    \"toTimeString\",\n    \"toUTCString\",\n    \"toUpperCase\",\n    \"toggle\",\n    \"toggleAttribute\",\n    \"toggleLongPressEnabled\",\n    \"tone\",\n    \"toneBuffer\",\n    \"tooLong\",\n    \"tooShort\",\n    \"toolbar\",\n    \"top\",\n    \"topMargin\",\n    \"topology\",\n    \"total\",\n    \"totalFrameDelay\",\n    \"totalVideoFrames\",\n    \"touch-action\",\n    \"touchAction\",\n    \"touched\",\n    \"touches\",\n    \"trace\",\n    \"track\",\n    \"trackVisibility\",\n    \"transaction\",\n    \"transactions\",\n    \"transceiver\",\n    \"transferControlToOffscreen\",\n    \"transferFromImageBitmap\",\n    \"transferImageBitmap\",\n    \"transferIn\",\n    \"transferOut\",\n    \"transferSize\",\n    \"transferToImageBitmap\",\n    \"transform\",\n    \"transform-box\",\n    \"transform-origin\",\n    \"transform-style\",\n    \"transformBox\",\n    \"transformFeedbackVaryings\",\n    \"transformOrigin\",\n    \"transformPoint\",\n    \"transformString\",\n    \"transformStyle\",\n    \"transformToDocument\",\n    \"transformToFragment\",\n    \"transition\",\n    \"transition-delay\",\n    \"transition-duration\",\n    \"transition-property\",\n    \"transition-timing-function\",\n    \"transitionDelay\",\n    \"transitionDuration\",\n    \"transitionProperty\",\n    \"transitionTimingFunction\",\n    \"translate\",\n    \"translateSelf\",\n    \"translationX\",\n    \"translationY\",\n    \"transport\",\n    \"trim\",\n    \"trimEnd\",\n    \"trimLeft\",\n    \"trimRight\",\n    \"trimStart\",\n    \"trueSpeed\",\n    \"trunc\",\n    \"truncate\",\n    \"trustedTypes\",\n    \"turn\",\n    \"twist\",\n    \"type\",\n    \"typeDetail\",\n    \"typeMismatch\",\n    \"typeMustMatch\",\n    \"types\",\n    \"u2f\",\n    \"ubound\",\n    \"uint16\",\n    \"uint32\",\n    \"uint8\",\n    \"uint8Clamped\",\n    \"unclippedDepth\",\n    \"unconfigure\",\n    \"undefined\",\n    \"unescape\",\n    \"uneval\",\n    \"unicode\",\n    \"unicode-bidi\",\n    \"unicodeBidi\",\n    \"unicodeRange\",\n    \"uniform1f\",\n    \"uniform1fv\",\n    \"uniform1i\",\n    \"uniform1iv\",\n    \"uniform1ui\",\n    \"uniform1uiv\",\n    \"uniform2f\",\n    \"uniform2fv\",\n    \"uniform2i\",\n    \"uniform2iv\",\n    \"uniform2ui\",\n    \"uniform2uiv\",\n    \"uniform3f\",\n    \"uniform3fv\",\n    \"uniform3i\",\n    \"uniform3iv\",\n    \"uniform3ui\",\n    \"uniform3uiv\",\n    \"uniform4f\",\n    \"uniform4fv\",\n    \"uniform4i\",\n    \"uniform4iv\",\n    \"uniform4ui\",\n    \"uniform4uiv\",\n    \"uniformBlockBinding\",\n    \"uniformMatrix2fv\",\n    \"uniformMatrix2x3fv\",\n    \"uniformMatrix2x4fv\",\n    \"uniformMatrix3fv\",\n    \"uniformMatrix3x2fv\",\n    \"uniformMatrix3x4fv\",\n    \"uniformMatrix4fv\",\n    \"uniformMatrix4x2fv\",\n    \"uniformMatrix4x3fv\",\n    \"unique\",\n    \"uniqueID\",\n    \"uniqueNumber\",\n    \"unit\",\n    \"unitType\",\n    \"units\",\n    \"unloadEventEnd\",\n    \"unloadEventStart\",\n    \"unlock\",\n    \"unmap\",\n    \"unmount\",\n    \"unobserve\",\n    \"unpause\",\n    \"unpauseAnimations\",\n    \"unreadCount\",\n    \"unregister\",\n    \"unregisterContentHandler\",\n    \"unregisterProtocolHandler\",\n    \"unscopables\",\n    \"unselectable\",\n    \"unshift\",\n    \"unsubscribe\",\n    \"unsuspendRedraw\",\n    \"unsuspendRedrawAll\",\n    \"unwatch\",\n    \"unwrapKey\",\n    \"upDegrees\",\n    \"upX\",\n    \"upY\",\n    \"upZ\",\n    \"update\",\n    \"updateCommands\",\n    \"updateIce\",\n    \"updateInterval\",\n    \"updatePlaybackRate\",\n    \"updateRenderState\",\n    \"updateSettings\",\n    \"updateTiming\",\n    \"updateViaCache\",\n    \"updateWith\",\n    \"updated\",\n    \"updating\",\n    \"upgrade\",\n    \"upload\",\n    \"uploadTotal\",\n    \"uploaded\",\n    \"upper\",\n    \"upperBound\",\n    \"upperOpen\",\n    \"uri\",\n    \"url\",\n    \"urn\",\n    \"urns\",\n    \"usage\",\n    \"usages\",\n    \"usb\",\n    \"usbVersionMajor\",\n    \"usbVersionMinor\",\n    \"usbVersionSubminor\",\n    \"useCurrentView\",\n    \"useMap\",\n    \"useProgram\",\n    \"usedSpace\",\n    \"user-select\",\n    \"userActivation\",\n    \"userAgent\",\n    \"userAgentData\",\n    \"userChoice\",\n    \"userHandle\",\n    \"userHint\",\n    \"userLanguage\",\n    \"userSelect\",\n    \"userVisibleOnly\",\n    \"username\",\n    \"usernameFragment\",\n    \"utterance\",\n    \"uuid\",\n    \"v8BreakIterator\",\n    \"vAlign\",\n    \"vLink\",\n    \"valid\",\n    \"validate\",\n    \"validateProgram\",\n    \"validationMessage\",\n    \"validity\",\n    \"value\",\n    \"valueAsDate\",\n    \"valueAsNumber\",\n    \"valueAsString\",\n    \"valueInSpecifiedUnits\",\n    \"valueMissing\",\n    \"valueOf\",\n    \"valueText\",\n    \"valueType\",\n    \"values\",\n    \"variable\",\n    \"variant\",\n    \"variationSettings\",\n    \"vector-effect\",\n    \"vectorEffect\",\n    \"velocityAngular\",\n    \"velocityExpansion\",\n    \"velocityX\",\n    \"velocityY\",\n    \"vendor\",\n    \"vendorId\",\n    \"vendorSub\",\n    \"verify\",\n    \"version\",\n    \"vertex\",\n    \"vertexAttrib1f\",\n    \"vertexAttrib1fv\",\n    \"vertexAttrib2f\",\n    \"vertexAttrib2fv\",\n    \"vertexAttrib3f\",\n    \"vertexAttrib3fv\",\n    \"vertexAttrib4f\",\n    \"vertexAttrib4fv\",\n    \"vertexAttribDivisor\",\n    \"vertexAttribDivisorANGLE\",\n    \"vertexAttribI4i\",\n    \"vertexAttribI4iv\",\n    \"vertexAttribI4ui\",\n    \"vertexAttribI4uiv\",\n    \"vertexAttribIPointer\",\n    \"vertexAttribPointer\",\n    \"vertical\",\n    \"vertical-align\",\n    \"verticalAlign\",\n    \"verticalOverflow\",\n    \"vh\",\n    \"vibrate\",\n    \"vibrationActuator\",\n    \"videoBitsPerSecond\",\n    \"videoHeight\",\n    \"videoTracks\",\n    \"videoWidth\",\n    \"view\",\n    \"viewBox\",\n    \"viewBoxString\",\n    \"viewDimension\",\n    \"viewFormats\",\n    \"viewTarget\",\n    \"viewTargetString\",\n    \"viewport\",\n    \"viewportAnchorX\",\n    \"viewportAnchorY\",\n    \"viewportElement\",\n    \"views\",\n    \"violatedDirective\",\n    \"visibility\",\n    \"visibilityState\",\n    \"visible\",\n    \"visualViewport\",\n    \"vlinkColor\",\n    \"vmax\",\n    \"vmin\",\n    \"voice\",\n    \"voiceURI\",\n    \"volume\",\n    \"vrml\",\n    \"vspace\",\n    \"vw\",\n    \"w\",\n    \"wait\",\n    \"waitSync\",\n    \"waiting\",\n    \"wake\",\n    \"wakeLock\",\n    \"wand\",\n    \"warn\",\n    \"wasClean\",\n    \"wasDiscarded\",\n    \"watch\",\n    \"watchAvailability\",\n    \"watchPosition\",\n    \"webdriver\",\n    \"webkitAddKey\",\n    \"webkitAlignContent\",\n    \"webkitAlignItems\",\n    \"webkitAlignSelf\",\n    \"webkitAnimation\",\n    \"webkitAnimationDelay\",\n    \"webkitAnimationDirection\",\n    \"webkitAnimationDuration\",\n    \"webkitAnimationFillMode\",\n    \"webkitAnimationIterationCount\",\n    \"webkitAnimationName\",\n    \"webkitAnimationPlayState\",\n    \"webkitAnimationTimingFunction\",\n    \"webkitAppearance\",\n    \"webkitAudioContext\",\n    \"webkitAudioDecodedByteCount\",\n    \"webkitAudioPannerNode\",\n    \"webkitBackfaceVisibility\",\n    \"webkitBackground\",\n    \"webkitBackgroundAttachment\",\n    \"webkitBackgroundClip\",\n    \"webkitBackgroundColor\",\n    \"webkitBackgroundImage\",\n    \"webkitBackgroundOrigin\",\n    \"webkitBackgroundPosition\",\n    \"webkitBackgroundPositionX\",\n    \"webkitBackgroundPositionY\",\n    \"webkitBackgroundRepeat\",\n    \"webkitBackgroundSize\",\n    \"webkitBackingStorePixelRatio\",\n    \"webkitBorderBottomLeftRadius\",\n    \"webkitBorderBottomRightRadius\",\n    \"webkitBorderImage\",\n    \"webkitBorderImageOutset\",\n    \"webkitBorderImageRepeat\",\n    \"webkitBorderImageSlice\",\n    \"webkitBorderImageSource\",\n    \"webkitBorderImageWidth\",\n    \"webkitBorderRadius\",\n    \"webkitBorderTopLeftRadius\",\n    \"webkitBorderTopRightRadius\",\n    \"webkitBoxAlign\",\n    \"webkitBoxDirection\",\n    \"webkitBoxFlex\",\n    \"webkitBoxOrdinalGroup\",\n    \"webkitBoxOrient\",\n    \"webkitBoxPack\",\n    \"webkitBoxShadow\",\n    \"webkitBoxSizing\",\n    \"webkitCancelAnimationFrame\",\n    \"webkitCancelFullScreen\",\n    \"webkitCancelKeyRequest\",\n    \"webkitCancelRequestAnimationFrame\",\n    \"webkitClearResourceTimings\",\n    \"webkitClosedCaptionsVisible\",\n    \"webkitConvertPointFromNodeToPage\",\n    \"webkitConvertPointFromPageToNode\",\n    \"webkitCreateShadowRoot\",\n    \"webkitCurrentFullScreenElement\",\n    \"webkitCurrentPlaybackTargetIsWireless\",\n    \"webkitDecodedFrameCount\",\n    \"webkitDirectionInvertedFromDevice\",\n    \"webkitDisplayingFullscreen\",\n    \"webkitDroppedFrameCount\",\n    \"webkitEnterFullScreen\",\n    \"webkitEnterFullscreen\",\n    \"webkitEntries\",\n    \"webkitExitFullScreen\",\n    \"webkitExitFullscreen\",\n    \"webkitExitPointerLock\",\n    \"webkitFilter\",\n    \"webkitFlex\",\n    \"webkitFlexBasis\",\n    \"webkitFlexDirection\",\n    \"webkitFlexFlow\",\n    \"webkitFlexGrow\",\n    \"webkitFlexShrink\",\n    \"webkitFlexWrap\",\n    \"webkitFullScreenKeyboardInputAllowed\",\n    \"webkitFullscreenElement\",\n    \"webkitFullscreenEnabled\",\n    \"webkitGenerateKeyRequest\",\n    \"webkitGetAsEntry\",\n    \"webkitGetDatabaseNames\",\n    \"webkitGetEntries\",\n    \"webkitGetEntriesByName\",\n    \"webkitGetEntriesByType\",\n    \"webkitGetFlowByName\",\n    \"webkitGetGamepads\",\n    \"webkitGetImageDataHD\",\n    \"webkitGetNamedFlows\",\n    \"webkitGetRegionFlowRanges\",\n    \"webkitGetUserMedia\",\n    \"webkitHasClosedCaptions\",\n    \"webkitHidden\",\n    \"webkitIDBCursor\",\n    \"webkitIDBDatabase\",\n    \"webkitIDBDatabaseError\",\n    \"webkitIDBDatabaseException\",\n    \"webkitIDBFactory\",\n    \"webkitIDBIndex\",\n    \"webkitIDBKeyRange\",\n    \"webkitIDBObjectStore\",\n    \"webkitIDBRequest\",\n    \"webkitIDBTransaction\",\n    \"webkitImageSmoothingEnabled\",\n    \"webkitIndexedDB\",\n    \"webkitInitMessageEvent\",\n    \"webkitIsFullScreen\",\n    \"webkitJustifyContent\",\n    \"webkitKeys\",\n    \"webkitLineClamp\",\n    \"webkitLineDashOffset\",\n    \"webkitLockOrientation\",\n    \"webkitMask\",\n    \"webkitMaskClip\",\n    \"webkitMaskComposite\",\n    \"webkitMaskImage\",\n    \"webkitMaskOrigin\",\n    \"webkitMaskPosition\",\n    \"webkitMaskPositionX\",\n    \"webkitMaskPositionY\",\n    \"webkitMaskRepeat\",\n    \"webkitMaskSize\",\n    \"webkitMatchesSelector\",\n    \"webkitMediaStream\",\n    \"webkitNotifications\",\n    \"webkitOfflineAudioContext\",\n    \"webkitOrder\",\n    \"webkitOrientation\",\n    \"webkitPeerConnection00\",\n    \"webkitPersistentStorage\",\n    \"webkitPerspective\",\n    \"webkitPerspectiveOrigin\",\n    \"webkitPointerLockElement\",\n    \"webkitPostMessage\",\n    \"webkitPreservesPitch\",\n    \"webkitPutImageDataHD\",\n    \"webkitRTCPeerConnection\",\n    \"webkitRegionOverset\",\n    \"webkitRelativePath\",\n    \"webkitRequestAnimationFrame\",\n    \"webkitRequestFileSystem\",\n    \"webkitRequestFullScreen\",\n    \"webkitRequestFullscreen\",\n    \"webkitRequestPointerLock\",\n    \"webkitResolveLocalFileSystemURL\",\n    \"webkitSetMediaKeys\",\n    \"webkitSetResourceTimingBufferSize\",\n    \"webkitShadowRoot\",\n    \"webkitShowPlaybackTargetPicker\",\n    \"webkitSlice\",\n    \"webkitSpeechGrammar\",\n    \"webkitSpeechGrammarList\",\n    \"webkitSpeechRecognition\",\n    \"webkitSpeechRecognitionError\",\n    \"webkitSpeechRecognitionEvent\",\n    \"webkitStorageInfo\",\n    \"webkitSupportsFullscreen\",\n    \"webkitTemporaryStorage\",\n    \"webkitTextFillColor\",\n    \"webkitTextSizeAdjust\",\n    \"webkitTextStroke\",\n    \"webkitTextStrokeColor\",\n    \"webkitTextStrokeWidth\",\n    \"webkitTransform\",\n    \"webkitTransformOrigin\",\n    \"webkitTransformStyle\",\n    \"webkitTransition\",\n    \"webkitTransitionDelay\",\n    \"webkitTransitionDuration\",\n    \"webkitTransitionProperty\",\n    \"webkitTransitionTimingFunction\",\n    \"webkitURL\",\n    \"webkitUnlockOrientation\",\n    \"webkitUserSelect\",\n    \"webkitVideoDecodedByteCount\",\n    \"webkitVisibilityState\",\n    \"webkitWirelessVideoPlaybackDisabled\",\n    \"webkitdirectory\",\n    \"webkitdropzone\",\n    \"webstore\",\n    \"weight\",\n    \"wgslLanguageFeatures\",\n    \"whatToShow\",\n    \"wheelDelta\",\n    \"wheelDeltaX\",\n    \"wheelDeltaY\",\n    \"whenDefined\",\n    \"which\",\n    \"white-space\",\n    \"whiteSpace\",\n    \"wholeText\",\n    \"widows\",\n    \"width\",\n    \"will-change\",\n    \"willChange\",\n    \"willValidate\",\n    \"window\",\n    \"withCredentials\",\n    \"word-break\",\n    \"word-spacing\",\n    \"word-wrap\",\n    \"wordBreak\",\n    \"wordSpacing\",\n    \"wordWrap\",\n    \"workerStart\",\n    \"wow64\",\n    \"wrap\",\n    \"wrapKey\",\n    \"writable\",\n    \"writableAuxiliaries\",\n    \"write\",\n    \"writeBuffer\",\n    \"writeMask\",\n    \"writeText\",\n    \"writeTexture\",\n    \"writeTimestamp\",\n    \"writeValue\",\n    \"writeWithoutResponse\",\n    \"writeln\",\n    \"writing-mode\",\n    \"writingMode\",\n    \"x\",\n    \"x1\",\n    \"x2\",\n    \"xChannelSelector\",\n    \"xmlEncoding\",\n    \"xmlStandalone\",\n    \"xmlVersion\",\n    \"xmlbase\",\n    \"xmllang\",\n    \"xmlspace\",\n    \"xor\",\n    \"xr\",\n    \"y\",\n    \"y1\",\n    \"y2\",\n    \"yChannelSelector\",\n    \"yandex\",\n    \"z\",\n    \"z-index\",\n    \"zIndex\",\n    \"zoom\",\n    \"zoomAndPan\",\n    \"zoomRectScreen\",\n];\n\n/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\nfunction find_builtins(reserved) {\n    domprops.forEach(add);\n\n    // Compatibility fix for some standard defined globals not defined on every js environment\n    var new_globals = [\"Symbol\", \"Map\", \"Promise\", \"Proxy\", \"Reflect\", \"Set\", \"WeakMap\", \"WeakSet\"];\n    var objects = {};\n    var global_ref = typeof global === \"object\" ? global : self;\n\n    new_globals.forEach(function (new_global) {\n        objects[new_global] = global_ref[new_global] || function() {};\n    });\n\n    [\n        \"null\",\n        \"true\",\n        \"false\",\n        \"NaN\",\n        \"Infinity\",\n        \"-Infinity\",\n        \"undefined\",\n    ].forEach(add);\n    [ Object, Array, Function, Number,\n      String, Boolean, Error, Math,\n      Date, RegExp, objects.Symbol, ArrayBuffer,\n      DataView, decodeURI, decodeURIComponent,\n      encodeURI, encodeURIComponent, eval, EvalError,\n      Float32Array, Float64Array, Int8Array, Int16Array,\n      Int32Array, isFinite, isNaN, JSON, objects.Map, parseFloat,\n      parseInt, objects.Promise, objects.Proxy, RangeError, ReferenceError,\n      objects.Reflect, objects.Set, SyntaxError, TypeError, Uint8Array,\n      Uint8ClampedArray, Uint16Array, Uint32Array, URIError,\n      objects.WeakMap, objects.WeakSet\n    ].forEach(function(ctor) {\n        Object.getOwnPropertyNames(ctor).map(add);\n        if (ctor.prototype) {\n            Object.getOwnPropertyNames(ctor.prototype).map(add);\n        }\n    });\n    function add(name) {\n        reserved.add(name);\n    }\n}\n\nfunction reserve_quoted_keys(ast, reserved) {\n    function add(name) {\n        push_uniq(reserved, name);\n    }\n\n    ast.walk(new TreeWalker(function(node) {\n        if (node instanceof AST_ObjectKeyVal && node.quote) {\n            add(node.key);\n        } else if (node instanceof AST_ObjectProperty && node.quote) {\n            add(node.key.name);\n        } else if (node instanceof AST_Sub) {\n            addStrings(node.property, add);\n        }\n    }));\n}\n\nfunction addStrings(node, add) {\n    node.walk(new TreeWalker(function(node) {\n        if (node instanceof AST_Sequence) {\n            addStrings(node.tail_node(), add);\n        } else if (node instanceof AST_String) {\n            add(node.value);\n        } else if (node instanceof AST_Conditional) {\n            addStrings(node.consequent, add);\n            addStrings(node.alternative, add);\n        }\n        return true;\n    }));\n}\n\nfunction mangle_private_properties(ast, options) {\n    var cprivate = -1;\n    var private_cache = new Map();\n    var nth_identifier = options.nth_identifier || base54;\n\n    ast =  ast.transform(new TreeTransformer(function(node) {\n        if (\n            node instanceof AST_ClassPrivateProperty\n            || node instanceof AST_PrivateMethod\n            || node instanceof AST_PrivateGetter\n            || node instanceof AST_PrivateSetter\n            || node instanceof AST_PrivateIn\n        ) {\n            node.key.name = mangle_private(node.key.name);\n        } else if (node instanceof AST_DotHash) {\n            node.property = mangle_private(node.property);\n        }\n    }));\n    return ast;\n\n    function mangle_private(name) {\n        let mangled = private_cache.get(name);\n        if (!mangled) {\n            mangled = nth_identifier.get(++cprivate);\n            private_cache.set(name, mangled);\n        }\n\n        return mangled;\n    }\n}\n\nfunction find_annotated_props(ast) {\n    var annotated_props = new Set();\n    walk(ast, node => {\n        if (\n            node instanceof AST_ClassPrivateProperty\n            || node instanceof AST_PrivateMethod\n            || node instanceof AST_PrivateGetter\n            || node instanceof AST_PrivateSetter\n            || node instanceof AST_DotHash\n        ) ; else if (node instanceof AST_ObjectKeyVal) {\n            if (typeof node.key == \"string\" && has_annotation(node, _MANGLEPROP)) {\n                annotated_props.add(node.key);\n            }\n        } else if (node instanceof AST_ObjectProperty) {\n            // setter or getter, since KeyVal is handled above\n            if (has_annotation(node, _MANGLEPROP)) {\n                annotated_props.add(node.key.name);\n            }\n        } else if (node instanceof AST_Dot) {\n            if (has_annotation(node, _MANGLEPROP)) {\n                annotated_props.add(node.property);\n            }\n        } else if (node instanceof AST_Sub) {\n            if (node.property instanceof AST_String && has_annotation(node, _MANGLEPROP)) {\n                annotated_props.add(node.property.value);\n            }\n        }\n    });\n    return annotated_props;\n}\n\nfunction mangle_properties(ast, options, annotated_props = find_annotated_props(ast)) {\n    options = defaults(options, {\n        builtins: false,\n        cache: null,\n        debug: false,\n        keep_quoted: false,\n        nth_identifier: base54,\n        only_cache: false,\n        regex: null,\n        reserved: null,\n        undeclared: false,\n        only_annotated: false,\n    }, true);\n\n    var nth_identifier = options.nth_identifier;\n\n    var reserved_option = options.reserved;\n    if (!Array.isArray(reserved_option)) reserved_option = [reserved_option];\n    var reserved = new Set(reserved_option);\n    if (!options.builtins) find_builtins(reserved);\n\n    var cname = -1;\n\n    var cache;\n    if (options.cache) {\n        cache = options.cache.props;\n    } else {\n        cache = new Map();\n    }\n\n    var only_annotated = options.only_annotated;\n    var regex = options.regex && new RegExp(options.regex);\n\n    // note debug is either false (disabled), or a string of the debug suffix to use (enabled).\n    // note debug may be enabled as an empty string, which is falsey. Also treat passing 'true'\n    // the same as passing an empty string.\n    var debug = options.debug !== false;\n    var debug_name_suffix;\n    if (debug) {\n        debug_name_suffix = (options.debug === true ? \"\" : options.debug);\n    }\n\n    var names_to_mangle = new Set();\n    var unmangleable = new Set();\n    // Track each already-mangled name to prevent nth_identifier from generating\n    // the same name.\n    cache.forEach((mangled_name) => unmangleable.add(mangled_name));\n\n    var keep_quoted = !!options.keep_quoted;\n\n    // step 1: find candidates to mangle\n    ast.walk(new TreeWalker(function(node) {\n        if (\n            node instanceof AST_ClassPrivateProperty\n            || node instanceof AST_PrivateMethod\n            || node instanceof AST_PrivateGetter\n            || node instanceof AST_PrivateSetter\n            || node instanceof AST_DotHash\n        ) ; else if (node instanceof AST_ObjectKeyVal) {\n            if (typeof node.key == \"string\" && (!keep_quoted || !node.quote)) {\n                add(node.key);\n            }\n        } else if (node instanceof AST_ObjectProperty) {\n            // setter or getter, since KeyVal is handled above\n            if (!keep_quoted || !node.quote) {\n                add(node.key.name);\n            }\n        } else if (node instanceof AST_Dot) {\n            var declared = !!options.undeclared;\n            if (!declared) {\n                var root = node;\n                while (root.expression) {\n                    root = root.expression;\n                }\n                declared = !(root.thedef && root.thedef.undeclared);\n            }\n            if (declared &&\n                (!keep_quoted || !node.quote)) {\n                add(node.property);\n            }\n        } else if (node instanceof AST_Sub) {\n            if (!keep_quoted) {\n                addStrings(node.property, add);\n            }\n        } else if (node instanceof AST_Call\n            && node.expression.print_to_string() == \"Object.defineProperty\") {\n            addStrings(node.args[1], add);\n        } else if (node instanceof AST_Binary && node.operator === \"in\") {\n            addStrings(node.left, add);\n        } else if (node instanceof AST_String && has_annotation(node, _KEY)) {\n            add(node.value);\n        }\n    }));\n\n    // step 2: transform the tree, renaming properties\n    return ast.transform(new TreeTransformer(function(node) {\n        if (\n            node instanceof AST_ClassPrivateProperty\n            || node instanceof AST_PrivateMethod\n            || node instanceof AST_PrivateGetter\n            || node instanceof AST_PrivateSetter\n            || node instanceof AST_DotHash\n        ) ; else if (node instanceof AST_ObjectKeyVal) {\n            if (typeof node.key == \"string\" && (!keep_quoted || !node.quote)) {\n                node.key = mangle(node.key);\n            }\n        } else if (node instanceof AST_ObjectProperty) {\n            // setter, getter, method or class field\n            if (!keep_quoted || !node.quote) {\n                node.key.name = mangle(node.key.name);\n            }\n        } else if (node instanceof AST_Dot) {\n            if (!keep_quoted || !node.quote) {\n                node.property = mangle(node.property);\n            }\n        } else if (!keep_quoted && node instanceof AST_Sub) {\n            node.property = mangleStrings(node.property);\n        } else if (node instanceof AST_Call\n            && node.expression.print_to_string() == \"Object.defineProperty\") {\n            node.args[1] = mangleStrings(node.args[1]);\n        } else if (node instanceof AST_Binary && node.operator === \"in\") {\n            node.left = mangleStrings(node.left);\n        } else if (node instanceof AST_String && has_annotation(node, _KEY)) {\n            // Clear _KEY annotation to prevent double mangling\n            clear_annotation(node, _KEY);\n            node.value = mangle(node.value);\n        }\n    }));\n\n    // only function declarations after this line\n\n    function can_mangle(name) {\n        if (unmangleable.has(name)) return false;\n        if (reserved.has(name)) return false;\n        if (options.only_cache) {\n            return cache.has(name);\n        }\n        if (/^-?[0-9]+(\\.[0-9]+)?(e[+-][0-9]+)?$/.test(name)) return false;\n        return true;\n    }\n\n    function should_mangle(name) {\n        if (only_annotated && !annotated_props.has(name)) return false;\n        if (regex && !regex.test(name)) {\n            return annotated_props.has(name);\n        }\n        if (reserved.has(name)) return false;\n        return cache.has(name)\n            || names_to_mangle.has(name);\n    }\n\n    function add(name) {\n        if (can_mangle(name)) {\n            names_to_mangle.add(name);\n        }\n\n        if (!should_mangle(name)) {\n            unmangleable.add(name);\n        }\n    }\n\n    function mangle(name) {\n        if (!should_mangle(name)) {\n            return name;\n        }\n\n        var mangled = cache.get(name);\n        if (!mangled) {\n            if (debug) {\n                // debug mode: use a prefix and suffix to preserve readability, e.g. o.foo -> o._$foo$NNN_.\n                var debug_mangled = \"_$\" + name + \"$\" + debug_name_suffix + \"_\";\n\n                if (can_mangle(debug_mangled)) {\n                    mangled = debug_mangled;\n                }\n            }\n\n            // either debug mode is off, or it is on and we could not use the mangled name\n            if (!mangled) {\n                do {\n                    mangled = nth_identifier.get(++cname);\n                } while (!can_mangle(mangled));\n            }\n\n            cache.set(name, mangled);\n        }\n        return mangled;\n    }\n\n    function mangleStrings(node) {\n        return node.transform(new TreeTransformer(function(node) {\n            if (node instanceof AST_Sequence) {\n                var last = node.expressions.length - 1;\n                node.expressions[last] = mangleStrings(node.expressions[last]);\n            } else if (node instanceof AST_String) {\n                // Clear _KEY annotation to prevent double mangling\n                clear_annotation(node, _KEY);\n                node.value = mangle(node.value);\n            } else if (node instanceof AST_Conditional) {\n                node.consequent = mangleStrings(node.consequent);\n                node.alternative = mangleStrings(node.alternative);\n            }\n            return node;\n        }));\n    }\n}\n\n// to/from base64 functions\n// Prefer built-in Buffer, if available, then use hack\n// https://developer.mozilla.org/en-US/docs/Glossary/Base64#The_Unicode_Problem\nvar to_ascii = typeof Buffer !== \"undefined\"\n    ? (b64) => Buffer.from(b64, \"base64\").toString()\n    : (b64) => decodeURIComponent(escape(atob(b64)));\nvar to_base64 = typeof Buffer !== \"undefined\"\n    ? (str) => Buffer.from(str).toString(\"base64\")\n    : (str) => btoa(unescape(encodeURIComponent(str)));\n\nfunction read_source_map(code) {\n    var match = /(?:^|[^.])\\/\\/# sourceMappingURL=data:application\\/json(;[\\w=-]*)?;base64,([+/0-9A-Za-z]*=*)\\s*$/.exec(code);\n    if (!match) {\n        console.warn(\"inline source map not found\");\n        return null;\n    }\n    return to_ascii(match[2]);\n}\n\nfunction set_shorthand(name, options, keys) {\n    if (options[name]) {\n        keys.forEach(function(key) {\n            if (options[key]) {\n                if (typeof options[key] != \"object\") options[key] = {};\n                if (!(name in options[key])) options[key][name] = options[name];\n            }\n        });\n    }\n}\n\nfunction init_cache(cache) {\n    if (!cache) return;\n    if (!(\"props\" in cache)) {\n        cache.props = new Map();\n    } else if (!(cache.props instanceof Map)) {\n        cache.props = map_from_object(cache.props);\n    }\n}\n\nfunction cache_to_json(cache) {\n    return {\n        props: map_to_object(cache.props)\n    };\n}\n\nfunction log_input(files, options, fs, debug_folder) {\n    if (!(fs && fs.writeFileSync && fs.mkdirSync)) {\n        return;\n    }\n\n    try {\n        fs.mkdirSync(debug_folder);\n    } catch (e) {\n        if (e.code !== \"EEXIST\") throw e;\n    }\n\n    const log_path = `${debug_folder}/terser-debug-${(Math.random() * 9999999) | 0}.log`;\n\n    options = options || {};\n\n    const options_str = JSON.stringify(options, (_key, thing) => {\n        if (typeof thing === \"function\") return \"[Function \" + thing.toString() + \"]\";\n        if (thing instanceof RegExp) return \"[RegExp \" + thing.toString() + \"]\";\n        return thing;\n    }, 4);\n\n    const files_str = (file) => {\n        if (typeof file === \"object\" && options.parse && options.parse.spidermonkey) {\n            return JSON.stringify(file, null, 2);\n        } else if (typeof file === \"object\") {\n            return Object.keys(file)\n                .map((key) => key + \": \" + files_str(file[key]))\n                .join(\"\\n\\n\");\n        } else if (typeof file === \"string\") {\n            return \"```\\n\" + file + \"\\n```\";\n        } else {\n            return file; // What do?\n        }\n    };\n\n    fs.writeFileSync(log_path, \"Options: \\n\" + options_str + \"\\n\\nInput files:\\n\\n\" + files_str(files) + \"\\n\");\n}\n\nfunction* minify_sync_or_async(files, options, _fs_module) {\n    if (\n        _fs_module\n        && typeof process === \"object\"\n        && process.env\n        && typeof process.env.TERSER_DEBUG_DIR === \"string\"\n    ) {\n        log_input(files, options, _fs_module, process.env.TERSER_DEBUG_DIR);\n    }\n\n    options = defaults(options, {\n        compress: {},\n        ecma: undefined,\n        enclose: false,\n        ie8: false,\n        keep_classnames: undefined,\n        keep_fnames: false,\n        mangle: {},\n        module: false,\n        nameCache: null,\n        output: null,\n        format: null,\n        parse: {},\n        rename: undefined,\n        safari10: false,\n        sourceMap: false,\n        spidermonkey: false,\n        timings: false,\n        toplevel: false,\n        warnings: false,\n        wrap: false,\n    }, true);\n\n    var timings = options.timings && {\n        start: Date.now()\n    };\n    if (options.keep_classnames === undefined) {\n        options.keep_classnames = options.keep_fnames;\n    }\n    if (options.rename === undefined) {\n        options.rename = options.compress && options.mangle;\n    }\n    if (options.output && options.format) {\n        throw new Error(\"Please only specify either output or format option, preferrably format.\");\n    }\n    options.format = options.format || options.output || {};\n    set_shorthand(\"ecma\", options, [ \"parse\", \"compress\", \"format\" ]);\n    set_shorthand(\"ie8\", options, [ \"compress\", \"mangle\", \"format\" ]);\n    set_shorthand(\"keep_classnames\", options, [ \"compress\", \"mangle\" ]);\n    set_shorthand(\"keep_fnames\", options, [ \"compress\", \"mangle\" ]);\n    set_shorthand(\"module\", options, [ \"parse\", \"compress\", \"mangle\" ]);\n    set_shorthand(\"safari10\", options, [ \"mangle\", \"format\" ]);\n    set_shorthand(\"toplevel\", options, [ \"compress\", \"mangle\" ]);\n    set_shorthand(\"warnings\", options, [ \"compress\" ]); // legacy\n    var quoted_props;\n    if (options.mangle) {\n        options.mangle = defaults(options.mangle, {\n            cache: options.nameCache && (options.nameCache.vars || {}),\n            eval: false,\n            ie8: false,\n            keep_classnames: false,\n            keep_fnames: false,\n            module: false,\n            nth_identifier: base54,\n            properties: false,\n            reserved: [],\n            safari10: false,\n            toplevel: false,\n        }, true);\n        if (options.mangle.properties) {\n            if (typeof options.mangle.properties != \"object\") {\n                options.mangle.properties = {};\n            }\n            if (options.mangle.properties.keep_quoted) {\n                quoted_props = options.mangle.properties.reserved;\n                if (!Array.isArray(quoted_props)) quoted_props = [];\n                options.mangle.properties.reserved = quoted_props;\n            }\n            if (options.nameCache && !(\"cache\" in options.mangle.properties)) {\n                options.mangle.properties.cache = options.nameCache.props || {};\n            }\n        }\n        init_cache(options.mangle.cache);\n        init_cache(options.mangle.properties.cache);\n    }\n    if (options.sourceMap) {\n        options.sourceMap = defaults(options.sourceMap, {\n            asObject: false,\n            content: null,\n            filename: null,\n            includeSources: false,\n            root: null,\n            url: null,\n        }, true);\n    }\n\n    // -- Parse phase --\n    if (timings) timings.parse = Date.now();\n    var toplevel;\n    if (files instanceof AST_Toplevel) {\n        toplevel = files;\n    } else {\n        if (typeof files == \"string\" || (options.parse.spidermonkey && !Array.isArray(files))) {\n            files = [ files ];\n        }\n        options.parse = options.parse || {};\n        options.parse.toplevel = null;\n\n        if (options.parse.spidermonkey) {\n            options.parse.toplevel = AST_Node.from_mozilla_ast(Object.keys(files).reduce(function(toplevel, name) {\n                if (!toplevel) return files[name];\n                toplevel.body = toplevel.body.concat(files[name].body);\n                return toplevel;\n            }, null));\n        } else {\n            delete options.parse.spidermonkey;\n\n            for (var name in files) if (HOP(files, name)) {\n                options.parse.filename = name;\n                options.parse.toplevel = parse(files[name], options.parse);\n                if (options.sourceMap && options.sourceMap.content == \"inline\") {\n                    if (Object.keys(files).length > 1)\n                        throw new Error(\"inline source map only works with singular input\");\n                    options.sourceMap.content = read_source_map(files[name]);\n                }\n            }\n        }\n        if (options.parse.toplevel === null) {\n            throw new Error(\"no source file given\");\n        }\n\n        toplevel = options.parse.toplevel;\n    }\n    if (quoted_props && options.mangle.properties.keep_quoted !== \"strict\") {\n        reserve_quoted_keys(toplevel, quoted_props);\n    }\n    var annotated_props;\n    if (options.mangle && options.mangle.properties) {\n        annotated_props = find_annotated_props(toplevel);\n    }\n    if (options.wrap) {\n        toplevel = toplevel.wrap_commonjs(options.wrap);\n    }\n    if (options.enclose) {\n        toplevel = toplevel.wrap_enclose(options.enclose);\n    }\n    if (timings) timings.rename = Date.now();\n\n    // -- Compress phase --\n    if (timings) timings.compress = Date.now();\n    if (options.compress) {\n        toplevel = new Compressor(options.compress, {\n            mangle_options: options.mangle\n        }).compress(toplevel);\n    }\n\n    // -- Mangle phase --\n    if (timings) timings.scope = Date.now();\n    if (options.mangle) toplevel.figure_out_scope(options.mangle);\n    if (timings) timings.mangle = Date.now();\n    if (options.mangle) {\n        toplevel.compute_char_frequency(options.mangle);\n        toplevel.mangle_names(options.mangle);\n        toplevel = mangle_private_properties(toplevel, options.mangle);\n    }\n    if (timings) timings.properties = Date.now();\n    if (options.mangle && options.mangle.properties) {\n        toplevel = mangle_properties(toplevel, options.mangle.properties, annotated_props);\n    }\n\n    // Format phase\n    if (timings) timings.format = Date.now();\n    var result = {};\n    if (options.format.ast) {\n        result.ast = toplevel;\n    }\n    if (options.format.spidermonkey) {\n        result.ast = toplevel.to_mozilla_ast();\n    }\n    let format_options;\n    if (!HOP(options.format, \"code\") || options.format.code) {\n        // Make a shallow copy so that we can modify without mutating the user's input.\n        format_options = {...options.format};\n        if (!format_options.ast) {\n            // Destroy stuff to save RAM. (unless the deprecated `ast` option is on)\n            format_options._destroy_ast = true;\n\n            walk(toplevel, node => {\n                if (node instanceof AST_Scope) {\n                    node.variables = undefined;\n                    node.enclosed = undefined;\n                    node.parent_scope = undefined;\n                }\n                if (node.block_scope) {\n                    node.block_scope.variables = undefined;\n                    node.block_scope.enclosed = undefined;\n                    node.parent_scope = undefined;\n                }\n            });\n        }\n\n        if (options.sourceMap) {\n            if (options.sourceMap.includeSources && files instanceof AST_Toplevel) {\n                throw new Error(\"original source content unavailable\");\n            }\n            format_options.source_map = yield* SourceMap({\n                file: options.sourceMap.filename,\n                orig: options.sourceMap.content,\n                root: options.sourceMap.root,\n                files: options.sourceMap.includeSources ? files : null,\n            });\n        }\n        delete format_options.ast;\n        delete format_options.code;\n        delete format_options.spidermonkey;\n        var stream = OutputStream(format_options);\n        toplevel.print(stream);\n        result.code = stream.get();\n        if (options.sourceMap) {\n            Object.defineProperty(result, \"map\", {\n                configurable: true,\n                enumerable: true,\n                get() {\n                    const map = format_options.source_map.getEncoded();\n                    return (result.map = options.sourceMap.asObject ? map : JSON.stringify(map));\n                },\n                set(value) {\n                    Object.defineProperty(result, \"map\", {\n                        value,\n                        writable: true,\n                    });\n                }\n            });\n            result.decoded_map = format_options.source_map.getDecoded();\n            if (options.sourceMap.url == \"inline\") {\n                var sourceMap = typeof result.map === \"object\" ? JSON.stringify(result.map) : result.map;\n                result.code += \"\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\" + to_base64(sourceMap);\n            } else if (options.sourceMap.url) {\n                result.code += \"\\n//# sourceMappingURL=\" + options.sourceMap.url;\n            }\n        }\n    }\n    if (options.nameCache && options.mangle) {\n        if (options.mangle.cache) options.nameCache.vars = cache_to_json(options.mangle.cache);\n        if (options.mangle.properties && options.mangle.properties.cache) {\n            options.nameCache.props = cache_to_json(options.mangle.properties.cache);\n        }\n    }\n    if (format_options && format_options.source_map) {\n        format_options.source_map.destroy();\n    }\n    if (timings) {\n        timings.end = Date.now();\n        result.timings = {\n            parse: 1e-3 * (timings.rename - timings.parse),\n            rename: 1e-3 * (timings.compress - timings.rename),\n            compress: 1e-3 * (timings.scope - timings.compress),\n            scope: 1e-3 * (timings.mangle - timings.scope),\n            mangle: 1e-3 * (timings.properties - timings.mangle),\n            properties: 1e-3 * (timings.format - timings.properties),\n            format: 1e-3 * (timings.end - timings.format),\n            total: 1e-3 * (timings.end - timings.start)\n        };\n    }\n    return result;\n}\n\nasync function minify(files, options, _fs_module) {\n    const gen = minify_sync_or_async(files, options, _fs_module);\n\n    let yielded;\n    let val;\n    do {\n        val = gen.next(await yielded);\n        yielded = val.value;\n    } while (!val.done);\n\n    return val.value;\n}\n\nfunction minify_sync(files, options, _fs_module) {\n    const gen = minify_sync_or_async(files, options, _fs_module);\n\n    let yielded;\n    let val;\n    do {\n        if (yielded && typeof yielded.then === \"function\") {\n            throw new Error(\"minify_sync cannot be used with the legacy source-map module\");\n        }\n        val = gen.next(yielded);\n        yielded = val.value;\n    } while (!val.done);\n\n    return val.value;\n}\n\nasync function run_cli({ program, packageJson, fs, path }) {\n    const skip_keys = new Set([ \"cname\", \"parent_scope\", \"scope\", \"uses_eval\", \"uses_with\" ]);\n    var files = {};\n    var options = {\n        compress: false,\n        mangle: false\n    };\n    const default_options = await _default_options();\n    program.version(packageJson.name + \" \" + packageJson.version);\n    program.parseArgv = program.parse;\n    program.parse = undefined;\n\n    if (process.argv.includes(\"ast\")) program.helpInformation = describe_ast;\n    else if (process.argv.includes(\"options\")) program.helpInformation = function() {\n        var text = [];\n        for (var option in default_options) {\n            text.push(\"--\" + (option === \"sourceMap\" ? \"source-map\" : option) + \" options:\");\n            text.push(format_object(default_options[option]));\n            text.push(\"\");\n        }\n        return text.join(\"\\n\");\n    };\n\n    program.option(\"-p, --parse <options>\", \"Specify parser options.\", parse_js());\n    program.option(\"-c, --compress [options]\", \"Enable compressor/specify compressor options.\", parse_js());\n    program.option(\"-m, --mangle [options]\", \"Mangle names/specify mangler options.\", parse_js());\n    program.option(\"--mangle-props [options]\", \"Mangle properties/specify mangler options.\", parse_js());\n    program.option(\"-f, --format [options]\", \"Format options.\", parse_js());\n    program.option(\"-b, --beautify [options]\", \"Alias for --format.\", parse_js());\n    program.option(\"-o, --output <file>\", \"Output file (default STDOUT).\");\n    program.option(\"--comments [filter]\", \"Preserve copyright comments in the output.\");\n    program.option(\"--config-file <file>\", \"Read minify() options from JSON file.\");\n    program.option(\"-d, --define <expr>[=value]\", \"Global definitions.\", parse_js(\"define\"));\n    program.option(\"--ecma <version>\", \"Specify ECMAScript release: 5, 2015, 2016 or 2017...\");\n    program.option(\"-e, --enclose [arg[,...][:value[,...]]]\", \"Embed output in a big function with configurable arguments and values.\");\n    program.option(\"--ie8\", \"Support non-standard Internet Explorer 8.\");\n    program.option(\"--keep-classnames\", \"Do not mangle/drop class names.\");\n    program.option(\"--keep-fnames\", \"Do not mangle/drop function names. Useful for code relying on Function.prototype.name.\");\n    program.option(\"--module\", \"Input is an ES6 module\");\n    program.option(\"--name-cache <file>\", \"File to hold mangled name mappings.\");\n    program.option(\"--rename\", \"Force symbol expansion.\");\n    program.option(\"--no-rename\", \"Disable symbol expansion.\");\n    program.option(\"--safari10\", \"Support non-standard Safari 10.\");\n    program.option(\"--source-map [options]\", \"Enable source map/specify source map options.\", parse_js());\n    program.option(\"--timings\", \"Display operations run time on STDERR.\");\n    program.option(\"--toplevel\", \"Compress and/or mangle variables in toplevel scope.\");\n    program.option(\"--wrap <name>\", \"Embed everything as a function with “exports” corresponding to “name” globally.\");\n    program.arguments(\"[files...]\").parseArgv(process.argv);\n    if (program.configFile) {\n        options = JSON.parse(read_file(program.configFile));\n    }\n    if (!program.output && program.sourceMap && program.sourceMap.url != \"inline\") {\n        fatal(\"ERROR: cannot write source map to STDOUT\");\n    }\n\n    [\n        \"compress\",\n        \"enclose\",\n        \"ie8\",\n        \"mangle\",\n        \"module\",\n        \"safari10\",\n        \"sourceMap\",\n        \"toplevel\",\n        \"wrap\"\n    ].forEach(function(name) {\n        if (name in program) {\n            options[name] = program[name];\n        }\n    });\n\n    if (\"ecma\" in program) {\n        if (program.ecma != (program.ecma | 0)) fatal(\"ERROR: ecma must be an integer\");\n        const ecma = program.ecma | 0;\n        if (ecma > 5 && ecma < 2015)\n            options.ecma = ecma + 2009;\n        else\n            options.ecma = ecma;\n    }\n    if (program.format || program.beautify) {\n        const chosenOption = program.format || program.beautify;\n        options.format = typeof chosenOption === \"object\" ? chosenOption : {};\n    }\n    if (program.comments) {\n        if (typeof options.format != \"object\") options.format = {};\n        options.format.comments = typeof program.comments == \"string\" ? (program.comments == \"false\" ? false : program.comments) : \"some\";\n    }\n    if (program.define) {\n        if (typeof options.compress != \"object\") options.compress = {};\n        if (typeof options.compress.global_defs != \"object\") options.compress.global_defs = {};\n        for (var expr in program.define) {\n            options.compress.global_defs[expr] = program.define[expr];\n        }\n    }\n    if (program.keepClassnames) {\n        options.keep_classnames = true;\n    }\n    if (program.keepFnames) {\n        options.keep_fnames = true;\n    }\n    if (program.mangleProps) {\n        if (program.mangleProps.domprops) {\n            delete program.mangleProps.domprops;\n        } else {\n            if (typeof program.mangleProps != \"object\") program.mangleProps = {};\n            if (!Array.isArray(program.mangleProps.reserved)) program.mangleProps.reserved = [];\n        }\n        if (typeof options.mangle != \"object\") options.mangle = {};\n        options.mangle.properties = program.mangleProps;\n    }\n    if (program.nameCache) {\n        options.nameCache = JSON.parse(read_file(program.nameCache, \"{}\"));\n    }\n    if (program.output == \"ast\") {\n        options.format = {\n            ast: true,\n            code: false\n        };\n    }\n    if (program.parse) {\n        if (!program.parse.acorn && !program.parse.spidermonkey) {\n            options.parse = program.parse;\n        } else if (program.sourceMap && program.sourceMap.content == \"inline\") {\n            fatal(\"ERROR: inline source map only works with built-in parser\");\n        }\n    }\n    if (~program.rawArgs.indexOf(\"--rename\")) {\n        options.rename = true;\n    } else if (!program.rename) {\n        options.rename = false;\n    }\n\n    let convert_path = name => name;\n    if (typeof program.sourceMap == \"object\" && \"base\" in program.sourceMap) {\n        convert_path = function() {\n            var base = program.sourceMap.base;\n            delete options.sourceMap.base;\n            return function(name) {\n                return path.relative(base, name);\n            };\n        }();\n    }\n\n    let filesList;\n    if (options.files && options.files.length) {\n        filesList = options.files;\n\n        delete options.files;\n    } else if (program.args.length) {\n        filesList = program.args;\n    }\n\n    if (filesList) {\n        simple_glob(filesList).forEach(function(name) {\n            files[convert_path(name)] = read_file(name);\n        });\n    } else {\n        await new Promise((resolve) => {\n            var chunks = [];\n            process.stdin.setEncoding(\"utf8\");\n            process.stdin.on(\"data\", function(chunk) {\n                chunks.push(chunk);\n            }).on(\"end\", function() {\n                files = [ chunks.join(\"\") ];\n                resolve();\n            });\n            process.stdin.resume();\n        });\n    }\n\n    await run_cli();\n\n    function convert_ast(fn) {\n        return AST_Node.from_mozilla_ast(Object.keys(files).reduce(fn, null));\n    }\n\n    async function run_cli() {\n        var content = program.sourceMap && program.sourceMap.content;\n        if (content && content !== \"inline\") {\n            options.sourceMap.content = read_file(content, content);\n        }\n        if (program.timings) options.timings = true;\n\n        try {\n            if (program.parse) {\n                if (program.parse.acorn) {\n                    files = convert_ast(function(toplevel, name) {\n                        return require(\"acorn\").parse(files[name], {\n                            ecmaVersion: 2018,\n                            locations: true,\n                            program: toplevel,\n                            sourceFile: name,\n                            sourceType: options.module || program.parse.module ? \"module\" : \"script\"\n                        });\n                    });\n                } else if (program.parse.spidermonkey) {\n                    files = convert_ast(function(toplevel, name) {\n                        var obj = JSON.parse(files[name]);\n                        if (!toplevel) return obj;\n                        toplevel.body = toplevel.body.concat(obj.body);\n                        return toplevel;\n                    });\n                }\n            }\n        } catch (ex) {\n            fatal(ex);\n        }\n\n        let result;\n        try {\n            result = await minify(files, options, fs);\n        } catch (ex) {\n            if (ex.name == \"SyntaxError\") {\n                print_error(\"Parse error at \" + ex.filename + \":\" + ex.line + \",\" + ex.col);\n                var col = ex.col;\n                var lines = files[ex.filename].split(/\\r?\\n/);\n                var line = lines[ex.line - 1];\n                if (!line && !col) {\n                    line = lines[ex.line - 2];\n                    col = line.length;\n                }\n                if (line) {\n                    var limit = 70;\n                    if (col > limit) {\n                        line = line.slice(col - limit);\n                        col = limit;\n                    }\n                    print_error(line.slice(0, 80));\n                    print_error(line.slice(0, col).replace(/\\S/g, \" \") + \"^\");\n                }\n            }\n            if (ex.defs) {\n                print_error(\"Supported options:\");\n                print_error(format_object(ex.defs));\n            }\n            fatal(ex);\n            return;\n        }\n\n        if (program.output == \"ast\") {\n            if (!options.compress && !options.mangle) {\n                result.ast.figure_out_scope({});\n            }\n            console.log(JSON.stringify(result.ast, function(key, value) {\n                if (value) switch (key) {\n                  case \"thedef\":\n                    return symdef(value);\n                  case \"enclosed\":\n                    return value.length ? value.map(symdef) : undefined;\n                  case \"variables\":\n                  case \"globals\":\n                    return value.size ? collect_from_map(value, symdef) : undefined;\n                }\n                if (skip_keys.has(key)) return;\n                if (value instanceof AST_Token) return;\n                if (value instanceof Map) return;\n                if (value instanceof AST_Node) {\n                    var result = {\n                        _class: \"AST_\" + value.TYPE\n                    };\n                    if (value.block_scope) {\n                        result.variables = value.block_scope.variables;\n                        result.enclosed = value.block_scope.enclosed;\n                    }\n                    value.CTOR.PROPS.forEach(function(prop) {\n                        if (prop !== \"block_scope\") {\n                            result[prop] = value[prop];\n                        }\n                    });\n                    return result;\n                }\n                return value;\n            }, 2));\n        } else if (program.output == \"spidermonkey\") {\n            try {\n                const minified = await minify(\n                    result.code,\n                    {\n                        compress: false,\n                        mangle: false,\n                        format: {\n                            ast: true,\n                            code: false\n                        }\n                    },\n                    fs\n                );\n                console.log(JSON.stringify(minified.ast.to_mozilla_ast(), null, 2));\n            } catch (ex) {\n                fatal(ex);\n                return;\n            }\n        } else if (program.output) {\n            fs.writeFileSync(program.output, result.code);\n            if (options.sourceMap && options.sourceMap.url !== \"inline\" && result.map) {\n                fs.writeFileSync(program.output + \".map\", result.map);\n            }\n        } else {\n            console.log(result.code);\n        }\n        if (program.nameCache) {\n            fs.writeFileSync(program.nameCache, JSON.stringify(options.nameCache));\n        }\n        if (result.timings) for (var phase in result.timings) {\n            print_error(\"- \" + phase + \": \" + result.timings[phase].toFixed(3) + \"s\");\n        }\n    }\n\n    function fatal(message) {\n        if (message instanceof Error) message = message.stack.replace(/^\\S*?Error:/, \"ERROR:\");\n        print_error(message);\n        process.exit(1);\n    }\n\n    // A file glob function that only supports \"*\" and \"?\" wildcards in the basename.\n    // Example: \"foo/bar/*baz??.*.js\"\n    // Argument `glob` may be a string or an array of strings.\n    // Returns an array of strings. Garbage in, garbage out.\n    function simple_glob(glob) {\n        if (Array.isArray(glob)) {\n            return [].concat.apply([], glob.map(simple_glob));\n        }\n        if (glob && glob.match(/[*?]/)) {\n            var dir = path.dirname(glob);\n            try {\n                var entries = fs.readdirSync(dir);\n            } catch (ex) {}\n            if (entries) {\n                var pattern = \"^\" + path.basename(glob)\n                    .replace(/[.+^$[\\]\\\\(){}]/g, \"\\\\$&\")\n                    .replace(/\\*/g, \"[^/\\\\\\\\]*\")\n                    .replace(/\\?/g, \"[^/\\\\\\\\]\") + \"$\";\n                var mod = process.platform === \"win32\" ? \"i\" : \"\";\n                var rx = new RegExp(pattern, mod);\n                var results = entries.filter(function(name) {\n                    return rx.test(name);\n                }).map(function(name) {\n                    return path.join(dir, name);\n                });\n                if (results.length) return results;\n            }\n        }\n        return [ glob ];\n    }\n\n    function read_file(path, default_value) {\n        try {\n            return fs.readFileSync(path, \"utf8\");\n        } catch (ex) {\n            if ((ex.code == \"ENOENT\" || ex.code == \"ENAMETOOLONG\") && default_value != null) return default_value;\n            fatal(ex);\n        }\n    }\n\n    function parse_js(flag) {\n        return function(value, options) {\n            options = options || {};\n            try {\n                walk(parse(value, { expression: true }), node => {\n                    if (node instanceof AST_Assign) {\n                        var name = node.left.print_to_string();\n                        var value = node.right;\n                        if (flag) {\n                            options[name] = value;\n                        } else if (value instanceof AST_Array) {\n                            options[name] = value.elements.map(to_string);\n                        } else if (value instanceof AST_RegExp) {\n                            value = value.value;\n                            options[name] = new RegExp(value.source, value.flags);\n                        } else {\n                            options[name] = to_string(value);\n                        }\n                        return true;\n                    }\n                    if (node instanceof AST_Symbol || node instanceof AST_PropAccess) {\n                        var name = node.print_to_string();\n                        options[name] = true;\n                        return true;\n                    }\n                    if (!(node instanceof AST_Sequence)) throw node;\n\n                    function to_string(value) {\n                        return value instanceof AST_Constant ? value.getValue() : value.print_to_string({\n                            quote_keys: true\n                        });\n                    }\n                });\n            } catch(ex) {\n                if (flag) {\n                    fatal(\"Error parsing arguments for '\" + flag + \"': \" + value);\n                } else {\n                    options[value] = null;\n                }\n            }\n            return options;\n        };\n    }\n\n    function symdef(def) {\n        var ret = (1e6 + def.id) + \" \" + def.name;\n        if (def.mangled_name) ret += \" \" + def.mangled_name;\n        return ret;\n    }\n\n    function collect_from_map(map, callback) {\n        var result = [];\n        map.forEach(function (def) {\n            result.push(callback(def));\n        });\n        return result;\n    }\n\n    function format_object(obj) {\n        var lines = [];\n        var padding = \"\";\n        Object.keys(obj).map(function(name) {\n            if (padding.length < name.length) padding = Array(name.length + 1).join(\" \");\n            return [ name, JSON.stringify(obj[name]) ];\n        }).forEach(function(tokens) {\n            lines.push(\"  \" + tokens[0] + padding.slice(tokens[0].length - 2) + tokens[1]);\n        });\n        return lines.join(\"\\n\");\n    }\n\n    function print_error(msg) {\n        process.stderr.write(msg);\n        process.stderr.write(\"\\n\");\n    }\n\n    function describe_ast() {\n        var out = OutputStream({ beautify: true });\n        function doitem(ctor) {\n            out.print(\"AST_\" + ctor.TYPE);\n            const props = ctor.SELF_PROPS.filter(prop => !/^\\$/.test(prop));\n\n            if (props.length > 0) {\n                out.space();\n                out.with_parens(function() {\n                    props.forEach(function(prop, i) {\n                        if (i) out.space();\n                        out.print(prop);\n                    });\n                });\n            }\n\n            if (ctor.documentation) {\n                out.space();\n                out.print_string(ctor.documentation);\n            }\n\n            if (ctor.SUBCLASSES.length > 0) {\n                out.space();\n                out.with_block(function() {\n                    ctor.SUBCLASSES.forEach(function(ctor) {\n                        out.indent();\n                        doitem(ctor);\n                        out.newline();\n                    });\n                });\n            }\n        }\n        doitem(AST_Node);\n        return out + \"\\n\";\n    }\n}\n\nasync function _default_options() {\n    const defs = {};\n\n    Object.keys(infer_options({ 0: 0 })).forEach((component) => {\n        const options = infer_options({\n            [component]: {0: 0}\n        });\n\n        if (options) defs[component] = options;\n    });\n    return defs;\n}\n\nasync function infer_options(options) {\n    try {\n        await minify(\"\", options);\n    } catch (error) {\n        return error.defs;\n    }\n}\n\nexports._default_options = _default_options;\nexports._run_cli = run_cli;\nexports.minify = minify;\nexports.minify_sync = minify_sync;\n\n}));\n", "'use strict';\n\nvar CleanCSS = require('clean-css');\nvar decode = require('he').decode;\nvar HTMLParser = require('./htmlparser').HTMLParser;\nvar endTag = require('./htmlparser').endTag;\nvar RelateUrl = require('relateurl');\nvar TokenChain = require('./tokenchain');\nvar Terser = require('terser');\nvar utils = require('./utils');\n\nfunction trimWhitespace(str) {\n  return str && str.replace(/^[ \\n\\r\\t\\f]+/, '').replace(/[ \\n\\r\\t\\f]+$/, '');\n}\n\nfunction collapseWhitespaceAll(str) {\n  // Non-breaking space is specifically handled inside the replacer function here:\n  return str && str.replace(/[ \\n\\r\\t\\f\\xA0]+/g, function(spaces) {\n    return spaces === '\\t' ? '\\t' : spaces.replace(/(^|\\xA0+)[^\\xA0]+/g, '$1 ');\n  });\n}\n\nfunction collapseWhitespace(str, options, trimLeft, trimRight, collapseAll) {\n  var lineBreakBefore = '', lineBreakAfter = '';\n\n  if (options.preserveLineBreaks) {\n    str = str.replace(/^[ \\n\\r\\t\\f]*?[\\n\\r][ \\n\\r\\t\\f]*/, function() {\n      lineBreakBefore = '\\n';\n      return '';\n    }).replace(/[ \\n\\r\\t\\f]*?[\\n\\r][ \\n\\r\\t\\f]*$/, function() {\n      lineBreakAfter = '\\n';\n      return '';\n    });\n  }\n\n  if (trimLeft) {\n    // Non-breaking space is specifically handled inside the replacer function here:\n    str = str.replace(/^[ \\n\\r\\t\\f\\xA0]+/, function(spaces) {\n      var conservative = !lineBreakBefore && options.conservativeCollapse;\n      if (conservative && spaces === '\\t') {\n        return '\\t';\n      }\n      return spaces.replace(/^[^\\xA0]+/, '').replace(/(\\xA0+)[^\\xA0]+/g, '$1 ') || (conservative ? ' ' : '');\n    });\n  }\n\n  if (trimRight) {\n    // Non-breaking space is specifically handled inside the replacer function here:\n    str = str.replace(/[ \\n\\r\\t\\f\\xA0]+$/, function(spaces) {\n      var conservative = !lineBreakAfter && options.conservativeCollapse;\n      if (conservative && spaces === '\\t') {\n        return '\\t';\n      }\n      return spaces.replace(/[^\\xA0]+(\\xA0+)/g, ' $1').replace(/[^\\xA0]+$/, '') || (conservative ? ' ' : '');\n    });\n  }\n\n  if (collapseAll) {\n    // strip non space whitespace then compress spaces to one\n    str = collapseWhitespaceAll(str);\n  }\n\n  return lineBreakBefore + str + lineBreakAfter;\n}\n\nvar createMapFromString = utils.createMapFromString;\n// non-empty tags that will maintain whitespace around them\nvar inlineTags = createMapFromString('a,abbr,acronym,b,bdi,bdo,big,button,cite,code,del,dfn,em,font,i,ins,kbd,label,mark,math,nobr,object,q,rp,rt,rtc,ruby,s,samp,select,small,span,strike,strong,sub,sup,svg,textarea,time,tt,u,var');\n// non-empty tags that will maintain whitespace within them\nvar inlineTextTags = createMapFromString('a,abbr,acronym,b,big,del,em,font,i,ins,kbd,mark,nobr,rp,s,samp,small,span,strike,strong,sub,sup,time,tt,u,var');\n// self-closing tags that will maintain whitespace around them\nvar selfClosingInlineTags = createMapFromString('comment,img,input,wbr');\n\nfunction collapseWhitespaceSmart(str, prevTag, nextTag, options) {\n  var trimLeft = prevTag && !selfClosingInlineTags(prevTag);\n  if (trimLeft && !options.collapseInlineTagWhitespace) {\n    trimLeft = prevTag.charAt(0) === '/' ? !inlineTags(prevTag.slice(1)) : !inlineTextTags(prevTag);\n  }\n  var trimRight = nextTag && !selfClosingInlineTags(nextTag);\n  if (trimRight && !options.collapseInlineTagWhitespace) {\n    trimRight = nextTag.charAt(0) === '/' ? !inlineTextTags(nextTag.slice(1)) : !inlineTags(nextTag);\n  }\n  return collapseWhitespace(str, options, trimLeft, trimRight, prevTag && nextTag);\n}\n\nfunction isConditionalComment(text) {\n  return /^\\[if\\s[^\\]]+]|\\[endif]$/.test(text);\n}\n\nfunction isIgnoredComment(text, options) {\n  for (var i = 0, len = options.ignoreCustomComments.length; i < len; i++) {\n    if (options.ignoreCustomComments[i].test(text)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction isEventAttribute(attrName, options) {\n  var patterns = options.customEventAttributes;\n  if (patterns) {\n    for (var i = patterns.length; i--;) {\n      if (patterns[i].test(attrName)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  return /^on[a-z]{3,}$/.test(attrName);\n}\n\nfunction canRemoveAttributeQuotes(value) {\n  // https://mathiasbynens.be/notes/unquoted-attribute-values\n  return /^[^ \\t\\n\\f\\r\"'`=<>]+$/.test(value);\n}\n\nfunction attributesInclude(attributes, attribute) {\n  for (var i = attributes.length; i--;) {\n    if (attributes[i].name.toLowerCase() === attribute) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction isAttributeRedundant(tag, attrName, attrValue, attrs) {\n  attrValue = attrValue ? trimWhitespace(attrValue.toLowerCase()) : '';\n\n  return (\n    tag === 'script' &&\n    attrName === 'language' &&\n    attrValue === 'javascript' ||\n\n    tag === 'form' &&\n    attrName === 'method' &&\n    attrValue === 'get' ||\n\n    tag === 'input' &&\n    attrName === 'type' &&\n    attrValue === 'text' ||\n\n    tag === 'script' &&\n    attrName === 'charset' &&\n    !attributesInclude(attrs, 'src') ||\n\n    tag === 'a' &&\n    attrName === 'name' &&\n    attributesInclude(attrs, 'id') ||\n\n    tag === 'area' &&\n    attrName === 'shape' &&\n    attrValue === 'rect'\n  );\n}\n\n// https://mathiasbynens.be/demo/javascript-mime-type\n// https://developer.mozilla.org/en/docs/Web/HTML/Element/script#attr-type\nvar executableScriptsMimetypes = utils.createMap([\n  'text/javascript',\n  'text/ecmascript',\n  'text/jscript',\n  'application/javascript',\n  'application/x-javascript',\n  'application/ecmascript',\n  'module'\n]);\n\nvar keepScriptsMimetypes = utils.createMap([\n  'module'\n]);\n\nfunction isScriptTypeAttribute(attrValue) {\n  attrValue = trimWhitespace(attrValue.split(/;/, 2)[0]).toLowerCase();\n  return attrValue === '' || executableScriptsMimetypes(attrValue);\n}\n\nfunction keepScriptTypeAttribute(attrValue) {\n  attrValue = trimWhitespace(attrValue.split(/;/, 2)[0]).toLowerCase();\n  return keepScriptsMimetypes(attrValue);\n}\n\nfunction isExecutableScript(tag, attrs) {\n  if (tag !== 'script') {\n    return false;\n  }\n  for (var i = 0, len = attrs.length; i < len; i++) {\n    var attrName = attrs[i].name.toLowerCase();\n    if (attrName === 'type') {\n      return isScriptTypeAttribute(attrs[i].value);\n    }\n  }\n  return true;\n}\n\nfunction isStyleLinkTypeAttribute(attrValue) {\n  attrValue = trimWhitespace(attrValue).toLowerCase();\n  return attrValue === '' || attrValue === 'text/css';\n}\n\nfunction isStyleSheet(tag, attrs) {\n  if (tag !== 'style') {\n    return false;\n  }\n  for (var i = 0, len = attrs.length; i < len; i++) {\n    var attrName = attrs[i].name.toLowerCase();\n    if (attrName === 'type') {\n      return isStyleLinkTypeAttribute(attrs[i].value);\n    }\n  }\n  return true;\n}\n\nvar isSimpleBoolean = createMapFromString('allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible');\nvar isBooleanValue = createMapFromString('true,false');\n\nfunction isBooleanAttribute(attrName, attrValue) {\n  return isSimpleBoolean(attrName) || attrName === 'draggable' && !isBooleanValue(attrValue);\n}\n\nfunction isUriTypeAttribute(attrName, tag) {\n  return (\n    /^(?:a|area|link|base)$/.test(tag) && attrName === 'href' ||\n    tag === 'img' && /^(?:src|longdesc|usemap)$/.test(attrName) ||\n    tag === 'object' && /^(?:classid|codebase|data|usemap)$/.test(attrName) ||\n    tag === 'q' && attrName === 'cite' ||\n    tag === 'blockquote' && attrName === 'cite' ||\n    (tag === 'ins' || tag === 'del') && attrName === 'cite' ||\n    tag === 'form' && attrName === 'action' ||\n    tag === 'input' && (attrName === 'src' || attrName === 'usemap') ||\n    tag === 'head' && attrName === 'profile' ||\n    tag === 'script' && (attrName === 'src' || attrName === 'for')\n  );\n}\n\nfunction isNumberTypeAttribute(attrName, tag) {\n  return (\n    /^(?:a|area|object|button)$/.test(tag) && attrName === 'tabindex' ||\n    tag === 'input' && (attrName === 'maxlength' || attrName === 'tabindex') ||\n    tag === 'select' && (attrName === 'size' || attrName === 'tabindex') ||\n    tag === 'textarea' && /^(?:rows|cols|tabindex)$/.test(attrName) ||\n    tag === 'colgroup' && attrName === 'span' ||\n    tag === 'col' && attrName === 'span' ||\n    (tag === 'th' || tag === 'td') && (attrName === 'rowspan' || attrName === 'colspan')\n  );\n}\n\nfunction isLinkType(tag, attrs, value) {\n  if (tag !== 'link') {\n    return false;\n  }\n  for (var i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i].name === 'rel' && attrs[i].value === value) {\n      return true;\n    }\n  }\n}\n\nfunction isMediaQuery(tag, attrs, attrName) {\n  return attrName === 'media' && (isLinkType(tag, attrs, 'stylesheet') || isStyleSheet(tag, attrs));\n}\n\nvar srcsetTags = createMapFromString('img,source');\n\nfunction isSrcset(attrName, tag) {\n  return attrName === 'srcset' && srcsetTags(tag);\n}\n\nasync function cleanAttributeValue(tag, attrName, attrValue, options, attrs) {\n  if (isEventAttribute(attrName, options)) {\n    attrValue = trimWhitespace(attrValue).replace(/^javascript:\\s*/i, '');\n    return await options.minifyJS(attrValue, true);\n  }\n  else if (attrName === 'class') {\n    attrValue = trimWhitespace(attrValue);\n    if (options.sortClassName) {\n      attrValue = options.sortClassName(attrValue);\n    }\n    else {\n      attrValue = collapseWhitespaceAll(attrValue);\n    }\n    return attrValue;\n  }\n  else if (isUriTypeAttribute(attrName, tag)) {\n    attrValue = trimWhitespace(attrValue);\n    return isLinkType(tag, attrs, 'canonical') ? attrValue : options.minifyURLs(attrValue);\n  }\n  else if (isNumberTypeAttribute(attrName, tag)) {\n    return trimWhitespace(attrValue);\n  }\n  else if (attrName === 'style') {\n    attrValue = trimWhitespace(attrValue);\n    if (attrValue) {\n      if (/;$/.test(attrValue) && !/&#?[0-9a-zA-Z]+;$/.test(attrValue)) {\n        attrValue = attrValue.replace(/\\s*;$/, ';');\n      }\n      attrValue = options.minifyCSS(attrValue, 'inline');\n    }\n    return attrValue;\n  }\n  else if (isSrcset(attrName, tag)) {\n    // https://html.spec.whatwg.org/multipage/embedded-content.html#attr-img-srcset\n    attrValue = trimWhitespace(attrValue).split(/\\s+,\\s*|\\s*,\\s+/).map(function(candidate) {\n      var url = candidate;\n      var descriptor = '';\n      var match = candidate.match(/\\s+([1-9][0-9]*w|[0-9]+(?:\\.[0-9]+)?x)$/);\n      if (match) {\n        url = url.slice(0, -match[0].length);\n        var num = +match[1].slice(0, -1);\n        var suffix = match[1].slice(-1);\n        if (num !== 1 || suffix !== 'x') {\n          descriptor = ' ' + num + suffix;\n        }\n      }\n      return options.minifyURLs(url) + descriptor;\n    }).join(', ');\n  }\n  else if (isMetaViewport(tag, attrs) && attrName === 'content') {\n    attrValue = attrValue.replace(/\\s+/g, '').replace(/[0-9]+\\.[0-9]+/g, function(numString) {\n      // \"0.90000\" -> \"0.9\"\n      // \"1.0\" -> \"1\"\n      // \"1.0001\" -> \"1.0001\" (unchanged)\n      return (+numString).toString();\n    });\n  }\n  else if (isContentSecurityPolicy(tag, attrs) && attrName.toLowerCase() === 'content') {\n    return collapseWhitespaceAll(attrValue);\n  }\n  else if (options.customAttrCollapse && options.customAttrCollapse.test(attrName)) {\n    attrValue = trimWhitespace(attrValue.replace(/ ?[\\n\\r]+ ?/g, '').replace(/\\s{2,}/g, options.conservativeCollapse ? ' ' : ''));\n  }\n  else if (tag === 'script' && attrName === 'type') {\n    attrValue = trimWhitespace(attrValue.replace(/\\s*;\\s*/g, ';'));\n  }\n  else if (isMediaQuery(tag, attrs, attrName)) {\n    attrValue = trimWhitespace(attrValue);\n    return options.minifyCSS(attrValue, 'media');\n  }\n  return attrValue;\n}\n\nfunction isMetaViewport(tag, attrs) {\n  if (tag !== 'meta') {\n    return false;\n  }\n  for (var i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i].name === 'name' && attrs[i].value === 'viewport') {\n      return true;\n    }\n  }\n}\n\nfunction isContentSecurityPolicy(tag, attrs) {\n  if (tag !== 'meta') {\n    return false;\n  }\n  for (var i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i].name.toLowerCase() === 'http-equiv' && attrs[i].value.toLowerCase() === 'content-security-policy') {\n      return true;\n    }\n  }\n}\n\nfunction ignoreCSS(id) {\n  return '/* clean-css ignore:start */' + id + '/* clean-css ignore:end */';\n}\n\n// Wrap CSS declarations for CleanCSS > 3.x\n// See https://github.com/jakubpawlowicz/clean-css/issues/418\nfunction wrapCSS(text, type) {\n  switch (type) {\n    case 'inline':\n      return '*{' + text + '}';\n    case 'media':\n      return '@media ' + text + '{a{top:0}}';\n    default:\n      return text;\n  }\n}\n\nfunction unwrapCSS(text, type) {\n  var matches;\n  switch (type) {\n    case 'inline':\n      matches = text.match(/^\\*\\{([\\s\\S]*)\\}$/);\n      break;\n    case 'media':\n      matches = text.match(/^@media ([\\s\\S]*?)\\s*{[\\s\\S]*}$/);\n      break;\n  }\n  return matches ? matches[1] : text;\n}\n\nasync function cleanConditionalComment(comment, options) {\n  return options.processConditionalComments ? await utils.replaceAsync(comment, /^(\\[if\\s[^\\]]+]>)([\\s\\S]*?)(<!\\[endif])$/, async function(match, prefix, text, suffix) {\n    return prefix + await minify(text, options, true) + suffix;\n  }) : comment;\n}\n\nasync function processScript(text, options, currentAttrs) {\n  for (var i = 0, len = currentAttrs.length; i < len; i++) {\n    if (currentAttrs[i].name.toLowerCase() === 'type' &&\n        options.processScripts.indexOf(currentAttrs[i].value) > -1) {\n      return await minify(text, options);\n    }\n  }\n  return text;\n}\n\n// Tag omission rules from https://html.spec.whatwg.org/multipage/syntax.html#optional-tags\n// with the following deviations:\n// - retain <body> if followed by <noscript>\n// - </rb>, </rt>, </rtc>, </rp> & </tfoot> follow https://www.w3.org/TR/html5/syntax.html#optional-tags\n// - retain all tags which are adjacent to non-standard HTML tags\nvar optionalStartTags = createMapFromString('html,head,body,colgroup,tbody');\nvar optionalEndTags = createMapFromString('html,head,body,li,dt,dd,p,rb,rt,rtc,rp,optgroup,option,colgroup,caption,thead,tbody,tfoot,tr,td,th');\nvar headerTags = createMapFromString('meta,link,script,style,template,noscript');\nvar descriptionTags = createMapFromString('dt,dd');\nvar pBlockTags = createMapFromString('address,article,aside,blockquote,details,div,dl,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,hr,main,menu,nav,ol,p,pre,section,table,ul');\nvar pInlineTags = createMapFromString('a,audio,del,ins,map,noscript,video');\nvar rubyTags = createMapFromString('rb,rt,rtc,rp');\nvar rtcTag = createMapFromString('rb,rtc,rp');\nvar optionTag = createMapFromString('option,optgroup');\nvar tableContentTags = createMapFromString('tbody,tfoot');\nvar tableSectionTags = createMapFromString('thead,tbody,tfoot');\nvar cellTags = createMapFromString('td,th');\nvar topLevelTags = createMapFromString('html,head,body');\nvar compactTags = createMapFromString('html,body');\nvar looseTags = createMapFromString('head,colgroup,caption');\nvar trailingTags = createMapFromString('dt,thead');\nvar htmlTags = createMapFromString('a,abbr,acronym,address,applet,area,article,aside,audio,b,base,basefont,bdi,bdo,bgsound,big,blink,blockquote,body,br,button,canvas,caption,center,cite,code,col,colgroup,command,content,data,datalist,dd,del,details,dfn,dialog,dir,div,dl,dt,element,em,embed,fieldset,figcaption,figure,font,footer,form,frame,frameset,h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,i,iframe,image,img,input,ins,isindex,kbd,keygen,label,legend,li,link,listing,main,map,mark,marquee,menu,menuitem,meta,meter,multicol,nav,nobr,noembed,noframes,noscript,object,ol,optgroup,option,output,p,param,picture,plaintext,pre,progress,q,rb,rp,rt,rtc,ruby,s,samp,script,section,select,shadow,small,source,spacer,span,strike,strong,style,sub,summary,sup,table,tbody,td,template,textarea,tfoot,th,thead,time,title,tr,track,tt,u,ul,var,video,wbr,xmp');\n\nfunction canRemoveParentTag(optionalStartTag, tag) {\n  switch (optionalStartTag) {\n    case 'html':\n    case 'head':\n      return true;\n    case 'body':\n      return !headerTags(tag);\n    case 'colgroup':\n      return tag === 'col';\n    case 'tbody':\n      return tag === 'tr';\n  }\n  return false;\n}\n\nfunction isStartTagMandatory(optionalEndTag, tag) {\n  switch (tag) {\n    case 'colgroup':\n      return optionalEndTag === 'colgroup';\n    case 'tbody':\n      return tableSectionTags(optionalEndTag);\n  }\n  return false;\n}\n\nfunction canRemovePrecedingTag(optionalEndTag, tag) {\n  switch (optionalEndTag) {\n    case 'html':\n    case 'head':\n    case 'body':\n    case 'colgroup':\n    case 'caption':\n      return true;\n    case 'li':\n    case 'optgroup':\n    case 'tr':\n      return tag === optionalEndTag;\n    case 'dt':\n    case 'dd':\n      return descriptionTags(tag);\n    case 'p':\n      return pBlockTags(tag);\n    case 'rb':\n    case 'rt':\n    case 'rp':\n      return rubyTags(tag);\n    case 'rtc':\n      return rtcTag(tag);\n    case 'option':\n      return optionTag(tag);\n    case 'thead':\n    case 'tbody':\n      return tableContentTags(tag);\n    case 'tfoot':\n      return tag === 'tbody';\n    case 'td':\n    case 'th':\n      return cellTags(tag);\n  }\n  return false;\n}\n\nvar reEmptyAttribute = new RegExp(\n  '^(?:class|id|style|title|lang|dir|on(?:focus|blur|change|click|dblclick|mouse(' +\n    '?:down|up|over|move|out)|key(?:press|down|up)))$');\n\nfunction canDeleteEmptyAttribute(tag, attrName, attrValue, options) {\n  var isValueEmpty = !attrValue || /^\\s*$/.test(attrValue);\n  if (!isValueEmpty) {\n    return false;\n  }\n  if (typeof options.removeEmptyAttributes === 'function') {\n    return options.removeEmptyAttributes(attrName, tag);\n  }\n  return tag === 'input' && attrName === 'value' || reEmptyAttribute.test(attrName);\n}\n\nfunction hasAttrName(name, attrs) {\n  for (var i = attrs.length - 1; i >= 0; i--) {\n    if (attrs[i].name === name) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction canRemoveElement(tag, attrs) {\n  switch (tag) {\n    case 'textarea':\n      return false;\n    case 'audio':\n    case 'script':\n    case 'video':\n      if (hasAttrName('src', attrs)) {\n        return false;\n      }\n      break;\n    case 'iframe':\n      if (hasAttrName('src', attrs) || hasAttrName('srcdoc', attrs)) {\n        return false;\n      }\n      break;\n    case 'object':\n      if (hasAttrName('data', attrs)) {\n        return false;\n      }\n      break;\n    case 'applet':\n      if (hasAttrName('code', attrs)) {\n        return false;\n      }\n      break;\n  }\n  return true;\n}\n\nfunction canCollapseWhitespace(tag) {\n  return !/^(?:script|style|pre|textarea)$/.test(tag);\n}\n\nfunction canTrimWhitespace(tag) {\n  return !/^(?:pre|textarea)$/.test(tag);\n}\n\nasync function normalizeAttr(attr, attrs, tag, options) {\n  var attrName = options.name(attr.name),\n      attrValue = attr.value;\n\n  if (options.decodeEntities && attrValue) {\n    attrValue = decode(attrValue, { isAttributeValue: true });\n  }\n\n  if (options.removeRedundantAttributes &&\n    isAttributeRedundant(tag, attrName, attrValue, attrs) ||\n    options.removeScriptTypeAttributes && tag === 'script' &&\n    attrName === 'type' && isScriptTypeAttribute(attrValue) && !keepScriptTypeAttribute(attrValue) ||\n    options.removeStyleLinkTypeAttributes && (tag === 'style' || tag === 'link') &&\n    attrName === 'type' && isStyleLinkTypeAttribute(attrValue)) {\n    return;\n  }\n\n  if (attrValue) {\n    attrValue = await cleanAttributeValue(tag, attrName, attrValue, options, attrs);\n  }\n\n  if (options.removeEmptyAttributes &&\n      canDeleteEmptyAttribute(tag, attrName, attrValue, options)) {\n    return;\n  }\n\n  if (options.decodeEntities && attrValue) {\n    attrValue = attrValue.replace(/&(#?[0-9a-zA-Z]+;)/g, '&amp;$1');\n  }\n\n  return {\n    attr: attr,\n    name: attrName,\n    value: attrValue\n  };\n}\n\nfunction buildAttr(normalized, hasUnarySlash, options, isLast, uidAttr) {\n  var attrName = normalized.name,\n      attrValue = normalized.value,\n      attr = normalized.attr,\n      attrQuote = attr.quote,\n      attrFragment,\n      emittedAttrValue;\n\n  if (typeof attrValue !== 'undefined' && (!options.removeAttributeQuotes ||\n      ~attrValue.indexOf(uidAttr) || !canRemoveAttributeQuotes(attrValue))) {\n    if (!options.preventAttributesEscaping) {\n      if (typeof options.quoteCharacter === 'undefined') {\n        var apos = (attrValue.match(/'/g) || []).length;\n        var quot = (attrValue.match(/\"/g) || []).length;\n        attrQuote = apos < quot ? '\\'' : '\"';\n      }\n      else {\n        attrQuote = options.quoteCharacter === '\\'' ? '\\'' : '\"';\n      }\n      if (attrQuote === '\"') {\n        attrValue = attrValue.replace(/\"/g, '&#34;');\n      }\n      else {\n        attrValue = attrValue.replace(/'/g, '&#39;');\n      }\n    }\n    emittedAttrValue = attrQuote + attrValue + attrQuote;\n    if (!isLast && !options.removeTagWhitespace) {\n      emittedAttrValue += ' ';\n    }\n  }\n  // make sure trailing slash is not interpreted as HTML self-closing tag\n  else if (isLast && !hasUnarySlash && !/\\/$/.test(attrValue)) {\n    emittedAttrValue = attrValue;\n  }\n  else {\n    emittedAttrValue = attrValue + ' ';\n  }\n\n  if (typeof attrValue === 'undefined' || options.collapseBooleanAttributes &&\n      isBooleanAttribute(attrName.toLowerCase(), attrValue.toLowerCase())) {\n    attrFragment = attrName;\n    if (!isLast) {\n      attrFragment += ' ';\n    }\n  }\n  else {\n    attrFragment = attrName + attr.customAssign + emittedAttrValue;\n  }\n\n  return attr.customOpen + attrFragment + attr.customClose;\n}\n\nfunction identity(value) {\n  return value;\n}\n\nfunction processOptions(values) {\n  var options = {\n    name: function(name) {\n      return name.toLowerCase();\n    },\n    canCollapseWhitespace: canCollapseWhitespace,\n    canTrimWhitespace: canTrimWhitespace,\n    html5: true,\n    ignoreCustomComments: [\n      /^!/,\n      /^\\s*#/\n    ],\n    ignoreCustomFragments: [\n      /<%[\\s\\S]*?%>/,\n      /<\\?[\\s\\S]*?\\?>/\n    ],\n    includeAutoGeneratedTags: true,\n    log: identity,\n    minifyCSS: identity,\n    minifyJS: identity,\n    minifyURLs: identity\n  };\n  Object.keys(values).forEach(function(key) {\n    var value = values[key];\n    if (key === 'caseSensitive') {\n      if (value) {\n        options.name = identity;\n      }\n    }\n    else if (key === 'log') {\n      if (typeof value === 'function') {\n        options.log = value;\n      }\n    }\n    else if (key === 'minifyCSS' && typeof value !== 'function') {\n      if (!value) {\n        return;\n      }\n      if (typeof value !== 'object') {\n        value = {};\n      }\n      options.minifyCSS = function(text, type) {\n        text = text.replace(/(url\\s*\\(\\s*)(\"|'|)(.*?)\\2(\\s*\\))/ig, function(match, prefix, quote, url, suffix) {\n          return prefix + quote + options.minifyURLs(url) + quote + suffix;\n        });\n        var cleanCssOutput = new CleanCSS(value).minify(wrapCSS(text, type));\n        if (cleanCssOutput.errors.length > 0) {\n          cleanCssOutput.errors.forEach(options.log);\n          return text;\n        }\n        return unwrapCSS(cleanCssOutput.styles, type);\n      };\n    }\n    else if (key === 'minifyJS' && typeof value !== 'function') {\n      if (!value) {\n        return;\n      }\n      if (typeof value !== 'object') {\n        value = {};\n      }\n      (value.parse || (value.parse = {})).bare_returns = false;\n      options.minifyJS = async function(text, inline) {\n        var start = text.match(/^\\s*<!--.*/);\n        var code = start ? text.slice(start[0].length).replace(/\\n\\s*-->\\s*$/, '') : text;\n        value.parse.bare_returns = inline;\n        try {\n          const result = await Terser.minify(code, value);\n          return result.code.replace(/;$/, '');\n        }\n        catch (error) {\n          options.log(error);\n          return text;\n        }\n      };\n    }\n    else if (key === 'minifyURLs' && typeof value !== 'function') {\n      if (!value) {\n        return;\n      }\n      if (typeof value === 'string') {\n        value = { site: value };\n      }\n      else if (typeof value !== 'object') {\n        value = {};\n      }\n      options.minifyURLs = function(text) {\n        try {\n          return RelateUrl.relate(text, value);\n        }\n        catch (err) {\n          options.log(err);\n          return text;\n        }\n      };\n    }\n    else {\n      options[key] = value;\n    }\n  });\n  return options;\n}\n\nfunction uniqueId(value) {\n  var id;\n  do {\n    id = Math.random().toString(36).replace(/^0\\.[0-9]*/, '');\n  } while (~value.indexOf(id));\n  return id;\n}\n\nvar specialContentTags = createMapFromString('script,style');\n\nasync function createSortFns(value, options, uidIgnore, uidAttr) {\n  var attrChains = options.sortAttributes && Object.create(null);\n  var classChain = options.sortClassName && new TokenChain();\n\n  function attrNames(attrs) {\n    return attrs.map(function(attr) {\n      return options.name(attr.name);\n    });\n  }\n\n  function shouldSkipUID(token, uid) {\n    return !uid || token.indexOf(uid) === -1;\n  }\n\n  function shouldSkipUIDs(token) {\n    return shouldSkipUID(token, uidIgnore) && shouldSkipUID(token, uidAttr);\n  }\n\n  async function scan(input) {\n    var currentTag, currentType;\n    const parser = new HTMLParser(input, {\n      start: function(tag, attrs) {\n        if (attrChains) {\n          if (!attrChains[tag]) {\n            attrChains[tag] = new TokenChain();\n          }\n          attrChains[tag].add(attrNames(attrs).filter(shouldSkipUIDs));\n        }\n        for (var i = 0, len = attrs.length; i < len; i++) {\n          var attr = attrs[i];\n          if (classChain && attr.value && options.name(attr.name) === 'class') {\n            classChain.add(trimWhitespace(attr.value).split(/[ \\t\\n\\f\\r]+/).filter(shouldSkipUIDs));\n          }\n          else if (options.processScripts && attr.name.toLowerCase() === 'type') {\n            currentTag = tag;\n            currentType = attr.value;\n          }\n        }\n      },\n      end: function() {\n        currentTag = '';\n      },\n      chars: async function(text) {\n        if (options.processScripts && specialContentTags(currentTag) &&\n            options.processScripts.indexOf(currentType) > -1) {\n          await scan(text);\n        }\n      }\n    });\n\n    await parser.parse();\n  }\n\n  var log = options.log;\n  options.log = identity;\n  options.sortAttributes = false;\n  options.sortClassName = false;\n  await scan(await minify(value, options));\n  options.log = log;\n  if (attrChains) {\n    var attrSorters = Object.create(null);\n    for (var tag in attrChains) {\n      attrSorters[tag] = attrChains[tag].createSorter();\n    }\n    options.sortAttributes = function(tag, attrs) {\n      var sorter = attrSorters[tag];\n      if (sorter) {\n        var attrMap = Object.create(null);\n        var names = attrNames(attrs);\n        names.forEach(function(name, index) {\n          (attrMap[name] || (attrMap[name] = [])).push(attrs[index]);\n        });\n        sorter.sort(names).forEach(function(name, index) {\n          attrs[index] = attrMap[name].shift();\n        });\n      }\n    };\n  }\n  if (classChain) {\n    var sorter = classChain.createSorter();\n    options.sortClassName = function(value) {\n      return sorter.sort(value.split(/[ \\n\\f\\r]+/)).join(' ');\n    };\n  }\n}\n\nasync function minify(value, options, partialMarkup) {\n  if (options.collapseWhitespace) {\n    value = collapseWhitespace(value, options, true, true);\n  }\n\n  var buffer = [],\n      charsPrevTag,\n      currentChars = '',\n      hasChars,\n      currentTag = '',\n      currentAttrs = [],\n      stackNoTrimWhitespace = [],\n      stackNoCollapseWhitespace = [],\n      optionalStartTag = '',\n      optionalEndTag = '',\n      ignoredMarkupChunks = [],\n      ignoredCustomMarkupChunks = [],\n      uidIgnore,\n      uidAttr,\n      uidPattern;\n\n  // temporarily replace ignored chunks with comments,\n  // so that we don't have to worry what's there.\n  // for all we care there might be\n  // completely-horribly-broken-alien-non-html-emoj-cthulhu-filled content\n  value = value.replace(/<!-- htmlmin:ignore -->([\\s\\S]*?)<!-- htmlmin:ignore -->/g, function(match, group1) {\n    if (!uidIgnore) {\n      uidIgnore = uniqueId(value);\n      var pattern = new RegExp('^' + uidIgnore + '([0-9]+)$');\n      if (options.ignoreCustomComments) {\n        options.ignoreCustomComments = options.ignoreCustomComments.slice();\n      }\n      else {\n        options.ignoreCustomComments = [];\n      }\n      options.ignoreCustomComments.push(pattern);\n    }\n    var token = '<!--' + uidIgnore + ignoredMarkupChunks.length + '-->';\n    ignoredMarkupChunks.push(group1);\n    return token;\n  });\n\n  var customFragments = options.ignoreCustomFragments.map(function(re) {\n    return re.source;\n  });\n  if (customFragments.length) {\n    var reCustomIgnore = new RegExp('\\\\s*(?:' + customFragments.join('|') + ')+\\\\s*', 'g');\n    // temporarily replace custom ignored fragments with unique attributes\n    value = value.replace(reCustomIgnore, function(match) {\n      if (!uidAttr) {\n        uidAttr = uniqueId(value);\n        uidPattern = new RegExp('(\\\\s*)' + uidAttr + '([0-9]+)' + uidAttr + '(\\\\s*)', 'g');\n        if (options.minifyCSS) {\n          options.minifyCSS = (function(fn) {\n            return function(text, type) {\n              text = text.replace(uidPattern, function(match, prefix, index) {\n                var chunks = ignoredCustomMarkupChunks[+index];\n                return chunks[1] + uidAttr + index + uidAttr + chunks[2];\n              });\n              var ids = [];\n              new CleanCSS().minify(wrapCSS(text, type)).warnings.forEach(function(warning) {\n                var match = uidPattern.exec(warning);\n                if (match) {\n                  var id = uidAttr + match[2] + uidAttr;\n                  text = text.replace(id, ignoreCSS(id));\n                  ids.push(id);\n                }\n              });\n              text = fn(text, type);\n              ids.forEach(function(id) {\n                text = text.replace(ignoreCSS(id), id);\n              });\n              return text;\n            };\n          })(options.minifyCSS);\n        }\n        if (options.minifyJS) {\n          options.minifyJS = (function(fn) {\n            return function(text, type) {\n              return fn(text.replace(uidPattern, function(match, prefix, index) {\n                var chunks = ignoredCustomMarkupChunks[+index];\n                return chunks[1] + uidAttr + index + uidAttr + chunks[2];\n              }), type);\n            };\n          })(options.minifyJS);\n        }\n      }\n      var token = uidAttr + ignoredCustomMarkupChunks.length + uidAttr;\n      ignoredCustomMarkupChunks.push(/^(\\s*)[\\s\\S]*?(\\s*)$/.exec(match));\n      return '\\t' + token + '\\t';\n    });\n  }\n\n  if (options.sortAttributes && typeof options.sortAttributes !== 'function' ||\n      options.sortClassName && typeof options.sortClassName !== 'function') {\n    await createSortFns(value, options, uidIgnore, uidAttr);\n  }\n\n  function _canCollapseWhitespace(tag, attrs) {\n    return options.canCollapseWhitespace(tag, attrs, canCollapseWhitespace);\n  }\n\n  function _canTrimWhitespace(tag, attrs) {\n    return options.canTrimWhitespace(tag, attrs, canTrimWhitespace);\n  }\n\n  function removeStartTag() {\n    var index = buffer.length - 1;\n    while (index > 0 && !/^<[^/!]/.test(buffer[index])) {\n      index--;\n    }\n    buffer.length = Math.max(0, index);\n  }\n\n  function removeEndTag() {\n    var index = buffer.length - 1;\n    while (index > 0 && !/^<\\//.test(buffer[index])) {\n      index--;\n    }\n    buffer.length = Math.max(0, index);\n  }\n\n  // look for trailing whitespaces, bypass any inline tags\n  function trimTrailingWhitespace(index, nextTag) {\n    for (var endTag = null; index >= 0 && _canTrimWhitespace(endTag); index--) {\n      var str = buffer[index];\n      var match = str.match(/^<\\/([\\w:-]+)>$/);\n      if (match) {\n        endTag = match[1];\n      }\n      else if (/>$/.test(str) || (buffer[index] = collapseWhitespaceSmart(str, null, nextTag, options))) {\n        break;\n      }\n    }\n  }\n\n  // look for trailing whitespaces from previously processed text\n  // which may not be trimmed due to a following comment or an empty\n  // element which has now been removed\n  function squashTrailingWhitespace(nextTag) {\n    var charsIndex = buffer.length - 1;\n    if (buffer.length > 1) {\n      var item = buffer[buffer.length - 1];\n      if (/^(?:<!|$)/.test(item) && item.indexOf(uidIgnore) === -1) {\n        charsIndex--;\n      }\n    }\n    trimTrailingWhitespace(charsIndex, nextTag);\n  }\n\n  const parser = new HTMLParser(value, {\n    partialMarkup: partialMarkup,\n    continueOnParseError: options.continueOnParseError,\n    customAttrAssign: options.customAttrAssign,\n    customAttrSurround: options.customAttrSurround,\n    html5: options.html5,\n\n    start: async function(tag, attrs, unary, unarySlash, autoGenerated) {\n      if (tag.toLowerCase() === 'svg') {\n        options = Object.create(options);\n        options.caseSensitive = true;\n        options.keepClosingSlash = true;\n        options.name = identity;\n      }\n      tag = options.name(tag);\n      currentTag = tag;\n      charsPrevTag = tag;\n      if (!inlineTextTags(tag)) {\n        currentChars = '';\n      }\n      hasChars = false;\n      currentAttrs = attrs;\n\n      var optional = options.removeOptionalTags;\n      if (optional) {\n        var htmlTag = htmlTags(tag);\n        // <html> may be omitted if first thing inside is not comment\n        // <head> may be omitted if first thing inside is an element\n        // <body> may be omitted if first thing inside is not space, comment, <meta>, <link>, <script>, <style> or <template>\n        // <colgroup> may be omitted if first thing inside is <col>\n        // <tbody> may be omitted if first thing inside is <tr>\n        if (htmlTag && canRemoveParentTag(optionalStartTag, tag)) {\n          removeStartTag();\n        }\n        optionalStartTag = '';\n        // end-tag-followed-by-start-tag omission rules\n        if (htmlTag && canRemovePrecedingTag(optionalEndTag, tag)) {\n          removeEndTag();\n          // <colgroup> cannot be omitted if preceding </colgroup> is omitted\n          // <tbody> cannot be omitted if preceding </tbody>, </thead> or </tfoot> is omitted\n          optional = !isStartTagMandatory(optionalEndTag, tag);\n        }\n        optionalEndTag = '';\n      }\n\n      // set whitespace flags for nested tags (eg. <code> within a <pre>)\n      if (options.collapseWhitespace) {\n        if (!stackNoTrimWhitespace.length) {\n          squashTrailingWhitespace(tag);\n        }\n        if (!unary) {\n          if (!_canTrimWhitespace(tag, attrs) || stackNoTrimWhitespace.length) {\n            stackNoTrimWhitespace.push(tag);\n          }\n          if (!_canCollapseWhitespace(tag, attrs) || stackNoCollapseWhitespace.length) {\n            stackNoCollapseWhitespace.push(tag);\n          }\n        }\n      }\n\n      var openTag = '<' + tag;\n      var hasUnarySlash = unarySlash && options.keepClosingSlash;\n\n      buffer.push(openTag);\n\n      if (options.sortAttributes) {\n        options.sortAttributes(tag, attrs);\n      }\n\n      var parts = [];\n      for (var i = attrs.length, isLast = true; --i >= 0;) {\n        var normalized = await normalizeAttr(attrs[i], attrs, tag, options);\n        if (normalized) {\n          parts.unshift(buildAttr(normalized, hasUnarySlash, options, isLast, uidAttr));\n          isLast = false;\n        }\n      }\n      if (parts.length > 0) {\n        buffer.push(' ');\n        buffer.push.apply(buffer, parts);\n      }\n      // start tag must never be omitted if it has any attributes\n      else if (optional && optionalStartTags(tag)) {\n        optionalStartTag = tag;\n      }\n\n      buffer.push(buffer.pop() + (hasUnarySlash ? '/' : '') + '>');\n\n      if (autoGenerated && !options.includeAutoGeneratedTags) {\n        removeStartTag();\n        optionalStartTag = '';\n      }\n    },\n    end: function(tag, attrs, autoGenerated) {\n      if (tag.toLowerCase() === 'svg') {\n        options = Object.getPrototypeOf(options);\n      }\n      tag = options.name(tag);\n\n      // check if current tag is in a whitespace stack\n      if (options.collapseWhitespace) {\n        if (stackNoTrimWhitespace.length) {\n          if (tag === stackNoTrimWhitespace[stackNoTrimWhitespace.length - 1]) {\n            stackNoTrimWhitespace.pop();\n          }\n        }\n        else {\n          squashTrailingWhitespace('/' + tag);\n        }\n        if (stackNoCollapseWhitespace.length &&\n          tag === stackNoCollapseWhitespace[stackNoCollapseWhitespace.length - 1]) {\n          stackNoCollapseWhitespace.pop();\n        }\n      }\n\n      var isElementEmpty = false;\n      if (tag === currentTag) {\n        currentTag = '';\n        isElementEmpty = !hasChars;\n      }\n\n      if (options.removeOptionalTags) {\n        // <html>, <head> or <body> may be omitted if the element is empty\n        if (isElementEmpty && topLevelTags(optionalStartTag)) {\n          removeStartTag();\n        }\n        optionalStartTag = '';\n        // </html> or </body> may be omitted if not followed by comment\n        // </head> may be omitted if not followed by space or comment\n        // </p> may be omitted if no more content in non-</a> parent\n        // except for </dt> or </thead>, end tags may be omitted if no more content in parent element\n        if (htmlTags(tag) && optionalEndTag && !trailingTags(optionalEndTag) && (optionalEndTag !== 'p' || !pInlineTags(tag))) {\n          removeEndTag();\n        }\n        optionalEndTag = optionalEndTags(tag) ? tag : '';\n      }\n\n      if (options.removeEmptyElements && isElementEmpty && canRemoveElement(tag, attrs)) {\n        // remove last \"element\" from buffer\n        removeStartTag();\n        optionalStartTag = '';\n        optionalEndTag = '';\n      }\n      else {\n        if (autoGenerated && !options.includeAutoGeneratedTags) {\n          optionalEndTag = '';\n        }\n        else {\n          buffer.push('</' + tag + '>');\n        }\n        charsPrevTag = '/' + tag;\n        if (!inlineTags(tag)) {\n          currentChars = '';\n        }\n        else if (isElementEmpty) {\n          currentChars += '|';\n        }\n      }\n    },\n    chars: async function(text, prevTag, nextTag) {\n      prevTag = prevTag === '' ? 'comment' : prevTag;\n      nextTag = nextTag === '' ? 'comment' : nextTag;\n      if (options.decodeEntities && text && !specialContentTags(currentTag)) {\n        text = decode(text);\n      }\n      if (options.collapseWhitespace) {\n        if (!stackNoTrimWhitespace.length) {\n          if (prevTag === 'comment') {\n            var prevComment = buffer[buffer.length - 1];\n            if (prevComment.indexOf(uidIgnore) === -1) {\n              if (!prevComment) {\n                prevTag = charsPrevTag;\n              }\n              if (buffer.length > 1 && (!prevComment || !options.conservativeCollapse && / $/.test(currentChars))) {\n                var charsIndex = buffer.length - 2;\n                buffer[charsIndex] = buffer[charsIndex].replace(/\\s+$/, function(trailingSpaces) {\n                  text = trailingSpaces + text;\n                  return '';\n                });\n              }\n            }\n          }\n          if (prevTag) {\n            if (prevTag === '/nobr' || prevTag === 'wbr') {\n              if (/^\\s/.test(text)) {\n                var tagIndex = buffer.length - 1;\n                while (tagIndex > 0 && buffer[tagIndex].lastIndexOf('<' + prevTag) !== 0) {\n                  tagIndex--;\n                }\n                trimTrailingWhitespace(tagIndex - 1, 'br');\n              }\n            }\n            else if (inlineTextTags(prevTag.charAt(0) === '/' ? prevTag.slice(1) : prevTag)) {\n              text = collapseWhitespace(text, options, /(?:^|\\s)$/.test(currentChars));\n            }\n          }\n          if (prevTag || nextTag) {\n            text = collapseWhitespaceSmart(text, prevTag, nextTag, options);\n          }\n          else {\n            text = collapseWhitespace(text, options, true, true);\n          }\n          if (!text && /\\s$/.test(currentChars) && prevTag && prevTag.charAt(0) === '/') {\n            trimTrailingWhitespace(buffer.length - 1, nextTag);\n          }\n        }\n        if (!stackNoCollapseWhitespace.length && nextTag !== 'html' && !(prevTag && nextTag)) {\n          text = collapseWhitespace(text, options, false, false, true);\n        }\n      }\n      if (options.processScripts && specialContentTags(currentTag)) {\n        text = await processScript(text, options, currentAttrs);\n      }\n      if (isExecutableScript(currentTag, currentAttrs)) {\n        text = await options.minifyJS(text);\n      }\n      if (isStyleSheet(currentTag, currentAttrs)) {\n        text = options.minifyCSS(text);\n      }\n      if (options.removeOptionalTags && text) {\n        // <html> may be omitted if first thing inside is not comment\n        // <body> may be omitted if first thing inside is not space, comment, <meta>, <link>, <script>, <style> or <template>\n        if (optionalStartTag === 'html' || optionalStartTag === 'body' && !/^\\s/.test(text)) {\n          removeStartTag();\n        }\n        optionalStartTag = '';\n        // </html> or </body> may be omitted if not followed by comment\n        // </head>, </colgroup> or </caption> may be omitted if not followed by space or comment\n        if (compactTags(optionalEndTag) || looseTags(optionalEndTag) && !/^\\s/.test(text)) {\n          removeEndTag();\n        }\n        optionalEndTag = '';\n      }\n      charsPrevTag = /^\\s*$/.test(text) ? prevTag : 'comment';\n      if (options.decodeEntities && text && !specialContentTags(currentTag)) {\n        // Escape any `&` symbols that start either:\n        // 1) a legacy named character reference (i.e. one that doesn't end with `;`)\n        // 2) or any other character reference (i.e. one that does end with `;`)\n        // Note that `&` can be escaped as `&amp`, without the semi-colon.\n        // https://mathiasbynens.be/notes/ambiguous-ampersands\n        text = text.replace(/&((?:Iacute|aacute|uacute|plusmn|Otilde|otilde|agrave|Agrave|Yacute|yacute|Oslash|oslash|atilde|Atilde|brvbar|ccedil|Ccedil|Ograve|curren|divide|eacute|Eacute|ograve|Oacute|egrave|Egrave|Ugrave|frac12|frac14|frac34|ugrave|oacute|iacute|Ntilde|ntilde|Uacute|middot|igrave|Igrave|iquest|Aacute|cedil|laquo|micro|iexcl|Icirc|icirc|acirc|Ucirc|Ecirc|ocirc|Ocirc|ecirc|ucirc|Aring|aring|AElig|aelig|acute|pound|raquo|Acirc|times|THORN|szlig|thorn|COPY|auml|ordf|ordm|Uuml|macr|uuml|Auml|ouml|Ouml|para|nbsp|euml|quot|QUOT|Euml|yuml|cent|sect|copy|sup1|sup2|sup3|iuml|Iuml|ETH|shy|reg|not|yen|amp|AMP|REG|uml|eth|deg|gt|GT|LT|lt)(?!;)|(?:#?[0-9a-zA-Z]+;))/g, '&amp$1').replace(/</g, '&lt;');\n      }\n      if (uidPattern && options.collapseWhitespace && stackNoTrimWhitespace.length) {\n        text = text.replace(uidPattern, function(match, prefix, index) {\n          return ignoredCustomMarkupChunks[+index][0];\n        });\n      }\n      currentChars += text;\n      if (text) {\n        hasChars = true;\n      }\n      buffer.push(text);\n    },\n    comment: async function(text, nonStandard) {\n      var prefix = nonStandard ? '<!' : '<!--';\n      var suffix = nonStandard ? '>' : '-->';\n      if (isConditionalComment(text)) {\n        text = prefix + await cleanConditionalComment(text, options) + suffix;\n      }\n      else if (options.removeComments) {\n        if (isIgnoredComment(text, options)) {\n          text = '<!--' + text + '-->';\n        }\n        else {\n          text = '';\n        }\n      }\n      else {\n        text = prefix + text + suffix;\n      }\n      if (options.removeOptionalTags && text) {\n        // preceding comments suppress tag omissions\n        optionalStartTag = '';\n        optionalEndTag = '';\n      }\n      buffer.push(text);\n    },\n    doctype: function(doctype) {\n      buffer.push(options.useShortDoctype ? '<!doctype' +\n        (options.removeTagWhitespace ? '' : ' ') + 'html>' :\n        collapseWhitespaceAll(doctype));\n    }\n  });\n\n  await parser.parse();\n\n  if (options.removeOptionalTags) {\n    // <html> may be omitted if first thing inside is not comment\n    // <head> or <body> may be omitted if empty\n    if (topLevelTags(optionalStartTag)) {\n      removeStartTag();\n    }\n    // except for </dt> or </thead>, end tags may be omitted if no more content in parent element\n    if (optionalEndTag && !trailingTags(optionalEndTag)) {\n      removeEndTag();\n    }\n  }\n  if (options.collapseWhitespace) {\n    squashTrailingWhitespace('br');\n  }\n\n  return joinResultSegments(buffer, options, uidPattern ? function(str) {\n    return str.replace(uidPattern, function(match, prefix, index, suffix) {\n      var chunk = ignoredCustomMarkupChunks[+index][0];\n      if (options.collapseWhitespace) {\n        if (prefix !== '\\t') {\n          chunk = prefix + chunk;\n        }\n        if (suffix !== '\\t') {\n          chunk += suffix;\n        }\n        return collapseWhitespace(chunk, {\n          preserveLineBreaks: options.preserveLineBreaks,\n          conservativeCollapse: !options.trimCustomFragments\n        }, /^[ \\n\\r\\t\\f]/.test(chunk), /[ \\n\\r\\t\\f]$/.test(chunk));\n      }\n      return chunk;\n    });\n  } : identity, uidIgnore ? function(str) {\n    return str.replace(new RegExp('<!--' + uidIgnore + '([0-9]+)-->', 'g'), function(match, index) {\n      return ignoredMarkupChunks[+index];\n    });\n  } : identity);\n}\n\nfunction joinResultSegments(results, options, restoreCustom, restoreIgnore) {\n  var str;\n  var maxLineLength = options.maxLineLength;\n  var noNewlinesBeforeTagClose = options.noNewlinesBeforeTagClose;\n\n  if (maxLineLength) {\n    var line = '', lines = [];\n    while (results.length) {\n      var len = line.length;\n      var end = results[0].indexOf('\\n');\n      var isClosingTag = Boolean(results[0].match(endTag));\n      var shouldKeepSameLine = noNewlinesBeforeTagClose && isClosingTag;\n      if (end < 0) {\n        line += restoreIgnore(restoreCustom(results.shift()));\n      }\n      else {\n        line += restoreIgnore(restoreCustom(results[0].slice(0, end)));\n        results[0] = results[0].slice(end + 1);\n      }\n      if (len > 0 && line.length > maxLineLength && !shouldKeepSameLine) {\n        lines.push(line.slice(0, len));\n        line = line.slice(len);\n      }\n      else if (end >= 0) {\n        lines.push(line);\n        line = '';\n      }\n    }\n    if (line) {\n      lines.push(line);\n    }\n    str = lines.join('\\n');\n  }\n  else {\n    str = restoreIgnore(restoreCustom(results.join('')));\n  }\n  return options.collapseWhitespace ? collapseWhitespace(str, options, true, true) : str;\n}\n\nexports.minify = async function(value, options) {\n  var start = Date.now();\n  options = processOptions(options || {});\n  var result = await minify(value, options);\n  options.log('minified in: ' + (Date.now() - start) + 'ms');\n  return result;\n};\n", "import { Plugin } from 'vite'\nimport { minify, Options } from 'html-minifier-terser'\n\nexport function ViteMinifyPlugin(options?: Options): Plugin {\n  return {\n    name: 'vite-plugin-minify',\n    enforce: 'post',\n    apply: 'build',\n    transformIndexHtml: (html) => {\n      return minify(html, {\n        removeComments: true,\n        collapseWhitespace: true,\n        collapseBooleanAttributes: true,\n        removeAttributeQuotes: false,\n        removeEmptyAttributes: true,\n        minifyCSS: true,\n        minifyJS: true,\n        minifyURLs: true,\n        ...options,\n      })\n    },\n  }\n}\n\nexport default ViteMinifyPlugin\n"],
  "mappings": "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e,QAAO,MAAe,OAAM,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,KAAO,QAAO,KAAO,UAAS,KAAO,UAAS,KAAO,UAAS,KAAO,UAAS,KAAS,UAAS,KAAS,UAAS,KAAO,SAAQ,KAAO,SAAQ,KAAO,SAAQ,KAAO,SAAQ,KAAO,QAAO,KAAO,QAAO,KAAO,UAAS,KAAO,UAAS,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAO,SAAQ,KAAO,SAAQ,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,KAAS,QAAO,MAAe,OAAM,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,KAAS,OAAM,MAAe,QAAO,KAAS,QAAO,KAAS,UAAS,KAAS,UAAS,KAAS,SAAQ,KAAS,SAAQ,KAAS,UAAS,KAAS,UAAS,KAAS,QAAO,KAAS,QAAO,KAAO,UAAS,KAAO,UAAS,KAAS,UAAS,MAAe,OAAM,KAAS,MAAK,MAAe,QAAO,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,KAAS,MAAK,MAAe,QAAO,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAO,OAAM,KAAO,OAAM,KAAS,MAAK,KAAS,QAAO,MAAe,OAAM,MAAe,QAAO,KAAS,QAAO,MAAe,OAAM,MAAe,QAAO,KAAO,UAAS,KAAO,UAAS,KAAO,UAAS,KAAO,UAAS,KAAO,SAAQ,KAAO,SAAQ,KAAS,UAAS,KAAS,UAAS,KAAO,QAAO,KAAO,QAAO,KAAS,QAAO,KAAS,QAAO,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,KAAS,QAAO,KAAS,SAAQ,KAAS,UAAS,KAAS,UAAS,KAAS,SAAQ,MAAK,SAAQ,KAAS,SAAQ,KAAS,QAAO,KAAS,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,SAAQ,KAAS,SAAQ,KAAS,QAAO,KAAS,QAAO,KAAS,UAAS,MAAe,OAAM,KAAS,WAAU,MAAe,QAAO,MAAe,QAAO,KAAS,QAAO,KAAS,OAAM,KAAS,QAAO,KAAS,SAAQ,KAAS,SAAQ,KAAS,QAAO,KAAS,UAAS,KAAS,UAAS,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,KAAS,MAAK,MAAe,QAAO,KAAS,QAAO,KAAS,MAAK,KAAO,UAAS,KAAO,UAAS,KAAO,UAAS,KAAO,UAAS,KAAO,SAAQ,KAAO,SAAQ,KAAO,QAAO,KAAO,QAAO,KAAS,UAAS,KAAS,UAAS,KAAS,QAAO,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,KAAS,UAAS,KAAS,UAAS,MAAe,OAAM,MAAe,QAAO,KAAS,OAAM,MAAe,QAAO,KAAS,QAAO,MAAe,OAAM,MAAe,QAAO,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,KAAS,QAAO,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,KAAS,QAAO,MAAe,QAAO,MAAe,OAAM,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAO,UAAS,KAAO,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,OAAM,KAAS,OAAM,MAAe,QAAO,MAAe,OAAM,KAAS,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,KAAO,QAAO,KAAO,UAAS,KAAO,UAAS,KAAO,UAAS,KAAO,UAAS,KAAO,SAAQ,KAAO,SAAQ,KAAO,QAAO,KAAO,QAAO,KAAS,UAAS,KAAS,UAAS,KAAO,UAAS,KAAO,UAAS,KAAO,UAAS,KAAO,UAAS,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,KAAS,QAAO,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,KAAS,QAAO,KAAS,UAAS,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,KAAS,QAAO,KAAS,MAAK,KAAS,QAAO,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,KAAS,MAAK,KAAS,UAAS,KAAS,UAAS,KAAS,SAAQ,KAAS,SAAQ,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAO,SAAQ,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,SAAQ,KAAS,UAAS,KAAS,UAAS,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,KAAO,UAAS,KAAO,UAAS,KAAO,UAAS,KAAO,UAAS,KAAS,UAAS,KAAS,UAAS,KAAO,SAAQ,KAAO,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAO,QAAO,KAAO,QAAO,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,KAAS,SAAQ,KAAS,SAAQ,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,MAAe,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,KAAO,UAAS,KAAO,UAAS,KAAS,SAAQ,KAAS,SAAQ,KAAO,QAAO,KAAS,QAAO,MAAe,QAAO,MAAe,OAAM,MAAe,QAAO,KAAS,OAAM,KAAS,QAAO,MAAe,QAAO,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,UAAS,KAAS,QAAO,KAAS,QAAO,KAAS,SAAQ,KAAO,SAAQ,KAAO,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,QAAO,KAAS,QAAO,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,SAAQ,KAAS,QAAO,KAAS,SAAQ,KAAS,WAAU,KAAS,UAAS,KAAS,UAAS,KAAS,QAAO,KAAS,QAAO,KAAS,OAAM,KAAS,OAAM,KAAS,SAAQ,KAAS,UAAS,KAAS,SAAQ,KAAS,QAAO,KAAS,QAAO,KAAS,SAAQ,KAAS,UAAS,KAAS,SAAQ,KAAS,UAAS,KAAS,UAAS,KAAS,MAAK,KAAO,SAAQ,KAAS,MAAK,KAAS,MAAK,KAAS,MAAK,KAAS,MAAK,KAAS,MAAK,KAAS,WAAU,KAAS,WAAU,KAAS,MAAK,KAAS,OAAM,KAAS,MAAK,KAAS,OAAM,KAAS,QAAO,KAAS,OAAM,KAAS,SAAQ,KAAS,SAAQ,KAAS,UAAS,KAAS,OAAM,KAAS,OAAM,KAAS,QAAO,KAAS,WAAU,KAAS,QAAO,KAAS,OAAM,KAAS,QAAO,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,SAAQ,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,QAAO,KAAS,QAAO,KAAS,OAAM,KAAS,OAAM,KAAS,QAAO,KAAS,QAAO,KAAS,QAAO,KAAS,QAAO,KAAS,QAAO,KAAS,QAAO,KAAS,SAAQ,KAAS,SAAQ,KAAS,QAAO,KAAS,QAAO,KAAS,OAAM,KAAS,OAAM,KAAS,QAAO,KAAS,QAAO,KAAS,OAAM,KAAS,OAAM,KAAS,SAAQ,KAAS,SAAQ,KAAS,QAAO,KAAS,QAAO,KAAS,OAAM,KAAS,OAAM,KAAS,UAAS,KAAS,UAAS,KAAS,OAAM,KAAS,OAAM,KAAS,QAAO,KAAS,QAAO,KAAS,OAAM,KAAS,OAAM,KAAS,QAAO,KAAS,QAAO,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,QAAO,KAAS,QAAO,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,OAAM,KAAS,SAAQ,KAA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AG,KAAK,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,KAAK,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,KAAK,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,KAAK,IAAI,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,KAAK,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,MAAM,GAAG,GAAG,IAAI,OAAO,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,MAAM,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,OAAO,GAAG,MAAM,IAAI,GAAG,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,GAAG,MAAM,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,MAAM,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,IAAI,KAAK,IAAI,KAAK,GAAG,KAAK,GAAG,GAAG,GAAG,MAAM,GAAG,QAAQ,GAAG;AAG3hC,UAAI,6BAA6B,CAAC,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,KAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,KAAK,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,KAAK,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,KAAK,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,KAAK,GAAG,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,MAAM,IAAI,IAAI,MAAM,IAAI,GAAG,MAAM,KAAK,MAAM,KAAK,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,KAAK,IAAI,KAAK,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,MAAM,GAAG,MAAM,IAAI,GAAG,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,KAAK,MAAM,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,MAAM,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,MAAM,IAAI,GAAG,GAAG,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,IAAI,GAAG,KAA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",
  "names": ["l", "l", "rule", "l", "hackFrom", "l", "m", "propertyName", "l", "component", "isDefault", "m", "n", "filter", "l", "r", "p", "color", "propertyName", "prefix", "clonedDescriptor", "l", "m", "require_optimize", "l", "m", "n", "l", "l", "m", "l", "m", "l", "l", "m", "require_optimize", "l", "l", "l", "m", "l", "l", "m", "l", "l", "m", "l", "m", "l", "l", "l", "l", "l", "m", "l", "position", "movedProperty", "i", "l", "key", "properties", "j", "k", "m", "property", "token", "require_optimize", "l", "l", "sourceFile", "p", "r", "c", "needle", "section", "l", "sourceMap", "l", "content", "url", "require_rebase", "l", "m", "inline", "l", "wrap", "wrap", "l", "CleanCSS", "l", "object", "key", "string", "escape", "m", "text", "l", "html", "require_format", "require_path", "require_path", "self", "m", "n", "token", "c", "sortComparator", "url", "resolve", "resolveUri", "COLUMN", "SOURCES_INDEX", "SOURCE_LINE", "SOURCE_COLUMN", "NAMES_INDEX", "global", "exports", "i", "TokenType", "Position", "n", "SourceLocation", "p", "Parser", "parse", "ref", "parseExpressionAt", "tokenizer", "DestructuringErrors", "list", "ecmaVersion", "TokContext", "Scope", "Node", "RegExpValidationState", "l", "c", "u", "Token", "global", "exports", "MAP", "p", "r", "m", "n", "valid", "directives", "statement", "l", "ex", "start", "object_or_destructuring_", "name", "type", "call", "AST_Node", "self", "AST_Statement", "AST_Debugger", "AST_Directive", "AST_SimpleStatement", "push", "AST_Block", "AST_BlockStatement", "AST_EmptyStatement", "AST_StatementWithBody", "AST_LabeledStatement", "node", "AST_IterationStatement", "AST_DWLoop", "AST_Do", "AST_While", "AST_For", "AST_ForIn", "AST_ForOf", "AST_With", "AST_Scope", "AST_Toplevel", "AST_Expansion", "AST_Lambda", "AST_Accessor", "AST_Function", "AST_Arrow", "AST_Defun", "AST_Destructuring", "AST_PrefixedTemplateString", "AST_TemplateString", "AST_TemplateSegment", "AST_Jump", "AST_Exit", "AST_Return", "AST_Throw", "AST_LoopControl", "AST_Break", "AST_Continue", "AST_Await", "AST_Yield", "AST_If", "AST_Switch", "AST_SwitchBranch", "AST_Default", "AST_Case", "AST_Try", "AST_TryBlock", "AST_Catch", "AST_Finally", "AST_Definitions", "AST_Var", "AST_Let", "AST_Const", "AST_VarDef", "AST_NameMapping", "AST_Import", "AST_ImportMeta", "AST_Export", "AST_Call", "AST_New", "AST_Sequence", "AST_PropAccess", "AST_Dot", "AST_DotHash", "AST_Sub", "AST_Chain", "AST_Unary", "AST_UnaryPrefix", "AST_UnaryPostfix", "AST_Binary", "AST_Conditional", "AST_Assign", "AST_DefaultAssign", "AST_Array", "AST_Object", "AST_ObjectProperty", "AST_ObjectKeyVal", "AST_PrivateSetter", "AST_PrivateGetter", "AST_ObjectSetter", "AST_ObjectGetter", "AST_ConciseMethod", "AST_PrivateMethod", "AST_Class", "AST_ClassProperty", "AST_ClassPrivateProperty", "AST_PrivateIn", "AST_DefClass", "AST_ClassStaticBlock", "AST_ClassExpression", "AST_Symbol", "AST_NewTarget", "AST_SymbolDeclaration", "AST_SymbolVar", "AST_SymbolBlockDeclaration", "AST_SymbolConst", "AST_SymbolLet", "AST_SymbolFunarg", "AST_SymbolDefun", "AST_SymbolMethod", "AST_SymbolClassProperty", "AST_SymbolLambda", "AST_SymbolDefClass", "AST_SymbolClass", "AST_SymbolCatch", "AST_SymbolImport", "AST_SymbolImportForeign", "AST_Label", "AST_SymbolRef", "AST_SymbolExport", "AST_SymbolExportForeign", "AST_LabelRef", "AST_SymbolPrivateProperty", "AST_This", "AST_Super", "AST_Constant", "AST_String", "AST_Number", "AST_BigInt", "AST_RegExp", "AST_Atom", "AST_Null", "AST_NaN", "AST_Undefined", "AST_Hole", "AST_Infinity", "AST_Boolean", "AST_False", "AST_True", "kind", "printed_comments", "c", "gc_scope", "nodetype", "best_of", "save_scope", "sym", "scope", "base54", "first_in_statement", "def", "node_def", "init", "trim", "in_loop", "in_try", "statements", "compressor", "i", "arg", "lhs", "lvalues", "args", "stat", "value", "j", "body", "exprs", "exp", "mangle_options", "module", "branch", "default_index", "elements", "el", "rr", "level", "parent", "prop", "toplevel", "sourceMap", "run_cli", "result", "path", "options", "ctor", "tag", "sorter", "value", "match", "endTag", "p"]
}
